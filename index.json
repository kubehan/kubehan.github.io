[{"content":"","date":"2023年1212月20日","externalUrl":null,"permalink":"/categories/ai/","section":"Categories","summary":"","title":"AI","type":"categories"},{"content":"","date":"2023年1212月20日","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"2023年1212月20日","externalUrl":null,"permalink":"/tags/chatgpt/","section":"标签","summary":"","title":"ChatGPT","type":"tags"},{"content":"","date":"2023年1212月20日","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"2023年1212月20日","externalUrl":null,"permalink":"/tags/","section":"标签","summary":"","title":"标签","type":"tags"},{"content":"","date":"2023年1212月20日","externalUrl":null,"permalink":"/tags/scraper/","section":"标签","summary":"","title":"爬虫","type":"tags"},{"content":" 原文链接：Building a Universal AI Scraper 译者水平有限，不免存在遗漏或错误之处。如有疑问，敬请查阅原文。 以下是译文。 最近，我一直在研究网页抓取技术。鉴于人工智能领域的快速发展，我尝试构建一个 “通用” 的网页抓取工具，它可以在网页上迭代遍历，直到找到需要抓取的信息。这个项目目前还在开发中，这篇文章我将分享一下该项目目前的进展。\n目标愿景 # 给定一个初始网址和一个高层次目标，该网页抓取工具需能够：\n分析给定网页的内容； 从相关部分提取文本信息； 进行必要的页面交互； 重复上述步骤，直至达成目标。 使用的工具 # 尽管这是一个纯后端工程，但我使用了 NextJs 作为开发框架，便于未来扩展前端。网页抓取部分选择了 Crawlee 库，这是一个基于 Playwright 的浏览器自动化库。Crawlee 对浏览器自动化进行了优化，使爬虫能更好地模仿人类用户。Crawlee 还提供了请求队列系统，便于按顺序管理大量请求，这对于未来部署服务很有帮助。\nAI 部分主要使用了 OpenAI 的 API 接口和 Microsoft Azure 的 OpenAI 服务，总共使用了三个模型：\nGPT-4-32k (‘gpt-4-32k’) GPT-4-Turbo (‘gpt-4-1106-preview’) GPT-4-Turbo-Vision (‘gpt-4-vision-preview’) 相比原版 GPT-4，GPT-4-Turbo 模型上下文窗口更大 (128k 令牌)，速度更快 (最高提速 10 倍)，但智能程度略低。在一些复杂情况下就显得欠灵活，这时我会使用 GPT-4-32K 获取更高的智能。\nGPT-4-32K 是 GPT-4 的改良变体，上下文窗口为 32k，远远超过 4k。由于 OpenAI 当前限制对该模型的访问，我最终选择通过 Azure 的 OpenAI 服务来访问该模型。\n起步 # 我从需求约束出发，反向设计。由于底层使用 Playwright 爬虫，我知道如果要与页面交互，最终必须要从页面中获取元素的选择器。\n元素选择器是一个字符串，用于唯一标识页面上的某个元素。例如，如果我想选取页面上的第四个段落，我可以使用 p:nth-of-type(4) 作为选择器。如果我要选择一个写着 ‘Click Me’ 的按钮，我可以用 button:has-text('Click Me') 这个选择器。Playwright 通过选择器先锁定目标元素，然后对其执行特定的动作，比如点击 'click()' 或填充 'fill()'。\n因此，我的首要任务是理解如何从给定的网页中识别出 “目标元素”。从现在起，我会将这一过程称为 ‘GET_ELEMENT’。\n获取 “目标元素” 的方法 # 方法 1：截图 + 视觉模型 # HTML 数据通常都很复杂和冗长。大部分内容用于定义样式、布局和交互逻辑，而非文本内容本身。我担心文本模型处理这种情况效果欠佳，所以我的想法是使用 GPT-4-Turbo-Vision 模型直接 “查看” 渲染后的页面，抄录出最相关的文本，然后在源 HTML 中搜索包含该文本的元素。\n但这个方法很快就失败了：\nGPT-4-Turbo-Vision 有时会拒绝我的抄录文本请求，说 “对不起，我无法帮助你完成这项任务” 等。有一次，它甚至声称 “不能从有版权图片中抄录文本”。看来 OpenAI 在努力限制它帮助执行这类任务 (不过，如果我告诉它自己是盲人似乎可以绕过这个限制)。\n随后出现了更严峻的问题：大页面的截图高度往往很夸张 (\u0026gt;8000 像素)。这是个问题，因为 GPT-4-Turbo-Vision 会将所有图像预处理调整为固定尺寸。我发现超高图像在预处理后可能会严重变形，无法辨认。\n一种可能的解决方案是分段扫描页面，逐段总结后再拼接。但鉴于 OpenAI 对 GPT-4-Turbo-Vision 的速率限制，我不得不建立一个队列系统来进行流程管理，听起来就很麻烦。\n此外，仅从文本反推出有效的元素选择器也非常困难，因为你不知道底层 HTML 的结构。基于以上原因我决定放弃这种方法。\n方法 2：HTML + 文本模型 # 纯文本的 GPT-4-Turbo 速率限制较宽松，上下文窗口有 128k，所以我试着直接输入整个页面 HTML，要它识别相关元素。\n尽管 HTML 数据基本符合 (大多数情况下)，但我发现 GPT-4-Turbo 模型的智能程度仍不足以正确无误地完成这项工作。它们经常识别错误的元素，或者给出范围过广的选择器。\n所以我试着进一步简化 HTML 代码，只保留 body 部分并移除脚本和样式标签，隔离主体 HTML 以缩小范围，这有一定帮助，但问题依旧存在。对语言模型来说，从整个页面准确识别 “相关” HTML 元素是一个过于复杂和不确定的任务，我需要某种方法将候选元素范围缩减到仅剩几个，然后再手动提交给文本模型。\n接下来，我决定从人类解决类似问题的方法中寻找灵感。\n方法 3：HTML + 文本搜索 + 文本模型 # 如果我要在网页上查找特定信息，通常会使用 “Control” + “F” 来搜索关键词。如果第一次没有找到，我会尝试不同关键词直到找到需要的信息。\n这种方法的优点是简单的文本搜索非常快速且容易实现。在我的场景下，搜索词可通过文本模型生成，搜索本身可以在 HTML 上通过简单正则表达式完成。\n虽然生成搜索词的速度可能比搜索本身稍慢，但我会让文本模型一次性生成多个关键词，并同时对它们进行搜索。包含搜索词的任何 HTML 元素都收集起来，下一步送给 GPT-4-32K 选出最相关的一个元素。\n当然，如果使用足够多的搜索词，可能会获取很多 HTML 数据，这可能会触发 API 限制或者影响后续步骤的性能。所以我设计了一种方案，它可以智能地填充相关元素列表，直到达到一个预设长度。\n我要求 Turbo 模型挑选出 15-20 个词条，并按预估相关性从高到低排序。然后我用简单的正则表达式在 HTML 中搜索包含每个词条的所有元素。到这步结束时，我会得到一个由多个子列表组成的列表，其中每个子列表包含匹配某词条的所有元素。\n接下来，我会用这些列表中的元素填充一个最终列表，并优先考虑那些出现在较早列表中的元素。例如，假设排名搜索词为：\u0026lsquo;pricing\u0026rsquo;、\u0026lsquo;fee\u0026rsquo;、\u0026lsquo;cost\u0026rsquo; 和 \u0026lsquo;prices\u0026rsquo;。在填充最终列表时，我会首选 \u0026lsquo;pricing\u0026rsquo; 列表中的元素，然后是 \u0026lsquo;fee\u0026rsquo; 列表，再到 \u0026lsquo;cost\u0026rsquo; 列表，依此类推。\n一旦最终列表达到预定义的令牌长度，我就会停止填充。这样做可以确保我在进行下一步时，不会超过令牌的最大限制。\n如果您对该算法代码感兴趣，这里有一个简化版本：\n这种方法使我能够最终获得一个长度合适、内容丰富的列表，它包含了来自各种搜索词的匹配元素，同时也优先考虑了排名更高相关词。\n但随后，我遇到了一个新问题：有时你需要的信息并不直接出现在匹配元素中，而是存在于它的同级元素或父元素里。\n例如 AI 试图找出古巴的首都。它搜索 “capital” 一词并匹配到橙框中的元素。但我们需要的信息实际上在绿色元素中——一个同级元素。我们已经非常接近答案了，但如果不同时考虑这两个元素，就无法解决问题。\n为解决此问题，我在元素搜索函数中添加了 “父元素” 作为可选参数。将父元素设置为 0 时意味着搜索函数只会返回直接包含文本的那个元素 (当然也包括该元素的子元素)。\n将父元素设置为 1 意味着返回直接包含文本元素的父元素。设置为 2 则返回祖父元素，以此类推。在这个古巴的例子中，设置父元素为 2 会返回整个红色区域的 HTML 代码。\n我决定将默认的父元素设置为 1，更高的值可能会捕获过多的 HTML。\n现在我们已经获得了一个大小合适的列表，其中包含有帮助的父元素上下文。是时候进入下一步了：我想请 GPT-4-32K 帮我从这个列表中选择最相关的元素。\n这一步非常简单，但要找到合适的提示词还需要一些试错：\n这个步骤完成后，我就会得到页面上最相关的一个元素。然后将其传入下一流程，在那里 AI 模型将决定完成目标需要什么样的交互。\n搭建助理 # 提取相关元素的流程虽然可行，但存在一定的缓慢和随机性。我现在迫切需要的，是一个类似 “计划员” 的 AI，在前一步骤结果不佳时，它可以查看结果并使用不同的搜索关键词进行再次尝试。\n幸运的是，这正是 OpenAI 的 Assistant API 所提供的功能。“Assistant” 是一个模型，通过额外逻辑封装，允许它利用自定义工具自主操作，直到达成目标。可以通过设置基础模型类型、定义可用工具列表以及发送消息来初始化这个助理。\n初始化助理后，可以轮询 API 来跟踪其状态。如果它决定使用自定义工具，状态会显示它要用的工具和参数。这时，你可以产生相应的工具输出并传回给助理，让它继续完成任务。\n在这个项目中，我基于 GPT-4-Turbo 模型搭建了一个助理，并给它加了一个特别的工具，能触发我最新设计的 GET_ELEMENT 函数。\n这是我为 GET_ELEMENT 工具提供的描述：\n您会注意到，这个工具不仅能够提供与搜索词最相关的元素，还能返回每个搜索词匹配的元素数量。这一信息对于助手来说非常重要，可以帮助它判断是否需要用不同的搜索词进行重试。\n通过这个工具，助理现在能够完成我目标愿景的前两个步骤：分析指定的网页并从中提取相关的文本信息。在不需要页面交互的情况下，这已经足够了。例如，如果我们想知道一个产品的价格，且这个价格信息正包含在工具所返回的元素中，助理可以直接提取这部分文本信息。\n但是，如果目标需要页面交互，助理还需要决定要进行的交互类型，然后使用额外工具来进行互动。我把这个额外工具称为 INTERACT_WITH_ELEMENT。\n与相关元素进行交互 # 为了制作一个能与特定网页元素进行交互的工具，我原本认为需要构建一个自定义的 API 来把 大型语言模型（LLM）返回的字符串响应转换成 Playwright 命令。但是后来我意识到，我所使用的模型已经熟练掌握了 Playwright API 的使用 (这是它作为一个流行库的好处！)。所以我决定直接以异步立即调用的函数表达式 (IIFE) 的形式生成命令。\n最终，我的方案变成了：\n助理会提供它想要执行的交互描述，我用 GPT-4-32K 来编写实现这些交互的代码，然后在我的 Playwright 爬虫中执行这些代码。\n这是我为 INTERACT_WITH_ELEMENT 工具提供的描述：\n你会注意到，助理在操作时并没有写出完整的元素，而是只提供了一个简短的标识符，这样做更为快捷和高效。\n下面是我给 GPT-4-32K 的提示词，以帮助它编写代码。我考虑到在与网页交互之前，可能存在我们需要提取的相关信息，所以我告诉它在函数中将提取的信息赋值给函数内名为 actionOutput 的变量。\n我将这一步的字符串输出 (我称之为 “action”) 作为参数传递给我的 Playwright 爬虫，并使用 “eval” 函数将其作为代码执行 (我知道这可能会有危险)：\n如果你想知道为什么我不直接让助理提供它的交互代码，那是因为我所使用的 Turbo 模型太笨了，无法可靠地编写命令。所以我助理描述它想要的交互方式 (比如“点击此元素”)，然后我使用更强大的 GPT-4-32K 模型来编写代码。\n传递页面状态 # 到了这一步，我意识到我需要一种方法来向助理传递页面的当前状态。我希望它能够根据它所在的页面来制定搜索策略，仅仅依靠 URL 感觉还不是很理想。而且，有时我的爬虫无法正确加载页面，我希望助理能检测到这一点然后重试。\n为了获取这些额外的页面上下文，我决定制作一个新函数，使用 GPT-4-Vision 模型来总结页面顶部 2048 像素的内容。我在两个关键位置插入了这个函数：一是在最初，用于分析起始页面；二是在 INTERACT_WITH_ELEMENT 工具完成后，以便助手可以理解它的交互结果。\n有了最后这一个环节，助理现在能够准确判断某一交互是否按预期进行，或者是否需要重试。这在页面弹出验证码或其他弹窗时特别有用。在这种情况下，助理就会知道必须先解决这些障碍，然后才能继续操作。\n最终流程 # 让我们回顾一下前面所说的整个流程：先为助理提供 URL 和目标。然后，助理使用 “GET_ELEMENT” 工具从页面中提取最相关的元素。\n如果需要进一步的交互，助理将使用 “INTERACT_WITH_ELEMENT” 工具来编写和执行相关交互的代码。它将循环这个过程，直到找到最终的结果。\n现在，我们将通过测试助手在维基百科上搜寻答案的能力，来检验它的实际运作效果。\n调试助理 # 我的最终目标是构建一个能够适应任何网页环境的通用网络爬虫。不过，作为初步测试，我想先看看它在维基百科这种内容可靠的环境下的工作效果，因为维基百科的每个页面都包含了大量指向其他页面的链接。在这样一个资源丰富的领域里，助理应该能够轻松找到所需信息。\n我让助理查看了美国维基百科页面，然后告诉它：“我想知道莫哈韦沙漠的总面积。”\n美国维基百科页面包含接近 150 万个字符的 HTML 内容，大概相当于 375,000 个词元 (token)。这是一个测试系统处理大量数据能力的良机。\n如我预料的那样，助理使用了 “GET_ELEMENT” 工具，但它最初使用的搜索词效果不佳。这些搜索词可能过于具体，难以在页面上完全匹配到：\nTOOL CALL] 🔧 get_element [REQUIRES_ACTION] Running 1 functions... { \u0026#34;url\u0026#34;: \u0026#34;https://en.wikipedia.org/wiki/United_States\u0026#34;, \u0026#34;searchTerms\u0026#34;: [ \u0026#34;Mojave Desert link\u0026#34;, \u0026#34;Mojave link\u0026#34;, \u0026#34;desert link\u0026#34;, \u0026#34;link Mojave\u0026#34;, \u0026#34;link desert\u0026#34; ], \u0026#34;directive\u0026#34;: \u0026#34;Find a link to the Mojave Desert page to get information on its total land area\u0026#34; } 搜索工具在所有搜索词中没有找到任何匹配元素。\n于是，助手决定再尝试一次，这次它使用了更加通用的多个搜索词：\n[TOOL CALL] 🔧 get_element [REQUIRES_ACTION] Running 1 functions... { \u0026#34;url\u0026#34;: \u0026#34;https://en.wikipedia.org/wiki/United_States\u0026#34;, \u0026#34;searchTerms\u0026#34;: [ \u0026#34;Mojave\u0026#34;, \u0026#34;Desert\u0026#34;, \u0026#34;Mojave Desert\u0026#34;, \u0026#34;geography\u0026#34;, \u0026#34;landscape\u0026#34;, \u0026#34;environment\u0026#34;, \u0026#34;Nature\u0026#34;, \u0026#34;ecosystem\u0026#34;, \u0026#34;biome\u0026#34;, \u0026#34;land\u0026#34;, \u0026#34;climate\u0026#34;, \u0026#34;terrain\u0026#34;, \u0026#34;Landforms\u0026#34;, \u0026#34;physical\u0026#34; ], \u0026#34;directive\u0026#34;: \u0026#34;Find a link to the Mojave Desert page on Wikipedia from the United States page\u0026#34; } 该工具在这些搜索词中找到了 134 个匹配元素，共计超过 300 万个字符 (可能是因为这些元素间存在大量重叠)。幸运的是，之前提到的用于筛选最终内容列表的算法能够将其缩减为 41 个元素的列表 (我将结果数限制在 10,000 个字符以内)。\n然后，GPT-4-32K 选择了一个最相关的元素，其中包含指向莫哈韦沙漠维基百科页面的链接：\n\u0026lt;p\u0026gt; \u0026lt;!-- Abbreviated for readability --\u0026gt; \u0026lt;!-- ... --\u0026gt; \u0026lt;a href=\u0026#34;/wiki/Sonoran_Desert\u0026#34; title=\u0026#34;Sonoran Desert\u0026#34;\u0026gt;Sonoran\u0026lt;/a\u0026gt;, and \u0026lt;a href=\u0026#34;/wiki/Mojave_Desert\u0026#34; title=\u0026#34;Mojave Desert\u0026#34;\u0026gt;Mojave\u0026lt;/a\u0026gt; deserts. \u0026lt;sup id=\u0026#34;cite_ref-179\u0026#34; class=\u0026#34;reference\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#cite_note-179\u0026#34;\u0026gt;[167]\u0026lt;/a\u0026gt; \u0026lt;/sup\u0026gt; \u0026lt;!-- ... --\u0026gt; \u0026lt;/p\u0026gt; 如果你想知道为什么这个元素除了链接本身以外还包含额外的 HTML 代码，那是因为我将 “父元素” 参数设置为 1，这意味着所有匹配到的元素都将与它们的直接父元素一起返回。\n在接收到 “GET_ELEMENT” 工具输出的那个元素之后，助理决定利用 “INTERACT_WITH_ELEMENT” 工具尝试点击那个链接：\n[NEW STEP] 👉 [{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;interact_with_element\u0026#34;}] Running 1 function... { \u0026#34;elementCode\u0026#34;: \u0026#34;16917\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://en.wikipedia.org/wiki/United_States\u0026#34;, \u0026#34;directive\u0026#34;: \u0026#34;Click on the link to the Mojave Desert page\u0026#34; } 此过程中，助手使用 GPT-4-32K 将其想法转换成 Playwright 的一个操作：\nRunning writeAction with azure32k... Write Action Response: \u0026#34;(async () =\u0026gt; {\\n await page.click(\u0026#39;p a[href=\\\u0026#34;/wiki/Mojave_Desert\\\u0026#34;]\u0026#39;);\\n})();\u0026#34; 我的 Playwright 爬虫执行了这个操作，浏览器成功导航到了莫哈韦沙漠页面。\n最后，我使用 GPT-4-Vision 处理了新页面，并将浏览器状态的摘要作为工具输出反馈给了助手：\nSummarize Status Response: \u0026#34;We clicked on a link to the Wikipedia page for the Mojave Desert. And now we are looking at the Wikipedia page for the Mojave Desert.\u0026#34; 助手认为目标还没有达成，所以它在新页面上重复了上述流程。同样，它最初使用的搜索词过于具体，获取到的信息很少。但是在第二次尝试中，它想到了以下这些搜索词：\n[TOOL CALL] 🔧 get_element [REQUIRES_ACTION] Running one function... { \u0026#34;url\u0026#34;: \u0026#34;https://en.wikipedia.org/wiki/Mojave_Desert\u0026#34;, \u0026#34;searchTerms\u0026#34;: [ \u0026#34;square miles\u0026#34;, \u0026#34;square kilometers\u0026#34;, \u0026#34;km2\u0026#34;, \u0026#34;mi2\u0026#34;, \u0026#34;area\u0026#34;, \u0026#34;acreage\u0026#34;, \u0026#34;expansion\u0026#34;, \u0026#34;size\u0026#34;, \u0026#34;span\u0026#34;, \u0026#34;coverage\u0026#34; ], \u0026#34;directive\u0026#34;: \u0026#34;Locate the specific section or paragraph that states the total land area of the Mojave Desert on the Wikipedia page\u0026#34; } “GET_ELEMENT” 工具最初找到了 21 个匹配元素，总计 491,000 个字符，后来缩减至 12 个。然后 GPT-4-32K 从这些匹配项中选择了最相关的一个，里面包含了搜索词 “km2”：\n\u0026lt;tr\u0026gt; \u0026lt;th class=\u0026#34;infobox-label\u0026#34;\u0026gt;Area\u0026lt;/th\u0026gt; \u0026lt;td class=\u0026#34;infobox-data\u0026#34;\u0026gt;81,000\u0026amp;nbsp;km\u0026lt;sup\u0026gt;2\u0026lt;/sup\u0026gt;(31,000\u0026amp;nbsp;sq\u0026amp;nbsp;mi)\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; 这个元素对应页面渲染的这一部分：\n这种情况下，如果我没有把 “parents” 设为 1，是无法找到所需答案的，因为我们要找的答案实际上位于与匹配元素相邻的元素中，就像之前与古巴相关的例子一样。\n“GET_ELEMENT” 工具把这个元素反馈给助理，助理准确识别出这些信息满足了我们的查询需求。因此，它完成了任务，并告诉我问题的答案是 81,000 平方公里：\n[FINAL MESSAGE] ✅ The total land area of the Mojave Desert is 81,000 square kilometers or 31,000 square miles. { \u0026#34;status\u0026#34;: \u0026#34;complete\u0026#34;, \u0026#34;info\u0026#34;: { \u0026#34;area_km2\u0026#34;: 81000, \u0026#34;area_mi2\u0026#34;: 31000 } } 如果您想阅读本次程序运行的完整日志，可以在这里查看。\n总结 # 在整个项目的构建过程中，我获得了很多乐趣，也学到了很多有用的知识。然而不得不承认，这套系统还很脆弱，有很多地方亟待完善。接下来我将继续优化这个项目，以下是我想继续改进的部分：\n生成更智能的搜索词，以便更快地找到相关元素。\n在我的 “GET_ELEMENT” 工具中实现模糊搜索，以适应文本中的细微变化。\n使用视觉模型对 HTML 中的图像和图标进行标记，以便助理可以与之交互。\n通过住宅代理和其他技术增强爬虫的隐蔽性。\n","date":"2023年1212月20日","externalUrl":null,"permalink":"/posts/ai-scraper/","section":"Posts","summary":"","title":"如何构建一个通用的 AI Web 爬虫","type":"posts"},{"content":"嗨，大家好！我是 Kubehan，一名怀揣着炽热技术梦想、正在北京奋力打拼的运维工程师，也是个不折不扣的云原生技术 “狂热粉”😃。 踏上北漂之路，这座充满机遇与挑战的城市，赋予了我源源不断的动力去深耕技术领域。专注于云原生技术研究、开源思想传播。你可以通过微信与我联系,也可以通过关注微信公众号“云原生知识栈”获取更多资讯。\n关注微信公众号 公众号 添加我的微信 云原生 ","date":"2023年1212月20日","externalUrl":null,"permalink":"/","section":"云原生知识栈","summary":"","title":"云原生知识栈","type":"page"},{"content":" ELK安装部署脚本及MySQL主从同步监控脚本 第一个ELK的安装部署脚本 \u0026lt;span class=\"hljs-meta\" style=\"color: #75715e; line-height: 26px;\"\u003e#!/bin/bash\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-comment\" style=\"color: #75715e; line-height: 26px;\"\u003e#mail:xuel@anchnet.com\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-comment\" style=\"color: #75715e; line-height: 26px;\"\u003e#data:2017/9/7\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-comment\" style=\"color: #75715e; line-height: 26px;\"\u003e#AutoInstall\u0026nbsp;ELK\u0026nbsp;scripts\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-comment\" style=\"color: #75715e; line-height: 26px;\"\u003e#Software:elasticsearch-5.4.1/logstash-5.4.1/filebeat-5.4.1/kibana-5.4.1\u0026lt;/span\u003e\u0026lt;br\u003eclear\u0026lt;br\u003e\u0026lt;span class=\"hljs-built_in\" style=\"color: #a6e22e; line-height: 26px;\"\u003eecho\u0026lt;/span\u003e\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"##########################################\"\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-built_in\" style=\"color: #a6e22e; line-height: 26px;\"\u003eecho\u0026lt;/span\u003e\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"#\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Auto\u0026nbsp;Install\u0026nbsp;ELK.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;##\"\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-built_in\" style=\"color: #a6e22e; line-height: 26px;\"\u003eecho\u0026lt;/span\u003e\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"#\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Press\u0026nbsp;Ctrl\u0026nbsp;+\u0026nbsp;C\u0026nbsp;to\u0026nbsp;cancel\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;##\"\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-built_in\" style=\"color: #a6e22e; line-height: 26px;\"\u003eecho\u0026lt;/span\u003e\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"#\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Any\u0026nbsp;key\u0026nbsp;to\u0026nbsp;continue\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;##\"\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-built_in\" style=\"color: #a6e22e; line-height: 26px;\"\u003eecho\u0026lt;/span\u003e\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"##########################################\"\u0026lt;/span\u003e\u0026lt;br\u003e\u0026lt;span class=\"hljs-built_in\" style=\"color: #a6e22e; line-height: 26px;\"\u003eread\u0026lt;/span\u003e\u0026nbsp;-p\u0026nbsp;\u0026lt;br\u003esoftware_dir=\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"/usr/local/software\"\u0026lt;/span\u003e\u0026lt;br\u003eelasticsearch_url=\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.4.1.tar.gz\"\u0026lt;/span\u003e\u0026lt;br\u003ekibana_url=\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"https://artifacts.elastic.co/downloads/kibana/kibana-5.4.1-linux-x86_64.tar.gz\"\u0026lt;/span\u003e\u0026lt;br\u003elogstash_url=\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"https://artifacts.elastic.co/downloads/logstash/logstash-5.4.1.tar.gz\"\u0026lt;/span\u003e\u0026lt;br\u003efilebeat_url=\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.4.1-linux-x86_64.tar.gz\"\u0026lt;/span\u003e\u0026lt;br\u003esys_version=\u0026lt;code\u003ecat\u0026nbsp;/etc/redhat-release\u0026nbsp;|awk\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\u0026#039;{print\u0026nbsp;$4}\u0026#039;\u0026lt;/span\u0026gt;|cut\u0026nbsp;-d.\u0026nbsp;-f1\nIP=ip\u0026nbsp;addr|grep\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"inet\u0026nbsp;\"\u0026lt;/span\u0026gt;|grep\u0026nbsp;-v\u0026nbsp;127.0.0.1|awk\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\u0026#039;{print\u0026nbsp;$2}\u0026#039;\u0026lt;/span\u0026gt;|cut\u0026nbsp;-d/\u0026nbsp;-f1\njvm_conf=\"/usr/local/elasticsearch/config/jvm.options\"\nsys_mem=free\u0026nbsp;-m|grep\u0026nbsp;Mem:|awk\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\u0026#039;{print\u0026nbsp;$2}\u0026#039;\u0026lt;/span\u0026gt;|awk\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\u0026#039;{sum+=$1}\u0026nbsp;END\u0026nbsp;{print\u0026nbsp;sum/1024}\u0026#039;\u0026lt;/span\u0026gt;|cut\u0026nbsp;-d.\u0026nbsp;-f1\n#wget\u0026nbsp;software\nwget_fun()\u0026nbsp;{\nif\u0026nbsp;[\u0026nbsp;!\u0026nbsp;-d\u0026nbsp;${software_dir}\u0026nbsp;];then\n\u0026nbsp;mkdir\u0026nbsp;-p\u0026nbsp;${software_dir}\u0026nbsp;\u0026\u0026\u0026nbsp;cd\u0026nbsp;${software_dir}\nelse\n\u0026nbsp;cd\u0026nbsp;${software_dir}\nfi\nfor\u0026nbsp;software\u0026nbsp;in\u0026nbsp;$elasticsearch_url\u0026nbsp;$kibana_url\u0026nbsp;$logstash_url\u0026nbsp;$filebeat_url\ndo\n\u0026nbsp;wget\u0026nbsp;-c\u0026nbsp;$software\ndone\nclear\n}\n#initial\u0026nbsp;system:install\u0026nbsp;java\u0026nbsp;wget;set\u0026nbsp;hostname;disable\u0026nbsp;firewalld\ninit_sys()\u0026nbsp;{\n[\u0026nbsp;-f\u0026nbsp;/etc/init.d/functions\u0026nbsp;]\u0026nbsp;\u0026\u0026\u0026nbsp;.\u0026nbsp;/etc/init.d/functions\n[\u0026nbsp;\"${sys_version}\"\u0026nbsp;!=\u0026nbsp;\"7\"\u0026nbsp;]\u0026nbsp;\u0026\u0026\u0026nbsp;echo\u0026nbsp;\"Error:This\u0026nbsp;Scripts\u0026nbsp;Support\u0026nbsp;Centos7.xx\"\u0026nbsp;\u0026\u0026\u0026nbsp;exit\u0026nbsp;1\n[\u0026nbsp;$(id\u0026nbsp;-u)\u0026nbsp;!=\u0026nbsp;\"0\"\u0026nbsp;]\u0026nbsp;\u0026\u0026\u0026nbsp;echo\u0026nbsp;\"Error:\u0026nbsp;You\u0026nbsp;must\u0026nbsp;be\u0026nbsp;root\u0026nbsp;to\u0026nbsp;run\u0026nbsp;this\u0026nbsp;script\"\u0026nbsp;\u0026\u0026\u0026nbsp;exit\u0026nbsp;1\nsed\u0026nbsp;-i\u0026nbsp;\"s/SELINUX=enforcing/SELINUX=disabled/\"\u0026nbsp;\u0026nbsp;/etc/selinux/config\nsetenforce\u0026nbsp;0\nyum\u0026nbsp;install\u0026nbsp;-y\u0026nbsp;java-1.8.0-openjdk\u0026nbsp;wget\u0026nbsp;net-tools\nhostnamectl\u0026nbsp;set-hostname\u0026nbsp;elk-server\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\nsystemctl\u0026nbsp;stop\u0026nbsp;firewalld\ncat\u0026nbsp;\u0026gt;\u0026gt;/etc/security/limits.conf\u0026lt;\u0026lt;EOF\n*\u0026nbsp;soft\u0026nbsp;nofile\u0026nbsp;65536\u0026nbsp;\n*\u0026nbsp;hard\u0026nbsp;nofile\u0026nbsp;65536\u0026nbsp;\n*\u0026nbsp;soft\u0026nbsp;nGproc\u0026nbsp;65536\u0026nbsp;\n*\u0026nbsp;hard\u0026nbsp;nproc\u0026nbsp;65536\nEOF\n}\n#install\u0026nbsp;elasticsearch\ninstall_elasticsearch()\u0026nbsp;{\ncd\u0026nbsp;$software_dir\ntar\u0026nbsp;zxf\u0026nbsp;elasticsearch-5.4.1.tar.gz\nmv\u0026nbsp;elasticsearch-5.4.1\u0026nbsp;/usr/local/elasticsearch\nmkdir\u0026nbsp;-p\u0026nbsp;/usr/local/elasticsearch/data\u0026nbsp;/usr/local/elasticsearch/logs\nuseradd\u0026nbsp;elasticsearch\nchown\u0026nbsp;-R\u0026nbsp;elasticsearch:elasticsearch\u0026nbsp;/usr/local/elasticsearch\necho\u0026nbsp;\"vm.max_map_count\u0026nbsp;=\u0026nbsp;655360\"\u0026nbsp;\u0026gt;\u0026gt;/etc/sysctl.conf\u0026nbsp;\u0026\u0026\u0026nbsp;sysctl\u0026nbsp;-p\nif\u0026nbsp;[\u0026nbsp;${sys_mem}\u0026nbsp;-eq\u0026nbsp;0\u0026nbsp;];then\n\u0026nbsp;sed\u0026nbsp;-i\u0026nbsp;\"s#grep\u0026nbsp;\"\u0026lt;/span\u0026gt;^-Xmx\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"\u0026nbsp;\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${jvm_conf}\u0026lt;/span\u0026gt;#\"-Xmx512m\"#g\"\u0026nbsp;${jvm_conf}\n\u0026nbsp;sed\u0026nbsp;-i\u0026nbsp;\"s#grep\u0026nbsp;\"\u0026lt;/span\u0026gt;^-Xms\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"\u0026nbsp;\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${jvm_conf}\u0026lt;/span\u0026gt;#\"-Xms512m\"#g\"\u0026nbsp;${jvm_conf}\nelse\n\u0026nbsp;sed\u0026nbsp;-i\u0026nbsp;\"s#grep\u0026nbsp;\"\u0026lt;/span\u0026gt;^-Xmx\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"\u0026nbsp;\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${jvm_conf}\u0026lt;/span\u0026gt;#\"-Xmx${sys_mem}g\"#g\"\u0026nbsp;${jvm_conf}\n\u0026nbsp;sed\u0026nbsp;-i\u0026nbsp;\"s#grep\u0026nbsp;\"\u0026lt;/span\u0026gt;^-Xms\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"\u0026nbsp;\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${jvm_conf}\u0026lt;/span\u0026gt;#\"-Xms${sys_mem}g\"#g\"\u0026nbsp;${jvm_conf}\nfi\ncat\u0026nbsp;\u0026gt;\u0026gt;/usr/local/elasticsearch/config/elasticsearch.yml\u0026lt;\u0026lt;EOF\ncluster.name:\u0026nbsp;my-application\nnode.name:\u0026nbsp;elk-server\npath.data:\u0026nbsp;/usr/local/elasticsearch/data\npath.logs:\u0026nbsp;/usr/local/elasticsearch/logs\nnetwork.host:\u0026nbsp;127.0.0.1\nhttp.port:\u0026nbsp;9200\ndiscovery.zen.ping.unicast.hosts:\u0026nbsp;[\"elk-server\"]\nEOF\nsu\u0026nbsp;-\u0026nbsp;elasticsearch\u0026nbsp;-c\u0026nbsp;\"nohup\u0026nbsp;/usr/local/elasticsearch/bin/elasticsearch\u0026nbsp;\u0026\"\n}\n#install\u0026nbsp;logstash\ninstall_logstash()\u0026nbsp;{\ncd\u0026nbsp;$software_dir\ntar\u0026nbsp;-zxf\u0026nbsp;logstash-5.4.1.tar.gz\nmv\u0026nbsp;logstash-5.4.1\u0026nbsp;/usr/local/logstash\ncat\u0026gt;/usr/local/logstash/config/01-syslog.conf\u0026lt;\u0026lt;EOF\ninput\u0026nbsp;{\n\u0026nbsp;beats\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;port\u0026nbsp;=\u0026gt;\u0026nbsp;\"5044\"\n\u0026nbsp;\u0026nbsp;}\n\u0026nbsp;}\noutput\u0026nbsp;{\n\u0026nbsp;elasticsearch\u0026nbsp;{\n\u0026nbsp;\u0026nbsp;hosts\u0026nbsp;=\u0026gt;\u0026nbsp;\"127.0.0.1:9200\"\n\u0026nbsp;}\n\u0026nbsp;stdout\u0026nbsp;{\u0026nbsp;codec\u0026nbsp;=\u0026gt;\u0026nbsp;rubydebug\u0026nbsp;}\n}\nEOF\nnohup\u0026nbsp;/usr/local/logstash/bin/logstash\u0026nbsp;-f\u0026nbsp;/usr/local/logstash/config/01-syslog.conf\u0026nbsp;\u0026\u0026nbsp;\u0026gt;/dev/null\n}\n#install\u0026nbsp;filebeat\ninstall_filebeat()\u0026nbsp;{\ncd\u0026nbsp;$software_dir\ntar\u0026nbsp;-zxf\u0026nbsp;filebeat-5.4.1-linux-x86_64.tar.gz\nmv\u0026nbsp;filebeat-5.4.1-linux-x86_64\u0026nbsp;/usr/local/filebeat\ncat\u0026nbsp;\u0026gt;/usr/local/filebeat/filebeat.yml\u0026lt;\u0026lt;EOF\nfilebeat.prospectors:\n-\u0026nbsp;input_type:\u0026nbsp;log\n\u0026nbsp;\u0026nbsp;paths:\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;-\u0026nbsp;/var/log/*.log\noutput.logstash:\n\u0026nbsp;\u0026nbsp;hosts:\u0026nbsp;[\"127.0.0.1:5044\"]\nEOF\ncd\u0026nbsp;/usr/local/filebeat/\nnohup\u0026nbsp;/usr/local/filebeat/filebeat\u0026nbsp;\u0026\u0026nbsp;\u0026gt;/dev/null\n}\n#install\u0026nbsp;kibana\ninstall_kibana()\u0026nbsp;{\ncd\u0026nbsp;$software_dir\ntar\u0026nbsp;-zxf\u0026nbsp;kibana-5.4.1-linux-x86_64.tar.gz\nmv\u0026nbsp;kibana-5.4.1-linux-x86_64\u0026nbsp;/usr/local/kibana\ncat\u0026nbsp;\u0026gt;\u0026gt;\u0026nbsp;/usr/local/kibana/config/kibana.yml\u0026nbsp;\u0026lt;\u0026lt;EOF\nserver.port:\u0026nbsp;5601\nserver.host:\u0026nbsp;\"0.0.0.0\"\nelasticsearch.url:\u0026nbsp;\"http://127.0.0.1:9200\"\nEOF\nnohup\u0026nbsp;/usr/local/kibana/bin/kibana\u0026nbsp;\u0026\u0026nbsp;\u0026gt;/dev/null\n}\ncheck()\u0026nbsp;{\nport=$1\nprogram=$2\ncheck_port=netstat\u0026nbsp;-lntup|grep\u0026nbsp;\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${port}\u0026lt;/span\u0026gt;|wc\u0026nbsp;-l\ncheck_program=ps\u0026nbsp;-ef|grep\u0026nbsp;\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${program}\u0026lt;/span\u0026gt;|grep\u0026nbsp;-v\u0026nbsp;grep|wc\u0026nbsp;-l\nif\u0026nbsp;[\u0026nbsp;$check_port\u0026nbsp;-gt\u0026nbsp;0\u0026nbsp;]\u0026nbsp;\u0026\u0026\u0026nbsp;[\u0026nbsp;$check_program\u0026nbsp;-gt\u0026nbsp;0\u0026nbsp;];then\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;action\u0026nbsp;\"${program}\u0026nbsp;run\u0026nbsp;is\u0026nbsp;ok!\"\u0026nbsp;/bin/true\nelse\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;action\u0026nbsp;\"${program}\u0026nbsp;run\u0026nbsp;is\u0026nbsp;error!\"\u0026nbsp;/bin/false\nfi\n}\nmain()\u0026nbsp;{\ninit_sys\nwget_fun\ninstall_elasticsearch\ninstall_filebeat\ninstall_logstash\ninstall_kibana\necho\u0026nbsp;-e\u0026nbsp;\"\\033[32m\u0026nbsp;Checking\u0026nbsp;Elasticsearch...\\033[0m\"\nsleep\u0026nbsp;20\ncheck\u0026nbsp;:9200\u0026nbsp;\"elasticsearch\"\necho\u0026nbsp;-e\u0026nbsp;\"\\033[32m\u0026nbsp;Checking\u0026nbsp;Logstash...\\033[0m\"\nsleep\u0026nbsp;2\ncheck\u0026nbsp;\":9600\"\u0026nbsp;\"logstash\"\necho\u0026nbsp;-e\u0026nbsp;\"\\033[32m\u0026nbsp;Checking\u0026nbsp;Kibana...\\033[0m\"\nsleep\u0026nbsp;2\ncheck\u0026nbsp;\":5601\"\u0026nbsp;\"kibana\"\naction\u0026nbsp;\"ELK\u0026nbsp;install\u0026nbsp;is\u0026nbsp;success!\"\u0026nbsp;/bin/true\necho\u0026nbsp;\"url:http://$IP:5601\"\n}\nmain\n\u0026lt;/code\u003e 第二个MySQL同步状态检查脚本 \u0026lt;span class=\"hljs-meta\" style=\"color: #75715e; line-height: 26px;\"\u003e#!/bin/bash\u0026lt;/span\u003e\u0026lt;br\u003emysql_user=\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e'root'\u0026lt;/span\u003e\u0026lt;br\u003emysql_pass=\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\"bhVd!564qazWSX78U#7\"\u0026lt;/span\u003e\u0026lt;br\u003edata=$(/bin/date\u0026nbsp;+%Y-%m-%d-%H:%M)\u0026lt;br\u003e/bin/netstat\u0026nbsp;-lntup|egrep\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u003e\":3306\"\u0026lt;/span\u003e|grep\u0026nbsp;-v\u0026nbsp;grep\u0026gt;/dev/null0\u0026lt;br\u003e\u0026lt;span class=\"hljs-keyword\" style=\"color: #f92672; font-weight: bold; line-height: 26px;\"\u003eif\u0026lt;/span\u003e\u0026nbsp;[\u0026nbsp;$?\u0026nbsp;-eq\u0026nbsp;0\u0026nbsp;];\u0026lt;span class=\"hljs-keyword\" style=\"color: #f92672; font-weight: bold; line-height: 26px;\"\u003ethen\u0026lt;/span\u003e\u0026lt;br\u003e\u0026nbsp;Slave_IO=\u0026lt;code\u003e/data/mysql/bin/mysql\u0026nbsp;-u\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${mysql_user}\u0026lt;/span\u0026gt;\u0026nbsp;-p\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${mysql_pass}\u0026lt;/span\u0026gt;\u0026nbsp;-e\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"show\u0026nbsp;slave\u0026nbsp;status\\G\"\u0026lt;/span\u0026gt;|grep\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"Slave_IO_Running:\"\u0026lt;/span\u0026gt;|awk\u0026nbsp;-F\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\":\u0026nbsp;\"\u0026lt;/span\u0026gt;\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\u0026#039;{print\u0026nbsp;$2}\u0026#039;\u0026lt;/span\u0026gt;\n\u0026nbsp;Slave_SQL=/data/mysql/bin/mysql\u0026nbsp;-u\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${mysql_user}\u0026lt;/span\u0026gt;\u0026nbsp;-p\u0026lt;span class=\"hljs-variable\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;${mysql_pass}\u0026lt;/span\u0026gt;\u0026nbsp;-e\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"show\u0026nbsp;slave\u0026nbsp;status\\G\"\u0026lt;/span\u0026gt;|grep\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\"Slave_SQL_Running:\"\u0026lt;/span\u0026gt;|awk\u0026nbsp;-F\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\":\u0026nbsp;\"\u0026lt;/span\u0026gt;\u0026nbsp;\u0026lt;span class=\"hljs-string\" style=\"color: #a6e22e; line-height: 26px;\"\u0026gt;\u0026#039;{print\u0026nbsp;$2}\u0026#039;\u0026lt;/span\u0026gt;\n\u0026nbsp;\u0026nbsp;if\u0026nbsp;[\u0026nbsp;\"$Slave_IO\"\u0026nbsp;==\u0026nbsp;\"Yes\"\u0026nbsp;]\u0026nbsp;\u0026\u0026\u0026nbsp;[\u0026nbsp;\"$Slave_SQL\"\u0026nbsp;==\u0026nbsp;\"Yes\"\u0026nbsp;];then\n\u0026nbsp;\u0026nbsp;\u0026nbsp;STAT=1\u0026nbsp;\u0026\u0026\u0026nbsp;echo\u0026nbsp;\"$data\u0026nbsp;mysql-status\u0026nbsp;is\u0026nbsp;ok\"\u0026gt;\u0026gt;/var/log/mysql-status.log\n\u0026nbsp;\u0026nbsp;else\n\u0026nbsp;\u0026nbsp;\u0026nbsp;STAT=0\u0026nbsp;\u0026\u0026\u0026nbsp;echo\u0026nbsp;\"$data\u0026nbsp;mysql-status\u0026nbsp;is\u0026nbsp;error\"\u0026gt;\u0026gt;/var/log/mysql-status.log\n\u0026nbsp;\u0026nbsp;fi\nelse\n\u0026nbsp;STAT=0\u0026nbsp;\u0026\u0026\u0026nbsp;echo\u0026nbsp;\"$data\u0026nbsp;mysql-status\u0026nbsp;is\u0026nbsp;error\"\u0026gt;\u0026gt;/var/log/mysql-status.log\nfi\n/usr/bin/zabbix_sender\u0026nbsp;-z\u0026nbsp;101.227.67.205\u0026nbsp;-s\u0026nbsp;\"DaoDaEr-mysql-status\"\u0026nbsp;-k\u0026nbsp;mysql\u0026nbsp;-o\u0026nbsp;$STAT\n\u0026lt;/code\u003e","date":"2023年55月18日","externalUrl":null,"permalink":"/3292.html","section":"Posts","summary":"","title":"ELK安装部署脚本及MySQL主从同步监控脚本","type":"post"},{"content":"","date":"2023年55月18日","externalUrl":null,"permalink":"/categories/linux%E8%BF%90%E7%BB%B4/","section":"Categories","summary":"","title":"Linux运维","type":"categories"},{"content":"","date":"2023年55月18日","externalUrl":null,"permalink":"/categories/shell/","section":"Categories","summary":"","title":"SHELL","type":"categories"},{"content":"","date":"2022年1111月27日","externalUrl":null,"permalink":"/tags/headscale/","section":"标签","summary":"","title":"Headscale","type":"tags"},{"content":"","date":"2022年1111月27日","externalUrl":null,"permalink":"/categories/network/","section":"Categories","summary":"","title":"Network","type":"categories"},{"content":"","date":"2022年1111月27日","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"2022年1111月27日","externalUrl":null,"permalink":"/tags/tailscale/","section":"标签","summary":"","title":"Tailscale","type":"tags"},{"content":"","date":"2022年1111月27日","externalUrl":null,"permalink":"/series/tailscale-%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/","section":"Series","summary":"","title":"Tailscale 系列教程","type":"series"},{"content":"前面几篇文章给大家给介绍了 Tailscale 和 Headscale，包括 Headscale 的安装部署和各个平台客户端的接入，以及如何打通各个节点所在的局域网。同时还介绍了如何自建私有的 DERP 服务器，并让 Tailscale 使用我们自建的 DERP 服务器。\n今天我们来探索一下更复杂的场景。想象有这么一个场景，我系统通过 Tailscale 方便的连接一台不完全属于我的设备， 这台设备可能还有其他人也在使用。如果我仅仅是安装一个 Tailscale， 那么所有能登录这台设备的人都可以通过 Tailscale 连接我所有的设备。\n我能不能实现这样一种需求：我可以连接这台节点，但是这台节点不能连接我的其他节点？\n这就是 Tailscale ACL（Access Control List）干的事情。ACL 可以严格限制特定用户或设备在 Tailscale 网络上访问的内容。\n虽然 Headscale 兼容 Tailscale 的 ACL，但还是有些许差异的。本文所讲的 ACL 只适用于 Headscale，如果你使用的是官方的控制服务器，有些地方可能跟预期不符，请自行参考 Tailscale 的官方文档。 Tailscale/Headscale 的默认访问规则是 default deny，也就是黑名单模式，只有在访问规则明确允许的情况下设备之间才能通信。所以 Tailscale/Headscale 默认会使用 allowall 访问策略进行初始化，该策略允许加入到 Tailscale 网络的所有设备之间可以相互访问。\nTailscale/Headscale 通过使用 group 这种概念，可以只用非常少的规则就能表达大部分安全策略。除了 group 之外，还可以为设备打 tag 来进一步扩展访问策略。结合 group 和 tag 就可以构建出强大的基于角色的访问控制（RBAC）策略。\n关于 Tailscale 访问控制系统的详情可以参考这篇文章：基于角色的访问控制（RBAC）：演进历史、设计理念及简洁实现。这篇文章深入探讨了访问控制系统的历史，从设计层面分析了 **DAC -\u0026gt; MAC -\u0026gt; RBAC -\u0026gt; ABAC**的演进历程及各模型的优缺点、适用场景等， 然后从实际需求出发，一步步地设计出一个实用、简洁、真正符合 RBAC 理念的访问控制系统。\nTailscale ACL 语法 # Tailscale ACL 需要保存为 HuJSON 格式，也就是 human JSON。HuJSON 是 JSON 的超集，允许添加注释以及结尾处添加逗号。这种格式更易于维护，对人类和机器都很友好。\nHeadscale 除了支持 HuJSON 之外，还支持使用 YAML 来编写 ACL。本文如不作特殊说明，默认都使用 YAML 格式。 Headscale 的 ACL 策略主要包含以下几个部分：\nacls：ACL 策略定义。 groups：用户的集合。Tailscale 官方控制器的“用户”指的是登录名，必须是邮箱格式。而 Headscale 的用户就是 namesapce。 hosts：定义 IP 地址或者 CIDR 的别名。 tagOwners：指定哪些用户有权限给设备打 tag。 autoApprovers：允许哪些用户不需要控制端确认就可以宣告 Subnet 路由和 Exit Node。 ACL 规则 # acls 部分是 ACL 规则主体，每个规则都是一个 HuJSON 对象，它授予从一组访问来源到一组访问目标的访问权限。\n所有的 ACL 规则最终表示的都是允许从特定源 IP 地址到特定目标 IP 地址和端口的流量。虽然可以直接使用 IP 地址来编写 ACL 规则，但为了可读性以及方便维护，建议使用用户、Group 以及 tag 来编写规则，Tailscale 最终会将其转换为具体的 IP 地址和端口。\n每一个 ACL 访问规则长这个样子：\n- action: accept src: - xxx - xxx - ... dst: - xxx - xxx - ... proto: protocol # 可选参数 Tailscale/Headscale 的默认访问规则是 default deny，也就是黑名单模式，只有在访问规则明确允许的情况下设备之间才能通信。所以 ACL 规则中的 action 值一般都写 accept，毕竟默认是 deny 嘛。\nsrc 字段表示访问来源列表，该字段可以填的值都在这个表格里：\n类型 示例 含义 Any * 无限制（即所有来源） 用户(Namespace) dev1 Headscale namespace 中的所有设备 Group (ref) group:example Group 中的所有用户 Tailscale IP 100.101.102.103 拥有给定 Tailscale IP 的设备 Subnet CIDR (ref) 192.168.1.0/24 CIDR 中的任意 IP Hosts (ref) my-host hosts 字段中定义的任意 IP Tags (ref) tag:production 分配指定 tag 的所有设备 Tailnet members autogroup:members Tailscale 网络中的任意成员（设备） proto 字段是可选的，指定允许访问的协议。如歌不指定，默认可以访问所有 TCP 和 UDP 流量。\nproto 可以指定为 IANA IP 协议编号 1-255（例如 16）或以下命名别名之一（例如 sctp）：\n协议 proto IANA 协议编号 Internet Group Management (IGMP) igmp 2 IPv4 encapsulation ipv4, ip-in-ip 4 Transmission Control (TCP) tcp 6 Exterior Gateway Protocol (EGP) egp 8 Any private interior gateway igp 9 User Datagram (UDP) udp 17 Generic Routing Encapsulation (GRE) gre 47 Encap Security Payload (ESP) esp 50 Authentication Header (AH) ah 51 Stream Control Transmission Protocol (SCTP) sctp 132 只有 TCP、UDP 和 SCTP 流量支持指定端口，其他协议的端口必须指定为 *。\ndst 字段表示访问目标列表，列表中的每个元素都用 hosts:ports 来表示。hosts 的取值范围如下：\n类型 示例 含义 Any * 无限制（即所有访问目标） 用户（Namespace） dev1 Headscale namespace 中的所有设备 Group (ref) group:example Group 中的所有用户 Tailscale IP 100.101.102.103 拥有给定 Tailscale IP 的设备 Hosts (ref) my-host hosts 字段中定义的任意 IP Subnet CIDR (ref) 192.168.1.0/24 CIDR 中的任意 IP Tags (ref) tag:production 分配指定 tag 的所有设备 Internet access (ref) autogroup:internet 通过 Exit Node 访问互联网 Own devices autogroup:self 允许 src 中定义的来源访问自己（不包含分配了 tag 的设备） Tailnet devices autogroup:members Tailscale 网络中的任意成员（设备） ports 的取值范围：\n类型 示例 Any * Single 22 Multiple 80,443 Range 1000-2000 Groups # groups 定义了一组用户的集合，YAML 格式示例配置如下：\ngroups: group:admin: - \u0026#34;admin1\u0026#34; group:dev: - \u0026#34;dev1\u0026#34; - \u0026#34;dev2\u0026#34; huJSON 格式：\n\u0026#34;groups\u0026#34;: { \u0026#34;group:admin\u0026#34;: [\u0026#34;admin1\u0026#34;], \u0026#34;group:dev\u0026#34;: [\u0026#34;dev1\u0026#34;, \u0026#34;dev2\u0026#34;], }, 每个 Group 必须以 group: 开头，Group 之间也不能相互嵌套。\nAutogroups # autogroup 是一个特殊的 group，它自动包含具有相同属性的用户或者访问目标，可以在 ACL 规则中调用 autogroup。\nAutogroup 允许在 ACL 的哪个字段调用 含义 autogroup:internet dst 用来允许任何用户通过任意 Exit Node 访问你的 Tailscale 网络 autogroup:members src 或者 dst 用来允许 Tailscale 网络中的任意成员（设备）访问别人或者被访问 autogroup:self dst 用来允许 src 中定义的来源访问自己 示例配置：\nacls: # 允许所有员工访问自己的设备 - action: accept src: - \u0026#34;autogroup:members\u0026#34; dst: - \u0026#34;autogroup:self:*\u0026#34; # 允许所有员工访问打了标签 tag:corp 的设备 - action: accept src: - \u0026#34;autogroup:members\u0026#34; dst: - \u0026#34;tag:corp:*\u0026#34; Hosts # Hosts 用来定义 IP 地址或者 CIDR 的别名，使 ACL 可读性更强。示例配置：\nhosts: example-host-1: \u0026#34;100.100.100.100\u0026#34; example-network-1: \u0026#34;100.100.101.100/24 Tag Owners # tagOwners 定义了哪些用户有权限给设备分配指定的 tag。示例配置：\ntagOwners: tag:webserver: - group:engineering tag:secure-server: - group:security-admins - dev1 tag:corp: - autogroup:members 这里表示的是允许 Group group:engineering 给设备添加 tag tag:webserver；允许 Group group:security-admins 和用户（也就是 namespace）dev1 给设备添加 tag tag:secure-server；允许 Tailscale 网络中的任意成员（设备）给设备添加 tag tag:corp。\n每个 tag 名称必须以 tag: 开头，每个 tag 的所有者可以是用户、Group 或者 autogroup:members。\nAuto Approvers # autoApprovers 定义了无需 Headscale 控制端批准即可执行某些操作的用户列表，包括宣告特定的子网路由或者 Exit Node。\n当然了，即使可以通过 autoApprovers 自动批准，Headscale 控制端仍然可以禁用路由或者 Exit Node，但不推荐这种做法，因为控制端只能临时修改，autoApprovers 中定义的用户列表仍然可以继续宣告路由或 Exit Node，所以正确的做法应该是修改 autoApprovers 中的用户列表来控制宣告的路由或者 Exit Node。\nautoApprovers 示例配置：\nautoApprovers: exitNode: - \u0026#34;default\u0026#34; - \u0026#34;tag:bar\u0026#34; routes: \u0026#34;10.0.0.0/24\u0026#34;: - \u0026#34;group:engineering\u0026#34; - \u0026#34;dev1\u0026#34; - \u0026#34;tag:foo\u0026#34; 这里表示允许 default namespace 中的设备（以及打上标签 tag:bar 的设备）将自己宣告为 Exit Node；允许 Group group:engineering 中的设备（以及 dev1 namespace 中的设备和打上标签 tag:foo 的设备）宣告子网 10.0.0.0/24 的路由。\nHeadscale 配置 ACL 的方法 # 要想在 Headscale 中配置 ACL，只需使用 HuJSON 或者 YAML 编写相应的 ACL 规则（HuJSON 格式的文件名后缀为 hujson），然后在 Headscale 的配置文件中引用 ACL 规则文件即可。\n# Path to a file containg ACL policies. # ACLs can be defined as YAML or HUJSON. # https://tailscale.com/kb/1018/acls/ acl_policy_path: \u0026#34;./acl.yaml\u0026#34; ACL 规则示例 # 允许所有流量 # 默认的 ACL 规则允许所有访问流量，规则内容如下：\n# acl.yaml acls: - action: accept src: - \u0026#34;*\u0026#34; dst: - \u0026#34;*:*\u0026#34; 允许特定 ns 访问所有流量 # 假设 Headscale 有两个 namesapce：default 和 guest。管理员的设备都在 default namespace 中，访客的设备都在 guest namespace 中。\n$ headscale ns ls ID | Name | Created 1 | default | 2022-08-20 06:15:17 2 | guest | 2022-11-27 09:20:25 $ headscale -n default node ls ID | Hostname | Name | NodeKey | Namespace | IP addresses | Ephemeral | Last seen | Online | Expired 2 | OpenWrt | openwrt-njprohi0 | [7LdVc] | default | 10.1.0.2, | false | 2022-08-26 04:18:43 | offline | no 5 | tailscale | tailscale-home | [pwlFE] | default | 10.1.0.5, | false | 2022-11-27 10:02:35 | online | no 10 | k3s-worker05 | share | [5Z38M] | default | 10.1.0.9, | false | 2022-11-22 18:49:25 | offline | no 11 | Galaxy a52s | galaxy-a52s-arg5owsh | [U+0qY] | default | 10.1.0.1, | false | 2022-11-27 10:02:34 | online | no $ headscale -n guest node ls ID | Hostname | Name | NodeKey | Namespace | IP addresses | Ephemeral | Last seen | Online | Expired 12 | guest-1 | guest-1 | [75qSK] | guest | 10.1.0.10, | false | 2022-11-27 10:05:33 | online | no 13 | guest-2 | guest-2 | [8lONp] | guest | 10.1.0.11, | false | 2022-11-27 10:05:31 | online | no 现在我想让 default namespace 中的设备可以访问所有设备，而 guest namespace 中的设备只能访问 guest namespace 中的设备，那么规则应该这么写：\n# acl.yaml acls: - action: accept src: - \u0026#34;default\u0026#34; dst: - \u0026#34;*:*\u0026#34; - \u0026#34;guest:*\u0026#34; - action: accept src: - \u0026#34;guest\u0026#34; dst: - \u0026#34;guest:*\u0026#34; 在 guest-1 上查看 Tailscale 状态：\n$ tailscale status 10.1.0.10 ks-node-2 guest linux - desktop-aoulurh-j7dfnsul.default.example.com default windows offline galaxy-a52s-arg5owsh.default.example.com default android active; relay \u0026#34;hs\u0026#34;, tx 12112 rx 11988 guest-3 guest linux active; direct 172.31.73.176:41641, tx 2552 rx 2440 openwrt-njprohi0.default.example.com default linux offline tailscale-home.default.example.com default linux active; direct 60.184.243.56:41641, tx 3416 rx 25576 看起来 guest-1 可以看到所有的设备，但事实上它只能 ping 通 guest-2，我们来验证一下：\n$ ping 10.1.0.1 PING 10.1.0.1 (10.1.0.1) 56(84) bytes of data. ^C --- 10.1.0.1 ping statistics --- 9 packets transmitted, 0 received, 100% packet loss, time 8169ms 果然是 ping 不通的。但是 10.1.0.1 这个设备是可以反向 ping 通 guest-1 的：\n# 在 10.1.0.1 所在的设备操作 $ ping 10.1.0.10 PING 10.1.0.10 (10.1.0.10) 56(84) bytes of data. 64 bytes from 10.1.0.10: icmp_seq=1 ttl=64 time=68.9 ms 64 bytes from 10.1.0.10: icmp_seq=2 ttl=64 time=91.5 ms 64 bytes from 10.1.0.10: icmp_seq=3 ttl=64 time=85.3 ms 64 bytes from 10.1.0.10: icmp_seq=4 ttl=64 time=79.7 ms ^C --- 10.1.0.10 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3005ms rtt min/avg/max/mdev = 68.967/81.389/91.551/8.306 ms ssh 测试一下：\n$ ssh root@10.1.0.10 root@10.1.0.10\u0026#39;s password: 完美。\n下面再来看看 guest-1 能不能 ping 通 guest-2：\n# 在 guest-1 设备上操作 $ ping 10.1.0.11 PING 10.1.0.11 (10.1.0.11) 56(84) bytes of data. 64 bytes from 10.1.0.11: icmp_seq=1 ttl=64 time=2.93 ms 64 bytes from 10.1.0.11: icmp_seq=2 ttl=64 time=1.33 ms ^C --- 10.1.0.11 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1001ms rtt min/avg/max/mdev = 1.325/2.128/2.931/0.803 ms 和我在上面预测的效果一样，ACL 规则生效了。\n神奇的 tag # tag 有一个非常神奇的功效：它可以让 src 和 dst 中的元素失效。具体什么意思呢？假设你的 src 或 dst 中指定了 namespace 或者 group，那么这个规则只对这个 namespace 或者 group 中（没有分配 tag 的设备）生效。\n举个例子你就明白了，现在我给 guest-2 打上一个 tag：\n$ headscale node tag -i 13 -t tag:test Machine updated $ headscale -n guest node ls -t ID | Hostname | Name | NodeKey | Namespace | IP addresses | Ephemeral | Last seen | Online | Expired | ForcedTags | InvalidTags | ValidTags 12 | ks-node-2 | ks-node-2 | [75qSK] | guest | 10.1.0.10, | false | 2022-11-27 10:18:35 | online | no | | | 13 | ks-node-3 | ks-node-3 | [8lONp] | guest | 10.1.0.11, | false | 2022-11-27 10:18:31 | online | no | tag:test | | 此时 guest-1 就 ping 不通 guest-2 了：\n# 在 guest-1 设备上操作 $ ping 10.1.0.11 PING 10.1.0.11 (10.1.0.11) 56(84) bytes of data. ^C --- 10.1.0.11 ping statistics --- 4 packets transmitted, 0 received, 100% packet loss, time 3070ms 这就说明 guest-2 并不包含在 guest:* 这个访问目标中，也就是说打了 tag 的设备并不包含在 guest:* 这个访问目标中。\n此时其他设备如果还想继续 guest-2，必须在 dst 中指定 tag:test：\nacls: - action: accept src: - \u0026#34;default\u0026#34; dst: - \u0026#34;*:*\u0026#34; - \u0026#34;guest:*\u0026#34; - \u0026#34;tag:test:*\u0026#34; - action: accept src: - \u0026#34;guest\u0026#34; dst: - \u0026#34;guest:*\u0026#34; - \u0026#34;tag:test:*\u0026#34; 再次测试访问：\n# 在 guest-1 设备上操作 $ ping 10.1.0.11 PING 10.1.0.11 (10.1.0.11) 56(84) bytes of data. 64 bytes from 10.1.0.11: icmp_seq=1 ttl=64 time=1.31 ms 64 bytes from 10.1.0.11: icmp_seq=2 ttl=64 time=3.40 ms ^C --- 10.1.0.11 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1002ms rtt min/avg/max/mdev = 1.314/2.355/3.397/1.041 ms 果然可以 ping 通了。\n总结 # Tailscale/Headscale 的 ACL 非常强大，你可以基于 ACL 实现各种各样的访问控制策略，本文只是给出了几个关键示例，帮助大家理解其用法，更多功能大家可以自行探索（比如 group 等）。下篇文章将会给大家介绍如何配置 Headscale 的 Exit Node，以及各个设备如何使用 Exit Node，届时会用到 ACL 里面的 autoApprovers，敬请期待！\n","date":"2022年1111月27日","externalUrl":null,"permalink":"/posts/tailscale-acls/","section":"Posts","summary":"","title":"Tailscale/Headscale ACL 使用教程","type":"posts"},{"content":"","date":"2022年1111月27日","externalUrl":null,"permalink":"/categories/vpn/","section":"Categories","summary":"","title":"VPN","type":"categories"},{"content":"","date":"2022年1111月27日","externalUrl":null,"permalink":"/tags/wireguard/","section":"标签","summary":"","title":"WireGuard","type":"tags"},{"content":" K8S Pod 磁盘治理方案 # 背景：关于开发程序在Pod内自定义目录打满磁盘，直接影响到线上环境稳定性，增加运维同志处理磁盘告警的负担。特推出以下方案\n灾难案例： 一个服务在在pod内疯狂打日志，输出一小时内输出155G+日志量，直接造成了线上服务因磁盘压力被驱逐\n解决方案： # 为每个pod设置默认的可以使用的最大临时卷磁盘大小 limits ephemeral-storage\n方案可行性验证： # 目前针对公司环境来说，采取了hostPath 和localPV的方式进行了数据持久化处理，因此对这两种场景进行验证测试\nhostPath验证测试 # 对容器进行如下配置\nvolumeMounts: - name: mydata mountPath: /opt #容器内挂载目录 resources: requests: cpu: 10m memory: 10Mi limits: cpu: 20m memory: 30Mi ephemeral-storage: 20Mi volumes: - name: mydata hostPath: path: /home/work/nginx/logs #主机挂载目录 提前创建好目录 验证测试：\n1.进入容器在容器挂载目录/opt 内用 dd if=/dev/zero of=file bs=1M count=20000 测试写一个20G大小的文件\n结果：可写入响应大小的文件\n2.进入容器在非容器挂载目录/home内用 dd if=/dev/zero of=file bs=1M count=20000 测试写一个20G大小的文件\n结果： 超出20Mi 容器立刻被驱逐重启\nLocalPV验证测试 # 创建一个localPV\napiVersion: v1 kind: PersistentVolume metadata: finalizers: - kubernetes.io/pv-protection labels: app: disktest name: disktest spec: accessModes: - ReadWriteOnce capacity: storage: 30Gi local: path: /home/.k8s-local-volumes/disktest #提前创建目录 nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: In values: - 要存储数据的节点 ip #改为自身节点IP persistentVolumeReclaimPolicy: Retain storageClassName: local-storage volumeMode: Filesystem --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: mypvc spec: storageClassName: local-storage accessModes: - ReadWriteOnce resources: requests: storage: 3Gi 创建一个Pod并挂载本地LocalPV\napiVersion: apps/v1 kind: Deployment metadata: name: my-nginx spec: replicas: 1 selector: matchLabels: run: my-nginx template: metadata: labels: run: my-nginx spec: containers: - name: my-nginx image: \u0026#039;nginx:1.18.0\u0026#039; ports: - containerPort: 80 volumeMounts: - name: myhostpath mountPath: /opt - name: mypvc mountPath: /data resources: requests: cpu: 10m memory: 10Mi limits: cpu: 20m memory: 30Mi ephemeral-storage: 20Mi volumes: - name: myhostpath hostPath: path: /home/work/nginx/logs - name: mypvc persistentVolumeClaim: claimName: mypvc 验证测试过程与上面的类似【待验证】\n先在持久化数据目录写大于20Mi数据测试 =\u0026gt; 正常写入 非持久化数据目录写大于20Mi数据测试 =\u0026gt; Pod被驱逐 整体测试结果截图\n优点 # 可有效控制开发人员打印日志不规范的问题，养成好的习惯，做到有用数据持久化，无用数据减少输出或不输出\n缺点 # 如果限制阈值太小，服务会频繁被驱逐。导致服务可能频繁中断或不可用，\n","date":"2022年1010月21日","externalUrl":null,"permalink":"/3258.html","section":"Posts","summary":"","title":"K8S Pod 磁盘治理方案","type":"post"},{"content":"","date":"2022年1010月21日","externalUrl":null,"permalink":"/categories/kubernetes/","section":"Categories","summary":"","title":"Kubernetes","type":"categories"},{"content":"#!/usr/bin/env bash # # Copyright 2019 (c) roc # # This script shows processes holding the inotify fd, alone with HOW MANY directories each inotify fd watches(0 will be ignored). total=0 result=\"EXE PID FD-INFO INOTIFY-WATCHES\\n\" while read pid fd; do \\ exe=\"$(readlink -f /proc/$pid/exe || echo n/a)\"; \\ fdinfo=\"/proc/$pid/fdinfo/$fd\" ; \\ count=\"$(grep -c inotify \"$fdinfo\" || true)\"; \\ if [ $((count)) != 0 ]; then total=$((total+count)); \\ result+=\"$exe $pid $fdinfo $count\\n\"; \\ fi done \u0026lt;\u0026lt;\u0026lt; \"$(lsof +c 0 -n -P -u root|awk \u0026#039;/inotify$/ { gsub(/[urw]$/,\"\",$4); print $2\" \"$4 }\u0026#039;)\" \u0026\u0026 echo \"total $total inotify watches\" \u0026\u0026 result=\"$(echo -e $result|column -t)\\n\" \u0026\u0026 echo -e \"$result\" | head -1 \u0026\u0026 echo -e \"$result\" | sed \"1d\" | sort -k 4rn; ","date":"2022年1010月21日","externalUrl":null,"permalink":"/3257.html","section":"Posts","summary":"","title":"查看进程的 inotify watch 情况","type":"post"},{"content":"#!/bin/bash # Get the procs sorted by the number of inotify watches # @author Carl-Erik Kopseng # @latest https://github.com/fatso83/dotfiles/blob/master/utils/scripts/inotify-consumers # Discussion leading up to answer: https://unix.stackexchange.com/questions/15509/whos-consuming-my-inotify-resources # # If you need ultimate speed, use https://github.com/fatso83/dotfiles/commit/inotify-consumers-v1-fastest # # Speed enhancements by Simon Matter \u0026lt;simon.matter@invoca.ch\u0026gt; # # A later PR introduced a significant slowdown to gain better output, but it is insignificant on most machines # See this for details: https://github.com/fatso83/dotfiles/pull/10#issuecomment-1122374716 main(){ # get terminal width declare -i COLS=$(tput cols 2\u0026gt;/dev/null || echo 80) declare -i WLEN=10 printf \"\\n%${WLEN}s %${WLEN}s\\n\" \"INOTIFY\" \"INSTANCES\" printf \"%${WLEN}s %${WLEN}s\\n\" \"WATCHES\" \"PER \" printf \"%${WLEN}s %${WLEN}s %s\\n\" \" COUNT \" \"PROCESS \" \"PID USER COMMAND\" printf -- \"------------------------------------------------------------\\n\" generateData } usage(){ cat \u0026lt;\u0026lt; EOF Usage: $0 [--help|--limits] -l, --limits Will print the current related limits and how to change them -h, --help Show this help EOF } limits(){ printf \"\\nCurrent limits\\n-------------\\n\" sysctl fs.inotify.max_user_instances fs.inotify.max_user_watches cat \u0026lt;\u0026lt;- EOF Changing settings permanently ----------------------------- echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf sudo sysctl -p # re-read config EOF } if [ \"$1\" = \"--limits\" -o \"$1\" = \"-l\" ]; then limits exit 0 fi if [ \"$1\" = \"--help\" -o \"$1\" = \"-h\" ]; then usage exit 0 fi if [ -n \"$1\" ]; then printf \"\\nUnknown parameter \u0026#039;$1\u0026#039;\\n\" \u0026gt;\u00262 usage exit 1 fi generateData(){ local -i PROC local -i PID local -i CNT local -i INSTANCES local -i TOT local -i TOTINSTANCES # read process list into cache local PSLIST=\"$(ps ax -o pid,user=WIDE-COLUMN,command --columns $(( COLS - WLEN )))\" local INOTIFY=\"$(find /proc/[0-9]*/fdinfo -type f 2\u0026gt;/dev/null | xargs grep ^inotify 2\u0026gt;/dev/null)\" local INOTIFYCNT=\"$(echo \"$INOTIFY\" | cut -d \"/\" -s --output-delimiter=\" \" -f 3 |uniq -c | sed -e \u0026#039;s/:.*//\u0026#039;)\" # unique instances per process is denoted by number of inotify FDs local INOTIFYINSTANCES=\"$(echo \"$INOTIFY\" | cut -d \"/\" -s --output-delimiter=\" \" -f 3,5 | sed -e \u0026#039;s/:.*//\u0026#039;| uniq |awk \u0026#039;{print $1}\u0026#039; |uniq -c)\" local INOTIFYUSERINSTANCES=\"$(echo \"$INOTIFY\" | cut -d \"/\" -s --output-delimiter=\" \" -f 3,5 | sed -e \u0026#039;s/:.*//\u0026#039; | uniq | while read PID FD; do echo $PID $FD $(grep -e \"^\\ *${PID}\\ \" \u0026lt;\u0026lt;\u0026lt; \"$PSLIST\"|awk \u0026#039;{print $2}\u0026#039;); done | cut -d\" \" -f 3 | sort | uniq -c |sort -nr)\" set -e cat \u0026lt;\u0026lt;\u0026lt; \"$INOTIFYCNT\" | { while read -rs CNT PROC; do # count watches of processes found echo \"${PROC},${CNT},$(echo \"$INOTIFYINSTANCES\" | grep \" ${PROC}$\" |awk \u0026#039;{print $1}\u0026#039;)\" done } | grep -v \",0,\" | # remove entires without watches sort -n -t \",\" -k 2,3 -r | # sort to begin with highest numbers { # group commands so that $TOT is visible in the printf IFS=\",\" while read -rs PID CNT INSTANCES; do # show watches and corresponding process info printf \"%$(( WLEN - 2 ))d %$(( WLEN - 2 ))d %s\\n\" \"$CNT\" \"$INSTANCES\" \"$(grep -e \"^\\ *${PID}\\ \" \u0026lt;\u0026lt;\u0026lt; \"$PSLIST\")\" TOT=$(( TOT + CNT )) TOTINSTANCES=$(( TOTINSTANCES + INSTANCES)) done # These stats should be per-user as well, since inotify limits are per-user.. printf \"\\n%$(( WLEN - 2 ))d %s\\n\" \"$TOT\" \"WATCHES TOTAL COUNT\" # the total across different users is somewhat meaningless, not printing for now. # printf \"\\n%$(( WLEN - 2 ))d %s\\n\" \"$TOTINSTANCES\" \"TOTAL INSTANCES COUNT\" } echo \"\" echo \"INotify instances per user (e.g. limits specified by fs.inotify.max_user_instances): \" echo \"\" ( echo \"INSTANCES USER\" echo \"----------- ------------------\" echo \"$INOTIFYUSERINSTANCES\" ) | column -t echo \"\" } main ","date":"2022年88月19日","externalUrl":null,"permalink":"/3255.html","section":"Posts","summary":"","title":"找出当前使用的INotify数量及对应的命令","type":"post"},{"content":" ","date":"2022年77月17日","externalUrl":null,"permalink":"/3250.html","section":"Posts","summary":"","title":"Go语言编程完整版电子书-PDF","type":"post"},{"content":"报错现象：\ncurl -X GET 10.254.16.193:9200/_cat/indices {\"error\":{\"root_cause\":[{\"type\":\"master_not_discovered_exception\",\"reason\":null}],\"type\":\"master_not_discovered_exception\",\"reason\":null},\"status\":503}r 日志现象：\n{\"type\": \"server\", \"timestamp\": \"2022-02-20T14:24:45,555Z\", \"level\": \"WARN\", \"component\": \"o.e.c.c.ClusterFormationFailureHelper\", \"cluster.name\": \"docker-clustde.name\": \"es-0\", \"message\": \"master not discovered yet, this node has not previously joined a bootstrapped (v7+) cluster, and this node must discover master-elodes [es-0.es-svc, es-1.es-svc, es-2.es-svc] to bootstrap a cluster: have discovered [{es-0}{hdINfvU5Sw2ILBX7y40ITw}{n75Kx9lARoa_j7HsIcnUmg}{10.254.16.226}{10.26:9300}{dilm}{ml.machine_memory=2147483648, xpack.installed=true, ml.max_open_jobs=20}, {es-1}{zZ1MoUB8QDKGtw-o9liqxw}{InbT9AiiTUuhahQwrgDCCw}{10.254.63.104}{10104:9300}{dilm}{ml.machine_memory=2147483648, ml.max_open_jobs=20, xpack.installed=true}, {es-2}{oqiTb3GyTpSruJRzffGsng}{KzDbF_i3T_iR2XpmFIilyA}{10.254.34.153}{4.153:9300}{dilm}{ml.machine_memory=2147483648, ml.max_open_jobs=20, xpack.installed=true}]; discovery will continue using [10.254.63.104:9300, 10.254.34.153:93 hosts providers and [{es-0}{hdINfvU5Sw2ILBX7y40ITw}{n75Kx9lARoa_j7HsIcnUmg}{10.254.16.226}{10.254.16.226:9300}{dilm}{ml.machine_memory=2147483648, xpack.instal, ml.max_open_jobs=20}] from last-known cluster state; node term 0, last-accepted version 0 in term 0\" } es配置文件：\n报错原因：\nELK集群配置中，node.master: true表示该节点有作为master节点的资格。一个ELK集群，可以有多个节点拥有该资格，然后通过自举的方式确定哪个节点是master节点。\n上述报错是因为在ELK集群中，无法通过自举的方式在有资格成为master节点的节点中，自举出master节点，导致集群无法发现master节点\n解决方案：\n添加下述配置：\n特别注意： value是节点name 而不是节点的IP或值SVC name\n","date":"2022年22月20日","externalUrl":null,"permalink":"/3243.html","section":"Posts","summary":"","title":"K8S部署elasticsearch集群报错  {\"type\":\"master_not_discovered_exception\",\"reason\":null}","type":"post"},{"content":"快捷键组合\nCtrl + Shift + P，F1 显示命令面板 Show Command Palette Ctrl + P 快速打开 Quick Open Ctrl + Shift + N 新窗口/实例 New window/instance Ctrl + Shift + W 关闭窗口/实例 Close window/instance Ctrl+` 显示集成终端 Show integrated terminal Ctrl+Shift+` 创建新终端 Create new terminal Ctrl+Shift+C 复制选定 Copy selection Ctrl+Shift+V 粘贴到活动端子 Paste into active terminal Ctrl+↑ / ↓ 向上/向下滚动 Scroll up/down Shift+PgUp / PgDown 向上/向下滚动页面 Scroll page up/down Ctrl+Home / End 滚动到顶部/底部 Scroll to top/bottom F11 切换全屏 Toggle full screen Shift+Alt+1 切换编辑器布局 Toggle editor layout Ctrl+ = / - 放大/缩小 Zoom in/out Ctrl+B 切换侧栏可见性 Toggle Sidebar visibility Ctrl+Shift+E 显示浏览器/切换焦点 Show Explorer / Toggle focus Ctrl+Shift+F 显示搜索 Show Search Ctrl+Shift+G 显示Git Show Git Ctrl+Shift+D 显示调试 Show Debug Ctrl+Shift+X 显示扩展 Show Extensions Ctrl+Shift+H 替换文件 Replace in files Ctrl+Shift+J 切换搜索详细信息 Toggle Search details Ctrl+Shift+C 打开新命令提示符/终端 Open new command prompt/terminal Ctrl+Shift+U 显示输出面板 Show Output panel Ctrl+Shift+V 切换Markdown预览 Toggle Markdown preview Ctrl+K V 从旁边打开Markdown预览 Open Markdown preview to the side Ctrl+N 新文件 New File Ctrl+O 打开文件... Open File... Ctrl+S 保存 Save Ctrl+Shift+S 另存为... Save As... Ctrl+K S 全部保存 Save All Ctrl+F4 关闭 Close Ctrl+K Ctrl+W 关闭所有 Close All Ctrl+Shift+T 重新打开关闭的编辑器 Reopen closed editor Ctrl+K 输入保持打开 Enter Keep Open Ctrl+Tab 打开下一个 Open next Ctrl+Shift+Tab 打开上一个 Open previous Ctrl+K P 复制活动文件的路径 Copy path of active file Ctrl+K R 显示资源管理器中的活动文件 Reveal active file in Explorer Ctrl+K O 显示新窗口/实例中的活动文件 Show active file in new window/instance Ctrl+F4, Ctrl+W 关闭编辑器 Close editor Ctrl+K F 关闭文件夹 Close folder Ctrl+\\ 拆分编辑器 Split editor Ctrl+ 1 / 2 / 3 聚焦到第1，第2或第3编辑器组 Focus into 1st, 2nd or 3rd editor group Ctrl+K Ctrl+ ←/→ 聚焦到上一个/下一个编辑器组 Focus into previous/next editor group Ctrl+Shift+PgUp / PgDown 向左/向右移动编辑器 Move editor left/right Ctrl+K ← / → 移动活动编辑器组 Move active editor group Ctrl + F 查找 Find Ctrl + H 替换 Replace F3 / Shift + F3 查找下一个/上一个 Find next/previous Alt + Enter 选择查找匹配的所有出现 Select all occurences of Find match Ctrl + D 将选择添加到下一个查找匹配 Add selection to next Find match Ctrl + K Ctrl + D 将最后一个选择移至下一个查找匹配项 Move last selection to next Find match Alt + C / R / W 切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word Ctrl + T 显示所有符号 Show all Symbols Ctrl + G 转到行... Go to Line... Ctrl + P 转到文件... Go to File... Ctrl + Shift + O 转到符号... Go to Symbol... Ctrl + Shift + M 显示问题面板 Show Problems panel F8 转到下一个错误或警告 Go to next error or warning Shift + F8 转到上一个错误或警告 Go to previous error or warning Ctrl + Shift + Tab 导航编辑器组历史记录 Navigate editor group history Alt + ←/→ 返回/前进 Go back / forward Ctrl + M 切换选项卡移动焦点 Toggle Tab moves focus Ctrl+X 剪切行（空选定） Cut line (empty selection) Ctrl+C 复制行（空选定）Copy line (empty selection) Alt+ ↑ / ↓ 向上/向下移动行 Move line up/down Shift+Alt + ↓ / ↑ 向上/向下复制行 Copy line up/down Ctrl+Shift+K 删除行 Delete line Ctrl+Enter 在下面插入行 Insert line below Ctrl+Shift+Enter 在上面插入行 Insert line above Ctrl+Shift+\\ 跳到匹配的括号 Jump to matching bracket Ctrl+] / [ 缩进/缩进行 Indent/outdent line Home 转到行首 Go to beginning of line End 转到行尾 Go to end of line Ctrl+Home 转到文件开头 Go to beginning of file Ctrl+End 转到文件末尾 Go to end of file Ctrl+↑ / ↓ 向上/向下滚动行 Scroll line up/down Alt+PgUp / PgDown 向上/向下滚动页面 Scroll page up/down Ctrl+Shift+[ 折叠（折叠）区域 Fold (collapse) region Ctrl+Shift+] 展开（未折叠）区域 Unfold (uncollapse) region Ctrl+K Ctrl+[ 折叠（未折叠）所有子区域 Fold (collapse) all subregions Ctrl+K Ctrl+] 展开（未折叠）所有子区域 Unfold (uncollapse) all subregions Ctrl+K Ctrl+0 折叠（折叠）所有区域 Fold (collapse) all regions Ctrl+K Ctrl+J 展开（未折叠）所有区域 Unfold (uncollapse) all regions Ctrl+K Ctrl+C 添加行注释 Add line comment Ctrl+K Ctrl+U 删除行注释 Remove line comment Ctrl+/ 切换行注释 Toggle line comment Shift+Alt+A 切换块注释 Toggle block comment Alt+Z 切换换行 Toggle word wrap","date":"2022年11月10日","externalUrl":null,"permalink":"/3238.html","section":"Posts","summary":"","title":"VScode快捷键大全","type":"post"},{"content":" Wireshark软件安装 # 软件下载路径：wireshark官网。按照系统版本选择下载，下载完成后，按照软件提示一路Next安装。\n说明：如果你是Win10系统，安装完成后，选择抓包但是不显示网卡，下载win10pcap兼容性安装包。下载路径：win10pcap兼容性安装包\n软件安装很简单，不多说；\n主界面：\n抓包简单配置；\n打开软件选择网卡：如图所示操作\n","date":"2022年11月6日","externalUrl":null,"permalink":"/3051.html","section":"Posts","summary":"","title":"Wireshark 抓包教程---简单","type":"post"},{"content":"wordpress 权限对安装和使用效果的影响很大，如果你的服务器使用的是linux系统，可以使用cd命令到你需要修改权限的文件或文件夹所在的目录，然后使用chmod的命令来修改文件权限。\n一、不能安装theme或者修改theme或删除theme\nchmod 755 wordpress find wordpress -type d -exec chmod 755 {} \\; find wordpress -iname “*.php” -exec chmod 644 {} \\; chown -R nginx:nginx wordpress ","date":"2022年11月6日","externalUrl":null,"permalink":"/3232.html","section":"Posts","summary":"","title":"Wordpress 的目录权限应该如何设置？","type":"post"},{"content":"","date":"2021年1212月3日","externalUrl":null,"permalink":"/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/","section":"Categories","summary":"","title":"编程语言","type":"categories"},{"content":"打开CMD，先修改Go环境参数，然后再编译。编译结束恢复为windows的环境参数。\n注意：不知道为什么，在VsCode的Terminal中操作时会失败，但是在cmd.exe中是可以的。\n修改go环境参数\nSET CGO_ENABLED=0 SET GOOS=linux SET GOARCH=amd64 设置完之后，可以查看一下设置是否生效：\ngo env CGO_ENABLED go env GOOS go env GOARCH 将环境参数改回windows\n也可不改回，取决于具体需要\nSET CGO_ENABLED=1 SET GOOS=windows SET GOARCH=amd64","date":"2021年1212月3日","externalUrl":null,"permalink":"/3222.html","section":"Posts","summary":"","title":"在Windows中编译Linux运行的Golang程序","type":"post"},{"content":"运行Go代码流程图\n","date":"2021年1212月3日","externalUrl":null,"permalink":"/3220.html","section":"Posts","summary":"","title":"如何运行一个Golang项目","type":"post"},{"content":"","date":"2021年1212月2日","externalUrl":null,"permalink":"/categories/nginx/","section":"Categories","summary":"","title":"Nginx","type":"categories"},{"content":" HTTP响应头安全策略 # 全部配置如下（可能有遗漏） # add_header Content-Security-Policy \"default-src \u0026#039;self\u0026#039; xxx.xxx.com(允许的地址) add_header X-Content-Type-Options \"nosniff\"; add_header X-XSS-Protection \"1; mode=block\"; add_header X-Frame-Options SAMEORIGIN; add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\"; add_header \u0026#039;Referrer-Policy\u0026#039; \u0026#039;origin\u0026#039;; add_header X-Download-Options noopen; add_header X-Permitted-Cross-Domain-Policies none; Content-Security-Policy # 应对漏洞：XSS攻击\n控制平台只能执行同源的或者规定源（网址）的js、css等脚本。该配置由浏览器执行，启动后，不符合规则的外部资源就会被拒绝，从而一定程度屏蔽了XSS攻击。 配置策略：\nscript-src：外部脚本 定义针对 JavaScript 的加载策略 style-src：样式表 定义针对样式的加载策略 img-src：图像 定义针对图片的加载策略 media-src：媒体文件（音频和视频） 定义针对多媒体的加载策略 font-src：字体文件 定义针对字体的加载策略。 object-src：插件（比如 Flash） 定义针对插件的加载策略 child-src：框架 定义针对框架的加载策略 frame-ancestors：嵌入的外部资源（比如\u0026lt;frame\u0026gt;、\u0026lt;iframe\u0026gt;、\u0026lt;embed\u0026gt;和\u0026lt;applet\u0026gt;） connect-src：HTTP 连接（通过 XHR、WebSockets、EventSource等）定义针对 Ajax/WebSocket 等请求的加载策略。不允许的情况下，浏览器会模拟一个状态为400的响应 worker-src：worker脚本 manifest-src：manifest 文件 ################################################## sandbox : 定义针对 sandbox 的限制 report-uri : 告诉浏览器如果请求的资源不被策略允许时，往哪个地址提交日志信息 form-action : 定义针对提交的 form 到特定来源的加载策略。 referrer : 定义针对 referrer 的加载策略 reflected-xss : 定义针对 XSS 过滤器使用策略。 add_header \"Content-Security-Policy\" \"default-src \u0026#039;self\u0026#039; *.zhixueyun.com \u0026#039;unsafe-inline\u0026#039; \u0026#039;unsafe-eval\u0026#039;; script-src \u0026#039;self\u0026#039; *.zhixueyun.com; frame-ancestors \u0026#039;self\u0026#039; *.zhixueyun.com; object-src \u0026#039;none\u0026#039; *.zhixueyun.com\"; add_header \"Content-Security-Policy\" \"default-src \u0026#039;self\u0026#039; ehr.abc *.abchina.com \u0026#039;unsafe-inline\u0026#039; \u0026#039;unsafe-eval\u0026#039; blob: data: ;\" add_header \"Content-Security-Policy\" \"default-src \u0026#039;self\u0026#039; *.zhixueyun.com \u0026#039;unsafe-inline\u0026#039; \u0026#039;unsafe-eval\u0026#039;; script-src \u0026#039;self\u0026#039; *.zhixueyun.com; frame-ancestors \u0026#039;self\u0026#039; *.zhixueyun.com; object-src \u0026#039;none\u0026#039; *.zhixueyun.com\"; 每个限制选项可以设置以下几种值，这些值就构成了白名单\n主机名：example.org，https://example.com:443 路径名：example.org/resources/js/ 通配符：*.example.org，*://*.example.com:*（表示任意协议、任意子域名、任意端口） 协议名：https:、data: 关键字\u0026#039;self\u0026#039;：当前域名，需要加引号 关键字\u0026#039;none\u0026#039;：禁止加载任何外部资源，需要加引号 #指令值 说明 * 允许加载任何内容 ‘none‘ 允许加载任何内容 ‘self‘ 允许加载相同源的内容 www.a.com 允许加载指定域名的资源 *.a.com 允许加载 a.com 任何子域名的资源 https://a.com 允许加载 a.com 的 https 资源 https: 允许加载 https 资源 data: 允许加载 data: 协议，例如：base64编码的图片 ‘unsafe-inline‘ 允许加载 inline 资源，例如style属性、onclick、inline js、inline css等 ‘unsafe-eval‘ 允许加载动态 js 代码，例如 eval() X-Content-Type-Options # 约定资源的响应头，屏蔽内容嗅探攻击。\n应对漏洞：内容嗅探攻击\n网络请求中，每个资源都有自己的类型，比如Content-Type:text/html 、image/png、 text/css。但是有一些资源的类型是未定义或者定义错了，导致浏览器会猜测资源类型，尝试解析内容，从而给了脚本攻击可乘之机。比如利用一个图片资源去执行一个恶意脚本。 通过设置 X-Content-Type-Options: nosniff ，浏览器严格匹配资源类型，会拒绝加载错误或者不匹配的资源类型。（PS：排查问题过程中，网上看到一个人用流的方式从后台给前台传图片，大概代码\u0026lt;img src=\"xxxxx.xxxx.do\"\u0026gt; 由于后端未指定资源类型，导致增加该配置后无法显示图片） X-XSS-Protection # 开启浏览器XSS防护(原理不明，待研究.好像是浏览器自己有个filter，能过滤xss攻击脚本)。开启后不会影响业务，无特殊情况，建议开启。\n应对漏洞：XSS攻击\n配置参数：\nX-XSS-Protection: 0 关闭防护 X-XSS-Protection: 1 开启防护 X-XSS-Protection: 1; mode=block 开启防护 如果被攻击，阻止脚本执行。 nginx配置：add_header X-XSS-Protection \u0026quot;1; mode=block\u0026quot;; X-Frame-Options # 开个此属性，控制页面是否可以用于ifream中，如果使用，是什么范围。也可以通过这个控制来避免自己的资源页面被其他页面引用。\n应对漏洞：点击劫持\n攻击者会用一个自己网站，用ifream或者fream嵌套的方式引入目标网站，诱使用户点击。从而劫持用户点击事件。\n配置的三个参数：\ndeny 标识该页面不允许在frame中展示，即便在相同域名的页面中嵌套也不行。 sameorigin 可以在同域名的页面中frame中展示 allow-form url 指定的fream中展示。 nginx配置:add_header X-Frame-Options SAMEORIGIN; Strict-Transport-Security # 告诉浏览器只能通过https访问当前资源。\nnginx配置：add_header Strict-Transport-Security \u0026quot;max-age=63072000; includeSubdomains; preload\u0026quot;; 说明：在接下来的一年（即31536000秒）中，浏览器只要向xxx或其子域名发送HTTP请求时，必须采用HTTPS来发起连接。\nReferrer-Policy # 用来规定什么情况下显示referer字段，以及referer字段显示的内容多少。\n漏洞说明：\n当用户在浏览器上点击一个链接时，会产生一个 HTTP 请求，用于获取新的页面内容，而在该请求的报头中，会包含一个 Referrer，用以指定该请求是从哪个页面跳转页来的，常被用于分析用户来源等信息。但是也成为了一个不安全的因素，所以就有了 Referrer-Policy，用于过滤 Referrer 报头内容\n配置参数：no-referrer-when-downgrade：在同等安全等级下（例如https页面请求https地址），发送referer，但当请求方低于发送方（例如https页面请求http地址），不发送refererorigin：仅仅发送origin，即protocal+hostorigin-when-cross-origin：跨域时发送originsame-origin：当双方origin相同时发送strict-origin：当双方origin相同且安全等级相同时发送unfafe-url：任何情况下都显示完整的referernginx配置：add_header \u0026#039;Referrer-Policy\u0026#039; \u0026#039;origin\u0026#039;; X-Permitted-Cross-Domain-Policies # 一个针对flash的安全策略，用于指定当不能将\"crossdomain.xml\"文件（当需要从别的域名中的某个文件中读取 Flash 内容时用于进行必要设置的策略文件）放置在网站根目录等场合时采取的替代策略。配置参数：X-Permitted-Cross-Domain-Policies: master-onlymaster-only 只允许使用主策略文件（/crossdomain.xml）add_header X-Permitted-Cross-Domain-Policies none; X-Download-Options # 用于控制浏览器下载文件是否支持直接打开，如果支持直接打开，可能会有安全隐患。配置信息：X-Download-Options: noopennoopen 用于指定IE 8以上版本的用户不打开文件而直接保存文件。在下载对话框中不显示“打开”选项。nginx配置：add_header X-Download-Options noopen;","date":"2021年1212月2日","externalUrl":null,"permalink":"/3215.html","section":"Posts","summary":"","title":"Nginx版-HTTP响应头安全策略","type":"post"},{"content":" Nginx安全配置之请求头配置 # 隐藏版本号 # http { server_tokens off; } Header头设置 # 通过以下设置可有效防止XSS攻击\nadd_header X-Frame-Options \"SAMEORIGIN\"; add_header X-XSS-Protection \"1; mode=block\"; add_header X-Content-Type-Options \"nosniff\"; X-Frame-Options： 响应头表示是否允许浏览器加载frame等属性，有三个配置DENY禁止任何网页被嵌入,SAMEORIGIN只允许本网站的嵌套,ALLOW-FROM允许指定地址的嵌套\nX-XSS-Protection： 表示启用XSS过滤（禁用过滤为X-XSS-Protection: 0），mode=block表示若检查到XSS攻击则停止渲染页面\nX-Content-Type-Options： 响应头用来指定浏览器对未指定或错误指定Content-Type资源真正类型的猜测行为，nosniff 表示不允许任何猜测\n在通常的请求响应中，浏览器会根据Content-Type来分辨响应的类型，但当响应类型未指定或错误指定时，浏览会尝试启用MIME-sniffing来猜测资源的响应类型，这是非常危险的\n例如一个.jpg的图片文件被恶意嵌入了可执行的js代码，在开启资源类型猜测的情况下，浏览器将执行嵌入的js代码，可能会有意想不到的后果\n另外还有几个关于请求头的安全配置需要注意\nContent-Security-Policy： 定义页面可以加载哪些资源，\nadd_header Content-Security-Policy \"default-src \u0026#039;self\u0026#039;\"; 上边的配置会限制所有的外部资源，都只能从当前域名加载，其中default-src定义针对所有类型资源的默认加载策略，self允许来自相同来源的内容\nStrict-Transport-Security： 会告诉浏览器用HTTPS协议代替HTTP来访问目标站点\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\"; 上边的配置表示当用户第一次访问后，会返回一个包含了Strict-Transport-Security响应头的字段，这个字段会告诉浏览器，在接下来的31536000秒内，当前网站的所有请求都使用https协议访问，参数includeSubDomains是可选的，表示所有子域名也将采用同样的规则\nX-Frame-Options响应头 # X-Frame-Options HTTP 响应头是微软提出来的一个HTTP响应头，主要用来给浏览器指示允许一个页面可否在 , 或者 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持(ClickJacking{注1}) 的攻击。 使用X-Frame-Options有三个值\n# DENY # 表示该页面不允许在frame中展示,即使在相同域名的页面中嵌套也不允许 # SAMEORIGIN # 表示该页面可以在相同域名页面的frame中展示 # ALLOW-FROM url # 表示该页面可以在指定来源的frame中展示 注意： 如果设置为 DENY，不光在别人的网站 frame 嵌入时会无法加载，在同域名页面中同样会无法加载。另一方面，如果设置为SAMEORIGIN，那么页面就可以在同域名页面的 frame 中嵌套。 PS：目前发现这个HTTP响应头会带来的问题就是百度统计中的“热点追踪(页面点击图）”功能会失效，这也说明百度统计的“热点追踪(页面点击图）”使用的是 frame 嵌入引用网页的形式，这时候大家可以使用 X-Frame-Options 的ALLOW-FROM uri来指定百度统计域名为可 frame 嵌入域名即可。具体在Nginx里可以采用如下的方式添加响应头 配置案例\nadd_header X-Frame-Options:ALLOW-FROM https://tongji.baidu.com; add_header X-Frame-Options:SAMEORIGIN; X-Content-Type-Options响应头 # 解释：\n互联网上的资源有各种类型，通常浏览器会根据响应头的Content-Type字段来分辨它们的类型。例如：text/html代表html文档，image/png是PNG图片，text/css是CSS样式文档。然而，有些资源的Content-Type是错的或者未定义。这时，某些浏览器会启用MIME-sniffing来猜测该资源的类型，解析内容并执行。\n例如，我们即使给一个html文档指定Content-Type为text/plain，在IE8-中这个文档依然会被当做html来解析。利用浏览器的这个特性，攻击者甚至可以让原本应该解析为图片的请求被解析为JavaScript。在Nginx里通过下面这个响应头可以禁用浏览器的类型猜测行为：\n# X-Content-Type-Options HTTP 消息头相当于一个提示标志，被服务器用来提示客户端一定要遵循在 Content-Type 首部中对 MIME 类型 的设定， # 而不能对其进行修改。这就禁用了客户端的 MIME 类型嗅探行为，换句话说，也就是意味着网站管理员确定自己的设置没有问题。 # X-Content-Type-Options响应头的缺失使得目标URL更易遭受跨站脚本攻击。 # 如果服务器发送响应头 “X-Content-Type-Options: nosniff”，则 script 和 styleSheet # 元素会拒绝包含错误的 MIME 类型的响应。这是一种安全功能，有助于防止基于 MIME 类型混淆的攻击。 配置案例：\nadd_header X-Content-Type-Options: nosniff; X-Content-Security-Policy响应头 # # HTTP 响应头Content-Security-Policy允许站点管理者控制用户代理能够为指定的页面加载哪些资源。 # 除了少数例外情况，设置的政策主要涉及指定服务器的源和脚本结束点。 #Content-Security-Policy响应头的缺失使得目标URL更易遭受跨站脚本攻击。 配置案例\n# 要使用 CSP，只需要服务端输出类似这样的响应头就行了： Content-Security-Policy: default-src \u0026#039;self\u0026#039; # default-src 是 CSP 指令，多个指令之间用英文分号分割；\u0026#039;self\u0026#039; 是指令值，多个指令值用英文空格分割。目前，有这些 CSP 指令： StrictTransportSecurity响应头 # 配置案例：\n0：# 禁用XSS保护； 1：# 启用XSS保护； 1; # mode=block：启用XSS保护，并在检查到XSS攻击时，停止渲染页面（例如IE8中，检查到攻击时，整个页面会被一个#替换）； # HTTP X-XSS-Protection 响应头是 Internet Explorer，Chrome 和 Safari 的一个特性， # 当检测到跨站脚本攻击 (XSS)时，浏览器将停止加载页面。 # X-XSS-Protection响应头的缺失使得目标URL更易遭受跨站脚本攻击。 # 浏览器提供的XSS保护机制并不完美，但是开启后仍然可以提升攻击难度，总之没有特别的理由，不要关闭它。 X-XSS-Protection响应头 # 配置案例\n# add_header X-Xss-Protection: 1; # add_header X-Xss-Protection: mod=block; 配置案例\n#Google x-content-type-options: nosniff x-frame-options: SAMEORIGIN x-xss-protection: 1; mode=block #Twitter strict-transport-security: max-age=631138519 x-frame-options: SAMEORIGIN x-xss-protection: 1; mode=block #PayPal X-Frame-Options: SAMEORIGIN Strict-Transport-Security: max-age=14400 #Facebook 配置了详细的CSP,关闭了XSS保护 strict-transport-security: max-age=60 x-content-type-options: nosniff x-frame-options: DENY x-xss-protection: 0 content-security-policy: default-src *;script-src https://*.facebook.com http://*.facebook.com https://*.fbcdn.net http:// 配置案例：\nadd_header Access-Control-Allow-Origin *.com,*.zhix.com,*.abca.com; add_header Access-Control-Allow-Headers X-Requested-With; add_header Access-Control-Allow-Methods GET,POST,OPTIONS; #add_header X-Frame-Options sameorigin always; add_header \"X-XSS-Protection\" \"1; mode=block\"; add_header X-Content-Type-Options \"nosniff\"; add_header Content-Security-Policy \"default-src \u0026#039;self\u0026#039; elszxy.china.com *.ana.com *.zn.com \u0026#039;unsafe-inline\u0026#039; \u0026#039;unsafe-eval\u0026#039; blob: data: ;\"; valid_referers none blocked localhost abcna.com elina.com *.abna.com *.zhyun.com; if ($invalid_referer) { return 403; }","date":"2021年1212月1日","externalUrl":null,"permalink":"/3214.html","section":"Posts","summary":"","title":"Nginx安全配置之请求头配置","type":"post"},{"content":"","date":"2021年1212月1日","externalUrl":null,"permalink":"/categories/%E7%AD%89%E4%BF%9D%E6%B5%8B%E8%AF%84/","section":"Categories","summary":"","title":"等保测评","type":"categories"},{"content":"","date":"2021年88月25日","externalUrl":null,"permalink":"/categories/cloud-native/","section":"Categories","summary":"","title":"Cloud-Native","type":"categories"},{"content":"","date":"2021年88月25日","externalUrl":null,"permalink":"/tags/kubernetes/","section":"标签","summary":"","title":"Kubernetes","type":"tags"},{"content":"","date":"2021年88月25日","externalUrl":null,"permalink":"/categories/monitoring/","section":"Categories","summary":"","title":"Monitoring","type":"categories"},{"content":"","date":"2021年88月25日","externalUrl":null,"permalink":"/tags/prometheus/","section":"标签","summary":"","title":"Prometheus","type":"tags"},{"content":" 原文链接：https://kubesphere.com.cn/blogs/x509-certificate-exporter/\nKubeSphere 虽然提供了运维友好的向导式操作界面，简化了 Kubernetes 的运维操作，但它还是建立在底层 Kubernetes 之上的，Kubernetes 默认的证书有效期都是一年，即使使用 KubeKey 这样的集群安装利器也不能改变这个结果。如果不想办法对 Kubernetes 各个组件的证书有效期进行监控，说不定哪天就会掉进坑里。\n有部分读者可能听说过 ssl-exporter 这个项目，它能提供多种针对 SSL 的检测手段，包括：HTTPS 证书、文件证书、Kubernetes Secret、Kubeconfig 文件。从功能上来看，它基本可以满足上述需求，但它的指标还不够丰富，本文将介绍一个更为强大的 Prometheus Exporter：x509-certificate-exporter。\n与 ssl-exporter 不同，x509-certificate-exporter 只专注于监控 Kubernetes 集群相关的证书，包括各个组件的文件证书、Kubernetes TLS Secret、Kubeconfig 文件，而且指标更加丰富。我们来看看在 KubeSphere 中如何部署 x509-certificate-exporter 以监控集群的所有证书。\n准备 KubeSphere 应用模板 # KubeSphere 集成了 OpenPitrix 来提供应用程序全生命周期管理，OpenPitrix 是一个多云应用管理平台，KubeSphere 利用它实现了应用商店和应用模板，以可视化的方式部署并管理应用。对于应用商店中不存在的应用，用户可以将 Helm Chart 交付至 KubeSphere 的公共仓库，或者导入私有应用仓库来提供应用模板。\n本教程将使用 KubeSphere 的应用模板来部署 x509-certificate-exporter。\n要想从应用模板部署应用，需要创建一个企业空间、一个项目和两个用户帐户（ws-admin 和 project-regular）。ws-admin 必须被授予企业空间中的 workspace-admin 角色， project-regular 必须被授予项目中的 operator 角色。在创建之前，我们先来回顾一下 KubeSphere 的多租户架构。\n多租户架构 # KubeSphere 的多租户系统分三个层级，即集群、企业空间和项目。KubeSphere 中的项目等同于 Kubernetes 的命名空间。\n您需要创建一个新的企业空间进行操作，而不是使用系统企业空间，系统企业空间中运行着系统资源，绝大部分仅供查看。出于安全考虑，强烈建议给不同的租户授予不同的权限在企业空间中进行协作。\n您可以在一个 KubeSphere 集群中创建多个企业空间，每个企业空间下可以创建多个项目。KubeSphere 为每个级别默认设有多个内置角色。此外，您还可以创建拥有自定义权限的角色。KubeSphere 多层次结构适用于具有不同团队或组织以及每个团队中需要不同角色的企业用户。\n创建帐户 # 安装 KubeSphere 之后，您需要向平台添加具有不同角色的用户，以便他们可以针对自己授权的资源在不同的层级进行工作。一开始，系统默认只有一个帐户 admin，具有 platform-admin 角色。在本步骤中，您将创建一个帐户 user-manager，然后使用 user-manager 创建新帐户。\n以 admin 身份使用默认帐户和密码 (admin/P@88w0rd) 登录 Web 控制台。 出于安全考虑，强烈建议您在首次登录控制台时更改密码。若要更改密码，在右上角的下拉菜单中选择个人设置，在密码设置中设置新密码，您也可以在个人设置中修改控制台语言。\n登录控制台后，点击左上角的平台管理，然后选择访问控制。\n在帐户角色中，有如下所示四个可用的内置角色。接下来要创建的第一个帐户将被分配 users-manager 角色。\n内置角色 描述 workspaces-manager 企业空间管理员，管理平台所有企业空间。 users-manager 用户管理员，管理平台所有用户。 platform-regular 平台普通用户，在被邀请加入企业空间或集群之前没有任何资源操作权限。 platform-admin 平台管理员，可以管理平台内的所有资源。 在帐户管理中，点击创建。在弹出窗口中，提供所有必要信息（带有*标记），然后在角色字段选择 users-manager。请参考下图示例。\n完成后，点击确定。新创建的帐户将显示在帐户管理中的帐户列表中。\n切换帐户使用 user-manager 重新登录，创建如下三个新账户。\n帐户 角色 描述 ws-manager workspaces-manager 创建和管理所有企业空间。 ws-admin platform-regular 管理指定企业空间中的所有资源（此帐户用于邀请成员 project-regular 加入该企业空间）。 project-regular platform-regular 该帐户将用于在指定项目中创建工作负载、流水线和其他资源。 查看创建的三个帐户。\n创建企业空间 # 在本步骤中，您需要使用上一个步骤中创建的帐户 ws-manager 创建一个企业空间。作为管理项目、创建工作负载和组织成员的基本逻辑单元，企业空间是 KubeSphere 多租户系统的基础。\n以 ws-manager 身份登录 KubeSphere，它具有管理平台上所有企业空间的权限。点击左上角的平台管理，选择访问控制。在企业空间中，可以看到仅列出了一个默认企业空间 system-workspace，即系统企业空间，其中运行着与系统相关的组件和服务，您无法删除该企业空间。\n点击右侧的创建，将新企业空间命名为 demo-workspace，并将用户 ws-admin 设置为企业空间管理员，如下图所示：\n完成后，点击创建。\n登出控制台，然后以 ws-admin 身份重新登录。在企业空间设置中，选择企业成员，然后点击邀请成员。\n邀请 project-regular 进入企业空间，授予其 workspace-viewer 角色。\n实际角色名称的格式：\u0026lt;workspace name\u0026gt;-\u0026lt;role name\u0026gt;。例如，在名为 demo-workspace 的企业空间中，角色 viewer 的实际角色名称为 demo-workspace-viewer。\n将 project-regular 添加到企业空间后，点击确定。在企业成员中，您可以看到列出的两名成员。\n帐户 角色 描述 ws-admin workspace-admin 管理指定企业空间中的所有资源（在此示例中，此帐户用于邀请新成员加入企业空间、创建项目）。 project-regular workspace-viewer 该帐户将用于在指定项目中创建工作负载和其他资源。 创建项目 # 在此步骤中，您需要使用在上一步骤中创建的帐户 ws-admin 来创建项目。KubeSphere 中的项目与 Kubernetes 中的命名空间相同，为资源提供了虚拟隔离。有关更多信息，请参见命名空间。\n以 ws-admin 身份登录 KubeSphere，在项目管理中，点击创建。\n输入项目名称（例如 exporter），然后点击确定完成，您还可以为项目添加别名和描述。\n在项目管理中，点击刚创建的项目查看其详细信息。\n邀请 project-regular 至该项目，并授予该用户 operator 角色。请参考下图以了解具体步骤。\n具有 operator 角色的用户是项目维护者，可以管理项目中除用户和角色以外的资源。\n添加应用仓库 # 以 ws-admin 用户登录 KubeSphere 的 Web 控制台。在您的企业空间中，进入应用管理下的应用仓库页面，并点击添加仓库。\n在弹出的对话框中，将应用仓库名称设置为 enix，将应用仓库的 URL 设置为 https://charts.enix.io，点击验证对 URL 进行验证，再点击确定进入下一步。\n应用仓库导入成功后会显示在如下图所示的列表中。\n部署 x509-certificate-exporter # 导入 x509-certificate-exporter 的应用仓库后，就可以通过应用模板来部署 x509-certificate-exporter 了。\n登出 KubeSphere 并以 project-regular 用户重新登录。在您的项目中，进入应用负载下的应用页面，再点击部署新应用。\n在弹出的对话框中选择来自应用模板。\n在弹出的对话框中选择来自应用模板。\n来自应用商店：选择内置的应用和以 Helm Chart 形式单独上传的应用。\n来自应用模板：从私有应用仓库和企业空间应用池选择应用。\n从下拉列表中选择之前添加的私有应用仓库 enix。\n选择 x509-certificate-exporter 进行部署。\n您可以查看应用信息和配置文件，在版本下拉列表中选择版本，然后点击部署。\n设置应用名称，确认应用版本和部署位置，点击下一步。\n接下来进入应用配置页面。\n这里需要手动编辑配置清单，指定证书文件的路径。\ndaemonSets: master: nodeSelector: node-role.kubernetes.io/master: \u0026#39;\u0026#39; tolerations: - effect: NoSchedule key: node-role.kubernetes.io/master operator: Exists watchFiles: - /var/lib/kubelet/pki/kubelet-client-current.pem - /etc/kubernetes/pki/apiserver.crt - /etc/kubernetes/pki/apiserver-kubelet-client.crt - /etc/kubernetes/pki/ca.crt - /etc/kubernetes/pki/front-proxy-ca.crt - /etc/kubernetes/pki/front-proxy-client.crt watchKubeconfFiles: - /etc/kubernetes/admin.conf - /etc/kubernetes/controller-manager.conf - /etc/kubernetes/scheduler.conf nodes: tolerations: - effect: NoSchedule key: node-role.kubernetes.io/ingress operator: Exists watchFiles: - /var/lib/kubelet/pki/kubelet-client-current.pem - /etc/kubernetes/pki/ca.crt 该配置会创建两个 DaemonSet，master 运行在控制节点，nodes 运行在计算节点。\n$ kubectl -n exporter get ds NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE x509-x509-certificate-exporter-master 1 1 1 1 1 node-role.kubernetes.io/master= 3d14h x509-x509-certificate-exporter-nodes 3 3 3 3 3 \u0026lt;none\u0026gt; 3d14h 参数解释：\nwatchFiles : 证书文件所在的路径。 watchKubeconfFiles : Kubeconfig 文件所在的路径。 改完后的效果如图所示。\n点击部署，等待应用创建完成并开始运行。\n接入监控系统 # 通过应用模板部署完成后，除了会创建两个 DaemonSet 之外，还会创建一个 ServiceMonitor。\n$ kubectl -n exporter get servicemonitor NAME AGE x509-x509-certificate-exporter 3d15h 打开 Prometheus 的 Web UI，可以看到相应的 Targets 已经在线。\nx509-certificate-exporter 官方提供了一个 Grafana Dashboard，导入 Grafana 后的效果如图：\n各项指标一目了然，一般我们只需要关注已经过期的证书和即将过期的证书即可。假设我想查看证书还有多久失效，可以使用表达式 (x509_cert_not_after{filepath!=\u0026quot;\u0026quot;} - time()) / 3600 / 24。\n可以创建相应的告警规则，以便在证书即将过期时通知运维人员尽快更新证书。例如：\n进入监控告警下的告警策略页面，点击创建。\n填写告警名称，设置告警级别，点击下一步。\n选择自定义规则，告警规则填入 (x509_cert_not_after{filepath!=\u0026quot;\u0026quot;} - time()) / 3600 / 24 \u0026lt; 30。\n点击下一步，填写标题和消息。\n点击创建，告警规则就创建完成了。\n结语 # 事实上 KubeSphere 从 3.1 版本开始就内置了证书过期的告警策略，可以在告警策略页面的内置策略中输入 expir 进行搜索。\n点进去可以看到具体的告警规则表达式。\n告警规则表达式里面的指标是 API Server 组件自身暴露的指标，并没有兼顾到整个集群所有组件的证书。想要全面监控所有组件的证书，建议结合 x509-certificate-exporter 在 KubeSphere 中添加自定义告警策略，从此不再为证书过期而烦恼。\n","date":"2021年88月25日","externalUrl":null,"permalink":"/posts/x509-certificate-exporter/","section":"Posts","summary":"","title":"使用 x509-certificate-exporter 监控 Kubernetes 集群组件的证书","type":"posts"},{"content":"1.查看所有数据库及用户\nshow dbs show users 2.进入admin数据库\n#use db_name use admin 3.创建管理员账户\ndb.createUser({ user: \"admin\", pwd: \"password\", roles: [{ role: \"userAdminAnyDatabase\", db: \"admin\" }] }) mongodb中的用户是基于身份role的，该管理员账户的 role是 userAdminAnyDatabase。admin用户用于管理账号，不能进行关闭数据库等操作。\n4.创建超级管理员\ndb.createUser({user: \"root\",pwd: \"password\", roles: [ { role: \"root\", db: \"admin\" } ]}) #创建完admin管理员，创建一个超级管理员root。角色：root。root角色用于关闭数据库 db.shutdownServer() 5.删除用户\n删除用户必须由账号管理员来删，所以，切换到admin角色\nuse admin db.auth(\"admin\",\"password\") 删除单个用户\ndb.system.users.remove({user:\"XXXXXX\"}) 删除所有用户\ndb.system.users.remove({}) 6.索引管理\n#查看zxy_online库的user_online_info表的索引 function getCollectionIndexes(col){} ","date":"2021年55月11日","externalUrl":null,"permalink":"/3207.html","section":"Posts","summary":"","title":"MongoDB常用语法语句","type":"post"},{"content":"k8s新增node节点\u0026ndash;自用记录版\n#脚本使用前提条件：先建立node节点能够免密登录master 然后再新增的node节点执行脚本不同的环境安装路径自及更改路径后再执行 export masterIP=192.168.1.100 export nodeIP=192.168.1.200 export CLUSTER_CIDR=\"172.30.0.0/16\" yum install -y conntrack ipvsadm ipset jq sysstat curl iptables libseccomp systemctl stop firewalld systemctl disable firewalld systemctl stop iptables systemctl disable iptables swapoff -a sed -i \u0026#039;/ swap / s/^\\(.*\\)$/#\\1/g\u0026#039; /etc/fstab setenforce 0 modprobe br_netfilter modprobe ip_vs mkdir -p /app/k8s cd /app/k8s cat \u0026gt; kubernetes.conf \u0026lt;\u0026lt;EOF net.ipv4.ip_forward=1 vm.swappiness=0 vm.overcommit_memory=1 vm.panic_on_oom=0 fs.inotify.max_user_watches=89100 fs.file-max=52706963 fs.nr_open=52706963 net.ipv6.conf.all.disable_ipv6=1 net.netfilter.nf_conntrack_max=2310720 kernel.pid_max=1000000 net.ipv4.tcp_syncookies = 1 net.ipv4.tcp_tw_reuse = 1 net.ipv4.tcp_fin_timeout = 30 net.ipv4.conf.default.rp_filter = 0 net.ipv4.conf.all.rp_filter = 0 net.ipv4.conf.eth0.rp_filter = 0 net.ipv4.tcp_timestamps=0 net.ipv4.tcp_tw_recycle=0 net.ipv4.tcp_max_tw_buckets = 3000 kernel.sem=250 32000 200 128 EOF systemctl stop kubelet systemctl stop kube-proxy systemctl stop flanneld systemctl stop docker systemctl disable kubelet systemctl disable kube-proxy systemctl disable flanneld systemctl disable docker rm -rf /etc/sysctl.d/kubernetes.conf cp kubernetes.conf /etc/sysctl.d/kubernetes.conf sysctl -p /etc/sysctl.d/kubernetes.conf mount -t cgroup -o cpu,cpuacct none /sys/fs/cgroup/cpu,cpuacct rm -rf /etc/kubernetes mkdir -p /etc/kubernetes/cert scp root@${masterIP}:/etc/kubernetes/cert/ca*.pem /etc/kubernetes/cert/ scp root@${masterIP}:/etc/kubernetes/cert/ca-config.json /etc/kubernetes/cert scp root@${masterIP}:/usr/local/bin/kube* /usr/local/bin/ rm -rf ~/.kube mkdir -p ~/.kube scp root@${masterIP}:~/.kube/config ~/.kube/ scp root@${masterIP}:/usr/local/bin/{flanneld,mk-docker-opts.sh} /usr/local/bin/ rm -rf /etc/flanneld mkdir -p /etc/flanneld/cert scp root@${masterIP}:/etc/flanneld/cert/flanneld*.pem /etc/flanneld/cert export IFACE=eth0 export ETCD_ENDPOINTS=\"https://${masterIP}:2379\" export FLANNEL_ETCD_PREFIX=\"/kubernetes/network\" cat \u0026gt; flanneld.service \u0026lt;\u0026lt; EOF [Unit] Description=Flanneld overlay address etcd agent After=network.target After=network-online.target Wants=network-online.target After=etcd.service Before=docker.service [Service] Type=notify ExecStart=/usr/local/bin/flanneld \\\\ -etcd-cafile=/etc/kubernetes/cert/ca.pem \\\\ -etcd-certfile=/etc/flanneld/cert/flanneld.pem \\\\ -etcd-keyfile=/etc/flanneld/cert/flanneld-key.pem \\\\ -etcd-endpoints=${ETCD_ENDPOINTS} \\\\ -etcd-prefix=${FLANNEL_ETCD_PREFIX} \\\\ -iface=${IFACE} ExecStartPost=/usr/local/bin/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS -d /run/flannel/docker Restart=on-failure [Install] WantedBy=multi-user.target RequiredBy=docker.service EOF rm -rf /etc/systemd/system/flanneld.service cp flanneld.service /etc/systemd/system/ systemctl daemon-reload systemctl enable flanneld systemctl restart flanneld scp root@${masterIP}:/usr/local/bin/docker* /usr/local/bin/ scp root@${masterIP}:/usr/local/bin/runc /usr/local/bin/ scp root@${masterIP}:/usr/local/bin/containerd* /usr/local/bin/ scp root@${masterIP}:/etc/systemd/system/docker.service /etc/systemd/system/ rm -rf /etc/docker mkdir -p /etc/docker/ scp root@${masterIP}:/etc/docker/daemon.json /etc/docker/ systemctl daemon-reload systemctl enable docker systemctl restart docker export KUBE_APISERVER=\"https://${masterIP}:6443\" export node_name=\"kube-node2\" scp root@${masterIP}:/usr/local/bin/kube* /usr/local/bin/ cp /usr/local/bin/kube* /usr/sbin/ export BOOTSTRAP_TOKEN=$(kubeadm token create \\ --description kubelet-bootstrap-token \\ --groups system:bootstrappers:${node_name} \\ --kubeconfig ~/.kube/config) # 设置集群参数 kubectl config set-cluster kubernetes \\ --certificate-authority=/etc/kubernetes/cert/ca.pem \\ --embed-certs=true \\ --server=${KUBE_APISERVER} \\ --kubeconfig=kubelet-bootstrap-${node_name}.kubeconfig # 设置客户端认证参数 kubectl config set-credentials kubelet-bootstrap \\ --token=${BOOTSTRAP_TOKEN} \\ --kubeconfig=kubelet-bootstrap-${node_name}.kubeconfig # 设置上下文参数 kubectl config set-context default \\ --cluster=kubernetes \\ --user=kubelet-bootstrap \\ --kubeconfig=kubelet-bootstrap-${node_name}.kubeconfig kubectl config use-context default --kubeconfig=kubelet-bootstrap-${node_name}.kubeconfig kubeadm token list --kubeconfig ~/.kube/config rm -rf /etc/kubernetes/kubelet-bootstrap.kubeconfig cp kubelet-bootstrap-${node_name}.kubeconfig /etc/kubernetes/kubelet-bootstrap.kubeconfig cat \u0026gt; kubelet.config.json \u0026lt;\u0026lt;EOF { \"kind\": \"KubeletConfiguration\", \"apiVersion\": \"kubelet.config.k8s.io/v1beta1\", \"authentication\": { \"x509\": { \"clientCAFile\": \"/etc/kubernetes/cert/ca.pem\" }, \"webhook\": { \"enabled\": true, \"cacheTTL\": \"2m0s\" }, \"anonymous\": { \"enabled\": false } }, \"authorization\": { \"mode\": \"Webhook\", \"webhook\": { \"cacheAuthorizedTTL\": \"5m0s\", \"cacheUnauthorizedTTL\": \"30s\" } }, \"address\": \"${nodeIP}\", \"port\": 10250, \"readOnlyPort\": 0, \"cgroupDriver\": \"cgroupfs\", \"hairpinMode\": \"promiscuous-bridge\", \"serializeImagePulls\": false, \"featureGates\": { \"RotateKubeletClientCertificate\": true, \"RotateKubeletServerCertificate\": true }, \"clusterDomain\": \"cluster.local.\", \"clusterDNS\": [\"10.254.0.2\"] } EOF rm -rf /etc/kubernetes/kubelet.config.json cp kubelet.config.json /etc/kubernetes/ mkdir -p /var/lib/kubelet cat \u0026gt; kubelet.service \u0026lt;\u0026lt;EOF [Unit] Description=Kubernetes Kubelet Documentation=https://github.com/GoogleCloudPlatform/kubernetes After=docker.service Requires=docker.service [Service] WorkingDirectory=/var/lib/kubelet ExecStart=/usr/local/bin/kubelet \\\\ --bootstrap-kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig \\\\ --cert-dir=/etc/kubernetes/cert \\\\ --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \\\\ --config=/etc/kubernetes/kubelet.config.json \\\\ --hostname-override=${nodeIP} \\\\ --pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest \\\\ --alsologtostderr=true \\\\ --logtostderr=false \\\\ --log-dir=/app/log/kubernetes \\\\ --v=0 Restart=on-failure RestartSec=5 [Install] WantedBy=multi-user.target EOF rm -rf /etc/systemd/system/kubelet.service cp kubelet.service /etc/systemd/system/ mkdir -p /app/log/kubernetes systemctl daemon-reload systemctl enable kubelet systemctl restart kubelet sleep 10 kubectl get csr | awk \u0026#039;{print $1}\u0026#039; | grep -v \"NAME\"| xargs kubectl certificate approve scp root@${masterIP}:/etc/kubernetes/kube-proxy.kubeconfig /etc/kubernetes/ cat \u0026gt;kube-proxy.config.yaml \u0026lt;\u0026lt;EOF apiVersion: kubeproxy.config.k8s.io/v1alpha1 bindAddress: ${nodeIP} clientConnection: kubeconfig: /etc/kubernetes/kube-proxy.kubeconfig clusterCIDR: ${CLUSTER_CIDR} healthzBindAddress: ${nodeIP}:10256 hostnameOverride: ${nodeIP} kind: KubeProxyConfiguration metricsBindAddress: ${nodeIP}:10249 mode: \"ipvs\" EOF rm -rf /etc/kubernetes/kube-proxy.config.yaml cp kube-proxy.config.yaml /etc/kubernetes/ mkdir -p /var/lib/kube-proxy cat \u0026gt; kube-proxy.service \u0026lt;\u0026lt;EOF [Unit] Description=Kubernetes Kube-Proxy Server Documentation=https://github.com/GoogleCloudPlatform/kubernetes After=network.target [Service] WorkingDirectory=/var/lib/kube-proxy ExecStart=/usr/local/bin/kube-proxy \\\\ --config=/etc/kubernetes/kube-proxy.config.yaml \\\\ --alsologtostderr=true \\\\ --logtostderr=false \\\\ --log-dir=/app/log/kubernetes \\\\ --v=0 Restart=on-failure RestartSec=5 LimitNOFILE=65536 [Install] WantedBy=multi-user.target EOF rm -rf /etc/systemd/system/kube-proxy.service cp kube-proxy.service /etc/systemd/system/ mkdir -p /var/lib/kube-proxy mkdir -p /app/log/kubernetes systemctl daemon-reload systemctl enable kube-proxy systemctl restart kube-proxy","date":"2021年55月11日","externalUrl":null,"permalink":"/3204.html","section":"Posts","summary":"","title":"二进制部署的K8s集群新增加node节点教程","type":"post"},{"content":"1、安装nginx步骤省略\n2、添加下面的location配置到nginx.conf\nlocation /rabbitmq/api/ { rewrite ^ $request_uri; rewrite ^/rabbitmq/api/(.*) /api/$1 break; return 400; proxy_pass http://192.168.1.100:15672$uri; proxy_buffering off; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } location /rabbitmq/ { port_in_redirect on; proxy_redirect off; proxy_pass http://192.168.1.100:15672/; proxy_set_header X-Real-IP $remote_addr; proxy_set_header User-Agent $http_user_agent; proxy_set_header Host $http_host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; rewrite ^/rabbitmq/(.*)$ /$1 break; } 重启nginx即可\nnginx -s reload","date":"2021年55月11日","externalUrl":null,"permalink":"/3203.html","section":"Posts","summary":"","title":"Nginx反向代理RabbitMQ","type":"post"},{"content":"CentOS 7开机出现\nwelcome to emergency mode! 解决方法\n表现为开机出现以下现象\n大意为：进入紧急mode，输入root密码后再输入journalctl -xb查看日志后再重启系统\n日志如下\n排查是因为我之前在/etc/fstab写入挂载分区，但开机有没有挂载成功导致的。\n我的错误原因是挂载磁盘的文件系统格式写错了，导致挂载失败，因此系统启动就到此页面了！ 处理办法：自动挂载的那个fstab文件有问题，你\n在这个界面直接输入密码，然后把你增加的删除，重启就OK\n1：登陆root 乱码也输入密码\n2： vim /etc/fstab ，检查磁盘挂载信息\n3：注释掉自己增加的内容，如果确定不在使用可以删除\n4：重启OK。\n报这个错误多数情况下是因为/etc/fstab文件的错误。注意一下是不是加载了外部硬盘、存储器或者是网络共享空间，在重启时没有加载上导致的。\n","date":"2021年33月14日","externalUrl":null,"permalink":"/3198.html","section":"Posts","summary":"","title":"Welcome to emergency mode! 解决方法","type":"post"},{"content":" 【基本信息】\n书名:开源容器云OpenShift构建基于Kubernetes的企业应用云平台\n作者: 陈耿\n出版社: 机械工业出版社\n副标题: 构建基于Kubernetes的企业应用云平台\n出版年: 2017-6-1\n页数: 253\n定价: 69.00元\n装帧: 平装\nISBN: 9787111569510\n所属分类:图书\u0026gt;计算机/网络\u0026gt;程序设计\u0026gt;其他\n【作者简介】\n陈耿，Red Hat高级技术顾问，认证架构师。Red Hat中国OpenShift团队的技术专家。专注于PaaS及DevOps领域相关工作。从2001年接触Linux起便是开源社区的忠实粉丝。陈耿的爱好是旅游和摄影，他的背包和摄像机已经陪伴他走过超过20个国家和地区。\n【内容简介】\n本书介绍的OpenShift是基于Docker和Kubernetes构建的开源的容器云，是为帮助企业、组织搭建及管理基于容器的应用平台产生的解决方案。通过OpenShift，企业可以快速地搭建稳定、安全、高效的容器应用平台。本书深入浅出地介绍如何搭建OpenShift容器云平台，并在这个平台上进行应用的开发和部署。探讨在OpenShift上如何满足软件研发常见的需求，如持续集成和交付，微服务化、数据持久化等。同时，探讨OpenShift的软件定义网络、高可用、配额控制等与运维息息相关的话题。\n【编辑推荐】\n适读人群 ：null\nRed Hat官方技术专家出品，来自中国的OpenShift社区专著\n社区心作，诚意推荐！\n【目录】\n序言\n前言\n致谢\n基础篇\n第1章　开源容器云概述 2\n1.1　容器时代的IT 2\n1.2　开源容器云 3\n1.3　OpenShift 4\n1.4　Docker、Kubernetes与OpenShift 6\n1.4.1　容器引擎 6\n1.4.2　容器编排 6\n1.4.3　容器应用云 7\n1.5　OpenShift社区版与企业版 8\n第2章　初探OpenShift容器云 10\n2.1　启动OpenShift Origin 10\n2.1.1　准备主机 11\n2.1.2　准备操作系统 11\n2.1.3　操作系统配置 11\n2.1.4　安装Docker 12\n2.1.5　下载OpenShift Origin安装包 13\n2.1.6　安装及启动OpenShift Origin 13\n2.1.7　登录OpenShift Origin控制台 14\n2.2　运行第一个容器应用 14\n2.2.1　创建项目 14\n2.2.2　部署Docker镜像 15\n2.2.3　访问容器应用 18\n2.2.4　一些疑问 19\n2.3　完善OpenShift集群 19\n2.3.1　命令行工具 19\n2.3.2　以集群管理员登录 21\n2.3.3　添加Router 22\n2.3.4　添加Registry 23\n2.3.5　添加Image Stream 24\n2.3.6　添加Template 25\n2.4　部署应用 27\n2.5　本章小结 32\n第3章　OpenShift架构探秘 33\n3.1　架构概览 33\n3.1.1　基础架构层 34\n3.1.2　容器引擎层 34\n3.1.3　容器编排层 34\n3.1.4　PaaS服务层 35\n3.1.5　界面及工具层 35\n3.2　核心组件详解 35\n3.2.1　Master节点 36\n3.2.2　Node节点 37\n3.2.3　Project与Namespace 38\n3.2.4　Pod 38\n3.2.5　Service 40\n3.2.6　Router与Route 41\n3.2.7　Persistent Storage 42\n3.2.8　Registry 42\n3.2.9　Source to Image 43\n3.2.10　开发及管理工具集 44\n3.3　核心流程详解 44\n3.3.1　应用构建 44\n3.3.2　应用部署 45\n3.3.3　请求处理 45\n3.3.4　应用更新 46\n3.4　本章小结 46\n第4章　OpenShift企业部署 47\n4.1　部署架构 47\n4.1.1　多环境单集群 47\n4.1.2　多环境多集群 48\n4.1.3　多个数据中心 48\n4.2　高级安装模式 49\n4.2.1　主机准备 50\n4.2.2　安装前预配置 50\n4.2.3　执行安装 53\n4.2.4　安装后配置 54\n4.3　离线安装 57\n4.4　集群高可用 58\n4.4.1　主控节点的高可用 58\n4.4.2　计算节点的高可用 59\n4.4.3　组件的高可用 59\n4.4.4　应用的高可用 60\n4.5　本章小结 60\n开发篇\n第5章容器应用的构建与部署自动化 62\n5.1　一个Java应用的容器化之旅 62\n5.2　OpenShift构建与部署自动化 64\n5.2.1　快速构建部署一个应用 65\n5.2.2镜像构建：Build Config与Build 69\n5.2.3镜像部署：Deployment Config与Deploy 72\n5.2.4　服务连通：Service与Route 76\n5.3　弹性伸缩 77\n5.3.1　Replication Controller 77\n5.3.2　扩展容器实例 77\n5.3.3　状态自恢复 78\n5.4　应用更新发布 78\n5.4.1　触发更新构建 78\n5.4.2　更新部署 80\n5.5　本章小结 80\n第6章　持续集成与部署 81\n6.1　部署Jenkins服务 81\n6.2　触发项目构建 83\n6.2.1　创建Jenkins项目 84\n6.2.2　添加构建步骤 84\n6.2.3　触发构建 85\n6.3　构建部署流水线 85\n6.3.1　创建开发测试环境项目 85\n6.3.2　创建集成测试环境项目 86\n6.3.3　创建生产环境项目 87\n6.3.4　配置访问权限 87\n6.3.5　创建集成测试环境部署配置 87\n6.3.6　创建生产环境部署配置 88\n6.3.7　创建DEV构建配置 88\n6.3.8　创建SIT构建配置 89\n6.3.9　创建RELEASE构建配置 90\n6.3.10　配置流水线 92\n6.4　流水线可视化 93\n6.4.1　安装流水线插件 93\n6.4.2　创建流水线视图 93\n6.5　OpenShift流水线 95\n6.5.1　部署Jenkins实例 95\n6.5.2　部署示例应用 95\n6.5.3　查看流水线定义 96\n6.5.4　触发流水线构建 97\n6.5.5　修改流水线配置 99\n6.6　本章小结 100\n第7章　应用的微服务化 101\n7.1　容器与微服务 101\n7.1.1　微服务概述 101\n7.1.2　微服务与容器 101\n7.2　微服务容器化 102\n7.2.1基于现有的构建系统容器化微服务 103\n7.2.2　基于S2I容器化微服务 103\n7.3　服务部署 105\n7.3.1　单个微服务的部署 105\n7.3.2　多个微服务的部署 105\n7.4　服务发现 106\n7.4.1　通过Service进行服务发现 107\n7.4.2　服务目录与链接 108\n7.5　健康检查 108\n7.5.1　Readniess与Liveness 108\n7.5.2　健康检查类型 109\n7.6　更新发布 110\n7.6.1　滚动更新 110\n7.6.2　发布回滚 112\n7.6.3　灰度发布 112\n7.7　服务治理 117\n7.7.1　API网关 117\n7.7.2　微服务框架 117\n7.8　本章小结 118\n第8章　应用数据持久化 119\n8.1　无状态应用与有状态应用 119\n8.1.1　非持久化的容器 119\n8.1.2　容器数据持久化 120\n8.2　持久化卷与持久化卷请求 120\n8.3　持久化卷与储存 123\n8.3.1　Host Path 124\n8.3.2　NFS 124\n8.3.3　GlusterFS 124\n8.3.4　Ceph 125\n8.3.5　OpenStack Cinder 126\n8.4　存储资源定向匹配 127\n8.4.1　创建持久化卷 127\n8.4.2　标记标签 127\n8.4.3　创建持久化卷请求 127\n8.4.4　请求与资源定向匹配 128\n8.4.5　\u0026hellip;\u0026hellip;\n","date":"2021年33月14日","externalUrl":null,"permalink":"/3196.html","section":"Posts","summary":"","title":"开源容器云OpenShift构建基于Kubernetes的企业应用云平台-PDF电子书","type":"post"},{"content":"","date":"2021年33月5日","externalUrl":null,"permalink":"/categories/mysql/","section":"Categories","summary":"","title":"Mysql","type":"categories"},{"content":" 查看mysql数据库容量大小 # 第一种情况：查询所有数据库的总大小，方法如下：\nmysql\u003e use information_schema; mysql\u003e select concat(round(sum(DATA_LENGTH/1024/1024),2),'MB') as data from TABLES; +-----------+ | data | +-----------+ | 3052.76MB | +-----------+ 1 row in set (0.02 sec) 统计一下所有库数据量\n每张表数据量=AVG_ROW_LENGTH*TABLE_ROWS+INDEX_LENGTH SELECT SUM(AVG_ROW_LENGTH*TABLE_ROWS+INDEX_LENGTH)/1024/1024 AS total_mb FROM information_schema.TABLES 统计每个库大小：\nSELECT table_schema,SUM(AVG_ROW_LENGTH*TABLE_ROWS+INDEX_LENGTH)/1024/1024 AS total_mb FROM information_schema.TABLES group by table_schema; 第二种情况：查看指定数据库的大小，比如说：数据库test，方法如下：\nmysql\u003e use information_schema; mysql\u003e select concat(round(sum(DATA_LENGTH/1024/1024),2),'MB') as data from TABLES where table_schema='test'; +----------+ | data | +----------+ | 142.84MB | +----------+ 1 row in set (0.00 sec) 1.查看所有数据库各容量大小\nselect table_schema as '数据库', sum(table_rows) as '记录数', sum(truncate(data_length/1024/1024, 2)) as '数据容量(MB)', sum(truncate(index_length/1024/1024, 2)) as '索引容量(MB)' from information_schema.tables group by table_schema order by sum(data_length) desc, sum(index_length) desc; 2.查看所有数据库各表容量大小\nselect table_schema as '数据库', table_name as '表名', table_rows as '记录数', truncate(data_length/1024/1024, 2) as '数据容量(MB)', truncate(index_length/1024/1024, 2) as '索引容量(MB)' from information_schema.tables order by data_length desc, index_length desc; 3.查看指定数据库容量大小\n例：查看mysql库容量大小\nselect table_schema as '数据库', sum(table_rows) as '记录数', sum(truncate(data_length/1024/1024, 2)) as '数据容量(MB)', sum(truncate(index_length/1024/1024, 2)) as '索引容量(MB)' from information_schema.tables where table_schema='mysql';　4.查看指定数据库各表容量大小\n例：查看mysql库各表容量大小\nselect table_schema as '数据库', table_name as '表名', table_rows as '记录数', truncate(data_length/1024/1024, 2) as '数据容量(MB)', truncate(index_length/1024/1024, 2) as '索引容量(MB)' from information_schema.tables where table_schema='mysql' order by data_length desc, index_length desc;","date":"2021年33月5日","externalUrl":null,"permalink":"/3188.html","section":"Posts","summary":"","title":"查看mysql数据库容量大小","type":"post"},{"content":" elasticsearch配置文件参数简单说明 # cluster.name: elasticsearch 配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。 node.name: \"Franz Kafka\" 节点名，默认随机指定一个name列表中名字，该列表在es的jar包中config文件夹里name.txt文件中，其中有很多作者添加的有趣名字。 node.master: true 指定该节点是否有资格被选举成为node，默认是true，es是默认集群中的第一台机器为master，如果这台机挂了就会重新选举master。 node.data: true 指定该节点是否存储索引数据，默认为true。 index.number_of_shards: 5 设置默认索引分片个数，默认为5片。 index.number_of_replicas: 1 设置默认索引副本个数，默认为1个副本。 path.conf: /path/to/conf 设置配置文件的存储路径，默认是es根目录下的config文件夹。 path.data: /path/to/data 设置索引数据的存储路径，默认是es根目录下的data文件夹，可以设置多个存储路径，用逗号隔开，例： path.data: /path/to/data1,/path/to/data2 path.work: /path/to/work 设置临时文件的存储路径，默认是es根目录下的work文件夹。 path.logs: /path/to/logs 设置日志文件的存储路径，默认是es根目录下的logs文件夹 path.plugins: /path/to/plugins 设置插件的存放路径，默认是es根目录下的plugins文件夹 bootstrap.mlockall: true 设置为true来锁住内存。因为当jvm开始swapping时es的效率会降低，所以要保证它不swap，可以把ES_MIN_MEM和 ES_MAX_MEM两个环境变量设置成同一个值，并且保证机器有足够的内存分配给es。同时也要允许elasticsearch的进程可以锁住内存，linux下可以通过`ulimit -l unlimited`命令。 network.bind_host: 192.168.0.1 设置绑定的ip地址，可以是ipv4或ipv6的，默认为0.0.0.0。 network.publish_host: 192.168.0.1 设置其它节点和该节点交互的ip地址，如果不设置它会自动判断，值必须是个真实的ip地址。 network.host: 192.168.0.1 这个参数是用来同时设置bind_host和publish_host上面两个参数。 transport.tcp.port: 9300 设置节点间交互的tcp端口，默认是9300。 transport.tcp.compress: true 设置是否压缩tcp传输时的数据，默认为false，不压缩。 http.port: 9200 设置对外服务的http端口，默认为9200。 http.max_content_length: 100mb 设置内容的最大容量，默认100mb http.enabled: false 是否使用http协议对外提供服务，默认为true，开启。 gateway.type: local gateway的类型，默认为local即为本地文件系统，可以设置为本地文件系统，分布式文件系统，Hadoop的HDFS，和amazon的s3服务器。 gateway.recover_after_nodes: 1 设置集群中N个节点启动时进行数据恢复，默认为1。 gateway.recover_after_time: 5m 设置初始化数据恢复进程的超时时间，默认是5分钟。 gateway.expected_nodes: 2 设置这个集群中节点的数量，默认为2，一旦这N个节点启动，就会立即进行数据恢复。 cluster.routing.allocation.node_initial_primaries_recoveries: 4 初始化数据恢复时，并发恢复线程的个数，默认为4。 cluster.routing.allocation.node_concurrent_recoveries: 2 添加删除节点或负载均衡时并发恢复线程的个数，默认为4。 indices.recovery.max_size_per_sec: 0 设置数据恢复时限制的带宽，如入100mb，默认为0，即无限制。 indices.recovery.concurrent_streams: 5 设置这个参数来限制从其它分片恢复数据时最大同时打开并发流的个数，默认为5。 discovery.zen.minimum_master_nodes: 1 设置这个参数来保证集群中的节点可以知道其它N个有master资格的节点。默认为1，对于大的集群来说，可以设置大一点的值（2-4） discovery.zen.ping.timeout: 3s 设置集群中自动发现其它节点时ping连接超时时间，默认为3秒，对于比较差的网络环境可以高点的值来防止自动发现时出错。 discovery.zen.ping.multicast.enabled: false 设置是否打开多播发现节点，默认是true。 discovery.zen.ping.unicast.hosts: [\"host1\", \"host2:port\", \"host3[portX-portY]\"] 设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点。 下面是一些查询时的慢日志参数设置 index.search.slowlog.level: TRACE index.search.slowlog.threshold.query.warn: 10s index.search.slowlog.threshold.query.info: 5s index.search.slowlog.threshold.query.debug: 2s index.search.slowlog.threshold.query.trace: 500ms index.search.slowlog.threshold.fetch.warn: 1s index.search.slowlog.threshold.fetch.info: 800ms index.search.slowlog.threshold.fetch.debug:500ms index.search.slowlog.threshold.fetch.trace: 200ms","date":"2021年22月4日","externalUrl":null,"permalink":"/3184.html","section":"Posts","summary":"","title":"elasticsearch配置文件参数简单说明","type":"post"},{"content":"","date":"2021年22月4日","externalUrl":null,"permalink":"/categories/elkstack/","section":"Categories","summary":"","title":"ELKstack","type":"categories"},{"content":" 点击上方“民工哥技术之路”，选择“设为星标” 回复“1024”获取独家整理的学习资料！ 2021年1月15日，JumpServer开源堡垒机发现一处远程执行漏洞，需要用户尽快进行修复，尤其是可通过公网访问的JumpServer堡垒机用户建议尽快进行修复。 影响版本如下：\nJumpServer堡垒机＜v2.6.2版本 JumpServer堡垒机＜v2.5.4版本 JumpServer堡垒机＜v2.4.5版本 安全版本如下：\nJumpServer堡垒机＞=v2.6.2版本 JumpServer堡垒机＞=v2.5.4版本 JumpServer堡垒机＞=v2.4.5版本 修复方案\n建议JumpServer堡垒机（含社区版及企业版）用户升级至安全版本。 临时修复方案 修改Nginx配置文件，以屏蔽漏洞接口 ： /api/v1/authentication/connection-token/\u0026lt;br\u003e/api/v1/users/connection-token/\u0026lt;br\u003e Nginx配置文件位置如下： 社区老版本\u0026lt;br\u003e/etc/nginx/conf.d/jumpserver.conf\u0026lt;br\u003e\u0026lt;span style=\"color: #57A64A;font-style: italic;line-height: 26px;\"\u003e# 企业老版本\u0026lt;/span\u003e\u0026lt;br\u003ejumpserver-release/nginx/http_server.conf\u0026lt;br\u003e\u0026lt;span style=\"color: #57A64A;font-style: italic;line-height: 26px;\"\u003e# 新版本在 \u0026lt;/span\u003e\u0026lt;br\u003ejumpserver-release/compose/config_static/http_server.conf\u0026lt;br\u003e Nginx配置文件实例为： \u0026lt;span style=\"color: #57A64A;font-style: italic;line-height: 26px;\"\u003e#保证在 /api 之前 和 / 之前\u0026lt;/span\u003e\u0026lt;br\u003elocation /api/v1/authentication/connection-token/ {\u0026lt;br\u003e \u0026lt;span style=\"color: #4EC9B0;line-height: 26px;\"\u003ereturn\u0026lt;/span\u003e 403;\u0026lt;br\u003e}\u0026lt;br\u003e \u0026lt;br\u003elocation /api/v1/users/connection-token/ {\u0026lt;br\u003e \u0026lt;span style=\"color: #4EC9B0;line-height: 26px;\"\u003ereturn\u0026lt;/span\u003e 403;\u0026lt;br\u003e}\u0026lt;br\u003e\u0026lt;span style=\"color: #57A64A;font-style: italic;line-height: 26px;\"\u003e#新增以上这些\u0026lt;/span\u003e\u0026lt;br\u003e \u0026lt;br\u003elocation /api/ {\u0026lt;br\u003e proxy_set_header X-Real-IP \u0026lt;span style=\"color: #BD63C5;line-height: 26px;\"\u003e$remote_addr\u0026lt;/span\u003e;\u0026lt;br\u003e proxy_set_header Host \u0026lt;span style=\"color: #BD63C5;line-height: 26px;\"\u003e$host\u0026lt;/span\u003e;\u0026lt;br\u003e proxy_set_header X-Forwarded-For \u0026lt;span style=\"color: #BD63C5;line-height: 26px;\"\u003e$proxy_add_x_forwarded_for\u0026lt;/span\u003e;\u0026lt;br\u003e proxy_pass http://core:8080;\u0026lt;br\u003e } \u0026lt;br\u003e...\u0026lt;br\u003e 修改配置文件完毕后，重启Nginx服务即可。 来源：JumpServer开源堡垒机 https://blog.fit2cloud.com/?p=1761 推荐阅读 点击标题可跳转\n996 违法？？？真相是这样的。。 微信出硬件了！或于春节上线 淦！又是美团。。。。这次吃相很难看！ 全球最大色情网站宣布：封杀特朗普 分布式存储 GlusterFS 介绍与部署 红旗 Linux 桌面操作系统 11 来了 Redis 6.0 集群搭建实践 华为悄悄推出\"应用市场\"，免费、无广告，贼好用！ ","date":"2021年11月16日","externalUrl":null,"permalink":"/3171.html","section":"Posts","summary":"","title":"重要通知｜JumpServer漏洞通知及修复方案","type":"post"},{"content":"脚本功能：\n输入要查找的关键词内容及路径。批量查找处理，并打印结果文件路径\n#!/bin/bash # @Author: Hanwei # @Email: han_wei_95@163.com # @WebSite: www.kubehan.cn # @Description： # @Date: 2020-11-19 10:56:10 # @Last Modified by: Mr.Han # @Last Modified time: 2020-11-20 16:39:23 echo -e \"\\nThis is a script to find all the files in a specified path contains a keyword!\" echo -e \"\\nPlease input a keyword:\" read key if [ \"$key\" == \"\" ]; then echo -e \"keyword can not be null!\\n\" exit 0 fi keyword=$key echo -e \"\\nPlease input your specified path:\" read dir #判断该路径是否存在，并且是目录，不存在输出提示 test ! -d $dir \u0026\u0026 echo -e \"The $dir is not exist in your system.\\n\\n\" \u0026\u0026 exit 0 echo -e \"\\n---------------You find files are:---------------\\n\" #keyword=JAVA_OPTS #dir=/jboss/jboss-eap-4.3/jboss-as/ #统计文件个数 file_count=0 #递归查看所有目录，即最深路径，不显示空行 file_list=`ls -R $dir 2\u0026gt; /dev/null | grep -v \u0026#039;^$\u0026#039;` for file_name in $file_list do #临时文件变量temp，将ls -R即file_list中的文件名中所有匹配:后接一个或多个任意字符（.代表任意字符，*代表0个或多个$代表行尾结束符）全局替换为无 #简单的说，就是把file_name变量中的匹配：的行，将：后内容替换为空 temp=`echo $file_name | sed \u0026#039;s/:.*$//g\u0026#039;` #如果临时文件变量temp是一个目录，而非文件，就将该目录赋值给cur_dir变量 if [ \"$file_name\" != \"$temp\" ]; then cur_dir=$temp #echo \"-\"$cur_dir #临时显示，调试用 else #用file命令查看文件真身是否为ASCII text类型 file_type=`file $cur_dir/$file_name | grep \"text\"` if [ \"$file_type\" != \"\" ]; then temp=`grep $keyword $cur_dir/$file_name 2\u0026gt; /dev/null` #echo \"--\"$cur_dir/$file_name #临时显示，调试用 if [ \"$temp\" != \"\" ]; then echo $cur_dir/$file_name #文件个数加1 let file_count++ fi fi fi done echo -e \"\\n-------------------------------------------------\" echo -e \"\\n\\nFiles Total: $file_count\" ","date":"2021年11月15日","externalUrl":null,"permalink":"/3168.html","section":"Posts","summary":"","title":"指定路径，查找指定关键词 shell脚本","type":"post"},{"content":"批量导出k8s集群pod运行的镜像脚本\nkubectl get pods --all-namespaces -o jsonpath=\"{..image}\" |tr -s \u0026#039;[[:space:]]\u0026#039; \u0026#039;\\n\u0026#039; |sort |uniq \u0026gt; images.txt awk \u0026#039;{print $1 }\u0026#039; images.txt \u0026gt; images_cut.txt sed -i \u0026#039;1d\u0026#039; images_cut.txt while read LINE do docker save $LINE \u0026gt;${LINE//\\//_}.tar echo ok done \u0026lt; images_cut.txt echo finish 直接执行脚本就可以导出镜像\n","date":"2021年11月15日","externalUrl":null,"permalink":"/3167.html","section":"Posts","summary":"","title":"批量导出k8s集群pod运行的镜像脚本","type":"post"},{"content":"等待metrics-server的pod完全启动后，使用 kubectl top 命令，报错如下：\nkubectl top 报错\n通过 kubectl logs 查看 pod 中应用日志报错如下：\nmetrics-server 应用报错\n根据报错信息初步看是 Pod 中 DNS 无法解析出节点 k8s-master 、k8s-node1、k8s-node2 的 IP，修改其 yaml 文件，让 Pod 通过 IP 直接访问，而不是通过主机名\n使用IP通信 修改 yaml 后，测试仍然异常： 再次修改 yaml 文件，忽略证书校验步骤，已确保 https 调用成功\n添加 kubelet-insecure-tls\n再次测试，可正常使用 kubectl top\n【总结】 从 github 上拉下来的 yaml 需要先修改3个部分再进行应用，镜像源 kubelet通信方式 以及 证书校验配置【以下贴出部分yaml作为参考】。 containers: - name: metrics-serve image: lizhenliang/metrics-server:v0.3.7 imagePullPolicy: IfNotPresent args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-preferred-address-types=InternalIP - --kubelet-insecure-tls","date":"2020年1212月31日","externalUrl":null,"permalink":"/3136.html","section":"Posts","summary":"","title":"部署 metrics-server 后无法使用 top 命令","type":"post"},{"content":"[root@Learndb backup_mariadb]# cat dbname ask-bar assets canvas cloud-center course-study course-ware custom dashboard #!/bin/bash -x user=root userPWD=\u0026#039;dreamtec20\u0026#039; mysqlPort=3306 host=192.168.1.1 mysqlHome=/app/mariadb mysqlBinDir=$mysqlHome/bin DATE=`date +%Y%m%d` month=`date +%y%m` bakDir=/app/backup_mariadb/${DATE}/Full-Backup/ mkdir -p $bakDir cd $bakDir DumpFile=$DATE.sql for i in $(cat /app/backup_mariadb/dbname) do $mysqlBinDir/mysqldump --default-character-set=utf8 -u$user -p$userPWD -P$mysqlPort -h$host --quick -B -R $i \u0026gt; Full-$i.sql --single-transaction tar cvzf $i.tar.gz Full-$i.sql --remove-files done $mysqlBinDir/mysql -u$user -h${host} -p$userPWD -P$mysqlPort otter -e \"truncate log_record;\" find ${bakDir} -maxdepth 1 -type d -mtime +10 -exec rm -rf {} \\; ","date":"2020年1212月27日","externalUrl":null,"permalink":"/3135.html","section":"Posts","summary":"","title":"Mysql数据库备份脚本","type":"post"},{"content":" ","date":"2020年1212月25日","externalUrl":null,"permalink":"/3132.html","section":"Posts","summary":"","title":"ECS运维指南之Linux系统诊断","type":"post"},{"content":"","date":"2020年1212月25日","externalUrl":null,"permalink":"/categories/%E4%BC%98%E5%8C%96%E4%B9%8B%E8%B7%AF/","section":"Categories","summary":"","title":"优化之路","type":"categories"},{"content":"","date":"2020年1212月25日","externalUrl":null,"permalink":"/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/","section":"Categories","summary":"","title":"云原生","type":"categories"},{"content":"","date":"2020年1212月25日","externalUrl":null,"permalink":"/categories/%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD/","section":"Categories","summary":"","title":"资源下载","type":"categories"},{"content":" ","date":"2020年1212月25日","externalUrl":null,"permalink":"/3128.html","section":"Posts","summary":"","title":"Ansible快速入门技术原理与实战---PDF电子书","type":"post"},{"content":" ","date":"2020年1212月25日","externalUrl":null,"permalink":"/3123.html","section":"Posts","summary":"","title":"Redis实战---电子书PDF","type":"post"},{"content":" 使用 GitLab 实现 CI/CD # GitLab CI/CD 是一个内置在GitLab中的工具，用于通过持续方法进行软件开发：\nContinuous Integration (CI) 持续集成\nContinuous Delivery (CD) 持续交付\nContinuous Deployment (CD) 持续部署\n持续集成的工作原理是将小的代码块推送到Git仓库中托管的应用程序代码库中，并且每次推送时，都要运行一系列脚本来构建、测试和验证代码更改，然后再将其合并到主分支中。\n持续交付和部署相当于更进一步的CI，可以在每次推送到仓库默认分支的同时将应用程序部署到生产环境。\n这些方法使得可以在开发周期的早期发现bugs和errors，从而确保部署到生产环境的所有代码都符合为应用程序建立的代码标准。\nGitLab CI/CD 由一个名为 .gitlab-ci.yml 的文件进行配置，改文件位于仓库的根目录下。文件中指定的脚本由GitLab Runner执行。\nGitLab CI/CD 介绍\n软件开发的持续方法基于自动执行脚本，以最大程度地减少在开发应用程序时引入错误的机会。从开发新代码到部署新代码，他们几乎不需要人工干预，甚至根本不需要干预。\n它涉及到在每次小的迭代中就不断地构建、测试和部署代码更改，从而减少了基于已经存在bug或失败的先前版本开发新代码的机会。\nContinuous Integration（持续集成）\n假设一个应用程序，其代码存储在GitLab的Git仓库中。开发人员每天都要多次推送代码更改。对于每次向仓库的推送，你都可以创建一组脚本来自动构建和测试你的应用程序，从而减少了向应用程序引入错误的机会。这种做法称为持续集成，对于提交给应用程序（甚至是开发分支）的每项更改，它都会自动连续进行构建和测试，以确保所引入的更改通过你为应用程序建立的所有测试，准则和代码合规性标准。\nContinuous Delivery（持续交付）\n持续交付是超越持续集成的更进一步的操作。应用程序不仅会在推送到代码库的每次代码更改时进行构建和测试，而且，尽管部署是手动触发的，但作为一个附加步骤，它也可以连续部署。此方法可确保自动检查代码，但需要人工干预才能从策略上手动触发以必输此次变更。\nContinuous Deployment（持续部署）\n与持续交付类似，但不同之处在于，你无需将其手动部署，而是将其设置为自动部署。完全不需要人工干预即可部署你的应用程序。\n1.1. GitLab CI/CD 是如何工作的\n为了使用GitLab CI/CD，你需要一个托管在GitLab上的应用程序代码库，并且在根目录中的.gitlab-ci.yml文件中指定构建、测试和部署的脚本。\n在这个文件中，你可以定义要运行的脚本，定义包含的依赖项，选择要按顺序运行的命令和要并行运行的命令，定义要在何处部署应用程序，以及指定是否 要自动运行脚本或手动触发脚本。\n为了可视化处理过程，假设添加到配置文件中的所有脚本与在计算机的终端上运行的命令相同。\n一旦你已经添加了.gitlab-ci.yml到仓库中，GitLab将检测到该文件，并使用名为GitLab Runner的工具运行你的脚本。该工具的操作与终端类似。\n这些脚本被分组到jobs，它们共同组成一个pipeline。一个最简单的.gitlab-ci.yml文件可能是这样的：\nbefore_script:\napt-get install rubygems ruby-dev -y run-test:\nscript:\nruby \u0026ndash;version 6\nbefore_script属性将在运行任何内容之前为你的应用安装依赖，一个名为run-test的job（作业）将打印当前系统的Ruby版本。二者共同构成了在每次推送到仓库的任何分支时都会被触发的pipeline（管道）。 GitLab CI/CD不仅可以执行你设置的job，还可以显示执行期间发生的情况，正如你在终端看到的那样：\n图片\n为你的应用创建策略，GitLab会根据你的定义来运行pipeline。你的管道状态也会由GitLab显示：\n图片\n最后，如果出现任何问题，可以轻松地回滚所有更改：\n图片\n1.2. 基本 CI/CD 工作流程\n一旦你将提交推送到远程仓库的分支上，那么你为该项目设置的CI/CD管道将会被触发。GitLab CI/CD 通过这样做：\n运行自动化脚本（串行或并行） 代码Review并获得批准\n构建并测试你的应用\n就像在你本机中看到的那样，使用Review Apps预览每个合并请求的更改　代码Review并获得批准\n合并feature分支到默认分支，同时自动将此次更改部署到生产环境\n如果出现问题，可以轻松回滚\n通过GitLab UI所有的步骤都是可视化的\n图片\n1.3. 深入了解CI/CD基本工作流程\n如果我们深入研究基本工作流程，则可以在DevOps生命周期的每个阶段看到GitLab中可用的功能，如下图所示：\n图片\nVerify\n通过持续集成自动构建和测试你的应用程序\n使用GitLab代码质量（GitLab Code Quality）分析你的源代码质量\n通过浏览器性能测试（Browser Performance Testing）确定代码更改对性能的影响\n执行一系列测试，比如Container Scanning , Dependency Scanning , JUnit tests\n用Review Apps部署更改，以预览每个分支上的应用程序更改\nPackage\n用Container Registry存储Docker镜像\n用NPM Registry存储NPM包\n用Maven Repository存储Maven artifacts\n用Conan Repository存储Conan包\nRelease\n持续部署，自动将你的应用程序部署到生产环境\n持续交付，手动点击以将你的应用程序部署到生产环境\n用GitLab Pages部署静态网站\n仅将功能部署到一个Pod上，并让一定比例的用户群通过Canary Deployments访问临时部署的功能（PS：\n即灰度发布）\n在Feature Flags之后部署功能\n用GitLab Releases将发布说明添加到任意Git tag\n使用Deploy Boards查看在Kubernetes上运行的每个CI环境的当前运行状况和状态\n使用Auto Deploy将应用程序部署到Kubernetes集群中的生产环境\n使用GitLab CI/CD，还可以：\n通过Auto DevOps轻松设置应用的整个生命周期\n将应用程序部署到不同的环境\n安装你自己的GitLab Runner\nSchedule pipelines\n使用安全测试报告（Security Test reports）检查应用程序漏洞\nGitLab CI/CD 快速开始\n.gitlab-ci.yml文件告诉GitLab Runner要做什么。一个简单的管道通常包括三个阶段：build、test、deploy\n管道在 CI/CD \u0026gt; Pipelines 页面\n2.1. 创建一个 .gitlab-ci.yml 文件\n通过配置.gitlab-ci.yml文件来告诉CI要对你的项目做什么。它位于仓库的根目录下。\n仓库一旦收到任何推送，GitLab将立即查找.gitlab-ci.yml文件，并根据文件的内容在Runner上启动作业。\n下面是一个Ruby项目配置例子：\nimage: \u0026ldquo;ruby:2.5\u0026rdquo;\nbefore_script:\napt-get update -qq \u0026amp;\u0026amp; apt-get install -y -qq sqlite3 libsqlite3-dev nodejs\nruby -v\nwhich ruby\ngem install bundler \u0026ndash;no-document\nbundle install \u0026ndash;jobs $(nproc) \u0026ldquo;${FLAGS[@]}\u0026rdquo;\nrspec:\nscript:\nbundle exec rspec rubocop:\nscript:\nbundle exec rubocop\n上面的例子中，定义里两个作业，分别是 rspec 和 rubocop，在每个作业开始执行前，要先执行before_script下的命令\n2.2. 推送 .gitlab-ci.yml 到 GitLab\ngit add .gitlab-ci.yml\ngit commit -m \u0026ldquo;Add .gitlab-ci.yml\u0026rdquo;\ngit push origin master\n2.3. 配置一个Runner\n在GitLab中，Runner运行你定义在.gitlab-ci.yml中的作业（job）\n一个Runner可以是一个虚拟机、物理机、docker容器，或者一个容器集群\nGitLab与Runner之间通过API进行通信，因此只需要Runner所在的机器有网络并且可以访问GitLab服务器即可\n你可以去 Settings ➔ CI/CD 看是否已经有Runner关联到你的项目，设置Runner简单又直接\n图片 2.4. 查看 pipeline 和 jobs的状态\n在成功配置Runner以后，你应该可以看到你最近的提交的状态\n图片\n为了查看所有jobs，你可以去 Pipelines ➔ Jobs 页面\n图片\n通过点击作业的状态，你可以看到作业运行的日志\n图片\n回顾一下：\n1、首先，定义.gitlab-ci.yml文件。在这个文件中就定义了要执行的job和命令\n2、接着，将文件推送至远程仓库\n3、最后，配置Runner，用于运行job\nAuto DevOps\nAuto DevOps 提供了预定义的CI/CD配置，使你可以自动检测，构建，测试，部署和监视应用程序。借助CI/CD最佳实践和工具，Auto DevOps旨在简化成熟和现代软件开发生命周期的设置和执行。 借助Auto DevOps，软件开发过程的设置变得更加容易，因为每个项目都可以使用最少的配置来完成从验证到监视的完整工作流程。只需推送你的代码，GitLab就会处理其他所有事情。这使得启动新项目更加容易，并使整个公司的应用程序设置方式保持一致。\n下面这个例子展示了如何使用Auto DevOps将GitLab.com上托管的项目部署到Google Kubernetes Engine\n示例中会使用GitLab原生的Kubernetes集成，因此不需要再单独手动创建Kubernetes集群\n本例将创建并部署一个从GitLab模板创建的应用\n3.1. 从GitLab模板创建项目\n在创建Kubernetes集群并将其连接到GitLab项目之前，你需要一个Google Cloud Platform帐户\n下面使用GitLab的项目模板来创建一个新项目\n图片\n给项目起一个名字，并确保它是公有的\n图片\n3.2. 从GitLab模板创建Kubernetes集群\n点击 Add Kubernetes cluster 按钮，或者 Operations \u0026gt; Kubernetes\n图片\n图片\n图片\n安装Helm, Ingress, 和 Prometheus\n图片\n3.3. 启用Auto DevOps (可选)\nAuto DevOps 默认是启用的。\n导航栏 Settings \u0026gt; CI/CD \u0026gt; Auto DevOps\n勾选 Default to Auto DevOps pipeline\n最后选择部署策略\n图片\n一旦你已经完成了以上所有的操作，那么一个新的 pipeline 将会被自动创建。为了查看pipeline，可以去 CI/CD \u0026gt; Pipelines\n图片\n3.4. 部署应用\n到目前为止，你应该看到管道正在运行，但是它到底在运行什么呢？\n管道内部分为4个阶段，我们可以查看每个阶段有几个作业在运行，如下图：\n构建 -\u0026gt; 测试 -\u0026gt; 部署 -\u0026gt; 性能测试\n图片\n现在，应用已经成功部署，让我们通过浏览器查看。\n首先，导航到 Operations \u0026gt; Environments\n图片\n在Environments中，可以看到部署的应用的详细信息。在最右边有三个按钮，我们依次来看一下：\n第一个图标将打开在生产环境中部署的应用程序的URL。这是一个非常简单的页面，但重要的是它可以正常工作！\n紧挨着第二个是一个带小图像的图标，Prometheus将在其中收集有关Kubernetes集群以及应用程序如何影响它的数据（在内存/ CPU使用率，延迟等方面）\n图片\n第三个图标是Web终端，它将在运行应用程序的容器内打开终端会话。\nExamples\n使用GitLab CI/CD部署一个Spring Boot应用\n示例 .gitlab-ci.yml\nimage: java:8 \u0026lt;p\u0026gt; stages: \u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; build \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; deploy \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p\u0026gt; before_script: \u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; chmod +x mvnw \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p\u0026gt; build:\u0026lt;br /\u0026gt; stage: build\u0026lt;br /\u0026gt; script: ./mvnw package\u0026lt;br /\u0026gt; artifacts:\u0026lt;br /\u0026gt; paths: \u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; target/demo-0.0.1-SNAPSHOT.jar \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p\u0026gt; production:\u0026lt;br /\u0026gt; stage: deploy\u0026lt;br /\u0026gt; script: \u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; curl --location \u0026quot;\u0026lt;a href=\u0026quot;https://cli.run.pivotal.io/stable?release=linux64-binary\u0026amp;source=github\u0026quot;\u0026gt;https://cli.run.pivotal.io/stable?release=linux64-binary\u0026amp;source=github\u0026lt;/a\u0026gt;\u0026quot; | tar zx \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; ./cf login -u $CF_USERNAME -p $CF_PASSWORD -a api.run.pivotal.io \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; ./cf push\u0026lt;br /\u0026gt; only: \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; master \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; 参考文档\nhttps://about.gitlab.com/solutions/kubernetes/\nhttps://docs.gitlab.com/ee/ci/README.html\nhttps://docs.gitlab.com/ee/ci/introduction/\nhttps://docs.gitlab.com/ee/topics/autodevops/\nhttps://docs.gitlab.com/ee/ci/examples/README.html ","date":"2020年1212月20日","externalUrl":null,"permalink":"/3120.html","section":"Posts","summary":"","title":"使用 GitLab 实现 CI/CD","type":"post"},{"content":" 来源：https://lambda.grofers.com/learnings-from-two-years-of-kubernetes-in-production-b0ec21aa2814 大约两年前，我们决定放弃在 EC2 平台中基于 Ansible 配置管理工具部署应用程序，并转向容器化和 Kubernetes 技术栈，使用 Kubernetes 进行应用程序编排。现在我们已将大部分基础架构迁移到 Kubernetes。这是一项艰巨的任务，也有它自己的挑战——从迁移进行之时运行混合基础设施的技术挑战，再到用全新的操作范式培训整个团队等等，不一而足。 在这篇文章中，我们将回顾我们的经验，并分享我们从这一过程中学到的东西，以帮助你做出更好的决定，增加你成功的机会。 1 迁移到 Kubernetes 的原因 无服务器技术和容器技术都很好，如果您要开始一项新业务并从头开始构建所有应用，请务必使用容器来部署应用程序。如果你拥有足够带宽（或可能不具备，请继续阅读），并拥有配置和操作 Kubernetes 以及将应用部署到 Kubernetes 的技术能力，请使用 Kubernetes 来编排你的容器化应用程序。 即使您在 EKS、GKE 或 AKS 之类的托管平台上使用 Kubernetes，在其上正确部署和操作应用程序也具有一定的学习曲线。您的开发团队应该应对挑战。只有您的团队遵循 DevOps 理念，才能带来很多好处。如果您所处的情况是，由系统管理团队为其他团队开发的应用程序编写部署清单，那么从 DevOps 的角度来看，我个人认为 Kubernetes 能够带来的好处较小。当然，选择 Kubernetes 可以为您带来许多其他好处，例如更低的成本、更快的实验、更快的自动缩放、弹性等。 如果你已经在云平台虚拟机或其他 PaaS 平台上部署应用，那么你真的要考虑从现有的基础设施迁移到 Kubernetes 吗？你确信 Kubernetes 是解决你的问题的唯一途径吗？你必须清楚你的动机，因为将现有的基础设施迁移到 Kubernetes 是一项艰巨的任务。 我们在这方面犯了一些错误。我们迁移到 Kubernetes 的主要原因是为了建立一个持续集成的基础架构，该基础架构可以帮助我们快速重构微服务。这些年来，这些微服务在架构方面逐渐积累了很多问题，因而需要重构。大多数新功能都需要修改多个代码库，因此，同时开发和测试所有这些微服务的工作会拖累我们的速度。我们认为有必要为每个开发人员和每个变更提供一个集成环境，以帮助加快开发和测试周期，而无需协调谁来获得“共享预发布环境”。 我们的持续集成流水线之一，可为所有微服务提供新的集成环境并运行自动化测试 我们现在做得很好。今天我们可以在 8 分钟内在 Kubernetes 上的集成环境中部署 21 个微服务。任何开发人员都可以使用我们自己开发的工具来执行此操作。我们还为这 21 个微服务中的任何一个创建的拉取请求都提供了这个环境的子集。整个测试周期（提供环境和运行测试）需要不到 12 分钟的时间。这可能感觉很长，但它可以防止我们在当前混乱的架构中交付糟糕的更改。 持续集成流水线执行报告 2 Kubernetes 的迁移方式 我们花了将近一年半的时间让这一复杂的持续集成流水线稳定运行，我们构建了额外工具，创建遥测工具并重新配置了每个应用程序的部署方法。为了开发和生产环境的一致性，我们也必须将所有这些微服务部署到生产环境中，否则基础设施和部署应用之间的偏离将使应用程序难以为开发人员所理解，并将使开发人员的运维成为一场噩梦。 我们对这个话题有复杂的感觉。回顾过去，我们认为我们解决持续集成的方式使问题变得更糟了，因为将所有微服务推向生产环境（为了开发 / 生产环境一致性）的复杂性使得实现更快的持续集成构建这一目标变得更加复杂和困难。在使用 Kubernetes 之前，我们使用 Ansible 和 Hashicorp Consul 以及 Vault 来提供基础设施、配置管理和部署。它们是缓慢的吗? 当然是。但我们认为，我们本可以在 Consul 中引入服务发现，并对 Ansible 部署进行一些优化，这样我们可以在相当短的时间内接近我们的目标。 我们应该迁移到 Kubernetes 吗？答案当然是肯定的。使用 Kubernetes 有几个好处，包括服务发现、更好的成本管理、弹性、治理、云基础设施的基础设施抽象等等。我们今天也获得了所有这些好处。但这并不是我们开始时的主要目标，而且实现这些的过程中所产生的压力和痛苦也许是不必要的。 对我们来说，一个重要的教训是，我们本可以选择一条不同的、阻力较小的道路来采用 Kubernetes。我们只是把 Kubernetes 作为唯一的解决方案，我们甚至没有评估其他选择。 我们将在这篇文章中看到，将应用迁移到 Kubernetes 并在其上操作与将应用部署在云平台虚拟机或裸机上是不同的。对于您的云工程师和开发团队来说，这会有一个学习曲线。让您的团队学习这些技术可能是值得的。但问题是，你现在需要这么做吗？你必须尽量清楚的回答这一问题。 3 开箱即用的 Kubernetes 还远远不够 很多人错误的认为 Kubernetes 是一种 PaaS 解决方案，事实并非如此，Kubernetes 是一个用于构建 PaaS 解决方案的平台。OpenShift 就是这样一个例子。 对几乎所有人来说，开箱即用的 Kubernetes 都远远不够。Kubernetes 平台是一个学习和探索的好地方。但是您很可能需要更多基础设施组件，并将它们很好地结合在一起作为应用程序的解决方案，以使其对开发人员更有意义。通常，这一套带有额外基础设施组件和策略的 Kubernetes 被称为内部 Kubernetes 平台。这是一个非常有用的使用范例，有几种方法可以扩展 Kubernetes。 指标、日志、服务发现、分布式追踪、配置和 secret 管理、持续集成 / 持续部署、本地开发体验、根据自定义指标自动扩展都是需要关注和做出决策的问题。这些只是我们指出的一部分事情。肯定还有更多的决策需要制定，有更多的基础设施需要建立。一个重要的领域是你的开发人员将如何使用 Kubernetes 资源和清单文件，这篇文章的后面会有更多这方面的内容。 以下是我们的一些决策及其理由。 指标 我们最后选择使用 Prometheus。现在 Prometheus 几乎是一个事实上的指标基础设施。CNCF 和 Kubernetes 对它非常友好。它在 Grafana 生态系统中工作得很好，我们很喜欢 Grafana！唯一的问题是我们以前使用 InfluxDB。我们已经决定抛弃 InfluxDB，并全力转向 Prometheus。 日志 对我们来说，日志一直是一个大问题。我们已经努力使用 ELK 构建了一个稳定的日志平台。我们发现 ELK 有很多我们团队用不到的功能，而这些功能是有代价的。同时，我们认为使用 Elasticsearch 处理日志是一个昂贵的解决方案，因而也有潜在的风险。我们最后决定使用 Grafana 的 Loki。它很简单，而且具有我们团队所需的必要功能。这是非常符合成本效益的。但最重要的是，由于它的查询语言非常类似于 PromQL，所以它具有优越的用户体验。而且，它对 Grafana 非常友好，这样就可以在一个用户界面中集成指标监控和日志记录。 这是一个 Grafana 仪表盘的例子，它可以同时可视化指标和相应的日志 配置和 Secret 管理 你会发现大多 Kubernetes 项目都使用了 configmap 和 secret 对象。我们意识到 configmap 和 secret 可以作为起点，但却不足以满足我们的应用场景。对现有服务使用 configmap 有一定代价。Configmap 可以通过某种方式装载到 pods 中，使用该方法配置环境变量是最常见的方式。如果您有大量的遗留微服务从配置管理工具（如 Puppet、Chef 或 Ansible）提供的文件中读取配置，那么您将不得不在所有代码库中重做配置处理，让 configmap 从环境变量中读取配置。我们没有找到足够的理由去做这件事。另外，配置或 secret 的更改意味着您必须重新部署应用使其生效。这将需要使用额外的 kubectl 命令来完成。 为了避免这一切，我们决定使用 Consul、Vault 和 Consul 模板进行配置管理。现在我们将 Consul 模板作为初始化容器（init container）运行，并计划将其作为 pod 中的旁路（side car）容器，以便它能够监听 Consul 中的配置更改，从 Vault 刷新过期的 secret，并优雅地重新加载应用程序进程。 持续集成和持续部署 在迁移到 Kubernetes 之前，我们使用的是 Jenkins。迁移到 Kubernetes 后，我们决定继续使用 Jenkins。到目前为止，我们的经验是 Jenkins 并不是使用云原生基础设施的最佳解决方案。我们发现为了实现目标，我们需要使用 Python、Bash、Docker 和脚本化或声明式 Jenkins 流水线做了很多探究工作。构建和维护这些工具和流水线一开始十分困难。我们现在正在探索使用 Tekton 和 Argo Workflows 作为我们新的 CI/CD 平台。您可以在 CI/CD 工具箱中探索更多选项，如 Jenkins X、Screwdriver、Keptn 等。 部署经验 在部署工作流程中有许多使用 Kubernetes 的方法。我们主要将其归结为两种选择，分别是 Telepresence.io 和 Skaffold。Skaffold 能够监视您的本地更改，并将它们持续部署到 Kubernetes 集群中。而 Telepresence 则允许您在本地运行服务，同时在 Kubernetes 集群中设置透明的网络代理，这样您的本地服务就可以与 Kubernetes 中的其他服务通信，就像它部署在集群中一样。选择哪种工具是个人的意见和喜好问题。确定使用某一种工具很困难，我们现在主要在尝试使用 Telepresence，但 Skaffold 可能成为我们更好的工具，我们没有放弃这种可能性。只有时间能证明我们最终使用哪个工具，又或者两者都用。此外也还有其他的解决方案，例如 Draft 就是一个值得关注的选项。 分布式追踪 我们目前还没有做分布式跟踪。不过，我们计划很快在这个领域进行投入。就像日志记录一样，我们希望在 Grafana 的指标和日志记录旁添加分布式跟踪，从而为我们的开发团队提供一个更集中的可观测性体验。 应用打包、部署和相关工具 Kubernetes 中很重要的一个方面是考虑开发人员如何与集群交互并部署他们的工作负载。我们想让事情保持简单并易于扩展。我们正在尝试使用 Kustomize、Skaffold 以及一些自主开发的 CRD 来作为开发人员部署和管理应用程序的工具。尽管如此，任何团队都可以自由地使用他们想要使用的任何工具来与集群交互，只要这些工具是开源的并建立在开放标准之上。 4 操作 Kubernetes 集群并不容易 我们主要使用 AWS 的新加坡区域。当我们开始使用 Kubernetes 时，在新加坡区域还不能使用 EKS 服务。因此，我们必须使用 kops 在 EC2 上建立自己的 Kubernetes 集群。 配置一个基础的集群可能并不困难。我们在一周内就建立起了第一个集群，而大多数问题发生在我们开始部署工作负载时。从调整集群自动伸缩器（autoscaler）到在正确的时间配置资源，再到正确配置网络以实现所需的性能，你都必须自己研究和配置。在大多数情况下，默认配置在生产环境中大部分时候都不能正常工作（或者至少在那时无法在我们的场景中正常工作）。 我们的学习到的是，操作 Kubernetes 是很复杂的。它有很多活动部件。而学习如何操作 Kubernetes 很可能不是你业务的核心。尽可能多地将这些工作卸载给云服务提供商 (EKS、GKE、AKS)。你自己做这些事并不会带来价值。 考虑升级 即使您使用的是托管服务，Kubernetes 也非常复杂，升级也不会一帆风顺。 即使在使用托管的 Kubernetes 服务时，也要尽早进行基础设施即代码的设置，以使灾难恢复和升级过程在未来相对不那么痛苦，并且能够在灾难发生时快速恢复。 如果你愿意，你可以试着使用 GitOps。如果你不能做到这一点，那么将手动步骤减少到最低限度是一个很好的开始。我们结合使用 eksctl、terraform 和我们的集群配置清单（包括平台服务清单）来建立我们所称的“Grofers Kubernetes 平台”。为了使设置和部署过程更简单和可重复，我们构建了一个自动化流水线来设置新的集群并将更改部署到现有的集群。 资源需求和限制 在开始迁移之后，我们发现由于不正确的配置，集群中出现了许多性能和功能问题。为了解决这些问题，我们添加了很多资源请求和限制，以消除可能导致性能下降的资源约束。 最初的观察结果之一是由于节点的内存限制而导致的 pod 驱逐。其原因是与资源请求相比，资源限制过高。随着流量的激增，内存消耗的增加可能导致节点上的内存耗尽，并进一步导致 pod 被驱逐。 我们学习到应该保持资源请求足够高但不太高，这样在低流量时我们会浪费一些资源。同时保持资源限制相对接近资源请求，以便为峰值流量留出一些喘息的空间，而不会由于节点的内存压力而导致 pod 被驱逐。限制与请求的距离有多近取决于你的流量模式。 这不适用于非生产环境（如开发、预发布和持续集成），因为这些环境不会出现任何流量高峰。理论上，如果将容器的 CPU 请求设置为零并设置足够高的 CPU 限制，就可以运行无限个容器。如果您的容器开始使用大量的 CPU，它们将被限制性能。您也可以对内存请求和限制执行同样的操作。然而，应用达到内存限制后的情形与 CPU 不同。如果您使用的内存超过了设置的限制，那么您的容器会因为内存耗尽（OOM）而被杀死并重新启动。如果内存限制异常高 (比方说超过节点的容量)，则可以继续使用内存，但最终当节点用完可用内存时，调度器将开始驱逐 pod。 在非生产环境中，我们通过保持极低的资源请求和极高的资源限制来尽可能安全地分配资源。这种情况下的限制因素是内存，也就是说，无论内存请求有多低，内存限制有多高，pod 驱逐都由调度在节点上的所有容器所使用的内存总和所决定。 安全与治理 Kubernetes 旨在让开发者使用云平台，使他们更加独立，并推动 DevOps 文化。向开发人员开放平台、减少云工程团队（或系统管理员）的干预以及使开发团队独立应该是重要目标之一。 有时这种独立性会带来严重的风险。例如，在 EKS 中使用 LoadBalancer 类型的 service 会在缺省情况下提供面向公共网络的 ELB，而添加某个注释将确保提供内部 ELB。我们在刚开始在这个问题上犯了一些错误。 我们使用 Open Policy Agent 来降低各种安全风险，以及与成本、安全和技术债务相关的风险。 部署 Open Policy Agent 来构建正确的控制器有助于自动化整个变更管理过程，并为我们的开发人员正确构建安全的网络。使用 Open Policy Agent，我们可以像前面提到的那样设置限制——除非有正确的注释，否则限制服务对象的创建，这样开发人员就不会意外地创建公共的 ELB。 成本 我们在迁移后看到了巨大的成本效益。然而，并不是所有的好处都立竿见影。 注意：我们正在整合一个关于我们最近成本优化计划的更详细的帖子，请关注我们的 Lambda。 更好的资源利用能力 这是最明显的一个好处。我们今天的基础设施所提供的计算、内存和存储比以前少得多。除了由于更好的容器或进程包装而获得更高的资源利用率之外，我们还能够比以前更好地利用共享服务，如可观察性（指标、日志）组件。 然而，在迁移过程中我们浪费了大量的资源。由于我们无法很快优化我们的自我管理 Kubernetes 集群，我们遇到了大量的性能问题。我们为我们的 pod 请求大量资源以作为缓冲，这更像是提供一种保证，以减少停机和由于缺乏计算或内存资源所导致的性能问题。 由较高的资源缓冲而导致的高基础设施成本是一个大问题。使用 Kubernetes 本应让我们获得较高的资源利用率，但我们并没有真的获得这种好处。在迁移到 EKS 之后，它带来的稳定性帮助我们变得更加自信，这帮助我们采取必要的步骤来纠正资源请求，并大幅降低资源浪费。 Spot 在 Kubernetes 中使用 spot 实例要比在普通虚拟机中容易得多。使用虚拟机，您可以自己管理 spot 实例，这可能比较复杂，如需要确保应用程序的正常运行时间或使用像 SpotInst 这样的服务。这同样适用于 Kubernetes，但是 Kubernetes 带来的较高资源利用效率可以为您保留足够的空间来做缓冲，这样即使集群中的一些实例中断，运行于其上的容器也可以快速地在其他地方重新调度。有几个选项可以有效地管理 spot 中断。 Spot 实例帮助我们节省了大量资金。今天，我们的整个预发布 Kubernetes 集群运行在 spot 实例上，99% 的生产 Kubernetes 集群由保留实例、节约计划和 spot 实例覆盖。 对我们来说，优化的下一步是如何在 spot 实例上运行整个生产集群。 ELB 整合 我们使用 Ingress 来整合我们的预发布环境中的 ELB，这大幅降低了 ELBs 的固定成本。为了避免这造成生产环境和部署环境代码的差异，我们决定实现一个 controller，该 controller 将 LoadBalancer 类型服务更改为 NodePort 类型服务，同时在我们的预发布集群中创建一个 ingress 对象。 迁移到 Nginx ingress 对我们来说相对简单，因为我们采用了控制器方法，所以不需要做太多更改。如果我们在生产环境中也使用 ingress，更改则会更少。在生产环境使用 ingress 不是一个简单的改变。如要正确的为生产环境配置 ingress，就必须考虑周详，还需要从安全性和 API 管理的角度来考虑。这是我们打算在不久的将来开展工作的一个领域。 增加跨 AZ 数据传输 虽然我们在基础设施方面节省了大量开支，但在基础设施的另一个领域，即跨 AZ 数据传输方面，我们的成本却在增加。 Pod 可以被调度到任何节点上。即使您控制了 pod 在集群中的调度方式，也没有简单的方法来控制服务如何发现彼此（即一个服务的 pod 与同一 AZ 中的另一个服务的 pod 通信），以减少跨 AZ 的数据传输。 经过大量的研究和与其他公司的同行的交谈，我们了解到可以通过引入一个服务网格来控制从一个 pod 路由到目的地 pod 的流量来实现这一功能。操作服务网格很复杂，我们还没有准备好为了节省跨 AZ 数据传输的成本而自己承担这一复杂性。 5 CRDs、Operators 和 Controllers：简化运维和更完整的体验 每个组织都有自己的工作流程和运营挑战，我们也不例外。 在对 Kubernetes 的两年探索中，我们了解到 Kubernetes 很棒，但如果你使用它的 controllers、operators 和 CRDs 等功能来简化日常操作，并为开发者提供更完整的体验，那就更好了。 我们已经开始开发一系列 controllers 和 CRDs。例如，LoadBalancer 类型 service 到 ingress 的转换是一个 controller 操作。类似地，每当部署新服务时，我们使用 controller 在 DNS 中自动创建 CNAME 记录。我们有另外的 5 个独立用例，他们依赖我们的内部 controller 来简化日常操作和减少苦活累活。 我们还建立了一些 CRD。其中一种被广泛用于在 Grafana 上生成监视面板，它声明式地指定监视面板应该由什么构成。这使得开发人员可以在他们的应用代码库旁配置他们的监控面板，并使用相同的命令（kubectl apply -f .）部署一切内容。 我们正在看到 controller 和 CRD 的大量好处。随着我们与云计算供应商 AWS 紧密合作以简化集群基础设施操作，我们将自己解放出来，更多地专注于构建“Grofers Kubernetes 平台”，该平台被设计为尽力以最好的方式支持我们的开发团队。 - END - \u0026lt;section style='font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif;letter-spacing: 0.544px;white-space: normal;line-height: 2em;'\u003e 推荐阅读 \u0026lt;/section\u003e \u0026lt;section style='color: rgb(0, 0, 0);font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif;letter-spacing: 0.544px;white-space: normal;line-height: 2em;'\u003eShell中各种括号的作用：()、(())、[]、[[]]、{}\u0026lt;/section\u003e\u0026lt;section style='color: rgb(0, 0, 0);font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif;letter-spacing: 0.544px;white-space: normal;line-height: 2em;'\u003e有了Docker，为什么还用Kubernetes？\u0026lt;/section\u003e\u0026lt;section style='color: rgb(0, 0, 0);font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif;letter-spacing: 0.544px;white-space: normal;line-height: 2em;'\u003e在Kubernetes 1.20版本中不推荐使用Docker ！\n\u0026lt;/section\u003e\u0026lt;section style='color: rgb(0, 0, 0);font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif;letter-spacing: 0.544px;white-space: normal;line-height: 2em;'\u003eLinux 运维必备的 40 个命令总结\u0026lt;/section\u003e\u0026lt;section style='color: rgb(0, 0, 0);font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif;letter-spacing: 0.544px;white-space: normal;line-height: 2em;'\u003e系统架构性能优化思路\u0026lt;/section\u003e\u0026lt;section style='color: rgb(0, 0, 0);font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif;letter-spacing: 0.544px;white-space: normal;line-height: 2em;'\u003eKubernetes 的这些原理，你一定要了解\u0026lt;/section\u003e\u0026lt;section style='color: rgb(0, 0, 0);font-family: -apple-system-font, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei UI\", \"Microsoft YaHei\", Arial, sans-serif;letter-spacing: 0.544px;white-space: normal;line-height: 2em;'\u003e在项目实践中，进行了以下DevOps方案建设\u0026lt;/section\u003e 点亮，服务器三年不宕机 ","date":"2020年1212月9日","externalUrl":null,"permalink":"/3116.html","section":"Posts","summary":"","title":"Kubernetes 两年使用经验总结","type":"post"},{"content":" 作者介绍 谢泽钦，Rancher Labs技术支持工程师，负责Rancher中国客户的维护和相关技术支持。4年的云计算领域的经验，经历了OpenStack到Kubernetes的技术变革，对底层操作系统、KVM虚拟化和Docker容器等相关云技术拥有丰富的运维和实践经验。 本文是为Rancher客户进行问题排查的记录。 问题背景 我们发现客户的Kubernetes集群环境中所有的worker节点的Kubelet进程的CPU使用率长时间占用过高，通过pidstat可以看到CPU使用率高达100%。本文记录下了本次问题排查的过程。 集群环境 软件 \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; opera-tn-ra-cell=\u0026quot;_$.pages:0.layers:0.comps:16.classicTable1:0.td@@1\u0026quot; style=\u0026quot;border-width: 1px;border-color: rgb(62, 62, 62);border-radius: 0px;border-style: solid;box-sizing: border-box;padding: 0px;\u0026quot; width=\u0026quot;50.0000%\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot; powered-by=\u0026quot;xiumi.us\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin: 0px 8px;padding: 0px;box-sizing: border-box;line-height: 2em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;\u0026quot;\u0026gt;版本\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/td\u0026gt; Kubernetes \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; opera-tn-ra-cell=\u0026quot;_$.pages:0.layers:0.comps:16.classicTable1:1.td@@1\u0026quot; style=\u0026quot;border-width: 1px;border-color: rgb(62, 62, 62);border-radius: 0px;border-style: solid;box-sizing: border-box;padding: 0px;\u0026quot; width=\u0026quot;50.0000%\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot; powered-by=\u0026quot;xiumi.us\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;margin: 0px 8px;padding: 0px;box-sizing: border-box;line-height: 2em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;\u0026quot;\u0026gt;v1.18.9\u0026lt;br style=\u0026quot;box-sizing: border-box;\u0026quot; /\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/td\u0026gt; Docker \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; opera-tn-ra-cell=\u0026quot;_$.pages:0.layers:0.comps:16.classicTable1:2.td@@1\u0026quot; style=\u0026quot;border-width: 1px;border-color: rgb(62, 62, 62);border-radius: 0px;border-style: solid;box-sizing: border-box;padding: 0px;\u0026quot; width=\u0026quot;50.0000%\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot; powered-by=\u0026quot;xiumi.us\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin: 0px 8px;padding: 0px;box-sizing: border-box;line-height: 2em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;\u0026quot;\u0026gt;18.09.9\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/td\u0026gt; Rancher \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; opera-tn-ra-cell=\u0026quot;_$.pages:0.layers:0.comps:16.classicTable1:3.td@@1\u0026quot; style=\u0026quot;border-width: 1px;border-color: rgb(62, 62, 62);border-radius: 0px;border-style: solid;box-sizing: border-box;padding: 0px;\u0026quot; width=\u0026quot;50.0000%\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot; powered-by=\u0026quot;xiumi.us\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin: 0px 8px;padding: 0px;box-sizing: border-box;line-height: 2em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;\u0026quot;\u0026gt;v2.4.8-ent\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;margin: 0px 8px;padding: 0px;box-sizing: border-box;line-height: 2em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;\u0026quot;\u0026gt;（社区版同样适用）\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/td\u0026gt; CentOS \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; opera-tn-ra-cell=\u0026quot;_$.pages:0.layers:0.comps:16.classicTable1:4.td@@1\u0026quot; style=\u0026quot;border-width: 1px;border-color: rgb(62, 62, 62);border-radius: 0px;border-style: solid;box-sizing: border-box;padding: 0px;\u0026quot; width=\u0026quot;50.0000%\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot; powered-by=\u0026quot;xiumi.us\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin: 0px 8px;padding: 0px;box-sizing: border-box;line-height: 2em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;\u0026quot;\u0026gt;7.6\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/td\u0026gt; Kernel \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; opera-tn-ra-cell=\u0026quot;_$.pages:0.layers:0.comps:16.classicTable1:5.td@@1\u0026quot; style=\u0026quot;border-width: 1px;border-color: rgb(62, 62, 62);border-radius: 0px;border-style: solid;box-sizing: border-box;padding: 0px;\u0026quot; width=\u0026quot;50.0000%\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot; powered-by=\u0026quot;xiumi.us\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;white-space: normal;margin: 0px 8px;padding: 0px;box-sizing: border-box;line-height: 2em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;\u0026quot;\u0026gt;4.4.227-1.el7.elrepo.x86_64\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/td\u0026gt; 排查过程 使用strace工具对kubelet进程进行跟踪 1、由于Kubelet进程CPU使用率异常，可以使用strace工具对kubelet进程动态跟踪进程的调用情况，首先使用strace -cp 命令统计kubelet进程在某段时间内的每个系统调用的时间、调用和错误情况。 从上图可以看到，执行系统调用过程中，futex抛出了五千多个errors，这并不是一个正常的数量，而且该函数占用的时间达到了99%，所以需要进一步查看kubelet进程相关的调用。 2、由于strace -cp命令只能查看进程的整体调用情况，所以我们可以通过strace -tt -p 命令打印每个系统调用的时间戳，如下： 从strace输出的结果来看，在执行futex相关的系统调用时，有大量的Connect timed out，并返回了-1和ETIMEDOUT的error，所以才会在strace -cp中看到了那么多的error。 futex是一种用户态和内核态混合的同步机制，当futex变量告诉进程有竞争发生时，会执行系统调用去完成相应的处理，例如wait或者wake up，从官方的文档了解到，futex有这么几个参数： \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003efutex(uint32_t *uaddr, int futex_op, uint32_t val,\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003econst struct timespec *timeout, /* or: uint32_t val2 */\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003euint32_t *uaddr2, uint32_t val3);\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 官方文档给出ETIMEDOUT的解释： \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eETIMEDOUT\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e The operation in futex_op employed the timeout specified in\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e timeout, and the timeout expired before the operation\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e completed.\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 意思就是在指定的timeout时间中，未能完成相应的操作，其中futex_op对应上述输出结果的FUTEX_WAIT_PRIVATE和FUTEX_WAIT_PRIVATE，可以看到基本都是发生在FUTEX_WAIT_PRIVATE时发生的超时。 从目前的系统调用层面可以判断，futex无法顺利进入睡眠状态，但是futex进行了哪些操作还是不清楚，因此仍无法判断kubeletCPU飙高的原因，所以我们需要进一步从kubelet的函数调用中去看到底是执行卡在了哪个地方。 FUTEX_PRIVATE_FLAG：这个参数告诉内核futex是进程专用的，不与其他进程共享，这里的FUTEX_WAIT_PRIVATE和FUTEX_WAKE_PRIVATE就是其中的两种FLAG； futex相关说明1： https://man7.org/linux/man-pages/man7/futex.7.html fuex相关说明2： https://man7.org/linux/man-pages/man2/futex.2.html 使用go pprof工具对kubelet函数调用进行分析 早期的Kubernetes版本，可以直接通过debug/pprof 接口获取debug数据，后面考虑到相关安全性的问题，取消了这个接口，具体信息可以参考CVE-2019-11248（https://github.com/kubernetes/kubernetes/issues/81023）。因此我们将通过kubectl开启proxy进行相关数据指标的获取： 1、首先使用kubectl proxy命令启动API server代理 \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ekubectl proxy --address='0.0.0.0' --accept-hosts='^*$'\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 这里需要注意，如果使用的是Rancher UI上复制的kubeconfig文件，则需要使用指定了master IP的context，如果是RKE或者其他工具安装则可以忽略。 2、构建Golang环境。go pprof需要在golang环境下使用，本地如果没有安装golang，则可以通过Docker快速构建Golang环境 \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003edocker run -itd --name golang-env --net host golang bash\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 3、使用go pprof工具导出采集的指标，这里替换127.0.0.1为apiserver节点的IP，默认端口是8001，如果docker run的环境跑在apiserver所在的节点上，可以使用127.0.0.1。另外，还要替换NODENAME为对应的节点名称。 \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003edocker exec -it golang-env bash\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ego tool pprof -seconds=60 -raw -output=kubelet.pprof http://127.0.0.1:8001/api/v1/nodes/${NODENAME}/proxy/debug/pprof/profile\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 4、输出好的pprof文件不方便查看，需要转换成火焰图，推荐使用FlameGraph工具生成svg图 \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003egit clone https://github.com/brendangregg/FlameGraph.git\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ecd FlameGraph/\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e./stackcollapse-go.pl kubelet.pprof \u0026gt; kubelet.out\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e./flamegraph.pl kubelet.out \u0026gt; kubelet.svg\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 转换成火焰图后，就可以在浏览器直观地看到函数相关调用和具体调用时间比了。 5、分析火焰图 从kubelet的火焰图可以看到，调用时间最长的函数是k8s.io/kubernetes/vendor/github.com/google/cadvisor/manager.(*containerData).housekeeping，其中cAdvisor是kubelet内置的指标采集工具，主要是负责对节点机器上的资源及容器进行实时监控和性能数据采集，包括CPU使用情况、内存使用情况、网络吞吐量及文件系统使用情况。 深入函数调用可以发现k8s.io/kubernetes/vendor/github.com/opencontainers/runc/libcontainer/cgroups/fs.(*Manager).GetStats这个函数占用k8s.io/kubernetes/vendor/github.com/google/cadvisor/manager.(*containerData).housekeeping这个函数的时间是最长的，说明在获取容器CGroup相关状态时占用了较多的时间。 6、既然这个函数占用时间长，那么我们就分析一下这个函数具体干了什么。 查看源代码： https://github.com/kubernetes/kubernetes/blob/ded8a1e2853aef374fc93300fe1b225f38f19d9d/vendor/github.com/opencontainers/runc/libcontainer/cgroups/fs/memory.go#L162 \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003efunc (s *MemoryGroup) GetStats(path string, stats *cgroups.Stats) error {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e// Set stats from memory.stat.\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e statsFile, err := os.Open(filepath.Join(path, \"memory.stat\"))\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif err != nil {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif os.IsNotExist(err) {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn nil\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn err\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003edefer statsFile.Close()\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;br\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e sc := bufio.NewScanner(statsFile)\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003efor sc.Scan() {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e t, v, err := fscommon.GetCgroupParamKeyValue(sc.Text())\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif err != nil {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn fmt.Errorf(\"failed to parse memory.stat (%q) - %v\", sc.Text(), err)\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e stats.MemoryStats.Stats[t] = v\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e stats.MemoryStats.Cache = stats.MemoryStats.Stats[\"cache\"]\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;br\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e memoryUsage, err := getMemoryData(path, \"\")\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif err != nil {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn err\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e stats.MemoryStats.Usage = memoryUsage\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e swapUsage, err := getMemoryData(path, \"memsw\")\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif err != nil {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn err\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e stats.MemoryStats.SwapUsage = swapUsage\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e kernelUsage, err := getMemoryData(path, \"kmem\")\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif err != nil {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn err\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e stats.MemoryStats.KernelUsage = kernelUsage\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e kernelTCPUsage, err := getMemoryData(path, \"kmem.tcp\")\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif err != nil {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn err\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e stats.MemoryStats.KernelTCPUsage = kernelTCPUsage\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;br\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e useHierarchy := strings.Join([]string{\"memory\", \"use_hierarchy\"}, \".\")\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e value, err := fscommon.GetCgroupParamUint(path, useHierarchy)\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif err != nil {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn err\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif value == 1 {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e stats.MemoryStats.UseHierarchy = true\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;br\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e pagesByNUMA, err := getPageUsageByNUMA(path)\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eif err != nil {\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn err\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e }\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e stats.MemoryStats.PageUsageByNUMA = pagesByNUMA\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;br\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereturn nil\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e}\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 从代码中可以看到，进程会去读取memory.stat这个文件，这个文件存放了cgroup内存使用情况。也就是说，在读取这个文件花费了大量的时间。这时候，如果我们手动去查看这个文件，会是什么效果？ \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003e# time cat /sys/fs/cgroup/memory/memory.stat \u0026gt;/dev/null\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003ereal 0m9.065s\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003euser 0m0.000s\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003esys 0m9.064s\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 从这里可以看出端倪了，读取这个文件花费了9s，显然是不正常的。 基于上述结果，我们在cAdvisor的GitHub上查找到一个issue（https://github.com/google/cadvisor/issues/1774），从该issue中可以得知，该问题跟slab memory 缓存有一定的关系。从该issue中得知，受影响的机器的内存会逐渐被使用，通过/proc/meminfo看到使用的内存是slab memory，该内存是内核缓存的内存页，并且其中绝大部分都是dentry缓存。从这里我们可以判断出，当CGroup中的进程生命周期结束后，由于缓存的原因，还存留在slab memory中，导致其类似僵尸CGroup一样无法被释放。 也就是每当创建一个memory CGroup，在内核内存空间中，就会为其创建分配一份内存空间，该内存包含当前CGroup相关的cache（dentry、inode），也就是目录和文件索引的缓存，该缓存本质上是为了提高读取的效率。但是当CGroup中的所有进程都退出时，存在内核内存空间的缓存并没有清理掉。 内核通过伙伴算法进行内存分配，每当有进程申请内存空间时，会为其分配至少一个内存页面，也就是最少会分配4k内存，每次释放内存，也是按照最少一个页面来进行释放。当请求分配的内存大小为几十个字节或几百个字节时，4k对其来说是一个巨大的内存空间，在Linux中，为了解决这个问题，引入了slab内存分配管理机制，用来处理这种小量的内存请求，这就会导致，当CGroup中的所有进程都退出时，不会轻易回收这部分的内存，而这部分内存中的缓存数据，还会被读取到stats中，从而导致影响读取的性能。 解决方法 1、清理节点缓存，这是一个临时的解决方法，暂时清空节点内存缓存，能够缓解kubelet CPU使用率，但是后面缓存上来了，CPU使用率又会升上来。 \u0026lt;section style=\"margin-left: 8px;margin-right: 8px;line-height: 2em;\"\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span style=\"font-size: 15px;\"\u003eecho 2 \u0026gt; /proc/sys/vm/drop_caches\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;/section\u003e 2、升级内核版本 其实这个主要还是内核的问题，在GitHub上这个commit(https://github.com/torvalds/linux/commit/205b20cc5a99cdf197c32f4dbee2b09c699477f0)中有提到，在5.2+以上的内核版本中，优化了CGroup stats相关的查询性能，如果想要更好的解决该问题，建议可以参考自己操作系统和环境，合理的升级内核版本。 另外Redhat在kernel-4.18.0-176（https://bugzilla.redhat.com/show_bug.cgi?id=1795049）版本中也优化了相关CGroup的性能问题，而CentOS 8/RHEL 8默认使用的内核版本就是4.18，如果目前您使用的操作系统是RHEL7/CentOS7，则可以尝试逐渐替换新的操作系统，使用这个4.18.0-176版本以上的内核，毕竟新版本内核总归是对容器相关的体验会好很多。 kernel相关commit： https://github.com/torvalds/linux/commit/205b20cc5a99cdf197c32f4dbee2b09c699477f0 redhat kernel bug fix： https://bugzilla.redhat.com/show_bug.cgi?id=1795049 文章来源：Rancher Labs / 原文链接 END Kubernetes CKA实战培训班推荐： 北京：12月18-20日 ","date":"2020年1212月9日","externalUrl":null,"permalink":"/3115.html","section":"Posts","summary":"","title":"Kubernetes集群CPU使用率高达100%，详细排查过程！","type":"post"},{"content":"","date":"2020年1111月16日","externalUrl":null,"permalink":"/friendly-link/","section":"云原生知识栈","summary":"","title":"自助友链","type":"page"},{"content":"最近我发现我的 Kubernetes 集群资源实在是太多了，有点浪费，不信你看：\n既然闲置资源那么多，那我何不想办法利用一下。怎么用，用来干什么又是一个问题，想到我手中只有 MacBook，缺少 Windows 操作系统，那就先想办法用 Kubernetes 创建个 Windows 虚拟机用用吧，毕竟很多场景只能用 Windows（比如突破某盘的限速、Xshell 一把梭连接所有服务器）。于是我将目光转向了 Kubevirt。\nKubevirt 是 Red Hat 开源的以容器方式运行虚拟机的项目，通过 CRD 的方式来管理虚拟机实例，它的所有概念都和一般的 Kubernetes 容器应用差不多，不需要增加学习成本，对于咱玩烂了容器的 YAML 工程师来说没有任何压力，我们可以直接用它来创建虚拟机啊。\n1. Kubevirt 架构设计 # Kubevirt 主要实现了下面几种资源，以实现对虚拟机的管理：\nVirtualMachineInstance（VMI） : 类似于 kubernetes Pod，是管理虚拟机的最小资源。一个 VirtualMachineInstance 对象即表示一台正在运行的虚拟机实例，包含一个虚拟机所需要的各种配置。 VirtualMachine（VM） : 为群集内的 VirtualMachineInstance 提供管理功能，例如开机/关机/重启虚拟机，确保虚拟机实例的启动状态，与虚拟机实例是 1:1 的关系，类似与 spec.replica 为 1 的 StatefulSet。 VirtualMachineInstanceReplicaSet : 类似 ReplicaSet，可以启动指定数量的 VirtualMachineInstance，并且保证指定数量的 VirtualMachineInstance 运行，可以配置 HPA。 Kubevirt 的整体架构如图：\nvirt-api : 负责提供一些 KubeVirt 特有的 api，像是 console, vnc, startvm, stopvm 等。 virt-controller : 管理和监控 VMI 对象及其关联的 Pod，对其状态进行更新。 virt-handler : 以 DaemonSet 运行在每一个节点上，监听 VMI 的状态向上汇报，管理 VMI 的生命周期。 virt-launcher : 以 Pod 方式运行，每个 VMI Object 都会对应一个 virt-launcher Pod，容器内有单独的 libvirtd，用于启动和管理虚拟机。 如果你嫌上面的架构图太繁琐，这里还有一个简化版：\n这个图里的 Agent 其实就是 virt-handler。\n2. 磁盘和卷 # 虚拟机镜像（磁盘）是启动虚拟机必不可少的部分，KubeVirt 中提供多种方式的虚拟机磁盘，虚拟机镜像（磁盘）使用方式非常灵活。这里列出几种比较常用的：\nPersistentVolumeClaim : 使用 PVC 做为后端存储，适用于数据持久化，即在虚拟机重启或者重建后数据依旧存在。使用的 PV 类型可以是 block 和 filesystem，使用 filesystem 时，会使用 PVC 上的 /disk.img，格式为 RAW 格式的文件作为硬盘。block 模式时，使用 block volume 直接作为原始块设备提供给虚拟机。 ephemeral : 基于后端存储在本地做一个写时复制（COW）镜像层，所有的写入都在本地存储的镜像中，VM 实例停止时写入层就被删除，后端存储上的镜像不变化。 containerDisk : 基于 scratch 构建的一个 docker image，镜像中包含虚拟机启动所需要的虚拟机镜像，可以将该 docker image push 到 registry，使用时从 registry 拉取镜像，直接使用 containerDisk 作为 VMI 磁盘，数据是无法持久化的。 hostDisk : 使用节点上的磁盘镜像，类似于 hostpath，也可以在初始化时创建空的镜像。 dataVolume : 提供在虚拟机启动流程中自动将虚拟机磁盘导入 pvc 的功能，在不使用 DataVolume 的情况下，用户必须先准备带有磁盘映像的 pvc，然后再将其分配给 VM 或 VMI。dataVolume 拉取镜像的来源可以时 http，对象存储，另一块 PVC 等。 3. 准备工作 # 在安装 Kubevirt 之前，需要做一些准备工作。先安装 libvrt 和 qemu 软件包：\n# Ubuntu $ apt install -y qemu-kvm libvirt-bin bridge-utils virt-manager # CentOS $ yum install -y qemu-kvm libvirt virt-install bridge-utils 查看节点是否支持 kvm 硬件辅助虚拟化\n$ virt-host-validate qemu QEMU: Checking for hardware virtualization : PASS QEMU: Checking if device /dev/kvm exists : PASS QEMU: Checking if device /dev/kvm is accessible : PASS QEMU: Checking if device /dev/vhost-net exists : PASS QEMU: Checking if device /dev/net/tun exists : PASS QEMU: Checking for cgroup \u0026#39;memory\u0026#39; controller support : PASS QEMU: Checking for cgroup \u0026#39;memory\u0026#39; controller mount-point : PASS QEMU: Checking for cgroup \u0026#39;cpu\u0026#39; controller support : PASS QEMU: Checking for cgroup \u0026#39;cpu\u0026#39; controller mount-point : PASS QEMU: Checking for cgroup \u0026#39;cpuacct\u0026#39; controller support : PASS QEMU: Checking for cgroup \u0026#39;cpuacct\u0026#39; controller mount-point : PASS QEMU: Checking for cgroup \u0026#39;cpuset\u0026#39; controller support : PASS QEMU: Checking for cgroup \u0026#39;cpuset\u0026#39; controller mount-point : PASS QEMU: Checking for cgroup \u0026#39;devices\u0026#39; controller support : PASS QEMU: Checking for cgroup \u0026#39;devices\u0026#39; controller mount-point : PASS QEMU: Checking for cgroup \u0026#39;blkio\u0026#39; controller support : PASS QEMU: Checking for cgroup \u0026#39;blkio\u0026#39; controller mount-point : PASS QEMU: Checking for device assignment IOMMU support : PASS QEMU: Checking if IOMMU is enabled by kernel : PASS 如果不支持，则先生成让 Kubevirt 使用软件虚拟化的配置：\n$ kubectl create namespace kubevirt $ kubectl create configmap -n kubevirt kubevirt-config \\ --from-literal debug.useEmulation=true 4. 安装 Kubevirt # 部署最新版本的 Kubevirt # $ export VERSION=$(curl -s https://api.github.com/repos/kubevirt/kubevirt/releases | grep tag_name | grep -v -- \u0026#39;-rc\u0026#39; | head -1 | awk -F\u0026#39;: \u0026#39; \u0026#39;{print $2}\u0026#39; | sed \u0026#39;s/,//\u0026#39; | xargs) $ kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/${VERSION}/kubevirt-operator.yaml $ kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/${VERSION}/kubevirt-cr.yaml 查看部署结果：\n$ kubectl -n kubevirt get pod NAME READY STATUS RESTARTS AGE virt-api-64999f7bf5-n9kcl 1/1 Running 0 6d virt-api-64999f7bf5-st5qv 1/1 Running 0 6d8h virt-controller-8696ccdf44-v5wnq 1/1 Running 0 6d virt-controller-8696ccdf44-vjvsw 1/1 Running 0 6d8h virt-handler-85rdn 1/1 Running 3 7d19h virt-handler-bpgzp 1/1 Running 21 7d19h virt-handler-d55c7 1/1 Running 1 7d19h virt-operator-78fbcdfdf4-sf5dv 1/1 Running 0 6d8h virt-operator-78fbcdfdf4-zf9qr 1/1 Running 0 6d 部署 CDI # Containerized Data Importer（CDI）项目提供了用于使 PVC 作为 KubeVirt VM 磁盘的功能。建议同时部署 CDI：\n$ export VERSION=$(curl -s https://github.com/kubevirt/containerized-data-importer/releases/latest | grep -o \u0026#34;v[0-9]\\.[0-9]*\\.[0-9]*\u0026#34;) $ kubectl create -f https://github.com/kubevirt/containerized-data-importer/releases/download/$VERSION/cdi-operator.yaml $ kubectl create -f https://github.com/kubevirt/containerized-data-importer/releases/download/$VERSION/cdi-cr.yaml 5. 客户端准备 # Kubevirt 提供了一个命令行工具 virtctl，可以直接下载：\n$ export VERSION=$(curl -s https://api.github.com/repos/kubevirt/kubevirt/releases | grep tag_name | grep -v -- \u0026#39;-rc\u0026#39; | head -1 | awk -F\u0026#39;: \u0026#39; \u0026#39;{print $2}\u0026#39; | sed \u0026#39;s/,//\u0026#39; | xargs) $ curl -L -o /usr/local/bin/virtctl https://github.com/kubevirt/kubevirt/releases/download/$VERSION/virtctl-$VERSION-linux-amd64 $ chmod +x /usr/local/bin/virtctl 也可以通过 krew 安装为 kubectl 的插件：\n$ kubectl krew install virt 6. 虚拟机镜像准备 # Windows 镜像下载 # 这里推荐两个 Windows 镜像下载站：\n① MSDN I Tell You。该网站提供的链接是 ed2k 格式，需要通过特殊下载工具进行下载，比如百度网盘离线下载、迅雷、eMule 等，其中百度网盘离线下载最好使，但下载限速又是个大问题，开了超级会员的当我没说。\n② TechBench by WZT。该网站提供的是直链下载方式，可以用任意下载工具进行下载，比上面的网站方便多了，不过资源没有上面的网站丰富。\n我推荐通过第二个网站来下载 Windows 镜像。\n上传镜像 # KubeVirt 可以使用 PVC 作为后端磁盘，使用 filesystem 类型的 PVC 时，默认使用的时 /disk.img 这个镜像，用户可以将镜像上传到 PVC，在创建 VMI 时使用此 PVC。使用这种方式需要注意下面几点：\n一个 PVC 只允许存在一个镜像，只允许一个 VMI 使用，要创建多个 VMI，需要上传多次 /disk.img 的格式必须是 RAW 格式 CDI 提供了使用使用 PVC 作为虚拟机磁盘的方案，在虚拟机启动前通过下面方式填充 PVC：\n通过 URL 导入虚拟机镜像到 PVC，URL 可以是 http 链接，s3 链接 Clone 一个已经存在的 PVC 通过 container registry 导入虚拟机磁盘到 PVC，需要结合 ContainerDisk 使用 通过客户端上传本地镜像到 PVC 通过命令行 virtctl，结合 CDI 项目，可以上传本地镜像到 PVC 上，支持的镜像格式有：\n.img .qcow2 .iso 压缩为 .tar，.gz，.xz 格式的上述镜像 我们的目标是安装 Windows 10 虚拟机，所以需要将上面下载好的 Windows 镜像上传到 PVC：\n$ virtctl image-upload \\ --image-path=\u0026#39;Win10_20H2_Chinese(Simplified)_x64.iso\u0026#39; \\ --storage-class csi-rbd-sc \\ --pvc-name=iso-win10 \\ --pvc-size=7G \\ --uploadproxy-url=https://\u0026lt;cdi-uploadproxy_svc_ip\u0026gt; \\ --insecure \\ --wait-secs=240 PersistentVolumeClaim default/iso-win10 created Waiting for PVC iso-win10 upload pod to be ready... Pod now ready Uploading data to https://10.111.29.156 5.63 GiB / 5.63 GiB [======================================================================================================================================================] 100.00% 27s Uploading data completed successfully, waiting for processing to complete, you can hit ctrl-c without interrupting the progress Processing completed successfully Uploading Win10_20H2_Chinese(Simplified)_x64.iso completed successfully 参数解释：\n\u0026ndash;image-path : 操作系统镜像地址。 \u0026ndash;pvc-name : 指定存储操作系统镜像的 PVC，这个 PVC 不需要提前准备好，镜像上传过程中会自动创建。 \u0026ndash;pvc-size : PVC 大小，根据操作系统镜像大小来设定，一般略大一个 G 就行。 \u0026ndash;uploadproxy-url : cdi-uploadproxy 的 Service IP，可以通过命令 kubectl -n cdi get svc -l cdi.kubevirt.io=cdi-uploadproxy 来查看。 7. 增加 hostDisk 支持 # Kubevirt 默认没有开启对 hostDisk 的支持，需要手动开启。步骤也很简单，只需新建个 ConfigMap，增加 hostDisk 的特性：\nkubevet-config.yaml\napiVersion: v1 data: feature-gates: LiveMigration,DataVolumes,HostDisk kind: ConfigMap metadata: labels: kubevirt.io: \u0026#34;\u0026#34; name: kubevirt-config namespace: kubevirt 7. 创建虚拟机 # 创建 Windows 虚拟机的模板文件如下：\nwin10.yaml\napiVersion: kubevirt.io/v1alpha3 kind: VirtualMachine metadata: name: win10 spec: running: false template: metadata: labels: kubevirt.io/domain: win10 spec: domain: cpu: cores: 4 devices: disks: - bootOrder: 1 cdrom: bus: sata name: cdromiso - disk: bus: virtio name: harddrive - cdrom: bus: sata name: virtiocontainerdisk interfaces: - masquerade: {} model: e1000 name: default machine: type: q35 resources: requests: memory: 16G networks: - name: default pod: {} volumes: - name: cdromiso persistentVolumeClaim: claimName: iso-win10 - name: harddrive hostDisk: capacity: 50Gi path: /data/disk.img type: DiskOrCreate - containerDisk: image: kubevirt/virtio-container-disk name: virtiocontainerdisk 这里用到了 3 个 Volume：\ncdromiso : 提供操作系统安装镜像，即上文上传镜像后生成的 PVC iso-win10。 harddrive : 虚拟机使用的磁盘，即操作系统就会安装在该磁盘上。这里选择 hostDisk 直接挂载到宿主机以提升性能，如果使用分布式存储则体验非常不好。 containerDisk : 由于 Windows 默认无法识别 raw 格式的磁盘，所以需要安装 virtio 驱动。 containerDisk 可以将打包好 virtio 驱动的容器镜像挂载到虚拟机中。 关于网络部分，spec.template.spec.networks 定义了一个网络叫 default，这里表示使用 Kubernetes 默认的 CNI。spec.template.spec.domain.devices.interfaces 选择定义的网络 default，并开启 masquerade，以使用网络地址转换 (NAT) 来通过 Linux 网桥将虚拟机连接至 Pod 网络后端。\n使用模板文件创建虚拟机：\n$ kubectl apply -f win10.yaml 启动虚拟机实例：\n$ virtctl start win10 # 如果 virtctl 安装为 kubectl 的插件，命令格式如下： $ kubectl virt start win10 查看实例运行状态：\n$ kubectl get pod NAME READY STATUS RESTARTS AGE virt-launcher-win10-s742j 2/2 Running 0 15s 然后就可以通过 VNC 工具来访问 Windows 虚拟机了。首先需要在本地安装一个 VNC 客户端，对于 macOS 来说，可以安装 Tiger VNC 或者 Real VNC。我选择安装 Real VNC：\n$ brew cask install vnc-viewer 连接到 Windows 虚拟机：\n$ virtctl vnc win10 # 如果 virtctl 安装为 kubectl 的插件，命令格式如下： $ kubectl virt vnc win10 执行完上面的命令后，就会打开本地的 VNC 客户端连接到虚拟机：\n下面就是安装正常的安装步骤往下进行，到选择硬盘那一步的时候，你会发现没有一个硬盘可供使用，这时就需要安装 virtio 驱动了。\n不过不用担心，virtio 驱动已经被挂载进来了，直接点击加载驱动程序就可以安装驱动了：\n安装好驱动后，硬盘就能正确显示了：\n下面就可以继续安装了。\n安装成功后会自动重启进行初始化设置，那个熟悉的“海内存知己，天涯若比邻”又回来了：\n设置完成后，进入系统，打开设备管理器，可以看到有几个未配置的设备。选择其中一个右键单击，然后选择“更新驱动程序”。\n选择“浏览我的电脑以查找驱动程序”。\n选择“CD 驱动器（E:）virtio-win-0.1.1”，然后点击确定。\n设备管理器将自动找到正确的驱动程序，不需要指定驱动程序的路径。\n在提示符下，单击“安装”。\n其他的设备驱动可以复制上面的步骤一一安装。\n8. CNI 插件问题解决 # 如果你的 Kubernetes 集群 CNI 插件用的是 Calico，这里会遇到虚拟机无法联网的问题。因为 Calico 默认禁用了容器的 ip forward 功能，而 masquerade 需要开启这个功能才能生效。\n我们只需要修改 Calico 的 ConfigMap 就可以启用容器的 ip forward 功能了，执行以下命令打开 configmap calico-config：\n$ kubectl -n kube-system edit cm calico-config 在 CNI 配置文件中加上以下的内容：\n\u0026#34;container_settings\u0026#34;: { \u0026#34;allow_ip_forwarding\u0026#34;: true }, 修改完的配置文件内容：\ncni_network_config: |- { \u0026#34;name\u0026#34;: \u0026#34;k8s-pod-network\u0026#34;, \u0026#34;cniVersion\u0026#34;: \u0026#34;0.3.1\u0026#34;, \u0026#34;plugins\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;calico\u0026#34;, \u0026#34;log_level\u0026#34;: \u0026#34;info\u0026#34;, \u0026#34;log_file_path\u0026#34;: \u0026#34;/var/log/calico/cni/cni.log\u0026#34;, \u0026#34;etcd_endpoints\u0026#34;: \u0026#34;__ETCD_ENDPOINTS__\u0026#34;, \u0026#34;etcd_key_file\u0026#34;: \u0026#34;__ETCD_KEY_FILE__\u0026#34;, \u0026#34;etcd_cert_file\u0026#34;: \u0026#34;__ETCD_CERT_FILE__\u0026#34;, \u0026#34;etcd_ca_cert_file\u0026#34;: \u0026#34;__ETCD_CA_CERT_FILE__\u0026#34;, \u0026#34;mtu\u0026#34;: __CNI_MTU__, \u0026#34;ipam\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;calico-ipam\u0026#34; }, \u0026#34;container_settings\u0026#34;: { \u0026#34;allow_ip_forwarding\u0026#34;: true }, \u0026#34;policy\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;k8s\u0026#34; }, \u0026#34;kubernetes\u0026#34;: { \u0026#34;kubeconfig\u0026#34;: \u0026#34;__KUBECONFIG_FILEPATH__\u0026#34; } }, { \u0026#34;type\u0026#34;: \u0026#34;portmap\u0026#34;, \u0026#34;snat\u0026#34;: true, \u0026#34;capabilities\u0026#34;: {\u0026#34;portMappings\u0026#34;: true} }, { \u0026#34;type\u0026#34;: \u0026#34;bandwidth\u0026#34;, \u0026#34;capabilities\u0026#34;: {\u0026#34;bandwidth\u0026#34;: true} } ] } 然后重启 calico-node 容器：\n$ kubectl -n kube-system delete pod -l k8s-app=calico-node 8. 远程连接 # 在系统未安装好之前，只能用 VNC 来远程控制，但 VNC 的体验实在让人难受。现在系统装好了，就可以使用 Windows 的远程连接协议 RDP（Remote Desktop Protocol） 了。选择开始 \u0026gt;设置 \u0026gt;系统\u0026gt;远程桌面，打开启用远程桌面就好了。\n现在可以通过 telnet 来测试一下 RDP 端口（3389）的连通性：\n$ kubectl get pod -owide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES virt-launcher-win10-s742j 2/2 Running 0 139m 100.92.235.131 k8s03 \u0026lt;none\u0026gt; \u0026lt;none\u0026gt; $ telnet 100.92.235.131 3389 Trying 100.92.235.131... Connected to 100.92.235.131. Escape character is \u0026#39;^]\u0026#39;. 如果你的本地电脑能够直连 Pod IP 和 SVC IP，现在就可以直接通过 RDP 客户端来远程连接 Windows 了。如果你的本地电脑不能直连 Pod IP 和 SVC IP，但可以直连 Kubernetes 集群的 Node IP，可以通过 NodePort 来暴露 RDP 端口。具体操作是创建一个 Service，类型为 NodePort：\n$ kubectl virt expose vm win10 --name win10-rdp --port 3389 --target-port 3389 --type NodePort $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.96.0.1 \u0026lt;none\u0026gt; 443/TCP 17d win10-rdp NodePort 10.98.20.203 \u0026lt;none\u0026gt; 3389:31192/TCP 20m 然后就可以通过 Node IP 来远程连接 Windows 了。\n如果你的本地操作系统是 Windows 10，可以在任务栏的搜索框中，键入“远程桌面连接”，然后选择“远程桌面连接”。在“远程桌面连接”中，键入你想要连接的电脑的名称（从步骤 1），然后选择“连接”。\n如果你的本地操作系统是 macOS，需要在 App Store 中安装 Microsoft Remote Desktop。\n安装完之后打开应用，选择 Add PC：\n在 PC name 一栏中输入 NodeIP+NodePort，然后点击 Add。\n然后右击创建好的配置，选择 Connect：\n输入账号密码后就可以连接到 Windows 了。\n全屏之后就可以获得完美的远程桌面体验了，尽情玩耍吧！\n9. 参考 # 在 Kubernetes 上使用 KubeVirt 管理虚拟机负载 kubevirt-crc-windows-tutorial kubevirt user guide ","date":"2020年1111月13日","externalUrl":null,"permalink":"/posts/use-kubevirt-to-manage-windows-on-kubernetes/","section":"Posts","summary":"","title":"Kubernetes 使用 Kubevirt 运行管理 Windows 10 操作系统","type":"posts"},{"content":"","date":"2020年1111月13日","externalUrl":null,"permalink":"/tags/kubevirt/","section":"标签","summary":"","title":"Kubevirt","type":"tags"},{"content":" Linux 内核调优简单教程 # 都知道，对内核进行调优可以提高并发，但是调得不好，效果可能不是那么如意，记录一下内核调优方法，供工作中查看，切记，仅供参考！\n以下优化每一项都非常非常重要，请务必按逐一完成。\nvim 编辑文件/etc/sysctl.conf\n#该参数设置系统的TIME_WAIT的数量，如果超过默认值则会被立即清除 net.ipv4.tcp_max_tw_buckets = 20000 #定义了系统中每一个端口最大的监听队列的长度，这是个全局的参数 net.core.somaxconn = 65535 #对于还未获得对方确认的连接请求，可保存在队列中的最大数目 net.ipv4.tcp_max_syn_backlog = 262144 #在每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目 net.core.netdev_max_backlog = 30000 #能够更快地回收TIME-WAIT套接字。此选项会导致处于NAT网络的客户端超时，建议为0 net.ipv4.tcp_tw_recycle = 0 #系统所有进程一共可以打开的文件数量 fs.file-max = 6815744 #防火墙跟踪表的大小。注意：如果防火墙没开则会提示error: \"net.netfilter.nf_conntrack_max\" is an unknown key，忽略即可 net.netfilter.nf_conntrack_max = 2621440 编辑完成执行命令sysctl -p 生效\n打开文件数调整 # 设置系统打开文件数设置，解决高并发下 too many open files 问题。此选项直接影响单个进程容纳的客户端连接数。\nSoft open files 是Linux系统参数，影响系统单个进程能够打开最大的文件句柄数量，这个值会影响到长连接应用如聊天中单个进程能够维持的用户连接数， 运行ulimit -n能看到这个参数值，如果是1024，就是代表单个进程只能同时最多只能维持1024甚至更少（因为有其它文件的句柄被打开）。如果开启4个进程维持用户连接，那么整个应用能够同时维持的连接数不会超过4*1024个，也就是说最多只能支持4x1024个用户在线可以增大这个设置以便服务能够维持更多的TCP连接。\nSoft open files 修改方法：\n（1）ulimit -HSn 102400\n这只是在当前终端有效，退出之后，open files 又变为默认值。\n（2）在/etc/profile文件末尾添加一行ulimit -HSn 102400，这样每次登录终端时，都会自动执行/etc/profile。\n（3）令修改open files的数值永久生效，则必须修改配置文件：/etc/security/limits.conf. 在这个文件后加上：\n* soft nofile 1024000 * hard nofile 1024000 root soft nofile 1024000 root hard nofile 1024000 这种方法需要重启机器才能生效。\n","date":"2020年1111月3日","externalUrl":null,"permalink":"/3077.html","section":"Posts","summary":"","title":"Linux 内核调优简单教程","type":"post"},{"content":"","date":"2020年1111月3日","externalUrl":null,"permalink":"/categories/linux%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/","section":"Categories","summary":"","title":"Linux性能优化","type":"categories"},{"content":"","date":"2020年1111月3日","externalUrl":null,"permalink":"/categories/tomcat/","section":"Categories","summary":"","title":"Tomcat","type":"categories"},{"content":"在Linux环境下设置Tomcat JVM，在/opt/tomcat/bin/catalina.sh文件中找到\u0026quot;# -\u0026mdash;- Execute The Requested Command\u0026quot;位置，设置JVM如下：\n# ----- Execute The Requested Command ------------ JAVA_OPTS=\"$JAVA_OPTS -server -Xms3072m -Xmx3072m -XX:PermSize=1024M -XX:MaxPermSize=1024M\" 参数说明：\n-Xms：设置JVM最小内存。此值可以设置与-Xmx相同，以避免每次垃圾回收完成后JVM重新分配内存。 -Xmx：设置JVM最大可用内存。 -XX:NewSize：设置年轻代大小 -XX:PermSize：设置永久代大小 -XX:MaxPermSize：设置最大永久代大小 JVM内存模型\n1.1、Java栈 # Java栈是与每一个线程关联的，JVM在创建每一个线程的时候，会分配一定的栈空间给线程。它主要用来存储线程执行过程中的局部变量，方法的返回值，以及方法调用上下文。栈空间随着线程的终止而释放。\nStackOverflowError：如果在线程执行的过程中，栈空间不够用，那么JVM就会抛出此异常，这种情况一般是死递归造成的。\n1.2、堆 # Java中堆是由所有的线程共享的一块内存区域，堆用来保存各种JAVA对象，比如数组，线程对象等。\n1.3、Java 的内存模型 # a、Young，年轻代（易被 GC） # Young 区被划分为三部分，Eden 区和两个大小严格相同的 Survivor 区，其中 Survivor 区间中，某一时刻只有其中一个是被使用的，另外一个留做垃圾收集时复制对象用，在 Young 区间变满的时候，minor GC 就会将存活的对象移到空闲的Survivor 区间中，根据 JVM 的策略，在经过几次垃圾收集后，任然存活于 Survivor 的对象将被移动到 Tenured 区间。\nb、Tenured，终身代 # Tenured 区主要保存生命周期长的对象，一般是一些老的对象，当一些对象在 Young 复制转移一定的次数以后，对象就会被转移到 Tenured 区，一般如果系统中用了 application 级别的缓存，缓存中的对象往往会被转移到这一区间。\nc、Perm，永久代 # 主要保存 class,method,filed 对象，这部门的空间一般不会溢出，除非一次性加载了很多的类，不过在涉及到热部署的应用服务器的时候，有时候会遇到 java.lang.OutOfMemoryError : PermGen space 的错误，造成这个错误的很大原因就有可能是每次都重新部署，但是重新部署后，类的 class 没有被卸载掉，这样就造成了大量的 class 对象保存在了 perm 中，这种情况下，一般重新启动应用服务器可以解决问题。\n如果服务器只运行一个 Tomcat：\n机子内存如果是 8G，一般 PermSize 配置是主要保证系统能稳定起来就行：\nJAVA_OPTS=\"-Dfile.encoding=UTF-8 -server -Xms6144m -Xmx6144m -XX:NewSize=1024m -XX:MaxNewSize=2048m -XX:MaxTenuringThreshold=10 -XX:NewRatio=2 -XX:+DisableExplicitGC\" 机子内存如果是 16G，一般 PermSize 配置是主要保证系统能稳定起来就行：\nJAVA_OPTS=\"-Dfile.encoding=UTF-8 -server -Xms13312m -Xmx13312m -XX:NewSize=3072m -XX:MaxNewSize=4096m -XX:MaxTenuringThreshold=10 -XX:NewRatio=2 -XX:+DisableExplicitGC\" 机子内存如果是 32G，一般 PermSize 配置是主要保证系统能稳定起来就行：\nJAVA_OPTS=\"-Dfile.encoding=UTF-8 -server -Xms29696m -Xmx29696m -XX:NewSize=6144m -XX:MaxNewSize=9216m -XX:MaxTenuringThreshold=10 -XX:NewRatio=2 -XX:+DisableExplicitGC\" 如果是开发机：\n-Xms550m -Xmx1250m -XX:PermSize=550m -XX:MaxPermSize=1250m 参数说明： -Dfile.encoding：默认文件编码 -server：表示这是应用于服务器的配置，JVM 内部会有特殊处理的 -Xmx1024m：设置JVM最大可用内存为1024MB -Xms1024m：设置JVM最小内存为1024m。此值可以设置与-Xmx相同，以避免每次垃圾回收完成后JVM重新分配内存。 -XX:NewSize：设置年轻代大小 -XX:MaxNewSize：设置最大的年轻代大小 -XX:PermSize：设置永久代大小 -XX:MaxPermSize：设置最大永久代大小 -XX:NewRatio=4：设置年轻代（包括 Eden 和两个 Survivor 区）与终身代的比值（除去永久代）。设置为 4，则年轻代与终身代所占比值为 1：4，年轻代占整个堆栈的 1/5 -XX:MaxTenuringThreshold=10：设置垃圾最大年龄，默认为：15。如果设置为 0 的话，则年轻代对象不经过 Survivor 区，直接进入年老代。对于年老代比较多的应用，可以提高效率。如果将此值设置为一个较大值，则年轻代对象会在 Survivor 区进行多次复制，这样可以增加对象再年轻代的存活时间，增加在年轻代即被回收的概论。 -XX:+DisableExplicitGC：这个将会忽略手动调用 GC 的代码使得 System.gc() 的调用就会变成一个空调用，完全不会触发任何 GC","date":"2020年1111月3日","externalUrl":null,"permalink":"/3075.html","section":"Posts","summary":"","title":"Tomcat JVM 优化","type":"post"},{"content":"","date":"2020年1111月2日","externalUrl":null,"permalink":"/categories/jenkins+gitlab-ci/cd/","section":"Categories","summary":"","title":"Jenkins+Gitlab CI/CD","type":"categories"},{"content":"Jenkins密码忘记分两种情况。\n一、刚开始安装Jenkins，没有修改过密码\n找回：直接找initialAdminPassword，安装初始密码保存在此文件中，具体路径因人而异，可使用find命令查找文件查看，\n二、密码之前修改过，但是再次登录时候忘记自己修改的密码了\n找回：\n1、删除Jenkins目录下config.xml文件中下面代码，并保存文件\n\u0026lt;useSecurity\u0026gt;true\u0026lt;/useSecurity\u0026gt; \u0026lt;authorizationStrategy class=\"hudson.security.FullControlOnceLoggedInAuthorizationStrategy\"\u0026gt; \u0026lt;denyAnonymousReadAccess\u0026gt;true\u0026lt;/denyAnonymousReadAccess\u0026gt; \u0026lt;/authorizationStrategy\u0026gt; \u0026lt;securityRealm class=\"hudson.security.HudsonPrivateSecurityRealm\"\u0026gt; \u0026lt;disableSignup\u0026gt;true\u0026lt;/disableSignup\u0026gt; \u0026lt;enableCaptcha\u0026gt;false\u0026lt;/enableCaptcha\u0026gt; \u0026lt;/securityRealm\u0026gt; 2.重启Jenkins服务；\n3.进入首页\u0026gt;“系统管理”\u0026gt;“Configure Global Security”；\n4.勾选“启用安全”；\n5.点选“Jenkins专有用户数据库”，并点击“保存”；\n6.重新点击首页\u0026gt;“系统管理”,发现此时出现“管理用户”；\n7.点击进入展示“用户列表”；\n8.点击右侧进入修改密码页面，修改后即可重新登录\n","date":"2020年1111月2日","externalUrl":null,"permalink":"/3067.html","section":"Posts","summary":"","title":"Jenkins密码忘记重置方法","type":"post"},{"content":" shtml格式的网页打开乱码，排版错误-\u0026ndash;Nginx配置ssi # 今天上线一套网站，他的网页形式是shtml格式的，等Nginx Tomcat全部部署完毕后，发现打开网页是乱码的。排版也特别不正常，\n网上找了相关资料后得出下文，特此记录\nSSI简介 # Server Side Include ： 服务器端嵌入\n原理 ： 将内容发送到浏览器之前，可以使用“服务器端包含 (SSI）”指令将文本、图形或应用程序信息包含到网页中。因为包含 SSI 指令的文件要求特殊处理，所以必须为所有 SSI 文件赋予 SSI文件扩展名。默认扩展名是 .stm、.shtm 和 .shtml\n主要有以下几种用用途：\n显示服务器端环境变量\u0026lt;#echo\u0026gt; 将文本内容直接插入到文档中\u0026lt;#include\u0026gt; 显示WEB文档相关信息\u0026lt;#flastmod #fsize\u0026gt; （如文件制作日期/大小等） 直接执行服务器上的各种程序\u0026lt;#exec\u0026gt;(如CGI或其他可执行程序） 设置SSI信息显示格式\u0026lt;#config\u0026gt;；（如文件制作日期/大小显示方式） 高级SSI；可设置变量使用if条件语句。 为什么用SSI？ # 一个登录用户在页面访问的时候如何充分利用 cache? 页面静态化的一个大问题是登录用户访问页面如何静态化。例如首页，大部分的页面内容需要缓存但是用户登录后的个人信息是动态信息，不能缓存。那么如何解决这个\u0026quot;页面部分缓存\u0026quot;问题？ 现有的方案是利用 SSI - Server Side include 。 这里最关键的就是静态文件可以包含一个动态的网页的 URL 。 Nginx 如何开启 SSI # 首先找到你的nginx配置文件\nvi /usr/local/nginx/conf/nginx.conf 加入如下代码\n1、开启shtml后缀的文件名支持ssi\nserver{ ...... ssi on; ssi_silent_errors on; ssi_types text/shtml; } 2、开启html后缀的文件名支持ssi\nserver{ ...... ssi on; ssi_silent_errors on; } 3、在sample目录下开启html后缀的文件名支持ssi\nserver{ ...... location /sample/{ ssi on; ssi_silent_errors on; } } 保存 重启 nginx\n","date":"2020年1010月30日","externalUrl":null,"permalink":"/3065.html","section":"Posts","summary":"","title":"shtml格式的网页打开乱码，排版错误---Nginx配置ssi","type":"post"},{"content":"待更新。。。。\n跳转网站：https://kaoshi.pythondesign.cn/index.php\n","date":"2020年1010月28日","externalUrl":null,"permalink":"/2931.html","section":"Posts","summary":"","title":"CKA考试真题9月 2020","type":"post"},{"content":"","date":"2020年1010月27日","externalUrl":null,"permalink":"/3057.html","section":"Posts","summary":"","title":"加油，打工人！","type":"post"},{"content":" K8s如何实现滚动升级 # k8s滚动更新机制： # k8s创建副本应用程序的最佳方法就是部署(Deployment)，部署自动创建副本集(ReplicaSet)，副本集可以精确地控制每次替换的Pod数量，从而可以很好的实现滚动更新。具体来说，k8s每次使用一个新的副本控制器(replication controller)来替换已存在的副本控制器，从而始终使用一个新的Pod模板来替换旧的pod模板。\n大致步骤如下：\n创建一个新的replication controller。 增加或减少pod副本数量，直到满足当前批次期望的数量。 删除旧的replicationplication controller。\n#### 实战演示： 使用kubectl更新一个已部署的应用程序，并模拟回滚。为了方便分析，将应用程序的pod副本数量设置为10。 扩容副本数量 \u0026lt;pre\u0026gt;\u0026lt;code class=\u0026quot;language-bash\u0026quot;\u0026gt;kubectl -n k8s-apps scale deployment helloworldapi --replicas=10\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt; 模拟一下nginx服务\n查看部署列表\nkubectl get deployments -n k8s-apps 查看在运行的pod\nkubectl get pods -n k8s-apps 通过pod描述，查看应用程序的当前映像版本,这里应该是能看到创建的10个副本\n[root@OPPO-test ~]# kubectl describe pods helloworldapi-68d7f6dd8-6tqgl -n k8s-apps | grep image Normal Pulled 55s kubelet, k8s-2 Container image \"nginx:1.16.0\" already present on machine 得知该镜像使用的是1.16.0版本的nginx镜像。现在需要将其升级到1.17.0\n[root@OPPO-test ~]# kubectl -n k8s-apps set image deployment/helloworldapi nginx=nginx:1.17.0 --record deployment.apps/helloworldapi image updated 验证升级成功：\n检查rollout状态\n[root@OPPO-test ~]# kubectl -n k8s-apps rollout status deployments/helloworldapi Waiting for deployment \"helloworldapi\" rollout to finish: 9 out of 10 new replicas have been updated... Waiting for deployment \"helloworldapi\" rollout to finish: 9 out of 10 new replicas have been updated... Waiting for deployment \"helloworldapi\" rollout to finish: 9 out of 10 new replicas have been updated... Waiting for deployment \"helloworldapi\" rollout to finish: 9 out of 10 new replicas have been updated... Waiting for deployment \"helloworldapi\" rollout to finish: 9 out of 10 new replicas have been updated... Waiting for deployment \"helloworldapi\" rollout to finish: 9 out of 10 new replicas have been updated... Waiting for deployment \"helloworldapi\" rollout to finish: 2 old replicas are pending termination... 正在挨个升级\n检查镜像版本\n和上面一样的命令\nkubectl describe pods -n k8s-apps | grep image 回滚发布\n[root@OPPO-test ~]# kubectl -n k8s-apps rollout undo deployments/helloworldapi deployment.apps/helloworldapi rolled back 查看版次\nkubectl -n k8s-ecoysystem-apps rollout history deployment/helloworldapi 回滚到指定版次\nkubectl -n k8s-ecoysystem-apps rollout undo deployment/helloworldapi --to-revision=\u0026lt;版次\u0026gt; 原理\nk8s精确地控制着整个发布过程，分批次有序地进行着滚动更新，直到把所有旧的副本全部更新到新版本。实际上，k8s是通过两个参数来精确地控制着每次滚动的pod数量：\nmaxSurge 滚动更新过程中运行操作期望副本数的最大pod数，可以为绝对数值(eg：5)，但不能为0；也可以为百分数(eg：10%)。默认为25%。\nmaxUnavailable 滚动更新过程中不可用的最大pod数，可以为绝对数值(eg：5)，但不能为0；也可以为百分数(eg：10%)。默认为25%。\nkubectl -n k8s-apps get deployment helloworldapi -o yaml 查看yaml里面的参数\nspec: progressDeadlineSeconds: 600 replicas: 10 revisionHistoryLimit: 10 selector: matchLabels: app: helloworldapi strategy: rollingUpdate: maxSurge: 25% maxUnavailable: 25% type: RollingUpdate [root@OPPO-test ~]# kubectl get deployments.apps -n k8s-apps NAME READY UP-TO-DATE AVAILABLE AGE helloworldapi 10/10 10 10 18m DESIRED 最终期望处于READY状态的副本数\nCURRENT 当前的副本总数\nUP-TO-DATE 当前完成更新的副本数\nAVAILABLE 当前可用的副本数\n在你执行更新的时候就会出现这样的界面，展示正在进行的更新\n[root@OPPO-test ~]# kubectl get deployments.apps -n k8s-apps NAME READY UP-TO-DATE AVAILABLE AGE helloworldapi 8/10 5 8 19m 当前可用的副本数 = 总共副本数量 - 总共副本数量 25% = ，所以AVAILABLE为8。\n当前的副本总数 = 10 + 10 25% = 13\n此时你会发现有13个pod，等待升级完成后就会恢复10个，\n理想状态下的滚动过程：\n创建了一个新的副本集，并为其分配3个新版本的pod，使副本总数达到13，一切正常。\n通知旧副本集，销毁2个旧版本的pod，使可用副本总数保持到8，一起正常。\n当两个副本销毁成功后，通知新副本集，再新增2个新版本的pod，使副本总数达到13，一切正常。\n只要销毁成功，新副本集就会创造新的pod，一直循环，直到旧的副本集pod数量为0。\n滚动升级一个服务，实际就是创建一个新的RS，然后逐渐将新RS中副本数增加到理想状态，将旧RS中的副本数减小到0的复合操作；\n无论理想还是不理想，k8s最终都会使应用程序全部更新到期望状态，都会始终保持最大的副本总数和可用副本总数的不变性！！！\n","date":"2020年1010月27日","externalUrl":null,"permalink":"/3056.html","section":"Posts","summary":"","title":"K8s如何实现滚动升级","type":"post"},{"content":"非打印字符\n\\cx 匹配由x指明的控制字符。例如， \\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 \u0026#039;c\u0026#039; 字符。 \\f 匹配一个换页符。等价于 \\x0c 和 \\cL。 \\n 匹配一个换行符。等价于 \\x0a 和 \\cJ。 \\r 匹配一个回车符。等价于 \\x0d 和 \\cM。 \\s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]。注意 Unicode 正则表达式会匹配全角空格符。 \\S 匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]。 \\t 匹配一个制表符。等价于 \\x09 和 \\cI。 \\v 匹配一个垂直制表符。等价于 \\x0b 和 \\cK。 特殊字符\n$ 匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 \u0026#039;\\n\u0026#039; 或 \u0026#039;\\r\u0026#039;。要匹配 $ 字符本身，请使用 \\$。 ( ) 标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 \\( 和 \\)。 * 匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 \\*。 + 匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \\+。 . 匹配除换行符 \\n 之外的任何单字符。要匹配 . ，请使用 \\. 。 [ 标记一个中括号表达式的开始。要匹配 [，请使用 \\[。 ? 匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 \\?。 \\ 将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， \u0026#039;n\u0026#039; 匹配字符 \u0026#039;n\u0026#039;。\u0026#039;\\n\u0026#039; 匹配换行符。序列 \u0026#039;\\\\\u0026#039; 匹配 \"\\\"，而 \u0026#039;\\(\u0026#039; 则匹配 \"(\"。 ^ 匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 \\^。 { 标记限定符表达式的开始。要匹配 {，请使用 \\{。 | 指明两项之间的一个选择。要匹配 |，请使用 \\|。 限定符\n* 匹配前面的子表达式零次或多次。例如，zo* 能匹配 \"z\" 以及 \"zoo\"。* 等价于{0,}。 + 匹配前面的子表达式一次或多次。例如，\u0026#039;zo+\u0026#039; 能匹配 \"zo\" 以及 \"zoo\"，但不能匹配 \"z\"。+ 等价于 {1,}。 ? 匹配前面的子表达式零次或一次。例如，\"do(es)?\" 可以匹配 \"do\" 、 \"does\" 中的 \"does\" 、 \"doxy\" 中的 \"do\" 。? 等价于 {0,1}。 {n} n 是一个非负整数。匹配确定的 n 次。例如，\u0026#039;o{2}\u0026#039; 不能匹配 \"Bob\" 中的 \u0026#039;o\u0026#039;，但是能匹配 \"food\" 中的两个 o。 {n,} n 是一个非负整数。至少匹配n 次。例如，\u0026#039;o{2,}\u0026#039; 不能匹配 \"Bob\" 中的 \u0026#039;o\u0026#039;，但能匹配 \"foooood\" 中的所有 o。\u0026#039;o{1,}\u0026#039; 等价于 \u0026#039;o+\u0026#039;。\u0026#039;o{0,}\u0026#039; 则等价于 \u0026#039;o*\u0026#039;。 {n,m} m 和 n 均为非负整数，其中n \u0026lt;= m。最少匹配 n 次且最多匹配 m 次。例如，\"o{1,3}\" 将匹配 \"fooooood\" 中的前三个 o。\u0026#039;o{0,1}\u0026#039; 等价于 \u0026#039;o?\u0026#039;。请注意在逗号和两个数之间不能有空格。 定位符\n^ 匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \\n 或 \\r 之后的位置匹配。 $ 匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \\n 或 \\r 之前的位置匹配。 \\b 匹配一个单词边界，即字与空格间的位置。 \\B 非单词边界匹配。","date":"2020年1010月27日","externalUrl":null,"permalink":"/3054.html","section":"Posts","summary":"","title":"正则表达式特殊字符","type":"post"},{"content":"","date":"2020年1010月25日","externalUrl":null,"permalink":"/categories/zabbix/","section":"Categories","summary":"","title":"Zabbix","type":"categories"},{"content":" Zabbix的主动模式与被动模式的配置（zabbix5.0） # 如果有理解错误的地方恳求各位留言指出！！！谢谢\n被动模式 # Zabbix默认使用被动模式监控主机，监控流程：\n由Zabbix Server向Zabbix agent发出指令获取数据，即Zabbix agent被动的去获取数据并返回给zabbix Server，Zabbix Server周期性的向agent 索取数据，这种模式的最大问题就是会加大Zabbix Server的工作量，在数百台服务器的环境下Zabbix Server不能及时获取到最新数据，但这也是默认的工作方式。\n被动模式配置文件：\nPidFile=/tmp/zabbix_agentd.pid LogFile=/tmp/zabbix_agentd.log Server=127.0.0.1 # zabbix-server服务器端的IP地址 ListenPort=10050 #在此端口上侦听来自服务器的连接 ServerActive=127.0.0.1 # Zabbix服务器或Zabbix代理的IP UserParameter=mysqlbak,/usr/bin/cat /data/mysql_backup/bak.txt #自定义监控项键值配置 Hostname=Zabbix server #web端主机名配置，需要两边保持一致，不然会报Not Found 主动模式 # 由zabbix agent主动采集数据并返回给zabbix server，不再需要zabbix serve进行干预，因此主动模式在一定程度上可减轻zabbix server的压力。\n主动模式配置文件：\nLogFile=/tmp/zabbix_agentd.log PidFile=/tmp/zabbix_agentd.pid #Server=112.126.61.194 #主动模式时候注释 #ListenPort=10050 #主动模式时候注释 StartAgents=0 #则禁用被动检查，并且代理将不侦听任何TCP端口。ListenPort不被监听，用于主动模式 ServerActive=112.126.61.194 #主动模式时候 Server端或者Proxy端的IP地址 SourceIP=192.168.11.111 #传出连接的源IP地址 Hostname=k8s-master #Web端主机名配置，需要两边保持一致，不然会报Not Found Timeout=30 #超时时间 UserParameter=mysqlbak,/usr/bin/cat /data/mysql_backup/bak.txt #自定义监控项键值配置 代理模式 # 代理模式主要用于分布式监控，可用来分担server的负载，功能类似于server，agent也分主动被动模式，与上面配置区别在于将Server的IP替换为Proxy代理的IP地址，也可以用在跨机房跨地域进行监控。\n配置文件：\nProxyMode=0 #改为主动模式 Server=192.168.7.100 # zabbix-server服务器端的IP地址 ServerPort=10051 # zabbix-proxy开启的端口 Hostname=zabbix_proxy_active # 主动模式的hostname（代理服务器名称） ListenPort=10051 # 监听的端口 DebugLevel=3 # 日志级别 EnableRemoteCommands=1 # 允许远程连接 LogRemoteCommands=0 # 关闭log日志记录 PidFile=/var/run/zabbix/zabbix_proxy.pid SocketDir=/var/run/zabbix DBHost=192.168.7.103 # 数据库服务器地址 DBName=zabbix_proxy_active # 使用数据库的名称 DBUser=zabbix_proxy_active # 连接数据库的名称 DBPassword=123456 # 数据库的密码 ProxyLocalBuffer=720 # 已经提交到zabbix serverd的数据保留时间 ProxyOfflineBuffer=720 # 未提交到zabbix serever的数据保留时间 HeartbeatFrequency=120 # 心跳检测时间，默认是60s，被动模式不使用 ConfigFrequency=60 # 间隔多久时间从zabbix server获取监控数据（一般设置五分钟） DataSenderFrequency=60 # 数据发送间隔时间，默认为1s。 StartPollers=20 # 启动数据采集器数量 JavaGateway=192.168.7.102 # zabbix-java-gateway主机的IP地址 JavaGatewayPort=10052 # gateway主机的端口 StartJavaPollers=20 # 启动多少个线程采集数据 SNMPTrapperFile=/var/log/snmptrap/snmptrap.log ListenIP=0.0.0.0 # 监控IP地址 CacheSize=128M # 保留监控项占用的最大内存（生产中是2G） HistoryCacheSize=128M # 保留监控历史数据占用的最大内存（生产中是2G） HistoryIndexCacheSize=32M # 监控项历史数据的索引信息（生产中是2G） Timeout=30 # 监控项超时时长，单位为秒 ExternalScripts=/usr/lib/zabbix/externalscripts LogSlowQueries=3000 #单位为毫秒，多久数据库查询会被记录到日志 AllowRoot=0 # 暂时不允许root登陆 User=zabbix # 允许zabbix用户登录 总结：主动模式与被动模式区别仅在于依照agent为参照物，谁先发起请求，\n主动模式为agent向server请求监控项后把数据推送到server端，\n被动模式为server端主动向agent端请求数据\n代理模式则是proxy为server分担压力，降低负载，也可以用在跨机房跨地域进行监控，\n比较重要的参数是ServerActive和Hostname，ServerActive是指定Agentd收集的数据往哪里发送，Hostname是必须要和Server端添加主机时的主机名对应起来，这样Server端接收到数据才能找到对应关系，如果有Server和ServerActive且没有StartAgents=0为兼容被动模式，没有把StartAgents设为0，如果一开始就是使用主动模式的话建议把StartAgents设为0，关闭被动模式\n","date":"2020年1010月25日","externalUrl":null,"permalink":"/3044.html","section":"Posts","summary":"","title":"Zabbix的主动模式与被动模式代理模式的配置（zabbix5.0）","type":"post"},{"content":"","date":"2020年1010月25日","externalUrl":null,"permalink":"/categories/%E7%9B%91%E6%8E%A7/","section":"Categories","summary":"","title":"监控","type":"categories"},{"content":" Zabbix5.0的监控类 # Zabbix的监控类型可以分为四大类：ZBX，SNMP，JMX，IPMI\n颜色为绿色：监控成功\n颜色为红色：监控失败。检测失败会有相对应的提示\n常见的监控类型：\nZabbix agent # 有两种模式；如图所示\n主动模式 # 相对于agent而言；agent(active),agent向server请求与自己相关监控项配置，主动地将server配置的监控项相关的数据发送给server；\n监控过程：zabbix agent首先向ServerActive配置的IP请求获取active items，获取并提交active items数据至server/proxy\n被动模式 # 相对于agent而言；agent, server向agent请求获取配置的各监控项相关的数据，agent接收请求、获取数据并响应给server；\nZabbix Trapper # Zabbix trapper用于一些需要时间长才能获取的数据\nSimple check # 基本的检测有网络、端口、fping这些，功能少并且无需安装客户端\nsnmp check # snmp v1 check、snmp v2 check、snmp v3 check。SNMP协议分1，2，3，但是实际上使用并没有多大的差别。监控范围有限，无需安装agent。但是需要被监控的系统支持SNMP协议并且开启。需要注意端口号。\nZabbix通过简单网络管理协议（Simple Network Management Protocol）监控网络设备或windows主机等。通过设定SNMP的参数将相关监控数据传送至服务端，交换机、防火墙等网络设备一般都支持SNMP协议。\nIPMI agent # 用于监控硬件设备，例如Dell或者HP服务器的主板温度、cpu电压、风扇等硬件设备。惠普的硬件信息可以透过ILO观看，使用zabbix监控时需要进行配置信息，关键在于OID是否正确。\n也叫智能平台管理接口（Intelligent Platform Management Interface，IPMI）即主要应用于设备的物理特性，包括：温度、电压、电扇工作状态，电源供应以及机箱入侵等。IPMI最大的优势在于无论OS的开机还是关机状态下，只要接通电源就可以实现对服务器的监控。\njmx agent # 通过jmx监控java jvm，一般用于监控tomcat。\n","date":"2020年1010月25日","externalUrl":null,"permalink":"/3037.html","section":"Posts","summary":"","title":"Zabbix的监控类","type":"post"},{"content":"#!/bin/bash function get_apache_status { #a. 判断是否有正在运行的进程 while read row; do return 1; done \u0026lt; \u0026lt;(ps -ef|grep -v \"grep\"|grep \"httpd\") return 0; } function get_conf_file { local fileList=() fileList=(\"/etc/httpd/conf/httpd.conf\") echo ${fileList[@]} } function clean_conf_file { cat \"$1\" |sed \u0026#039;/^\\s*#/d\u0026#039; \u0026gt; /tmp/apachefile echo \"/tmp/apachefile\" #local fileList=() #count=1 #for file in $(get_meta_conf_file); do # local confile=\"/tmp/apacheconf${count}\" # cat \"${file}\"|sed \u0026#039;/^\\s*#/d\u0026#039; \u0026gt; $confile # fileList+=($confile) # count=$(( $count + 1)) #done #echo ${fileList[@]} } function apacheScan { userList=() while read -r tmp; do userList+=($tmp) done \u0026lt; \u0026lt;(ps -ef|grep -v grep|grep httpd|sed -e \u0026#039;s/\\s\\{1,\\}/ /g\u0026#039;|cut -d\" \" -f1) for user in ${userList[@]}; do #\"root\" in ${user[@]} ]]; then if [[ $user == \"root\" ]]; then RootUserIfDisable=false fi done get_apache_status if [[ $? -eq 1 ]]; then apacheScanResult=\"[\" fileList=() for file in $(get_conf_file); do fileList+=($file) done for i in ${!fileList[@]}; do if [[ $i == 0 ]]; then apacheScanResult+=\"{\\\"filename\\\":\\\"${fileList[$i]}\\\",\\\"detail\\\":{\" else apacheScanResult+=\",{\\\"filename\\\":\\\"${fileList[$i]}\\\",\\\"detail\\\":{\" fi tmpFilename=$(clean_conf_file ${fileList[$i]}) perm=$(stat -c %a ${tmpFilename}) user=$(grep -i -e \u0026#039;^\\s*User\u0026#039; ${tmpFilename}|awk \u0026#039;{print $2}\u0026#039;) group=$(grep -i -e \u0026#039;^\\s*Group\u0026#039; ${tmpFilename}|awk \u0026#039;{print $2}\u0026#039;) serverRoot=$(grep -i -e \"serverRoot\" ${tmpFilename}|awk \u0026#039;{print $2}\u0026#039;|cut -d\"\\\"\" -f2) serverRootPerm=$(grep -i -e \"serverRoot\" ${tmpFilename}|awk \u0026#039;{print $2}\u0026#039;|cut -d\"\\\"\" -f2|xargs -I {} stat -c %a {}) errorlogPerm=$(grep -i -e \"ErrorLog\" ${tmpFilename}|awk \u0026#039;{print $2}\u0026#039;|cut -d\"\\\"\" -f2|xargs -I {} stat -c %a \"${serverRoot}/\"{}) logLevel=$(grep -i -e \"LogLevel\" ${tmpFilename}|cut -d\" \" -f2) dirList=$(grep -i -E -e \u0026#039;Options.+indexes\u0026#039; ${tmpFilename}) requestMethodLimit=$(grep -i -E -e \u0026#039;LimitExcept\u0026#039; ${tmpFilename}) defaultIndexFile=\"${serverRoot}/conf.d/welcome.conf\" serverSignature=$(grep -i -e \"ServerSignature\" ${tmpFilename}|awk -F \"ServerSignatur\" \u0026#039;{split($2,arr,\" \");print arr[2]}\u0026#039;) serverToken=$(grep -i -e \"ServerToken\" ${tmpFilename}|awk -F \"ServerToken\" \u0026#039;{split($2,arr,\" \");print arr[2]}\u0026#039;) if [[ \"$user\" == \"root\" ]]; then userIfNotRoot=false else userIfNotRoot=true fi if [[ \"$group\" == \"root\" ]]; then groupIfNotRoot=false else groupIfNotRoot=true fi if [ ${serverRootPerm} -gt 744 -o ${serverRootPerm:0-2} -gt 44 ]; then serverRootPermLE744=false else serverRootPermLE744=true fi if [ ${errorlogPerm} -gt 644 -o ${errorlogPerm} -gt 44 ]; then errorlogPermLE644=false else errorlogPermLE644=true fi #for tmp in ( \"debug\" \"info\" \"notice\" ); then tmp=(\"debug\" \"info\" \"notice\") for tmp in ${tmp[@]}; do if [[ \"$logLevel\" =~ \"$tmp\" ]]; then logLevelGENotice=true break fi logLevelGENotice=false done if [[ -n $dirList ]]; then dirListIfDisable=true else dirListIfDisable=false fi if [[ -n $requestMethodLimit ]]; then requestMethodIfLimit=true else requestMethodIfLimit=false fi if [[ -f $defaultIndexFile ]]; then defaultIndexFileIfDel=false else defaultIndexFileIfDel=true fi if [[ \"$serverSignature\" =~ \"Off\" ]]; then serverSignatureIfDisable=true else serverSignatureIfDisable=false fi if [[ \"$serverToken\" =~ \"Prod\" ]]; then serverTokenIfChange=true else serverTokenIfChange=false fi apacheScanResult+=\"\\\"userIfNotRoot\\\":\\\"${userIfNotRoot}\\\",\" apacheScanResult+=\"\\\"groupIfNotRoot\\\":\\\"${groupIfNotRoot}\\\",\" apacheScanResult+=\"\\\"serverRootPermLE744\\\":\\\"${serverRootPermLE744}\\\",\" apacheScanResult+=\"\\\"errorlogPermLE644\\\":\\\"${errorlogPermLE644}\\\",\" apacheScanResult+=\"\\\"logLevelGENotice\\\":\\\"${logLevelGENotice}\\\",\" apacheScanResult+=\"\\\"dirListIfDisable\\\":\\\"${dirListIfDisable}\\\",\" apacheScanResult+=\"\\\"requestMethodIfLimit\\\":\\\"${requestMethodIfLimit}\\\",\" apacheScanResult+=\"\\\"defaultIndexFileIfDel\\\":\\\"${defaultIndexFileIfDel}\\\",\" apacheScanResult+=\"\\\"serverTokenIfChange\\\":\\\"${serverTokenIfChange}\\\",\" apacheScanResult+=\"\\\"serverSignatureIfDisable\\\":\\\"${serverSignatureIfDisable}\\\",\" if $userIfNotRoot ; then echo -e \"\\033[32m [+] userIfNotRoot: $userIfNotRoot \\033[0m\" else echo -e \"\\033[31m [-] userIfNotRoot: $userIfNotRoot \\033[0m\" fi if $groupIfNotRoot ; then echo -e \"\\033[32m [+] groupIfNotRoot : $groupIfNotRoot \\033[0m\" else echo -e \"\\033[31m [-] groupIfNotRoot : $groupIfNotRoot \\033[0m\" fi if $serverRootPermLE744 ; then echo -e \"\\033[32m [+] serverRootPermLE744 : $serverRootPermLE744 \\033[0m\" else echo -e \"\\033[31m [-] serverRootPermLE744 : $serverRootPermLE744 \\033[0m\" fi if $errorlogPermLE744 ; then echo -e \"\\033[32m [+] errorlogPermLE744 : $errorlogPermLE744 \\033[0m\" else echo -e \"\\033[31m [-] errorlogPermLE744 : $errorlogPermLE744 \\033[0m\" fi if $logLevelGENotice ; then echo -e \"\\033[32m [+] logLevelGENotice : $logLevelGENotice \\033[0m\" else echo -e \"\\033[31m [-] logLevelGENotice : $logLevelGENotice \\033[0m\" fi if $dirListIfDisable ; then echo -e \"\\033[32m [+] dirListIfDisable : $dirListIfDisable \\033[0m\" else echo -e \"\\033[31m [-] dirListIfDisable : $dirListIfDisable \\033[0m\" fi if $requestMethodIfLimit ; then echo -e \"\\033[32m [+] requestMethodIfLimit : $requestMethodIfLimit \\033[0m\" else echo -e \"\\033[31m [-] requestMethodIfLimit : $requestMethodIfLimit \\033[0m\" fi if $defaultIndexFileIfDel ; then echo -e \"\\033[32m [+] defaultIndexFileIfDel : $defaultIndexFileIfDel \\033[0m\" else echo -e \"\\033[31m [-] defaultIndexFileIfDel : $defaultIndexFileIfDel \\033[0m\" fi if $serverTokenIfChange ; then echo -e \"\\033[32m [+] serverTokenIfChange : $serverTokenIfChange \\033[0m\" else echo -e \"\\033[31m [-] serverTokenIfChange : $serverTokenIfChange \\033[0m\" fi if $serverSignatureIfDisable ; then echo -e \"\\033[32m [+] serverSignatureIfDisable : $serverSignatureIfDisable \\033[0m\" else echo -e \"\\033[31m [-] serverSignatureIfDisable : $serverSignatureIfDisable \\033[0m\" fi if $RootUserIfDisable ; then echo -e \"\\033[32m [+] RootUserIfDisable : $RootUserIfDisable \\033[0m\" else echo -e \"\\033[31m [-] RootUserIfDisable : $RootUserIfDisable \\033[0m\" fi if [ ${perm} -le 600 -a ${perm:0-2} -le 0 ]; then permLE600=true else permLE600=false fi if $permLE600 ; then echo -e \"\\033[32m [+] permLE600 : $permLE600 \\033[0m\" else echo -e \"\\033[31m [-] permLE600 : $permLE600 \\033[0m\" fi apacheScanResult+=\"\\\"permLE600\\\":\\\"${permLE600}\\\"\" apacheScanResult+=\u0026#039;}\u0026#039; apacheScanResult+=\u0026#039;}\u0026#039; done apacheScanResult+=\u0026#039;]\u0026#039; apacheScanResult=\"{\\\"apacheScanResultList\\\":${apacheScanResult},\\\"RootUserIfDisable\\\":\\\"${RootUserIfDisable}\\\"}\" #echo $apacheScanResult echo $apacheScanResult |jq else apacheScanResult={} fi export apacheScanResult=$apacheScanResult } #apacheScan","date":"2020年1010月25日","externalUrl":null,"permalink":"/3082.html","section":"Posts","summary":"","title":"Apache基线检查","type":"post"},{"content":"","date":"2020年1010月25日","externalUrl":null,"permalink":"/categories/%E5%9F%BA%E7%BA%BF%E6%A3%80%E6%9F%A5/","section":"Categories","summary":"","title":"基线检查","type":"categories"},{"content":"门户网站安全维护手册\n常见网站安全问题及解决方法\n记录常见网站加固方法\n","date":"2020年1010月24日","externalUrl":null,"permalink":"/2785.html","section":"Posts","summary":"","title":"门户网站安全维护手册","type":"post"},{"content":" phpcms添加ssl证书实现https访问后后台列表页不能翻页的解决 # 前不久时间做等保二级，要求万或者使用https访问，用的phpcms，把ssl搞定后发现内页管理内内容无法翻页，点击无反应，\n让phpcms全站支持https访问的教程：\nPHPCMS全站支持https教程\n打开/phpcms/libs/functions/global.func.php,搜索 $url = str_replace(array(\u0026#039;http://\u0026#039;,\u0026#039;//\u0026#039;,\u0026#039;~\u0026#039;), array(\u0026#039;~\u0026#039;,\u0026#039;/\u0026#039;,\u0026#039;http://\u0026#039;), $url); 把上面这个替换成下面的\n$url = str_replace(array(\u0026#039;https://\u0026#039;,\u0026#039;http://\u0026#039;,\u0026#039;//\u0026#039;,\u0026#039;~\u0026#039;,\u0026#039;~\u0026#039;), array(\u0026#039;~\u0026#039;,\u0026#039;~\u0026#039;,\u0026#039;/\u0026#039;,\u0026#039;https://\u0026#039;,\u0026#039;http://\u0026#039;), $url); 现在去清空缓存，再点击看看就能翻页了\n","date":"2020年1010月23日","externalUrl":null,"permalink":"/3034.html","section":"Posts","summary":"","title":"phpcms添加ssl证书实现https访问后后台列表页不能翻页的解决","type":"post"},{"content":"HTTP 80 强制转 HTTPS\n全站采用https协议访问，所以需要http重定向到https，只需要在.htaccess加入下面规则\n在相应的网站根目录新建 .htaccess\nRewriteEngine On RewriteCond %{SERVER_PORT} 80 RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R,L] 或者\nRewriteEngine On RewriteCond %{HTTPS} !=on RewriteRule ^(.*) https://%{SERVER_NAME}/$1 [R,L] 这里分享几个实战案例\n1、强制301重定向 HTTPS\n\u0026lt;IfModule mod_rewrite.c\u0026gt; RewriteEngine on RewriteBase / RewriteCond %{SERVER_PORT} !^443$ RewriteRule (.*) https://%{SERVER_NAME}/$1 [R=301,L] \u0026lt;/IfModule 2、站点绑定多个域名\n只允许www.kubehan.cn 跳转\nRewriteEngine On RewriteCond %{SERVER_PORT} 80 RewriteCond %{HTTP_HOST} ^pythondesign.cn [NC,OR] RewriteCond %{HTTP_HOST} ^www.kubehan.cn [NC] RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R,L] 3、一些比较高级的用法，仅供参考\nRewriteEngine on # 强制HTTPS RewriteCond %{HTTPS} !=on [OR] RewriteCond %{SERVER_PORT} 80 # 某些页面强制 RewriteCond %{REQUEST_URI} ^something_secure [OR] RewriteCond %{REQUEST_URI} ^something_else_secure RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L] # 强制HTTP RewriteCond %{HTTPS} =on [OR] RewriteCond %{SERVER_PORT} 443 # 某些页面强制 RewriteCond %{REQUEST_URI} ^something_public [OR] RewriteCond %{REQUEST_URI} ^something_else_public RewriteRule .* http://%{SERVER_NAME}%{REQUEST_URI} [R=301,L] 4、只要求访问http://bo.kevin.com/beijing/ 时强制跳转到https://bo.kevin.com/beijing/,其他的url访问时都不做http到https的强转!\n下面的配置,就实现了只是针对http://bo.kevin.com/beijing/这一个单独的url做https的强制跳转,其他url访问时都不做跳转!\n\u0026lt;IfModule mod_rewrite.c\u0026gt; RewriteEngine on RewriteBase / RewriteCond %{SERVER_PORT} 80 RewriteCond %{HTTP_HOST} ^bo.kevin.com/beijing/ [NC] RewriteRule ^(.*)$ https://bo.kevin.com/beijing/ [R,L] \u0026lt;/IfModule\u0026gt;","date":"2020年1010月23日","externalUrl":null,"permalink":"/3033.html","section":"Posts","summary":"","title":".htaccess 强制 HTTP 全部跳转到 HTTPS","type":"post"},{"content":"","date":"2020年1010月23日","externalUrl":null,"permalink":"/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/","section":"Categories","summary":"","title":"小技巧","type":"categories"},{"content":" 电脑上如何登录多个微信？-\u0026ndash;微信多开教程 # 有时候需要多个微信登录，但是微信不像QQ那样可以登录多个！\n本教程适用于全部的Windows系统：\n今天就告诉大家如何将微信多开，同时登录多个微信号\n教程开始：\n1、桌面找到微信图标，右键属性，复制目标位置的内容，我的内容如下：\n\"C:\\Program Files (x86)\\Tencent\\WeChat\\WeChat.exe\" 2、桌面新建一个文本文档。将刚刚复制的内容粘贴进去\n格式如下：\n去掉原来的双引号，用双引号把Program Files (x86)引起来，需要多开多少个微信就复制多少行。\nstart \"\" C:\\\"Program Files (x86)\"\\Tencent\\WeChat\\WeChat.exe start \"\" C:\\\"Program Files (x86)\"\\Tencent\\WeChat\\WeChat.exe start \"\" C:\\\"Program Files (x86)\"\\Tencent\\WeChat\\WeChat.exe start \"\" C:\\\"Program Files (x86)\"\\Tencent\\WeChat\\WeChat.exe 3、保存文本为.bat格式，重命名为微信.bat\n4、单击运行bat文件就达到了多开效果\n","date":"2020年1010月22日","externalUrl":null,"permalink":"/3027.html","section":"Posts","summary":"","title":"电脑上如何登录多个微信？---微信多开教程","type":"post"},{"content":"此教程与网上的教程有一定的差别，实现的效果基本差不多，新增了一条网站描述表单\n教程开始：\n将blinks.php 上传到主题目录下的/pages文件夹 将diy.css 内容复制到主题目录下的css文件夹下的css样式文件diy.css ripro主题路径为：/assets/css/diy.css 其他主题添加到: style.css 将diy-footer.php 文件内容复制到： 主题目录下的footer.php文件最后\u0026lt;/div\u0026gt;前面，需要让移动端显示的话就放到\u0026lt;/div\u0026gt;后面 ripro主题路径为： /parts/diy-footer.php 其他主题添加到: footer.php 登录后台添加页面:名称及内容均填写apply-links 效果展示：\n一、效果1\n一、效果2\n","date":"2020年1010月21日","externalUrl":null,"permalink":"/3026.html","section":"Posts","summary":"","title":"Woprdpress 底部友情链接+自助申请友情链接模块","type":"post"},{"content":"Linux高并发服务器内核优化\n性能调优要根据自己的情况逐渐调整，往往结合系统监控和性能压力测试一起进行。不可不调，不可乱调。\n你可以在https://www.kernel.org/doc/html/latest/admin-guide/sysctl/index.html 官方去看也有文档\n性能调优有两个原则：遵从由上之下，木板补板的原则。性能调优遵循由上至下的原则。业务逻辑-\u0026gt;缓存服务器-\u0026gt;调度器-\u0026gt;网络容器-\u0026gt;中间件-\u0026gt;NOSQL-\u0026gt;SQL-\u0026gt;存储-\u0026gt;网络-\u0026gt;硬件-\u0026gt;操作系统-\u0026gt;内核。往往在业务层、和缓存策略、网络容器、中间件的优化效果最是明显。层级越高效果越好。\n通用内核优化参数\n# 指示进程（例如工作进程）可同时打开的最大句柄数，直接限制并发连接的最大数量。 # 默认值：fs.file-max = 141079 fs.file-max = 655350 # 启用keepalive时，TCP发送keepalive消息的频率。默认值为2小时。将其调低一点以更快地删除无用的连接 # 默认值：net.ipv4.tcp_keepalive_time = 7200 net.ipv4.tcp_keepalive_time = 1200 # 当服务器主动关闭链接时，套接字保持FN-WAIT-2状态的最大时间 # 默认值：net.ipv4.tcp_fin_timeout = 60 net.ipv4.tcp_fin_timeout = 30 # 该参数决定了，网络设备接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。 # 默认值：net.core.netdev_max_backlog = 1000 net.core.netdev_max_backlog = 8192 # 每个套接字允许的最大辅助缓冲区大小。辅助数据是带有附加数据的结构cmsghdr结构的序列。 # 默认值：net.core.optmem_max = 20480 net.core.optmem_max = 81920 # 指定了接收套接字缓冲区大小的最大值（以字节为单位）。 # 默认值：net.core.rmem_default = 212992 net.core.rmem_default = 262144 # 允许最大数量的TIME-WAIT套接字。超过几位数，TIME-WAIT套接字将立即清除，并显示警告消息。默认值为8192，太多的TIME-WAIT套接字会减慢Web服务器的速度 # 默认值：net.ipv4.tcp_max_tw_buckets = 8192 net.ipv4.tcp_max_tw_buckets = 5000 # TCP接收/发送缓存最小值，默认值，最大值 # 默认值：net.ipv4.tcp_rmem = 4096 131072 6291456 net.ipv4.tcp_rmem = 4096 32768 262142 # 默认值：net.ipv4.tcp_wmem = 4096 16384 4194304 net.ipv4.tcp_wmem = 4096 32768 262142 # Socket接收/发送缓存最大值 # 默认值均为：212992 net.core.rmem_max = 4194304 net.core.wmem_max = 4194304 # 启用syncookies有助于防御dos攻击，会少量增加CPU使用率，默认启用 net.ipv4.tcp_syncookies = 1 # 接受SYN同步包的最大客户端数量，即半连接上限,128M内存情况下是缺省值1024 默认值：net.ipv4.tcp_max_syn_backlog = 1024 net.ipv4.tcp_max_syn_backlog = 8192 # 服务端所能accept即处理数据的最大客户端数量，即完成连接上限 默认值：net.core.somaxconn = 1024 net.core.somaxconn = 10240","date":"2020年1010月21日","externalUrl":null,"permalink":"/3025.html","section":"Posts","summary":"","title":"Linux高并发服务器内核优化","type":"post"},{"content":" Linux高并发服务器内核优化 # 性能调优要根据自己的情况逐渐调整，往往结合系统监控和性能压力测试一起进行。不可不调，不可乱调。\n你可以在https://www.kernel.org/doc/html/latest/admin-guide/sysctl/index.html 官方去看也有文档\n性能调优有两个原则：遵从由上之下，木板补板的原则。性能调优遵循由上至下的原则。业务逻辑-\u0026gt;缓存服务器-\u0026gt;调度器-\u0026gt;网络容器-\u0026gt;中间件-\u0026gt;NOSQL-\u0026gt;SQL-\u0026gt;存储-\u0026gt;网络-\u0026gt;硬件-\u0026gt;操作系统-\u0026gt;内核。往往在业务层、和缓存策略、网络容器、中间件的优化效果最是明显。层级越高效果越好。\n通用内核优化参数\n# 指示进程（例如工作进程）可同时打开的最大句柄数，直接限制并发连接的最大数量。 # 默认值：fs.file-max = 141079 fs.file-max = 655350 # 启用keepalive时，TCP发送keepalive消息的频率。默认值为2小时。将其调低一点以更快地删除无用的连接 # 默认值：net.ipv4.tcp_keepalive_time = 7200 net.ipv4.tcp_keepalive_time = 1200 # 当服务器主动关闭链接时，套接字保持FN-WAIT-2状态的最大时间 # 默认值：net.ipv4.tcp_fin_timeout = 60 net.ipv4.tcp_fin_timeout = 30 # 该参数决定了，网络设备接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。 # 默认值：net.core.netdev_max_backlog = 1000 net.core.netdev_max_backlog = 8192 # 每个套接字允许的最大辅助缓冲区大小。辅助数据是带有附加数据的结构cmsghdr结构的序列。 # 默认值：net.core.optmem_max = 20480 net.core.optmem_max = 81920 # 指定了接收套接字缓冲区大小的最大值（以字节为单位）。 # 默认值：net.core.rmem_default = 212992 net.core.rmem_default = 262144 # 允许最大数量的TIME-WAIT套接字。超过几位数，TIME-WAIT套接字将立即清除，并显示警告消息。默认值为8192，太多的TIME-WAIT套接字会减慢Web服务器的速度 # 默认值：net.ipv4.tcp_max_tw_buckets = 8192 net.ipv4.tcp_max_tw_buckets = 5000 # TCP接收/发送缓存最小值，默认值，最大值 # 默认值：net.ipv4.tcp_rmem = 4096 131072 6291456 net.ipv4.tcp_rmem = 4096\u0026emsp;\u0026emsp;32768\u0026emsp;\u0026emsp;262142 # 默认值：net.ipv4.tcp_wmem = 4096 16384 4194304 net.ipv4.tcp_wmem = 4096\u0026emsp;\u0026emsp;32768\u0026emsp;\u0026emsp;262142 # Socket接收/发送缓存最大值 # 默认值均为：212992 net.core.rmem_max = 4194304 net.core.wmem_max = 4194304 # 启用syncookies有助于防御dos攻击，会少量增加CPU使用率，默认启用 net.ipv4.tcp_syncookies = 1 # 接受SYN同步包的最大客户端数量，即半连接上限,128M内存情况下是缺省值1024 默认值：net.ipv4.tcp_max_syn_backlog = 1024 net.ipv4.tcp_max_syn_backlog = 8192 # 服务端所能accept即处理数据的最大客户端数量，即完成连接上限 默认值：net.core.somaxconn = 1024 net.core.somaxconn = 10240","date":"2020年1010月19日","externalUrl":null,"permalink":"/2985.html","section":"Posts","summary":"","title":"Linux高并发服务器内核优化","type":"post"},{"content":"apply-links\n","date":"2020年1010月16日","externalUrl":null,"permalink":"/apply-links/","section":"云原生知识栈","summary":"","title":"apply-links","type":"page"},{"content":"","date":"2020年1010月15日","externalUrl":null,"permalink":"/categories/wp/","section":"Categories","summary":"","title":"WP","type":"categories"},{"content":" WP主题侧边栏导航条设置教程 # 此教程是经过网上的一些教程整理而成的，网上很大一部分设置不成功，\n这里给出RiPro主题最新设置方法\n找到主题下找到footer.php文件\n将原来的导航条代码全部替换\n原来的代码替换部分参考代码\n\u0026lt;div class=\"rollbar\"\u0026gt; \u0026lt;?php if (_cao(\u0026#039;site_kefu_qq\u0026#039;)) : ?\u0026gt; \u0026lt;div class=\"rollbar-item tap-qq\" etap=\"tap-qq\"\u0026gt;\u0026lt;a target=\"_blank\" title=\"QQ咨询\" href=\"http://wpa.qq.com/msgrd?v=3\u0026uin=\u0026lt;?php echo _cao(\u0026#039;site_kefu_qq\u0026#039;);?\u0026gt;\u0026site=qq\u0026menu=yes\"\u0026gt;\u0026lt;i class=\"fa fa-qq\"\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;?php endif; ?\u0026gt; \u0026lt;div class=\"rollbar-item\" etap=\"to_full\" title=\"全屏页面\"\u0026gt;\u0026lt;i class=\"fa fa-arrows-alt\"\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;?php if (_cao(\u0026#039;is_ripro_blog_style_btn\u0026#039;,\u0026#039;1\u0026#039;)) : $_bid = (is_cao_site_list_blog()) ? 1 : 0 ; ?\u0026gt; \u0026lt;div class=\"rollbar-item tap-blog-style\" etap=\"tap-blog-style\" data-id=\"\u0026lt;?php echo $_bid; ?\u0026gt;\" title=\"博客模式\"\u0026gt;\u0026lt;i class=\"fa fa-list\"\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;?php endif; ?\u0026gt; \u0026lt;?php if (_cao(\u0026#039;is_ripro_dark_btn\u0026#039;)) : ?\u0026gt; \u0026lt;div class=\"rollbar-item tap-dark\" etap=\"tap-dark\" title=\"夜间模式\"\u0026gt;\u0026lt;i class=\"mdi mdi-brightness-4\"\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;?php endif; ?\u0026gt; \u0026lt;div class=\"rollbar-item\" etap=\"to_top\" title=\"返回顶部\"\u0026gt;\u0026lt;i class=\"fa fa-angle-up\"\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 替换为一下代码：\n暂无优惠 当前隐藏内容需要支付 \u0026lt;div class=\u0026quot;coin\u0026quot;\u0026gt; \u0026lt;span class=\u0026quot;label label-warning\u0026quot;\u0026gt;10积分\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; 已有55人支付 支付查看 最后的效果就是本站的效果；记得把QQ群连接换了\n\u0026lt;li\u0026gt; \u0026lt;a class=\"fankui float-border float-text\" href=\"https://jq.qq.com/?_wv=1027\u0026k=feGPMWKg\" target=\"_Blank\"\u0026gt; \u0026lt;i class=\"iconfont icon-qqq1\"\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;br\u0026gt;QQ群 \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt;","date":"2020年1010月15日","externalUrl":null,"permalink":"/2972.html","section":"Posts","summary":"","title":"WP主题侧边栏导航条设置教程","type":"post"},{"content":"获取随即图片的api接口\n效果如图，图片会随机变化！\nhttps://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture 适用于网页背景的图片： https://img.xjh.me/random_img.php?type=bg\u0026ctype=nature\u0026return=302 适用于手机背景的图片： https://img.xjh.me/random_img.php?type=bg\u0026ctype=nature\u0026return=302\u0026device=mobile ","date":"2020年1010月15日","externalUrl":null,"permalink":"/2961.html","section":"Posts","summary":"","title":"获取随即图片的api接口","type":"post"},{"content":"","date":"2020年1010月14日","externalUrl":null,"permalink":"/zhuanti-4/","section":"云原生知识栈","summary":"","title":"专题","type":"page"},{"content":"","date":"2020年1010月14日","externalUrl":null,"permalink":"/zhuanti-3/","section":"云原生知识栈","summary":"","title":"分类","type":"page"},{"content":"","date":"2020年1010月14日","externalUrl":null,"permalink":"/zhuanti-2/","section":"云原生知识栈","summary":"","title":"分类","type":"page"},{"content":"","date":"2020年1010月14日","externalUrl":null,"permalink":"/2951.html","section":"Posts","summary":"","title":"彩色简历通用模板","type":"post"},{"content":"报错信息：\nERROR: Command errored out with exit status 1: command: /bin/python -c \u0026#039;import sys, setuptools, tokenize; sys.argv[0] = \u0026#039;\"\u0026#039;\"\u0026#039;/tmp/pip-install-bPTUmV/psycopg2/setup.py\u0026#039;\"\u0026#039;\"\u0026#039;; __file__=\u0026#039;\"\u0026#039;\"\u0026#039;/tmp/pip-install-bPTUmV/psycopg2/setup.py\u0026#039;\"\u0026#039;\"\u0026#039;;f=getattr(tokenize, \u0026#039;\"\u0026#039;\"\u0026#039;open\u0026#039;\"\u0026#039;\"\u0026#039;, open)(__file__);code=f.read().replace(\u0026#039;\"\u0026#039;\"\u0026#039;\\r\\n\u0026#039;\"\u0026#039;\"\u0026#039;, \u0026#039;\"\u0026#039;\"\u0026#039;\\n\u0026#039;\"\u0026#039;\"\u0026#039;);f.close();exec(compile(code, __file__, \u0026#039;\"\u0026#039;\"\u0026#039;exec\u0026#039;\"\u0026#039;\"\u0026#039;))\u0026#039; egg_info --egg-base /tmp/pip-pip-egg-info-htz3hz cwd: /tmp/pip-install-bPTUmV/psycopg2/ Complete output (23 lines): running egg_info creating /tmp/pip-pip-egg-info-htz3hz/psycopg2.egg-info writing /tmp/pip-pip-egg-info-htz3hz/psycopg2.egg-info/PKG-INFO writing top-level names to /tmp/pip-pip-egg-info-htz3hz/psycopg2.egg-info/top_level.txt writing dependency_links to /tmp/pip-pip-egg-info-htz3hz/psycopg2.egg-info/dependency_links.txt writing manifest file \u0026#039;/tmp/pip-pip-egg-info-htz3hz/psycopg2.egg-info/SOURCES.txt\u0026#039; Error: pg_config executable not found. pg_config is required to build psycopg2 from source. Please add the directory containing pg_config to the $PATH or specify the full executable path with the option: python setup.py build_ext --pg-config /path/to/pg_config build ... or with the pg_config option in \u0026#039;setup.cfg\u0026#039;. If you prefer to avoid building psycopg2 from source, please install the PyPI \u0026#039;psycopg2-binary\u0026#039; package instead. For further information please check the \u0026#039;doc/src/install.rst\u0026#039; file (also at \u0026lt;https://www.psycopg.org/docs/install.html\u0026gt;). ---------------------------------------- ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. 原因一：\n需要用到插件却没有安装 没有安装postgresql插件\n解决办法：\n安装插件\nyum install postgresql-devel* 原因二：\n插件版本冲突\n解决办法：卸载原来的版本再安装新版本\npip uninstall psycopg2 pip install psycopg2 再次安装就能成功了\n","date":"2020年1010月13日","externalUrl":null,"permalink":"/2948.html","section":"Posts","summary":"","title":"Error: pg_config executable not found 安装python安装psycopg2报错","type":"post"},{"content":"","date":"2020年1010月13日","externalUrl":null,"permalink":"/categories/python/","section":"Categories","summary":"","title":"Python","type":"categories"},{"content":"现在Ripro貌似不支持解析播放腾讯优酷视频，现在教大家解决这个困惑，\n效果:\n直接在视频播放模块输入你浏览器看到的视频链接即可\n教程开始\n1、复制下面解析函数代码，放到function.php最下面。\n暂无优惠 当前隐藏内容需要支付 \u0026lt;div class=\u0026quot;coin\u0026quot;\u0026gt; \u0026lt;span class=\u0026quot;label label-warning\u0026quot;\u0026gt;20积分\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; 已有1314人支付 支付查看 2、修改parts/video-box.php文件\n//找到如下代码（约131行） }else{ $cao_video_url = _get_post_video_url(); } //在上面代码下面填写如下代码 $video_info = wp37_get_video($cao_video_url); $wp37_video_url = $video_info[\u0026#039;url\u0026#039;]; if(empty($video_info[\u0026#039;img\u0026#039;])){ $wp37_video_img = $cao_video_img; }else{ $wp37_video_img = $video_info[\u0026#039;img\u0026#039;]; } //找到如下代码（约138行开始） const dp = new DPlayer({ container: document.getElementById(\u0026#039;ripro-mse\u0026#039;), logo: \u0026#039;\u0026lt;?php echo $site_logo;?\u0026gt;\u0026#039;, //LOGO video: { url: \u0026#039;\u0026lt;?php echo $cao_video_url;?\u0026gt;\u0026#039;, //视频地址 type: \u0026#039;auto\u0026#039;, //视频类型 pic: \u0026#039;\u0026lt;?php echo $cao_video_img;?\u0026gt;\u0026#039;, //视频类型 }, //修改video的部分，修改后如下 video: { url: \u0026#039;\u0026lt;?php echo $wp37_video_url;?\u0026gt;\u0026#039;, //视频地址 type: \u0026#039;auto\u0026#039;, //视频类型 pic: \u0026#039;\u0026lt;?php echo $wp37_video_img;?\u0026gt;\u0026#039;, //视频类型 }, 修改后可以自动播放腾讯视频，去除腾讯的广告，并调用腾讯视频的缩略图，具体查看本页视频演示 ","date":"2020年1010月13日","externalUrl":null,"permalink":"/2946.html","section":"Posts","summary":"","title":"Ripro主题播放优酷腾讯等视频接口解析教程","type":"post"},{"content":"由于官网售价比较昂贵，有些小伙伴买不起该主题，于是网上分享了许多破解版的或者是去除授权的RiPro主题，但是都是有各种BUG，或者就是存在后门。本次分享的RiPro 7.0破解版大家可以放心使用，没有任何功能限制和后门。\nVersion V7.0.0 2020-06-07 最新\n应会员要求 在文章内页新增显示meta瞄点，利于seo，分别显示作者 头像 昵称 发布时间日期瞄点 所属分类 多个\n大面积优化文章内页文字图片等排版，包括图片，相册，h 1234标题 行高 字体大小等，包括手机端协调\n主题设置 底部设置 新增 是否开启底部友情链接模块 ，开启后可以在底部显示友情链接，添加方式在wp后台 链接 添加，跳转模式为新窗口打开\n新增底部设置 网站公安备案号，修复备案链接www问题，正确指向工信部网站链接，并给链接增加rel=”noreferrer nofollow”瞄点 防止seo权重流出\n原版未美化懒人升级：直接和以往一样 上传主题包解压覆盖删除压缩包，重启php即可！\n伪静态设置：\n主题启用后，请设置 WordPress 的固定链接和伪静态规则，否则个别页面会出现 404 错误\n1：宝塔面板请在网站管理–设置–伪静态–选择 wordpress–保存\n2：然后到 WP 后台设置–固定链接–固定连接模式推荐为自定义：/%post_id%.html\n非宝塔面板用户，请自己百度看一下自己服务器环境如何配置 WP 网站的伪静态，步骤二同上\n已经配置过自己伪静态规则的用户请忽略本设置，固定链接模式只要是自定义模式都 OK\n","date":"2020年1010月9日","externalUrl":null,"permalink":"/2847.html","section":"Posts","summary":"","title":"WP模板RiPro 7.0破解版Version V7.0.0 2020最新","type":"post"},{"content":" jenkins初始密码存放： find / -name initialAdminPassword cat /var/lib/jenkins/secrets/initialAdminPassword\nJenkins密码忘记修改文件1.\n删除Jenkins目录下config.xml文件中部分代码，并保存文件。\n文件路径位于\n{}.jenkins/config.xml\n修改工作空间目录\n位于系统管理-\u0026mdash;》高级-\u0026mdash;-》空间目录配置\n2、也可以在安装时配置环境变量指定\n在profile文件添加以下变量后在开始安装jenkins\nexport JENKINS_HOME=/data/jenkins_data/\n","date":"2020年1010月2日","externalUrl":null,"permalink":"/3068.html","section":"Posts","summary":"","title":"Jenkins 相关配置笔记记录","type":"post"},{"content":"视频播放\n","date":"2020年99月30日","externalUrl":null,"permalink":"/2933.html","section":"Posts","summary":"","title":"视频播放","type":"post"},{"content":"#!/bin/bash # @Author: HanWei # @Date: 2020-09-09 10:23:42 # @Last Modified by: HanWei # @Last Modified time: 2020-09-09 15:28:44 # @E-mail: han_wei_95@163.com # #!/bin/bash echo \"脚本使用说明： 1.安装前请提前打开本文件修改基础信息配置部分 2.如果数据库端口不是默认的3306端口，请全局替换3306为你想要的端口 3.提前将二进制安装文件放到root目录下 4.记录好设置的密码 5.安装完成后默认不配置mysql,myssqldump等命令到bash，请自行配置 6.准备名称为mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz的二进制包 7.其他版本安装需要全局替换报名（不包含扩展名）\" #基础信息配置 #1.安装目录 install_DIR=/usr/local/mysql #2.数据目录 data_DIR=/data/mysql/data #3.日志目录 log_DIR=/data/mysql/logs #4.备份目录 bak_DIR=/data/backup mkdir -p /data/backup function check_install_mysql_environment () { echo \"################检查本机安装mysql的基本条件########################\" echo \"Checking user :\" if [ $(id -u) != \"0\" ]; then echo \"Error: You must be root to run this script, please use root to install\" exit 1 else echo \"user is root, this is ok!\" fi echo \"checking os version\" if [ `uname -s`=\"linux\" ]; then echo \"os is linux,this is ok!\" else echo \"os isnot linux,this is fail!\" exit 1 fi if [ -d $data_DIR ]; then echo \"数据目录已经存在，选择是否备份\" read -p \"数据目录已经存在，选择是否备份[y/n]\": keys case \"$keys\" in [yY][eE][sS]|y|Y) echo \"开始备份........\" mv $data_DIR $bak_DIR/data_`date +%Y%m%d%H%M%S` echo \"数据目录已经备份到${bak_DIR}.......\" ls -ld $bak_DIR/data_* keys=\"y\" ;; [nN][oO]|N|n ) echo \"不备份........\" rm -rf $data_DIR keys=\"n\" ;; *) echo \"输入有误，即将退出.......\" exit 1 esac else echo \"mysql datadir $data_DIR is not exist,this is ok!\" fi os_version=`uname -r|cut -d . -f 6` if [ ${os_version}=\"el7\" ] || [${os_version}=\"el6\" ]; then echo \"os version is el6 or el7, this is ok!\" else echo \"os version isnot el6 or el7, this is fail!\" exit 1 fi echo \"############################# 检查mysql端口使用情况#######################\" port=`netstat -ntl| awk \u0026#039;{ print $4}\u0026#039; |grep \u0026#039;3306\u0026#039;|awk -F: \u0026#039;{ print $4}\u0026#039;` if [[ ${port} = \"3306\" ]]; then echo \"mysql port 3306 is exist, please uninstall existed mysql or modify script , this is fail!\" exit 1 else echo \"msyql port is not 3306! this is ok!\" fi } function InstallMySQL() { echo -e \"\\n\" echo \"############################# 开始安装mysql########################\" if [ -s /etc/selinux/config ]; then sed -i \u0026#039;s/SELINUX=enforcing/SELINUX=disabled/g\u0026#039; /etc/selinux/config fi setenforce 0 groupadd mysql -g 512 useradd -u 512 -g mysql -s /sbin/nologin -d /home/mysql mysql #mysql directory configuration if [ -d /root/mysql-5.7.31-linux-glibc2.12-x86_64 ]; then rm -rf /root/mysql-5.7.31-linux-glibc2.12-x86_64 fi echo -e \"正在解压二进制文件..........\\n请耐心等待安装完成...........\" tar -zxvf /root/mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz if [ -d $install_DIR ]; then echo \"备份安装目录\" mv $install_DIR $bak_DIR/mysql_`date +%Y%m%d%H%M%S` echo \"已备份至 $bak_DIR 目录\" fi mv /root/mysql-5.7.31-linux-glibc2.12-x86_64 $install_DIR chown -R mysql:mysql $install_DIR mkdir -p $data_DIR chown -R mysql:mysql $data_DIR echo \"directory $data_DIR created succeed!\" if [ -d $log_DIR ]; then mkdir -p $log_DIR mv $log_DIR $bak_DIR/logs_`date +%Y%m%d%H%M%S` chown -R mysql:mysql $log_DIR echo \"directory $log_DIR created succeed!\" else mkdir -p $log_DIR chown -R mysql:mysql $log_DIR echo \"directory $log_DIR created succeed!\" fi mv /etc/my.cnf /etc/my.cnf.`date +%Y%m%d%H%M%S` #mysql配置文件 echo \"正在生成my.cnf \" cat \u0026gt;\u0026gt;/etc/my.cnf \u0026lt;\u0026lt;EOF [client] #password = your_password port = 3306 socket = /tmp/mysql.sock [mysqld] port = 3306 user = mysql socket = /tmp/mysql.sock pid-file = $install_DIR/mysql.pid basedir= $install_DIR datadir = $data_DIR # 禁用local-infile选项 local-infile = 0 # 禁用symbolic-links选项 skip_symbolic_links = yes default_storage_engine = InnoDB performance_schema_max_table_instances = 400 table_definition_cache = 400 skip-external-locking # 用于索引的缓冲区大小 key_buffer_size = 512M max_allowed_packet = 100G # 表缓存(最大不要超过2048) table_open_cache = 384 # 每个线程排序的缓冲大小 sort_buffer_size = 1024K net_buffer_length = 4K # 读入缓冲区大小 read_buffer_size = 1024K # 随机读取缓冲区大小 read_rnd_buffer_size = 256K myisam_sort_buffer_size = 8M # 线程池大小 thread_cache_size = 128 # 查询缓存,不开启请设为0 query_cache_size = 256M # 临时表缓存大小 tmp_table_size = 512M sql-mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES explicit_defaults_for_timestamp = true #skip-name-resolve # 连接数设置 max_connections = 1000 max_connect_errors = 100 open_files_limit = 65535 log-bin=mysql-bin binlog_format=mixed server-id = 1 expire_logs_days = 10 slow_query_log=1 slow-query-log-file=$log_DIR/mysql-slow.log long_query_time=3 #log_queries_not_using_indexes=on early-plugin-load = \"\" innodb_data_home_dir = $data_DIR innodb_data_file_path = ibdata1:10M:autoextend innodb_log_group_home_dir = $data_DIR innodb_buffer_pool_size = 128M # Innodb日志缓冲区大小 innodb_log_file_size = 64M # Innodb日志缓冲区大小 innodb_log_buffer_size = 16M innodb_flush_log_at_trx_commit = 1 innodb_lock_wait_timeout = 50 innodb_max_dirty_pages_pct = 90 innodb_read_io_threads = 1 innodb_write_io_threads = 1 [mysqldump] quick max_allowed_packet = 500M [mysql] no-auto-rehash [myisamchk] # 用于索引的缓冲区大小 key_buffer_size = 32M # 每个线程排序的缓冲大小 sort_buffer_size = 1024K # 读入缓冲区大小 read_buffer = 2M write_buffer = 2M [mysqlhotcopy] interactive-timeout [mysqld_safe] log-error=$log_DIR/error.log EOF touch $log_DIR/error.log touch $log_DIR/mysql-slow.log chown -R mysql.mysql $data_DIR/../ echo \"正在初始化数据库.................\" $install_DIR/bin/mysqld --defaults-file=/etc/my.cnf --user=mysql --datadir=$data_DIR --basedir=$install_DIR --initialize-insecure cp $install_DIR/support-files/mysql.server /etc/init.d/mysqld chmod 700 /etc/init.d/mysqld chkconfig --add mysqld chkconfig --level 2345 mysqld on /etc/init.d/mysqld start /etc/init.d/mysqld status cat \u0026gt;\u0026gt; /etc/profile \u0026lt;\u0026lt;EOF export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${install_DIR}/lib EOF source /etc/profile $install_DIR/bin/mysqladmin -u root password $mysqlrootpwd /etc/init.d/mysqld restart echo \"============================MySQL 5.7.31 install completed=========================\" echo -e \"\\n\" } function CheckInstall_result() { echo \"=====================================检查安装结果 ===================================\" ismysql=\"\" echo \"Checking...\" if [ -s $install_DIR/bin/mysql ] \u0026\u0026 [ -s $install_DIR/bin/mysqld_safe ] \u0026\u0026 [ -s /etc/my.cnf ] \u0026\u0026 [ `netstat -ntl| awk \u0026#039;{ print $4}\u0026#039; |grep \u0026#039;3306\u0026#039;|awk -F: \u0026#039;{ print $4}\u0026#039;`=\"3306\" ] ; then echo \"MySQL: OK\" ismysql=\"ok\" else echo \"Error: $install_DIR not found!!! MySQL install failed.\" fi if [ \"$ismysql\" = \"ok\" ]; then netstat -ntl ps -ef|grep mysql echo \"=================checked successed!checking result MySQL completed! ================\" else echo \"Sorry,Failed to install MySQL!\" echo \"You can tail /root/mysql-install.log from your server.\" fi } function if_select_install() { echo -e \"\\n\" mysqlrootpwd=\"MANAGER\" echo -e \"Please input the root password for mysql:\" read -p \"(Default password: MANAGER):\" mysqlrootpwd if [ \"$mysqlrootpwd\" = \"\" ]; then mysqlrootpwd=\"MANAGER\" fi echo \"MySQL root password:$mysqlrootpwd\" echo -e \"=========do you want to install mysql ========\" isinstallmysql=\"n\" echo \"Install MySQL,Please input y\" read -p \"(Please input y or n):\" isinstallmysql case \"$isinstallmysql\" in [yY][eE][sS]|y|Y) echo \"You will install MySQL........\" isinstallmysql=\"y\" ;; [nN][oO]|N|n ) echo \"you will exit install MySQL........\" isinstallmysql=\"n\" exit 1 ;; *) echo \"INPUT error,You will exit install MySQL.......\" isinstallmysql=\"n\" exit 1 esac } #The installation flow path echo \"########### 数据库安装脚本： MySQL on Redhat/CentOS 6 or 7 Linux ################ \" cd /root check_install_mysql_environment if_select_install InstallMySQL CheckInstall_result ","date":"2020年99月28日","externalUrl":null,"permalink":"/2928.html","section":"Posts","summary":"","title":"MySQL数据库安装完美版","type":"post"},{"content":"Jenkins介绍和安装及配合GitLab代码自动部署\ncmd下登陆oracle数据库\nLinux系统下用find命令查找最近修改过的文件\nKubernetes 部署失败的 10 个最普遍原因（二）\nKubernetes 部署失败的 10 个最普遍原因（一）\n排查PHP-FPM占用CPU过高\nstrace命令\nstrace命令是一个集诊断、调试、统计与一体的工具，我们可以使用strace对应用的系统调用和信号传递的跟踪结果来对应用进行分析，以达到解决问题或者是了解应用工作过程的目的。当然strace与专业的调试工具比如说gdb之类的是没法相比的，因为它不是一个专业的调试器。\nELK技术博客\nDocker安装单节点ELK\nGitBook博客之安装ELK集群\n","date":"2020年99月26日","externalUrl":null,"permalink":"/2325.html","section":"Posts","summary":"","title":"收藏文章链接记录本","type":"post"},{"content":" 局域网内主机时间同步 # ​ 能联网的电脑，大家都知道可以通过网络来校正系统时间，那没有网络的局域网呢？它的时间又是怎么同步和校正的呢？下面来教大家如何通过设置时间服务器来给局域网内的其他电脑同步时间，具体步骤如下：\n两大步骤：一是先设置服务器；二是设置要同步的电脑。\n方法/步骤 # 1.首先，我们要先来设置服务器端，开启NTP服务，这个协议必需要在服务器端启动才能实现同步的时间，使用快捷键Win+R输入：regedit\n2.启用NTPServer服务，找到如下路径：[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\services\\W32Time\\TimeProviders\\NtpServer] ，右边找到Enable 设置值为1，如下图：\n3.接着设定强制主机（将其自身设宣布为可靠的时间源） ，找到如下路径：[HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\services\\W32Time\\config] ，右边找到AnnounceFlags设置值为5，如下图\n4.重启W32Time服务，来保证设置有效性，这样服务器端就设置好了\n5.服务器端设置完成后，其他要同步的计算机便可以在”Internet时间设置“中输入作为服务器的IP，点击立即更新，等待同步成功即可\n","date":"2020年99月24日","externalUrl":null,"permalink":"/2914.html","section":"Posts","summary":"","title":"局域网内主机时间同步","type":"post"},{"content":" 如何把Execl表和拆分成单个的excel表格文件 # 需求：\n现在我有一个excel文件，里面有1000张表，领导要求把这些表中的某100个表单独发给他！\n疑问：难道我要把这100张表一张一张的复制出来然后再发给老板吗？no no no\n绝招：拆分表\n开始教程\n步骤1：打开您的Excel工作簿，然后单击开发工具选项卡下的“**Visual Basic”**命令，或者只需按“ALT + F11”快捷方式。如果没有开发工具一栏，直接按快捷键\n**步骤2：**出现“Visual Basic编辑器”窗口 单击“插入” – \u0026gt;“模块”以创建新模块。\n**步骤3：**将以下VBA代码粘贴到代码窗口中。然后单击“保存”按钮\nSub SplitWorkbook() Dim workbookPath As String workbookPath = Application.ActiveWorkbook.Path Application.ScreenUpdating = False Application.DisplayAlerts = False For Each wSheet In ThisWorkbook.Sheets wSheet.Copy Application.ActiveWorkbook.SaveAs Filename:=workbookPath \u0026 \"\\\" \u0026 wSheet.Name \u0026 \".xlsx\" Application.ActiveWorkbook.Close False Next Application.DisplayAlerts = True Application.ScreenUpdating = True End Sub 步骤4：然后运行上面的excel宏。单击运行命令\n见证奇迹 # 所有的表格全部变成单个文件\n","date":"2020年99月24日","externalUrl":null,"permalink":"/2902.html","section":"Posts","summary":"","title":"如何把Execl表和拆分成单个的excel表格文件","type":"post"},{"content":"程序修改部分\n1、修改phpcms/modules/admin/site.php\n大约45行和128行的正则\n(\u0026#039;/http:\\/\\/(.+)\\/$/i\u0026#039;, $domain)) 修改为：\n(\u0026#039;/(http|https):\\/\\/(.+)\\/$/i\u0026#039;, $domain)) 2、修改phpcms/modules/admin/templates/setting.tpl.php大约18行中的正则\nhttp:\\/\\/(.+)[^/]$ 修改为：\nhttp[s]?:\\/\\/(.+)[^/]$ 3、修改phpcms/modules/admin/templates/site_add.tpl.php\n大约13行中的正则\nhttp:\\/\\/(.+)\\/$ 修改为：\nhttp[s]?:\\/\\/(.+)\\/$ 4、修改phpcms/modules/admin/templates/site_edit.tpl.php大约11行中的正则\nhttp:\\/\\/(.+)\\/$ 修改为：\nhttp[s]?:\\/\\/(.+)\\/$ 5、修改phpcms/modules/link/templates/link_add.tpl.php大约10行中的正则\n^http:\\/\\/[A-Za-z0-9]+\\.[A-Za-z0-9]+[\\/=\\?%\\-\u0026]*([^\u0026lt;\u0026gt;])*$ 修改为：\n^http[s]?:\\/\\/[A-Za-z0-9]+\\.[A-Za-z0-9]+[\\/=\\?%\\-\u0026]*([^\u0026lt;\u0026gt;])*$ 6、修改phpcms/modules/link/templates/link_edit.tpl.php大约11行中的正则\n^http:\\/\\/[A-Za-z0-9]+\\.[A-Za-z0-9]+[\\/=\\?%\\-\u0026]*([^\u0026lt;\u0026gt;])*$ 修改为：\n^http[s]?:\\/\\/[A-Za-z0-9]+\\.[A-Za-z0-9]+[\\/=\\?%\\-\u0026]*([^\u0026lt;\u0026gt;])*$ 7、修改phpcms/modules/link/index.php大约41行和51行中的正则\n/http:\\/\\/(.*)/i 修改为：\n/^http[s]?:\\/\\/(.*)/i 8、修改phpcms/libs/functions/global.func.php\n大约738行的正则\n$url = str_replace(array(\u0026#039;http://\u0026#039;,\u0026#039;//\u0026#039;,\u0026#039;~\u0026#039;), array(\u0026#039;~\u0026#039;,\u0026#039;/\u0026#039;,\u0026#039;http://\u0026#039;), $url); 修改为\n$url = str_replace(array(\u0026#039;https://\u0026#039;,\u0026#039;//\u0026#039;,\u0026#039;~\u0026#039;), array(\u0026#039;~\u0026#039;,\u0026#039;/\u0026#039;,\u0026#039;https://\u0026#039;), $url); 9、修改phpcms/modules/content/templates/content_list.tpl.php\n大约97行\nelseif(strpos($r[\u0026#039;url\u0026#039;],\u0026#039;http://\u0026#039;)!==false) 修改为\nelseif(strpos($r[\u0026#039;url\u0026#039;],\u0026#039;https://\u0026#039;)!==false) 10、修改phpcms/modules/content/templates/content_page.tpl.php\n大约28行\nif(strpos($category[\u0026#039;url\u0026#039;],\u0026#039;http://\u0026#039;)===false) 修改为\nif(strpos($category[\u0026#039;url\u0026#039;],\u0026#039;http://\u0026#039;)===false \u0026\u0026 strpos($category[\u0026#039;url\u0026#039;],\u0026#039;https://\u0026#039;)===false) 接着修改后台设置-\u0026gt;基本设置 对应的css、js、图片、附件的路径全改为https\n还有后台设置-\u0026gt; 站点管理 里面的站点域名http改为https\n如果你的网站是使用了https 但是url没有显示绿色的安全 则需要在head头部代码 加入\n\u0026lt;meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\" /\u0026gt; 最后更新站点首页，内容页，栏目页。\n严格按照以上步骤修改后，注册用户、帐号登录等操作完全正常，和PHPSSO通信完全正常，后台添加信息和前台链接URL完全正常\nphpcms添加ssl证书实现https访问后后台列表页不能翻页的解决\n","date":"2020年99月22日","externalUrl":null,"permalink":"/2900.html","section":"Posts","summary":"","title":"PHPCMS全站支持https教程","type":"post"},{"content":"[pdf-embedder url=\u0026ldquo;https://www.kubehan.cn/wp-content/uploads/2020/09/1600760560-17dbb628a084cc7.pdf\u0026rdquo; title=\u0026ldquo;1600760560-压测工具ab使用方法\u0026rdquo;]\n","date":"2020年99月22日","externalUrl":null,"permalink":"/2890.html","section":"Posts","summary":"","title":"压测工具ab使用方法","type":"post"},{"content":" Linux 下定时重启Tomcat的shell脚本\u0026ndash;通用 # 脚本使用说明：\n如果没有把JAVA_HOME放到环境变量的话需要取消注释\n#export JAVA_HOME=/usr/local/jdk1.7.0_79 #export JRE_HOME=$JAVA_HOME/jre 不然直接修改tomcat所在路径即可\n脚本执行原理：\n优先使用shutdown命令关闭Tomcat\n用shutdown命令关闭失败，准备kill进程\n#!/bin/bash #auto bakcup mysql db #by authprs hanwei 2019/12/03 . /etc/profile #export JAVA_HOME=/usr/local/jdk1.7.0_79 #export JRE_HOME=$JAVA_HOME/jre tomcatPath=\"//root/apache-tomcat-9.0.27\" binPath=\"$tomcatPath/bin\" echo \"[info][$(date +'%F %H:%M:%S')]正在监控tomcat，路径：$tomcatPath\" pid=`ps -ef|grep java | grep catalina | awk '{print $2}'` if [ -n \"$pid\" ]; then echo \"[info][$(date +'%F %H:%M:%S')]正在运行的tomcat进程为：$pid\" echo \"[info][$(date +'%F %H:%M:%S')]tomcat已经启动，准备使用shutdown命令关闭...\" $binPath\"/shutdown.sh\" sleep 2 pid=`ps -ef|grep java | grep catalina | awk '{print $2}'` if [ -n \"$pid\" ]; then echo \"[info][$(date +'%F %H:%M:%S')]使用shutdown命令关闭失败，准备kill进程...\" kill -9 $pid echo \"[info][$(date +'%F %H:%M:%S')]kill进程完毕！\" sleep 1 else echo \"[info][$(date +'%F %H:%M:%S')]使用shutdown命令关闭成功！\" fi else echo \"[info][$(date +'%F %H:%M:%S')]tomcat未启动！\" fi echo \"[info][$(date +'%F %H:%M:%S')]准备启动tomcat...\" $binPath\"/startup.sh\" ","date":"2020年99月17日","externalUrl":null,"permalink":"/2888.html","section":"Posts","summary":"","title":"Linux 下定时重启Tomcat的shell脚本--通用","type":"post"},{"content":" 在Ubuntu 18.04 # 在终端中键入命令crontab -e，然后按Enter打开crontab文件。 然后出现下图\n按下Enter键后，终端将要求您选择一个编辑器以打开此文件。按1，然后按Enter选择纳米编辑器，因为使用nano编辑器打开系统文件总是很好的\n在终端中键入命令crontab -e，然后按Enter打开crontab文件。 然后出现下图\n可以使用上下箭头键滚动浏览此文件。此文件中所有以“＃”开头的行均表示注释。如果要添加新任务以在指定的时间进行计划，则必须编写没有散列的任务 完成任务添加后，只需按Ctrl + O即可将您的crontab文件保存在nano编辑器中。它将在右上角显示修改后的状态，并要求您输入要写入的文件名。只需按Enter键即可选择默认值。它给出如下\n按Enter键后，您将返回到常规的nano编辑器窗口。现在在保存文件后退出nano编辑器，只需按Ctrl + X\n纳米编辑器关闭后，您将直接进入原始终端窗口。在这里，您将看到“ crontab：安装新的crontab”消息，这表明您的crontab文件已成功保存\n完成此操作后任务计划就添加成功了\n","date":"2020年99月17日","externalUrl":null,"permalink":"/2884.html","section":"Posts","summary":"","title":"在Ubuntu 18.04上计划添加任务","type":"post"},{"content":" Ubuntu18.04 修改时区和更新时间 # 查看时区： # root@k8s-1:~# date -R Thu, 17 Sep 2020 05:18:46 +0000 显示时区并非东八区\n设置时区 # 1.运行tzselect # root@k8s-1:~# tzselect Please identify a location so that time zone rules can be set correctly. Please select a continent, ocean, \"coord\", or \"TZ\". 1) Africa 2) Americas 3) Antarctica 4) Asia 5) Atlantic Ocean 6) Australia 7) Europe 8) Indian Ocean 9) Pacific Ocean 10) coord - I want to use geographical coordinates. 11) TZ - I want to specify the time zone using the Posix TZ format. #? 选择亚洲 输入4回车\nPlease select a country whose clocks agree with yours. 1) Afghanistan 18) Israel 35) Palestine 2) Armenia 19) Japan 36) Philippines 3) Azerbaijan 20) Jordan 37) Qatar 4) Bahrain 21) Kazakhstan 38) Russia 5) Bangladesh 22) Korea (North) 39) Saudi Arabia 6) Bhutan 23) Korea (South) 40) Singapore 7) Brunei 24) Kuwait 41) Sri Lanka 8) Cambodia 25) Kyrgyzstan 42) Syria 9) China 26) Laos 43) Taiwan 10) Cyprus 27) Lebanon 44) Tajikistan 11) East Timor 28) Macau 45) Thailand 12) Georgia 29) Malaysia 46) Turkmenistan 13) Hong Kong 30) Mongolia 47) United Arab Emirates 14) India 31) Myanmar (Burma) 48) Uzbekistan 15) Indonesia 32) Nepal 49) Vietnam 16) Iran 33) Oman 50) Yemen 17) Iraq 34) Pakistan #? 输入9选择中国\nPlease select one of the following time zone regions. 1) Beijing Time 2) Xinjiang Time 再选择北京\nIs the above information OK? 1) Yes 2) No 选择YES\n2.复制文件到/etc目录下 # root@k8s-1:~# cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 改时间\n修改时间 # sudo date -s MM/DD/YY //修改日期 sudo date -s hh:mm:ss //修改时间 在修改时间以后，修改硬件CMOS的时间 sudo hwclock --systohc //非常重要，如果没有这一步的话，后面时间还是不准","date":"2020年99月17日","externalUrl":null,"permalink":"/2883.html","section":"Posts","summary":"","title":"Ubuntu18.04 修改时区和更新时间","type":"post"},{"content":"","date":"2020年99月14日","externalUrl":null,"permalink":"/2878.html","section":"Posts","summary":"","title":"Python视频全套教程","type":"post"},{"content":"正则表达式必知必会\n","date":"2020年99月14日","externalUrl":null,"permalink":"/2876.html","section":"Posts","summary":"","title":"正则表达式必知必会","type":"post"},{"content":"","date":"2020年99月10日","externalUrl":null,"permalink":"/2865.html","section":"Posts","summary":"","title":"Kubernetes权威指南 第4版.pdf","type":"post"},{"content":"Serv-U是一款由Rob Beckers开发的获奖的FTP服务器软件，全称为：Serv-U FTP Server，它功能强大又易于使用。FTP服务器用户通过它用FTP协议能在internet上共享文件。Serv-U不仅100%遵从通用FTP标准，也包括众多的独特功能可为每个用户提供文件共享完美解决方案。\nServ-U是一个非常好的FTP服务器软件，它设置简单，功能强大，性能稳定。你现在就可以建立你自己的FTP服务器了。 设置简单，但功能却不错。做个人的 FTP 服务器是很好的选择。它并不是简单地提供文件的下载，还为用户的系统安全提供了相当全面的保护。例如：您可以为您的 FTP 设置密码、设置各种用户级的访问许可等等。多多小编为大家推荐serv-u破解版，内附注册机以及详细的图文教程，让您免费体验Serv-U的所有功能，亲测可用，有需求的用户请下载体验！\nserv-u破解版\n功能特色\n1、在IPv和IPv6网络中安全传输敏感的商业文件\n2、通过Web界面，远程集中和管理文件传输\n3、自动化文件传输操作,可以节省时间和资源\n4、简化文件上传与下载的Web客户端和移动设备\n5、通过拖放界面方便大文件传输 (\u0026gt; 2 gb)\n6、满足合规要求和安全策略\n7、部署FTP服务器\u0026amp; MFT服务器软件在自己的数据中心\n8、避免在DMZ网络数据\nserv-u 破解版安装教程\n1、下载软件压缩包文件，首先点击“SU-FTP-Server-Windows-v15.1.6.exe”根据提示完成原版安装，默认打开界面如下图所示：\n2、下面我们关闭程序，并退出Serv-U的所有服务。\n右键点击系统托盘中的Serv-U图标，选择“停止Serv-U”选项\n3、将Crack文件夹下注册机文件“Pa.exe”复制到软件根目录下，打开，填入用户名以及邮箱，勾选KEY选项\n4、点击【PATCH】按钮，等待破解完毕，如下图所示：\n5、再次打开Serv-U FTP Server，我们可以发现软件上面的注册提示没有了，表示破解成功！\n更新日志\nServ-U FTP Server 15.1更新：\n1、连接到SMTP服务器时支持显式SSL\n2、支持HTTP严格传输安全\n3、支持椭圆曲线Diffie-Hellman（ECDH）密钥交换\n4、向前保密是默认启用的（仅限新安装）\n5、TLS 1.0默认禁用（仅限新安装）\n6、禁用基于64位块大小的SSL / TLS密码（仅限新安装）\n7、支持安全LDAP协议（仅限Windows安装）\n8、改进的SMTP配置体验\n9、在设置SMTP服务器时，现在可以发送测试电子邮件来验证SMTP配置。\n10、安全性改进\n11、Serv-UServ-U现在支持TLS 1.1和1.2，并且还支持15个新的密码套件。\n12、重新设计的移动Web客户端和其他设计增强功能\n13、移动Web客户端现在采用增强型设计，与Serv-U.Serv-U的一般外观相匹配。\n14、更新的默认Web客户端设置\n15、现在可以将Web Client Pro设置为默认Web客户端。\n16、增强的事件管理\n17、新的Serv-U事件提供了在服务器自动移动文件时获取通知的选项.Serv-U事件提供了在服务器自动移动文件时获取通知的选项。\n","date":"2020年99月10日","externalUrl":null,"permalink":"/2858.html","section":"Posts","summary":"","title":"Serv-U破解工具","type":"post"},{"content":"","date":"2020年99月7日","externalUrl":null,"permalink":"/categories/k8s%E9%83%A8%E7%BD%B2/","section":"Categories","summary":"","title":"K8s部署","type":"categories"},{"content":" Kubernetes (k8s) v1.19.0 安装部署（Kubeadm） # #!/bin/bash # @Author: HanWei # @Date: 2020-09-01 15:04:09 # @Last Modified by: HanWei # @Last Modified time: 2020-09-01 17:05:38 # @E-mail: han_wei_95@163.comKubernetes (k8s) v1.19.0 安装部署（Kubeadm） Kubernetes (k8s) v1.19.0 安装部署（Kubeadm）\n部署方式：Kubeadm\n环境：\nk8s-1 2c4G Ubuntu-18.05 192.168.1.150 k8s-2 2c4G Ubuntu-18.05 192.168.1.151 k8s-3 2c4G Ubuntu-18.05 192.168.1.152 k8s环境准备\n系统环境准备\n1、添加解析（全部节点）\ncat\u0026gt;\u0026gt;/etc/hosts\u0026lt;\u0026lt;EOF 192.168.1.150 k8s-1 192.168.1.151 k8s-2 192.168.1.152 k8s-3 EOF 2、防火墙及swap相关参数设置\n# Turn off and disable the firewalld. 关闭防火墙 ufw disable # Disable the swap. swapoff -a sed -i \u0026#039;s/^.*swap/#\u0026/g\u0026#039; /etc/fstab 运行环境准备 # 1、安装Docker （全部节点）\n#!/bin/bash # I安装docker。设置阿里云的yum源安装新版docker sudo cp /etc/apt/sources.list /etc/apt/sources_init.list curl -fsSL https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - cat \u0026gt; /etc/apt/sources.list \u0026lt;\u0026lt;EOF deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse EOF #安装docker # step 1: 安装必要的一些系统工具 sudo apt-get update sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common # step 2: 安装GPG证书 curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add - # Step 3: 写入软件源信息 sudo add-apt-repository \"deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable\" # Step 4: 更新并安装Docker-CE sudo apt-get -y update sudo apt-get -y install docker-ce # 安装指定版本的Docker-CE: # Step 1: 查找Docker-CE的版本: # apt-cache madison docker-ce # docker-ce | 17.03.1~ce-0~ubuntu-xenial | https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages # docker-ce | 17.03.0~ce-0~ubuntu-xenial | https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages # Step 2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.1~ce-0~ubuntu-xenial) # sudo apt-get -y install docker-ce=[VERSION] #此处配置阿里云为镜像加速，方便国内拉取镜像，并配置cgroupdriver=systemd cat \u0026gt;\u0026gt; /etc/docker/daemon.json\u0026lt;\u0026lt;EOF { \"exec-opts\": [\"native.cgroupdriver=systemd\"], \"registry-mirrors\": [\"https://xk4sok19.mirror.aliyuncs.com\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"storage-driver\": \"overlay2\" } EOF systemctl enable docker systemctl restart docker #关注一下Cgroup Driver是否为 systemd及阿里云镜像加速是否成功配置 docker info root@k8s-1:/etc/apt/apt.conf.d# docker info Client: Debug Mode: false Server: Containers: 0 Running: 0 Paused: 0 Stopped: 0 Images: 0 Server Version: 19.03.12 Storage Driver: overlay2 Backing Filesystem: extfs Supports d_type: true Native Overlay Diff: true Logging Driver: json-file Cgroup Driver: systemd Plugins: Volume: local Network: bridge host ipvlan macvlan null overlay Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog Swarm: inactive Runtimes: runc Default Runtime: runc Init Binary: docker-init containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429 runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd init version: fec3683 Security Options: apparmor seccomp Profile: default Kernel Version: 4.15.0-29-generic Operating System: Ubuntu 18.04.1 LTS OSType: linux Architecture: x86_64 CPUs: 2 Total Memory: 1.936GiB Name: k8s-1 ID: 3VTO:4OVJ:53YS:FUB6:4LC7:I5IF:GBVK:QLSI:IX73:7R2D:LJNB:6QL4 Docker Root Dir: /var/lib/docker Debug Mode: false Registry: https://index.docker.io/v1/ Labels: Experimental: false Insecure Registries: 127.0.0.0/8 Registry Mirrors: https://xk4sok19.mirror.aliyuncs.com/ Live Restore Enabled: false WARNING: No swap limit support root@k8s-1:/etc/apt/apt.conf.d# 2、安装 kubelet-1.19.0-0 kubeadm-1.19.0-0 kubectl-1.19.0-0 （全部节点）\n国内镜像地址 #首先导入 gpg key： curl -fsSL https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - 新建 /etc/apt/sources.list.d/kubernetes.list，内容如下 deb https://mirrors.tuna.tsinghua.edu.cn/kubernetes/apt kubernetes-xenial main 也可以不用新建，直接添加到/etc/apt/sources.list apt-get update更新源 #安装 kubelet-1.19.0-0 kubeadm-1.19.0-0 kubectl-1.19.0-0 apt install -y kubelet kubeadm kubectl systemctl restart kubelet ; systemctl enable kubelet [reply]\n3、安装master（只在master节点执行）\n在安装过程中，可以通过—image-repository来指定镜像仓库：\n初始化方式一：\nkubeadm init --image-repository registry.aliyuncs.com/google_containers --kubernetes-version=v1.19.0 --pod-network-cidr=10.244.0.0/16 初始化方式二：生成初始化配置文件，通过配置文件完成初始化\n#配置文件生成： kubeadm config print init-defaults kubeadm.conf 编辑kubeadm.conf找到serviceSubnet处添加 podSubnet=10.244.0.0/16 并且修改 kubernetes-version=v1.19.0 及 image-repository registry.aliyuncs.com/google_containers 执行初始化： kubeadm init --config kubeadm.conf --ignore-preflight-errors=all 根据执行的结果操作\n要使kubectl适用于您的非root用户，请运行以下命令，这些命令也是kubeadm init输出的一部分：\nmkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config 注意1：这里用\u0026ndash;image-repository选项指定使用阿里云的镜像\n注意2：\u0026ndash;pod-network-cidr=10.244.0.0/16 #这里指的是pod的网段\n注意3：如果想安装其他版本的话，直接在\u0026ndash;kubernetes-version里指定:\nkubeadm init --image-repository registry.aliyuncs.com/google_containers --kubernetes-version=v1.18.2 --pod-network-cidr=10.244.0.0/16 （当然要先安装对应的kubelet的版本）\n2、node节点加入集群\nkubeadm join --token \u0026lt;token\u0026gt; \u0026lt;control-plane-host\u0026gt;:\u0026lt;control-plane-port\u0026gt; --discovery-token-ca-cert-hash sha256:\u0026lt;hash\u0026gt; 上面的提示中，\nkubeadm join 192.168.1.150:6443 --token rzf4r7.y50x0r5zrrkvllao \\ --discovery-token-ca-cert-hash sha256:227bf56c53a225da581a414d2a15e6afa3e3b4e1b57553c0eedee843b158f177 是用于node加入到kubernetes集群的命令，如果忘记了保存此命令的话，可以用如下命令获取：\nkubeadm token create \u0026ndash;print-join-command\n这个token的24小时有效，过期了需要重新生成\n3、安装Pod网络附加组件（在master节点操作就可以）\nwget https://docs.projectcalico.org/v3.11/manifests/calico.yaml\n编辑calico.yaml\n里面的pod网络默认为192.168.0.0/16 # 找到如下内容，取消注释并将网段改完初始化时候的\u0026ndash;pod-network-cidr的值 # name: CALICO_IPV4POOL_CIDR value: \"192.168.0.0/16\" kubectl apply -f calico.yaml 再次在master上运行命令 kubectl get nodes查看运行结果：\n[root@k8s-master ~]# kubectl get nodes NAME STATUS ROLES AGE VERSION k8s-master Ready master 19m v1.19.0 k8s-node1 Ready \u0026lt;none\u0026gt; 16m v1.19.0 k8s-node2 Ready \u0026lt;none\u0026gt; 16m v1.19.0 可以看到所有节点的状态已经变为是Ready了。\n4、配置自动补全命令\n安装bash自动补全插件 # yum install bash-completion -y\n设置kubectl与kubeadm命令补全，下次login生效 # kubectl completion bash \u0026gt;/etc/bash_completion.d/kubectl kubeadm completion bash \u0026gt; /etc/bash_completion.d/kubeadm 5、安全配置\nKubernetes 将Pod调度到Master节点（单机运行K8S）去除 master 的污点\n出于安全考虑，默认配置下Kubernetes不会将Pod调度到Master节点。如果希望将k8s-master也当作Node使用，可以执行如下命令：\nkubectl taint node k8s-master node-role.kubernetes.io/master- 其中k8s-master是主机节点hostname如果要恢复Master Only状态，执行如下命令：\nkubectl taint node k8s-master node-role.kubernetes.io/master=\"\" 这个时间可能清华镜像源还没有k8s1.19的镜像。需要手动下载导入 # 拉取镜像的脚本 在其他的机器上面执行 # ##!/bin/bash # Script For Quick Pull K8S Docker Images # by qiraosky \u0026lt;qiraosky@qq.com\u0026gt; KUBE_VERSION=v1.19.0 PAUSE_VERSION=3.2 CORE_DNS_VERSION=1.7.0 ETCD_VERSION=3.4.9 #下载master组件镜像 docker pull kubesphere/kube-controller-manager-amd64:$KUBE_VERSION docker pull kubesphere/kube-apiserver-amd64:$KUBE_VERSION docker pull kubesphere/kube-scheduler-amd64:$KUBE_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:$ETCD_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:$CORE_DNS_VERSION docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause:$PAUSE_VERSION #下载node组件镜像 docker pull kubesphere/kube-proxy-amd64:$KUBE_VERSION #docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:$ETCD_VERSION #docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:$CORE_DNS_VERSION #docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause:$PAUSE_VERSION # #镜像打tag docker tag kubesphere/kube-proxy-amd64:$KUBE_VERSION k8s.gcr.io/kube-proxy:$KUBE_VERSION docker tag kubesphere/kube-controller-manager-amd64:$KUBE_VERSION k8s.gcr.io/kube-controller-manager:$KUBE_VERSION docker tag kubesphere/kube-apiserver-amd64:$KUBE_VERSION k8s.gcr.io/kube-apiserver:$KUBE_VERSION docker tag kubesphere/kube-scheduler-amd64:$KUBE_VERSION k8s.gcr.io/kube-scheduler:$KUBE_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:$PAUSE_VERSION k8s.gcr.io/pause:$PAUSE_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:$CORE_DNS_VERSION k8s.gcr.io/coredns:$CORE_DNS_VERSION docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:$ETCD_VERSION k8s.gcr.io/etcd:$ETCD_VERSION #删除tag docker rmi kubesphere/kube-proxy-amd64:$KUBE_VERSION docker rmi kubesphere/kube-controller-manager-amd64:$KUBE_VERSION docker rmi kubesphere/kube-apiserver-amd64:$KUBE_VERSION docker rmi kubesphere/kube-scheduler-amd64:$KUBE_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/pause:$PAUSE_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:$CORE_DNS_VERSION docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:$ETCD_VERSION #!/bin/bash #镜像导出 KUBE_VERSION=v1.19.0 PAUSE_VERSION=3.2 CORE_DNS_VERSION=1.7.0 ETCD_VERSION=3.4.9 docker save \u0026lt;code\u003edocker images -aq k8s.gcr.io/kube-proxy:$KUBE_VERSION \u0026gt; kube-proxy:$KUBE_VERSION.tar.gz docker save docker images -aq k8s.gcr.io/kube-controller-manager:$KUBE_VERSION \u0026gt; kube-controller-manager:$KUBE_VERSION.tar.gz docker save docker images -aq k8s.gcr.io/kube-apiserver:$KUBE_VERSION \u0026gt; kube-apiserver:$KUBE_VERSION.tar.gz docker save docker images -aq k8s.gcr.io/kube-scheduler:$KUBE_VERSION \u0026gt; kube-scheduler:$KUBE_VERSION.tar.gz docker save docker images -aq k8s.gcr.io/pause:$PAUSE_VERSION \u0026gt; pause:$PAUSE_VERSION.tar.gz docker save docker images -aq k8s.gcr.io/coredns:$CORE_DNS_VERSION \u0026gt; coredns:$CORE_DNS_VERSION.tar.gz docker save docker images -aq k8s.gcr.io/etcd:$ETCD_VERSION \u0026gt; etcd:$ETCD_VERSION.tar.gz\u0026lt;/code\u003e 导出的镜像在其他机器上面可以直接导入使用\n使用docker load 命令参数导入镜像\n示例：docker load -i \u0026lt; 镜像包.tar.gz\nroot@k8s-1:~# docker load --help Usage: docker load [OPTIONS] Load an image from a tar archive or STDIN Options: -i, --input string Read from tar archive file, instead of STDIN -q, --quiet Suppress the load output 最后如果有需要pdf版本的教程请右边点击支付1元下载\n","date":"2020年99月7日","externalUrl":null,"permalink":"/2836.html","section":"Posts","summary":"","title":"Kubernetes (k8s) v1.19.0 安装部署（Kubeadm）","type":"post"},{"content":"","date":"2020年99月6日","externalUrl":null,"permalink":"/categories/docker/","section":"Categories","summary":"","title":"Docker","type":"categories"},{"content":"Docker从入门到实践.pdf\n","date":"2020年99月6日","externalUrl":null,"permalink":"/2834.html","section":"Posts","summary":"","title":"Docker从入门到实践.pdf","type":"post"},{"content":"","date":"2020年99月6日","externalUrl":null,"permalink":"/categories/%E6%BC%8F%E6%B4%9E%E5%85%AC%E5%91%8A/","section":"Categories","summary":"","title":"漏洞公告","type":"categories"},{"content":"","date":"2020年99月3日","externalUrl":null,"permalink":"/2813.html","section":"Posts","summary":"","title":"Zabbix教程从入门到精通v1.0（TTLSA官方出品）.pdf","type":"post"},{"content":"","date":"2020年99月3日","externalUrl":null,"permalink":"/2810.html","section":"Posts","summary":"","title":"深入浅出Docker.pdf","type":"post"},{"content":"kube-scheduler_v1.19.0.tar.gz\n","date":"2020年99月3日","externalUrl":null,"permalink":"/2809.html","section":"Posts","summary":"","title":"kube-scheduler_v1.19.0.tar.gz","type":"post"},{"content":"","date":"2020年99月3日","externalUrl":null,"permalink":"/2807.html","section":"Posts","summary":"","title":"kube-apiserver_v1.19.0.tar.gz","type":"post"},{"content":"Kubernetes1.19.0离线镜像\n下载上传后用docker load 导入即可\n","date":"2020年99月3日","externalUrl":null,"permalink":"/2803.html","section":"Posts","summary":"","title":"Kubernetes1.19.0离线镜像","type":"post"},{"content":"报错信息如下\nroot@k8s-1:/etc/apt/apt.conf.d# apt-get update Err:1 http://mirrors.aliyun.com/ubuntu bionic InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; Err:2 http://mirrors.aliyun.com/ubuntu bionic-security InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; Err:3 http://mirrors.aliyun.com/ubuntu bionic-updates InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; Err:4 http://mirrors.aliyun.com/ubuntu bionic-proposed InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; Err:5 http://mirrors.aliyun.com/ubuntu bionic-backports InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; Reading package lists... Done W: Failed to fetch http://mirrors.aliyun.com/ubuntu/dists/bionic/InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; W: Failed to fetch http://mirrors.aliyun.com/ubuntu/dists/bionic-security/InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; W: Failed to fetch http://mirrors.aliyun.com/ubuntu/dists/bionic-updates/InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; W: Failed to fetch http://mirrors.aliyun.com/ubuntu/dists/bionic-proposed/InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; W: Failed to fetch http://mirrors.aliyun.com/ubuntu/dists/bionic-backports/InRelease Could not resolve \u0026#039;mirrors.tuna.tsinghua.cn\u0026#039; W: Some index files failed to download. They have been ignored, or old ones used instead. 这里总结比较常见的几种方法\n1.报错大意为不能解析到某个地址\n可能的情况有地址不可用，也就是你源配置有误，百度镜像源找阿里，清华，网易等源来配置\n2.源正确仍然无法解析？\ndns配置有误\n配置dns\nvim /etc/systemd/resolved.conf [Resolve] DNS=8.8.8.8 #FallbackDNS= #Domains= #LLMNR=no #MulticastDNS=no #DNSSEC=no #Cache=yes #DNSStubListener=yes 检查自己的dns配置\n3.前面2个都没问题。还不能apt\n检查是否设置了apt代理，我就是设置了代理，而代理不能用，导致无法使用，那么你需要把代理地址改成有效地址，我是直接取消代理，\n代理地址配置文件：\nroot@k8s-1:/etc/apt/apt.conf.d# pwd /etc/apt/apt.conf.d root@k8s-1:/etc/apt/apt.conf.d# vim 90curtin-aptproxy Acquire::http::Proxy \"https://mtsinghua.cn/ubuntu\"; Acquire::https::Proxy \"https://a.tsinghua.cn/ubuntu\"; 改成有效地址或直接删除、再apt-get update\n","date":"2020年99月2日","externalUrl":null,"permalink":"/2799.html","section":"Posts","summary":"","title":"Ubuntu 使用apt-get安装报错Could not resolve","type":"post"},{"content":"前言：网络上好些写的都是16版本的教程，甚至有把16版本的教程放到18版本的，很浪费我的时间啊，复制粘贴也请先验证一下嘛！\n系统版本：\nUbuntu 18.04.1 LTS (GNU/Linux 4.15.0-29-generic x86_64) 一、更改主机名 # vim /etc/hostname #把主机名写入到这个文件中\nvim /etc/cloud/cloud.cfg\n把preserve_hostname:false变更为preserve_hostname:true\n如果不改变的话重启后hostname会被重置\n二、固定IP地址 # 之前版本的是修改vim /etc/network/interfaces文件\n此版本的方法如下\nvim /etc/netplan/50-cloud-init.yaml\n根据对应的地址更改即可，注意缩进，yaml文件对格式要求严格\nnetplan apply 生效\n","date":"2020年99月2日","externalUrl":null,"permalink":"/2795.html","section":"Posts","summary":"","title":"Ubuntu 18.04 固定主机名及IP地址","type":"post"},{"content":"本书是一个运维人员的十年成长史，从菜鸟到运维总监。但不是基础技术教学，也不会在运维技术的某一方面过深涉及。更多的是应用技巧、实践经验及案例剖析。专栏中的系列文章，包含作者在运维各个细分领域的技术和个人成才的心得体会。因此也可以成为广大运维朋友的工具书，伴随大家从初级运维成长为高级技术型运维管理人才。\n来自看云\n","date":"2020年99月1日","externalUrl":null,"permalink":"/2788.html","section":"Posts","summary":"","title":"高效运维最佳实践","type":"post"},{"content":"1、进入系统后会出现第一个安装页面，让你选择语言，选English就行了。\n2、键盘设置-English\n默认的就行\n3、选择操作Install ubuntu\n4、网络选择\n如果开启了DHCP就默认就行了，没有的话进行配置地址，图片这里不放了\n5、接下来就是磁盘分区，等用户名设置等，很简单的，写出来也是浪费你的阅读时间，有不知道咋回事的默认就好了，\n6、到了设置Proxy address时特别注意此处默认即可也就是不需要配置代理，但是下一步会有Mirrors address，这里填写清华的国内镜像源，设置安装软件、更新源，选择Done,回车\n地址不要使用默认的地址，那样安装会很慢很慢，请填写清华大学的镜像地址：\nhttps://mirrors.tuna.tsinghua.edu.cn/ubuntu/\n打开上面的地址，如果显示和我的图片差不多的，说明地址没有问题\n7、接下来选择Countinue后没几分钟就能安装成功了\n8、重启后大功告成！！！！\n","date":"2020年99月1日","externalUrl":null,"permalink":"/2775.html","section":"Posts","summary":"","title":"Ubuntu 18.04 Server安装过程","type":"post"},{"content":"","date":"2020年88月27日","externalUrl":null,"permalink":"/categories/k8s%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86%E5%8F%AF%E8%A7%86%E5%8C%96/","section":"Categories","summary":"","title":"K8s日志管理可视化","type":"categories"},{"content":"系统环境：\nEtcd 版本：3.4.3\nKubernetes 版本：1.17.4\nKubernetes 安装方式：Kubeadm\n一、简介Kubernetes 使用 Etcd 数据库实时存储集群中的数据，可以说 Etcd 是 Kubernetes 的核心组件，犹如人类的大脑。如果 Etcd 数据损坏将导致 Kubernetes 不可用，在生产环境中 Etcd 数据是一定要做好高可用与数据备份，这里介绍下如何备份与恢复 Etcd 数据。\n二、备份 Etcd 数据 # 1、查询 ETCD 镜像\n查询当前 Kubernetes 使用的 Etcd 使用的镜像，记住镜像名称与版本：\n$ docker images | grep etcd\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;k8s.gcr.io/etcd 3.4.3-0 303ce5db0e90 5 months ago 288MB registry.aliyuncs.com/google_containers/etcd 3.4.3-0 303ce5db0e90 5 months ago 288MB 由于 k8s.gcr.io 镜像仓库国内被墙，所以使用的是阿里云的 etcd 镜像\n2、备份 Etcd 数据\n本人采用的是 Kubeadm 安装的 Kubernetes 集群，采用镜像方式部署的 Etcd，所以操作 Etcd 需要使用 Etcd 镜像提供的 Etcdctl 工具。如果你是非镜像方式部署 Etcd，可以直接使用 Etcdctl 命令备份数据。\n运行 Etcd 镜像，并且使用镜像内部的 etcdctl 工具连接 etcd 集群，执行数据快照备份：\n/bin/sh -c：执行 shell 命令\n\u0026ndash;env：设置环境变量，指定 etcdctl 工具使用的 API 版本\n-v：docker 挂载选项，用于挂载 Etcd 证书相关目录以及备份数据存放的目录\n\u0026ndash;cacert：etcd CA 证书\n\u0026ndash;key：etcd 客户端证书 key\n\u0026ndash;cert：etcd 客户端证书 crt\n\u0026ndash;endpoints：指定 ETCD 连接地址\netcdctl snapshot save：etcd 数据备份\n$ docker run \u0026ndash;rm \u0026lt;br\u0026gt;-v /data/backup:/backup \u0026lt;br\u0026gt;-v /etc/kubernetes/pki/etcd:/etc/kubernetes/pki/etcd \u0026lt;br\u0026gt;\u0026ndash;env ETCDCTL_API=3 \u0026lt;br\u0026gt;k8s.gcr.io/etcd:3.4.3-0 \u0026lt;br\u0026gt;/bin/sh -c \u0026ldquo;etcdctl \u0026ndash;endpoints=https://192.168.11.105:2379 \u0026lt;br\u0026gt;\u0026ndash;cacert=/etc/kubernetes/pki/etcd/ca.crt \u0026lt;br\u0026gt;\u0026ndash;key=/etc/kubernetes/pki/etcd/healthcheck-client.key \u0026lt;br\u0026gt;\u0026ndash;cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt \u0026lt;br\u0026gt;snapshot save /backup/etcd-snapshot.db\u0026rdquo;\n三、恢复 ETCD 数据 # 在 Etcd 数据损坏时，可以通过 Etcd 备份数据进行数据恢复，先暂停 Kubernetes 相关组件，然后进入 Etcd 镜像使用 etcdctl 工具执行恢复操作。\n1、暂停 Kube-Apiserver 与 Etcd 镜像\n在恢复 Etcd 数据前，需要停止 kube-apiserver 与 etcd 镜像，因为当这俩镜像停止后 Kubernetes 会自动重启这俩镜像，所以我们可以先暂时移除 /etc/kubernetes/manifests 目录，Kubernetes 检测这个目录文件不存在时会停止 Kubernetes 系统相关镜像，使其不能重启，方便我们进行后续的操作。\n## 移除且备份 /etc/kubernetes/manifests 目录 $ mv /etc/kubernetes/manifests /etc/kubernetes/manifests.bak\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;查看 kube-apiserver、etcd 镜像是否停止 $ docker ps|grep etcd \u0026amp;\u0026amp; docker ps|grep kube-apiserver\u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt;备份现有 Etcd 数据\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;$ mv /var/lib/etcd /var/lib/etcd.bak 2、恢复 Etcd 数据\n运行 Etcd 镜像，然后执行数据恢复，默认会恢复到 /default.etcd/member/ 目录下，这里使用 mv 命令在移动到挂载目录 /var/lib/etcd/ 下。\n/bin/sh -c：执行 shell 命令\n\u0026ndash;env：设置环境变量，指定 etcdctl 工具使用的 API 版本\n-v：docker 挂载选项，用于挂载 Etcd 证书相关目录以及备份数据存放的目录\netcdctl snapshot restore：etcd 数据恢复。\n$ docker run \u0026ndash;rm -v /data/backup:/backup -v /var/lib/etcd:/var/lib/etcd \u0026ndash;env ETCDCTL_API=3 k8s.gcr.io/etcd:3.4.3-0 /bin/sh -c \u0026ldquo;etcdctl snapshot restore /backup/etcd-snapshot.db; mv /default.etcd/member/ /var/lib/etcd/\u0026rdquo;\n3、恢复 Kube-Apiserver 与 Etcd 镜像\n将 /etc/kubernetes/manifests 目录恢复，使 Kubernetes 重启 Kube-Apiserver 与 Etcd 镜像：\n$ mv /etc/kubernetes/manifests.bak /etc/kubernetes/manifests 4、执行 Kubectl 命令进行检测\n执行 Kubectl 命令进行检测，查看命令是否能够正常执行：\n$ kubectl get node ","date":"2020年88月27日","externalUrl":null,"permalink":"/2767.html","section":"Posts","summary":"","title":"Kubernetes Etcd 数据备份与恢复","type":"post"},{"content":" 1.列出pod并排序 # # 题目一般都是按名字排序 $ kubectl get pod --sort-by .metadata.name 2.找出pod中的错误日志 # # 要求是把错误内容输出到某个文件中，可以粘贴，也可以直接重定向文件 $ kubectl logs mypod-798fcd9949-lk9rc | grep error \u0026gt; xx.log 3.创建一个pod ，并调度到某个节点上 # $ cat \u0026gt; pod.yaml \u0026lt;\u0026lt; EOF apiVersion: v1 kind: Pod metadata: name: nginx labels: env: test spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent nodeSelector: disktype: ssd EOF $ kubectl create -f pod.yaml 4.列出正常节点的个数 # $ kubectl get node | grep -w Ready 5.pod中挂载volume # apiVersion: v1 kind: Pod metadata: name: test-pd spec: containers: - image: k8s.gcr.io/test-webserver name: test-container volumeMounts: - mountPath: /cache name: cache-volume volumes: - name: cache-volume emptyDir: {} 更详细用法参考官方文档：https://kubernetes.io/docs/concepts/storage/volumes/\n6.提供一个pod，添加init-container ,在container中添加一个空文件，启动的时候。在另一个containre中检测是否有这个文件，否则退出 # apiVersion: v1 kind: Pod metadata: creationTimestamp: null labels: run: nginx-pod name: nginx-pod spec: containers: - image: nginx name: nginx-pod command: [\u0026#039;sh\u0026#039;,\u0026#039;-c\u0026#039;,\u0026#039;if [ -f \"a.txt\" ]; then echo xx ;fi\u0026#039;] ports: - containerPort: 80 resources: {} volumeMounts: - name: workdir mountPath: /usr/nginx/html dnsPolicy: ClusterFirst initContainers: - image: busybox name: initcheck command: [\u0026#039;sh\u0026#039;,\u0026#039;-c\u0026#039;,\u0026#039;touch /tmp/index.html\u0026#039;] volumeMounts: - name: workdir mountPath: /tmp volumes: - name: workdir emptyDir: {} 7.创建pod，再创建一个service # apiVersion: v1 kind: Pod metadata: name: nats labels: app: nats spec: containers: - name: nats image: nats --- apiVersion: v1 kind: Service metadata: name: nats spec: selector: app: nats ports: - port: 4222 nodePort: 32222 type: NodePort 8.在一个pod中创建2个容器，如redis+nginx # apiVersion: v1 kind: Pod metadata: name: demo spec: containers: - image: nginx name: nginx - image: redis name: redis 9.找到指定service下的pod中，cpu利用率按高到底排序 # $ kubectl top pods --selector=\"app=demo\" | grep -v NAME | sort -k 2 -nr 10.创建一个简单的daemonset # apiVersion: apps/v1 kind: DaemonSet metadata: name: fluentd-elasticsearch namespace: kube-system labels: k8s-app: fluentd-logging spec: selector: matchLabels: name: fluentd-elasticsearch template: metadata: labels: name: fluentd-elasticsearch spec: tolerations: # this toleration is to have the daemonset runnable on master nodes # remove it if your masters can\u0026#039;t run pods - key: node-role.kubernetes.io/master effect: NoSchedule containers: - name: fluentd-elasticsearch image: quay.io/fluentd_elasticsearch/fluentd:v2.5.2 resources: limits: memory: 200Mi requests: cpu: 100m memory: 200Mi volumeMounts: - name: varlog mountPath: /var/log - name: varlibdockercontainers mountPath: /var/lib/docker/containers readOnly: true terminationGracePeriodSeconds: 30 volumes: - name: varlog hostPath: path: /var/log - name: varlibdockercontainers hostPath: path: /var/lib/docker/containers 11.deployment的扩容 ，scale命令 # $ kubectl scale --replicas=4 deployment demo 12 创建secret，有一个paasword字段（手动base64加密），创建两个pod引用该secret，一个用env ,一个用volume来调用 # $ echo -n \u0026#039;admin\u0026#039; | base64 YWRtaW4= $ echo -n \u0026#039;1f2d1e2e67df\u0026#039; | base64 MWYyZDFlMmU2N2Rm 现在可以像这样写一个 secret 对象：\napiVersion: v1 kind: Secret metadata: name: mysecret type: Opaque data: username: YWRtaW4= password: MWYyZDFlMmU2N2Rm 使用 kubectl apply 创建 secret：\n$ kubectl apply -f ./secret.yaml Pod 中使用 Secret 作为环境变量的示例：\napiVersion: v1 kind: Pod metadata: name: secret-env-pod spec: containers: - name: mycontainer image: redis env: - name: SECRET_USERNAME valueFrom: secretKeyRef: name: mysecret key: username - name: SECRET_PASSWORD valueFrom: secretKeyRef: name: mysecret key: password restartPolicy: Never Pod 中使用 volume 挂在 secret 的例子：\napiVersion: v1 kind: Pod metadata: name: mypod spec: containers: - name: mypod image: redis volumeMounts: - name: foo mountPath: \"/etc/foo\" readOnly: true volumes: - name: foo secret: secretName: mysecret 官方链接：https://kubernetes.io/docs/concepts/configuration/secret/\n13.先将nginx:1.9的deployment，升级到nginx:1.11，记录下来(—record)，然后回滚到1.9 # 升级\n$ kubectl set image deployments demo demo=nginx:1.11 --record 回滚\n$ kubectl rollout undo deployment demo 14.使用 nslookup 查看service 和pod的dns # service 和pod 的创建用之前的 yaml\n# 查看 dns $ kubectl run -it --image busybox:1.28.4 dnstest --rm /bin/sh # 查看 sevice $ nslookup svc-demo.kube-system.svc.cluster.local # 查看 pod # 查看pod ip时，要把1.2.3.4换成1-2-3-4，否则会报错 $ nslookup 1-2-3-4.default.pod.cluster.local 参考文档：https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\n15.etcdctl 来 备份etcd # # 先声明环境变量ETCDCTL_API=3 ，不然etcdctl 是v2版本 $ ETCDCTL_API=3 etcdctl --cacert=/opt/kubernetes/ssl/ca.pem --cert=/opt/kubernetes/ssl/server.pem --key=/opt/kubernetes/ssl/server-key.pem --endpoints=https://192.168.1.36:2379 snapshot save /data/etcd_backup_dir/etcd-snapshot-`date +%Y%m%d`.db 参考文档地址：https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/\n16.static pod 的使用 # 找到 --pod-manifest-path=/etc/kubelet.d/ 配置的位置，然后把 pod 的 yaml 放进去\napiVersion: v1 kind: Pod metadata: name: static-web labels: role: myrole spec: containers: - name: web image: nginx ports: - name: web containerPort: 80 protocol: TCP 参考文档地址：https://kubernetes.io/docs/tasks/administer-cluster/static-pod/\n17.在一个新的namespace创建pod # 先创建 ns\n# 创建 ns $ kubectl create namespace test 再创建 pod\napiVersion: v1 kind: Pod metadata: name: demo namespace: test spec: containers: - image: nginx name: nginx 18.pv 类型 hostpath 位置在/data，大小为1G, readonly 模式 # apiVersion: v1 kind: PersistentVolume metadata: name: example-pv spec: capacity: storage: 1Gi volumeMode: Filesystem accessModes: - ReadOnlyMany persistentVolumeReclaimPolicy: Delete local: path: /data nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: In values: - test-node 参考文档地址：https://kubernetes.io/docs/concepts/storage/persistent-volumes/\n20.给pod创建service # Pod 配置文件\napiVersion: v1 kind: Pod metadata: name: nginx labels: app: nginx spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent service 配置文件，通过 labels app=nginx 关联 pod\napiVersion: v1 kind: Service metadata: name: nginx labels: app: nginx spec: ports: - port: 80 protocol: TCP selector: app: nginx 21.使用node selector，选择disk为ssd的机器调度 # apiVersion: v1 kind: Pod metadata: name: nginx labels: env: test spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent nodeSelector: disktype: ssd 22.排查apiserver连接不上问题： # 下面例举一些可能导致的原因：\n1、apiserver 有负载均衡，负载均衡服务有问题，或者负载均衡服务连接不上后端apiserver\n2、TLS证书过期，分两种情况：\n2.1、整个集群证书过期 2.2、ETCD证书和K8S集群证书分开颁发，只有ETCD集群证书过期，或者k8s内部证书过期 3、apiserver 服务连接过多，导致连接不上\n4、k8s集群规则大，导致etcd集群响应慢，apiserver接口服务也受到影响（因为 apiserver 是k8s集群唯一数据查询与写入口）\n还有其它原因，本文只例举这些。\n23.把一个node弄成unavailable 并且把上边的pod重新调度去新的node上 # $ kubectl drain ${node-name} --delete-local-data=true --ignore-daemonsets=true","date":"2020年88月25日","externalUrl":null,"permalink":"/2763.html","section":"Posts","summary":"","title":"CKA考试题目","type":"post"},{"content":" 网站路径泄露风险问题修复建议 # 以下建议将有助于确保潜在攻击者不会从显示的任何错误消息中得到有价值的信息。\n统一的错误代码：确保您不会使用不一致或“冲突的”错误消息而在无意中将信息提供给攻击者。例如，请不要通过错误消息（如“拒绝访问”）泄漏非预期信息，这样也会让攻击者知道他搜索的文件确实存在。对于存在、不存在以及拒绝读取权限的文件和文件夹，应使用一致的术语。\n信息性错误消息：确保错误消息不会泄漏过多信息。完整或部分路径、变量和文件名、表中的行和列名称以及特定的数据库错误切不可泄漏给最终用户。请记住，攻击者将收集尽可能多的信息，然后将一些表面上无害的信息整合到一起即可策划攻击方法。 适当的错误处理：使用常规错误页面和错误处理逻辑向最终用户通知潜在问题。不要提供可供攻击者在策划攻击时使用的系统信息或其他数据。\n修复措施：\n将所有错误页面引导到一个指定的html页面；\n我的apache服务器：修改http.conf\n取消注释行\nErrorDocument 404 /missing.html\n编写文件到网站根目录下存放\n实例：\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\"en\"\u0026gt;\u0026lt;head\u0026gt;\u0026lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"\u0026gt; \u0026lt;title\u0026gt;页面不存在\u0026lt;/title\u0026gt; \u0026lt;nav data-state=\"closed\"\u0026gt; \u0026lt;h1\u0026gt;404\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;您所寻找的页面不存在。你可以点击下面的按钮，返回主页。 \u0026lt;/p\u0026gt; \u0026lt;a href=\"http://你的域名地址m.cn\"\u0026gt;\u0026lt;button class=\"btn green\"\u0026gt;返回首页\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt; 效果图\n","date":"2020年88月19日","externalUrl":null,"permalink":"/2757.html","section":"Posts","summary":"","title":"网站路径泄露风险问题修复建议","type":"post"},{"content":"接到市总的通知。网站有目录列表显示的漏洞，用的apache服务器\n漏洞描述：使用Apache服务器时，访问地址：https://您的域名/icons/\n会显示你的网站的icon信息\n关闭apache自动目录列表功能的方法 按如下步骤可以禁止：\n打开目录apache/conf/extra/下的文件httpd-autoindex.conf（位置可能有差异）\n我的apache是yum安装的\n配置文件路径：/etc/httpd/conf.d/autoindex.conf\n找到\nAlias /icons/ \"/usr/share/httpd/icons/\" \u0026lt;Directory \"/usr/share/httpd/icons\"\u0026gt; Options Indexes MultiViews FollowSymlinks AllowOverride None Require all granted \u0026lt;/Directory\u0026gt; 去掉Indexes改成\nAlias /icons/ \"/usr/share/httpd/icons/\" \u0026lt;Directory \"/usr/share/httpd/icons\"\u0026gt; Options MultiViews FollowSymlinks AllowOverride None Require all granted \u0026lt;/Directory\u0026gt; 重启apache服务器！\n暴力解决办法就是注释掉或者直接删除icons目录\n","date":"2020年88月19日","externalUrl":null,"permalink":"/2754.html","section":"Posts","summary":"","title":"Apache目录列表漏洞修复方法---icons","type":"post"},{"content":"","date":"2020年88月18日","externalUrl":null,"permalink":"/archives/","section":"云原生知识栈","summary":"","title":"存档","type":"page"},{"content":"","date":"2020年88月18日","externalUrl":null,"permalink":"/zhuanti/","section":"云原生知识栈","summary":"","title":"分类","type":"page"},{"content":"","date":"2020年88月18日","externalUrl":null,"permalink":"/user/","section":"云原生知识栈","summary":"","title":"用户中心","type":"page"},{"content":"需要注意脚本里面的IP地址的对应关系\nyum -y install epel-release\u0026gt;\u0026/dev/null yum -y install jq\u0026gt;\u0026/dev/null kubectl delete serviceaccount coredns\u0026gt;\u0026/dev/null kubectl delete clusterrole.rbac.authorization.k8s.io system:coredns --namespace=kube-system\u0026gt;\u0026/dev/null kubectl delete clusterrolebinding.rbac.authorization.k8s.io system:coredns --namespace=kube-system\u0026gt;\u0026/dev/null kubectl delete configmap coredns --namespace=kube-system\u0026gt;\u0026/dev/null kubectl delete deployment.apps coredns --namespace=kube-system\u0026gt;\u0026/dev/null kubectl delete service kube-dns --namespace=kube-system\u0026gt;\u0026/dev/null bash modules/deploy_coredns.sh -r 10.0.0.0/24 -i 10.0.0.2 -d cluster.local -t modules/coredns.yaml | kubectl apply -f - # If you deploy successfully. You can enter a container and you will see these: # kubectl exec -it dns-tets-tools-6bf6db5c4f-nnp9p sh # nslookup www.baidu.com # Server: 10.0.0.2 # Address 1: 10.0.0.2 kube-dns.kube-system.svc.cluster.local # Name: www.baidu.com # Address 1: 182.61.200.6 # Address 2: 182.61.200.7 ","date":"2020年88月12日","externalUrl":null,"permalink":"/2676.html","section":"Posts","summary":"","title":"k8s之coredns部署脚本","type":"post"},{"content":" dirname命令 # dirname命令去除文件名中的非目录部分，仅显示与目录有关的内容。dirname命令读取指定路径名保留最后一个/及其后面的字符，删除其他部分，并写结果到标准输出。如果最后一个/后无字符，dirname 命令使用倒数第二个/，并忽略其后的所有字符。dirname 和 basename 通常在 shell 内部命令替换使用，以指定一个与指定输入文件名略有差异的输出文件名。\n案例：\ndirname // 结果为 / dirname /a/b/ 结果为：/a dirname a 结果为 . dirname a/b 结果为路径名 a 一句话说dirname是过滤目录的命令\nbasename命令 # basename命令用于打印目录或者文件的基本名称。basename和dirname命令通常用于shell脚本中的命令替换来指定和指定的输入文件名称有所差异的输出文件名称。\n案例：\n1、要显示一个shell变量的基本名称，请输入：\nbasename $WORKFILE 此命令显示指定给shell变量WORKFILE的值的基本名称。如果WORKFILE变量的值是/home/jim/program.c文件，则此命令显示program.c。\n要构造一个和另一个文件名称相同（除了后缀）的文件名称，请输入：\nOFILE=`basename $1 .c`.o 此命令指定给 OFILE 文件第一个位置上的参数（$1）的值，但它的 .c 后缀更改至 .o。如果 $1 是 /home/jim/program.c 文件，则 OFILE 成为 program.o。因为 program.o 仅是一个基本文件名称，它标识在当前目录中的文件。\n","date":"2020年88月4日","externalUrl":null,"permalink":"/2668.html","section":"Posts","summary":"","title":"basename命令及dirname命令使用","type":"post"},{"content":"针对该需求，网上大多是使用rename来实现改变文件名来达到大小写转换的需求\n但是我试了几次没有成功\n网上的案例是这样的：\nrename \u0026#039;s/A-Z/a-z/\u0026#039; * 我试了行不通。\n琢磨了一下写出下面这个脚本；\n#!/bin/bash dir=\"./\"; files=`find $dir -type f`; for file in $files do dir_name=`dirname $file`; ori_filename=`basename $file`; new_filename=`echo $ori_filename|tr \u0026#039;A-Z\u0026#039; \u0026#039;a-z\u0026#039;`\u0026gt;/dev/null; mv $dir_name/$ori_filename $dir_name/$new_filename done 脚本整体思路：\n全路径遍历目录下的文件名称，然后使用mv更改文件名称\n大写与小写转换改变\u0026rsquo;a-z\u0026rsquo; \u0026lsquo;A-Z\u0026rsquo; 的顺序就可以\n关于脚本里面牵涉的几个命令用法介绍\n点击跳转到使用方法：basename命令及dirname命令使用\n","date":"2020年88月4日","externalUrl":null,"permalink":"/2667.html","section":"Posts","summary":"","title":"将众多目录下的文件进行大小写转换--shell脚本--遍历","type":"post"},{"content":"大写转小写：\nfor fname in *; do mv $fname `echo $fname|tr [A-Z] [a-z]`; done 小写转大写：\nfor cpplive in *; do mv $cpplive `echo $cpplive|tr [a-z] [A-Z]`; done 大写转小写：\nfor cpplive in *; do mv $cpplive `echo $cpplive|tr [A-Z] [a-z]`; done 修改后缀：\nfor cpplive in *.JPG; do mv $cpplive ${cpplive%%\\.*}.jpg; done","date":"2020年88月4日","externalUrl":null,"permalink":"/2666.html","section":"Posts","summary":"","title":"linux下大小写批量转换","type":"post"},{"content":" 记录一次confluence升级处理过程 # 仅记录我遇到的问题，如有相似的可以参考我的处理办法\n整体升级步骤 # 1.备份原来的confluence数据\nmv /var/atlassian/ /var/atlassian_backup/ mv /opt/atlassian /opt/atlassian_backup/ mv /etc/init.d/confluence /etc/init.d/confluence_bak 及备份数据库mysqldump 2.安装新版的confluence，我这里是7.4.3\n3.安装完后将备份的数据库导入新数据库（如果数据也升级的话）\n4.登录到confluence的备份还原里面按提示操作\n#把备份复制到恢复目录 cp /var/atlassian_backup/application-data/confluence/backups/ /var/atlassian/application-data/confluence/restore/ 5.重启confluence就能完成升级\n大体的步骤就是上面的了，下面是我在过程中遇到的一些问题记录及解决办法\n1.Confluence Does Not Start with \u0026#039;Detected tables with non-default character encoding/collation\u0026#039; Message 这是由于你的数据字符集没有按照官方的提示进行创建，不符合要求\n参考文档：\n需要将数据库字设置成：utf8 \u0026ndash; UTF-8 Unicode utf8_bin\n2.This page is for Confluence administrators. If you\u0026#039;re seeing this page, your Confluence administrato 原因有很多种\n参考文档：\n我这里原因是confluence进程没有彻底关闭导致，按官方文档解决\n3.Confluence will not start up because the build number in the Home Directory doesn\u0026#039;t match the build number in the Database, after upgrade 由于升级后主目录中的内部版本号与数据库中的内部版本号不匹配，因此融合将无法启动\n原因是由于导入旧版数据库，数据库里面的版本标识与配置文件的版本标识不一样导致，\n参考文档：\n解决办法：找到配置文件查看版本信息\n通过运行数据库： \u0026lt;pre\u0026gt;\u0026lt;code class=\u0026quot;language-shell\u0026quot;\u0026gt;从数据库的CONFVERSION表中查看buildNumber\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt; 通过在\u0026lt;confluence_home_directory\u0026gt; /confluence.cfg.xml文件中查找主目录： \u0026lt;confluence-configuration\u0026gt; \u0026lt;buildNumber\u0026gt; 4215 \u0026lt;/ buildNumber\u0026gt; \u0026lt;/ confluence-configuration\u0026gt; 保证该数字和数据库里面的一致\n注意：启动confluence时最好是用自己专有的用户来启动，以免遇到因权限问题导致的启动失败\n","date":"2020年88月4日","externalUrl":null,"permalink":"/2665.html","section":"Posts","summary":"","title":"记录一次confluence升级处理过程","type":"post"},{"content":"","date":"2020年88月3日","externalUrl":null,"permalink":"/categories/k8s%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/","section":"Categories","summary":"","title":"K8s基础概念","type":"categories"},{"content":"kubeadm是官方社区推出的一个用于快速部署kubernetes集群的工具。\n这个工具能通过两条指令完成一个kubernetes集群的部署：\n# 创建一个 Master 节点 $ kubeadm init # 将一个 Node 节点加入到当前集群中 $ kubeadm join \u0026lt;Master节点的IP和端口 \u0026gt; 1. 安装要求 # 在开始之前，部署Kubernetes集群机器需要满足以下几个条件：\n一台或多台机器，操作系统 CentOS7.x-86_x64 硬件配置：2GB或更多RAM，2个CPU或更多CPU，硬盘30GB或更多 集群中所有机器之间网络互通 可以访问外网，需要拉取镜像 禁止swap分区 2. 准备环境 # 角色 IP k8s-master 192.168.31.61 k8s-node1 192.168.31.62 k8s-node2 192.168.31.63 关闭防火墙： $ systemctl stop firewalld $ systemctl disable firewalld 关闭selinux： $ sed -i \u0026#039;s/enforcing/disabled/\u0026#039; /etc/selinux/config # 永久 $ setenforce 0 # 临时 关闭swap： $ swapoff -a # 临时 $ vim /etc/fstab # 永久 设置主机名： $ hostnamectl set-hostname \u0026lt;hostname\u0026gt; 在master添加hosts： $ cat \u0026gt;\u0026gt; /etc/hosts \u0026lt;\u0026lt; EOF 192.168.31.61 k8s-master 192.168.31.62 k8s-node1 192.168.31.63 k8s-node2 EOF 将桥接的IPv4流量传递到iptables的链： $ cat \u0026gt; /etc/sysctl.d/k8s.conf \u0026lt;\u0026lt; EOF net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF $ sysctl --system # 生效 时间同步： $ yum install ntpdate -y $ ntpdate time.windows.com 3. 所有节点安装Docker/kubeadm/kubelet # Kubernetes默认CRI（容器运行时）为Docker，因此先安装Docker。\n3.1 安装Docker # $ wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo $ yum -y install docker-ce-18.06.1.ce-3.el7 $ systemctl enable docker \u0026\u0026 systemctl start docker $ docker --version Docker version 18.06.1-ce, build e68fc7a # cat \u0026gt; /etc/docker/daemon.json \u0026lt;\u0026lt; EOF { \"registry-mirrors\": [\"https://b9pmyelo.mirror.aliyuncs.com\"] } EOF 3.2 添加阿里云YUM软件源 # $ cat \u0026gt; /etc/yum.repos.d/kubernetes.repo \u0026lt;\u0026lt; EOF [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 repo_gpgcheck=0 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF ubuntu系统配置源并安装：\n[https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#%E5%AE%89%E8%A3%85-kubeadm-kubelet-%E5%92%8C-kubectl]2\n3.3 安装kubeadm，kubelet和kubectl # 由于版本更新频繁，这里指定版本号部署：\n$ yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0 $ systemctl enable kubelet 4. 部署Kubernetes Master # 参考文档： [https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/#config-file]3\n[https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#initializing-your-control-plane-node]4\n在192.168.31.61（Master）执行。\n$ kubeadm init \\ --apiserver-advertise-address=192.168.31.61 \\ --image-repository registry.aliyuncs.com/google_containers \\ --kubernetes-version v1.18.0 \\ --service-cidr=10.96.0.0/12 \\ --pod-network-cidr=10.244.0.0/16 \\ --ignore-preflight-errors=all 由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址。\n或者使用配置文件引导：\n$ vi kubeadm.conf apiVersion: kubeadm.k8s.io/v1beta2 kind: ClusterConfiguration kubernetesVersion: v1.18.0 imageRepository: registry.aliyuncs.com/google_containers networking: podSubnet: 10.244.0.0/16 serviceSubnet: 10.96.0.0/12 $ kubeadm init --config kubeadm.conf --ignore-preflight-errors=all 使用kubectl工具：\nmkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config $ kubectl get nodes 5. 加入Kubernetes Node # 在192.168.31.62/63（Node）执行。\n向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：\n$ kubeadm join 192.168.31.61:6443 --token esce21.q6hetwm8si29qxwn \\ --discovery-token-ca-cert-hash sha256:00603a05805807501d7181c3d60b478788408cfe6cedefedb1f97569708be9c5 默认token有效期为24小时，当过期之后，该token就不可用了。这时就需要重新创建token，操作如下：\n# kubeadm token create # kubeadm token list # openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2\u0026gt;/dev/null | openssl dgst -sha256 -hex | sed \u0026#039;s/^.* //\u0026#039; 63bca849e0e01691ae14eab449570284f0c3ddeea590f8da988c07fe2729e924 # kubeadm join 192.168.31.61:6443 --token nuja6n.o3jrhsffiqs9swnu --discovery-token-ca-cert-hash sha256:63bca849e0e01691ae14eab449570284f0c3ddeea590f8da988c07fe2729e924 kubeadm token create \u0026ndash;print-join-command\n[https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/]5\n6. 网络方案（CNI） # [https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network]6\n注意：只需要部署下面其中一个，推荐Calico。\n6.1 Calico # Calico是一个纯三层的数据中心网络方案，Calico支持广泛的平台，包括Kubernetes、OpenStack等。\nCalico 在每一个计算节点利用 Linux Kernel 实现了一个高效的虚拟路由器（ vRouter） 来负责数据转发，而每个 vRouter 通过 BGP 协议负责把自己上运行的 workload 的路由信息向整个 Calico 网络内传播。\n此外，Calico 项目还实现了 Kubernetes 网络策略，提供ACL功能。\n[https://docs.projectcalico.org/getting-started/kubernetes/quickstart]7\nwget https://docs.projectcalico.org/manifests/calico.yaml 下载完后还需要修改里面配置项：\n定义Pod网络（CALICO_IPV4POOL_CIDR），与前面pod CIDR配置一样 选择工作模式（CALICO_IPV4POOL_IPIP），支持BGP（Never）、IPIP（Always）、CrossSubnet（开启BGP并支持跨子网） 修改完后应用清单：\n# kubectl apply -f calico.yaml # kubectl get pods -n kube-system 6.2 Flannel # Flannel是CoreOS维护的一个网络组件，Flannel为每个Pod提供全局唯一的IP，Flannel使用ETCD来存储Pod子网与Node IP之间的关系。flanneld守护进程在每台主机上运行，并负责维护ETCD信息和路由数据包。\nwget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml sed -i -r \"s#quay.io/coreos/flannel:.*-amd64#lizhenliang/flannel:v0.11.0-amd64#g\" kube-flannel.yml 修改国内镜像仓库。\n7. 测试kubernetes集群 # 验证Pod工作 验证Pod网络通信 验证DNS解析 在Kubernetes集群中创建一个pod，验证是否正常运行：\n$ kubectl create deployment nginx --image=nginx $ kubectl expose deployment nginx --port=80 --type=NodePort $ kubectl get pod,svc 访问地址：[http://NodeIP:Port]8\n8. 部署 Dashboard # $ wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml 默认Dashboard只能集群内部访问，修改Service为NodePort类型，暴露到外部：\nkind: Service apiVersion: v1 metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboard spec: ports: - port: 443 targetPort: 8443 nodePort: 30001 selector: k8s-app: kubernetes-dashboard type: NodePort 访问地址：https://NodeIP:30001\n创建service account并绑定默认cluster-admin管理员集群角色：\nkubectl create serviceaccount dashboard-admin -n kube-system kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk \u0026#039;/dashboard-admin/{print $1}\u0026#039;) 使用输出的token登录Dashboard。\n","date":"2020年88月3日","externalUrl":null,"permalink":"/2663.html","section":"Posts","summary":"","title":"使用Kubeadm快速搭建一个k8s集群---【v1.18】","type":"post"},{"content":"前一段重新安装了Sublime Text3，不过一直不在右键菜单中，所以决定添加，有如下2种方法。\n方法一（推荐）、\n把以下代码，复制到SublimeText3的安装目录，然后重命名为：sublime_addright.inf，然后右击安装就可以了。\nPS：重命名文件之前，需要先在工具\u0026ndash;文件夹选项，查看中，把隐藏已知文件类型的扩展名前边的复选框不勾选。\n[Version] Signature=\"$Windows NT$\" [DefaultInstall] AddReg=SublimeText3 [SublimeText3] hkcr,\"*\\\\shell\\\\SublimeText3\",,,\"用 SublimeText3 打开\" hkcr,\"*\\\\shell\\\\SublimeText3\\\\command\",,,\"\"\"%1%\\sublime_text.exe\"\" \"\"%%1\"\" %%*\" hkcr,\"Directory\\shell\\SublimeText3\",,,\"用 SublimeText3 打开\" hkcr,\"*\\\\shell\\\\SublimeText3\",\"Icon\",0x20000,\"%1%\\sublime_text.exe, 0\" hkcr,\"Directory\\shell\\SublimeText3\\command\",,,\"\"\"%1%\\sublime_text.exe\"\" \"\"%%1\"\"\" 看回复有不少人，询问右键乱码问题：\n解决方案：用记事本打开sublime_addright.inf，然后点击菜单，另存为；文件名和路径不变，设置编码格式为：ANSI ，然后重新安装就可以了\n方法二、\n把以下代码，复制到SublimeText3的安装目录，然后重命名为：sublime_addright.reg，然后双击就可以了。\nPS:需要把里边的Sublime的安装目录，替换成实际的Sublime安装目录。\nWindows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\*\\shell\\SublimeText3] @=\"用 SublimeText3 打开\" \"Icon\"=\"D:\\\\Program Files\\\\Sublime Text 3\\\\sublime_text.exe,0\" [HKEY_CLASSES_ROOT\\*\\shell\\SublimeText3\\command] @=\"D:\\\\Program Files\\\\Sublime Text 3\\\\sublime_text.exe %1\" [HKEY_CLASSES_ROOT\\Directory\\shell\\SublimeText3] @=\"用 SublimeText3 打开\" \"Icon\"=\"D:\\\\Program Files\\\\Sublime Text 3\\\\sublime_text.exe,0\" [HKEY_CLASSES_ROOT\\Directory\\shell\\SublimeText3\\command] @=\"D:\\\\Program Files\\\\Sublime Text 3\\\\sublime_text.exe %1\" ``` 最后，附一个删除右键菜单的脚本吧。 把以下代码，复制到SublimeText3的安装目录，然后重命名为：sublime_delright.reg，然后双击就可以了。```bash ```bash Windows Registry Editor Version 5.00 [-HKEY_CLASSES_ROOT\\*\\shell\\SublimeText3] [-HKEY_CLASSES_ROOT\\Directory\\shell\\SublimeText3]","date":"2020年88月3日","externalUrl":null,"permalink":"/2662.html","section":"Posts","summary":"","title":"把Sublime Text添加到右键菜单的方法","type":"post"},{"content":" 来源：https://www.jianshu.com/p/0bbac570fa4c 导读 有时候会遇到一些疑难杂症，并且监控插件并不能一眼立马发现问题的根源。这时候就需要登录服务器进一步深入分析问题的根源。那么分析问题需要有一定的技术经验积累，并且有些问题涉及到的领域非常广，才能定位到问题。所以，分析问题和踩坑是非常锻炼一个人的成长和提升自我能力。如果我们有一套好的分析工具，那将是事半功倍，能够帮助大家快速定位问题，节省大家很多时间做更深入的事情。\n本篇文章主要介绍各种问题定位的工具以及会结合案例分析问题。\n分析问题的方法论：\n套用5W2H方法，可以提出性能分析的几个问题\nWhat-现象是什么样的 When-什么时候发生 Why-为什么会发生 Where-哪个地方发生的问题 How much-耗费了多少资源 How to do-怎么解决问题 目录[-] 1、CPU 2、内存 3、磁盘IO 4、网络 5、系统负载 6、火焰图 7、案例分析 1、CPU\n1.1 说明\n针对应用程序，我们通常关注的是内核CPU调度器功能和性能。 线程的状态分析主要是分析线程的时间用在什么地方，而线程状态的分类一般分为： a. on-CPU：执行中，执行中的时间通常又分为用户态时间user和系统态时间sys。b. off-CPU：等待下一轮上CPU，或者等待I/O、锁、换页等等，其状态可以细分为可执行、匿名换页、睡眠、锁、空闲等状态。 如果大量时间花在CPU上，对CPU的剖析能够迅速解释原因；如果系统时间大量处于off-cpu状态，定位问题就会费时很多。但是仍然需要清楚一些概念： 处理器 核 硬件线程 CPU内存缓存 时钟频率 每指令周期数CPI和每周期指令数IPC CPU指令 使用率 用户时间／内核时间 调度器 运行队列 抢占 多进程 多线程 字长 1.2 分析工具 说明： uptime,vmstat,mpstat,top,pidstat只能查询到cpu及负载的的使用情况。 perf可以跟着到进程内部具体函数耗时情况，并且可以指定内核函数进行统计，指哪打哪。 1.3 使用方式 \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看系统cpu使用情况\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003etop\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看所有cpu核信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003empstat -P ALL \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看cpu使用情况以及平均负载\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evmstat \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//进程cpu的统计信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003epidstat -u \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e -p pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//跟踪进程内部函数级cpu使用情况\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eperf top -p pid -e cpu-clock # 2、内存 2.1 说明\n内存是为提高效率而生，实际分析问题的时候，内存出现问题可能不只是影响性能，而是影响服务或者引起其他问题。同样对于内存有些概念需要清楚： 主存 虚拟内存 常驻内存 地址空间 OOM 页缓存 缺页 换页 交换空间 交换 用户分配器libc、glibc、libmalloc和mtmalloc LINUX内核级SLUB分配器 2.2 分析工具 说明： free,vmstat,top,pidstat,pmap只能统计内存信息以及进程的内存使用情况。 valgrind可以分析内存泄漏问题。 dtrace动态跟踪。需要对内核函数有很深入的了解，通过D语言编写脚本完成跟踪。 2.3 使用方式 \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看系统内存使用情况\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efree\u0026lt;/span\u003e -m\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//虚拟内存统计信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evmstat \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看系统内存情况\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003etop\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//1s采集周期，获取内存的统计信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003epidstat -p pid -r \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看进程的内存映像信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003epmap -d pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//检测程序内存问题\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evalgrind --tool=memcheck --leak-check=full --\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003elog\u0026lt;/span\u003e-file=./\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003elog\u0026lt;/span\u003e.txt ./程序名\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003e # 3、磁盘IO 3.1 说明\n磁盘通常是计算机最慢的子系统，也是最容易出现性能瓶颈的地方，因为磁盘离 CPU 距离最远而且 CPU 访问磁盘要涉及到机械操作，比如转轴、寻轨等。访问硬盘和访问内存之间的速度差别是以数量级来计算的，就像1天和1分钟的差别一样。要监测 IO 性能，有必要了解一下基本原理和 Linux 是如何处理硬盘和内存之间的 IO 的。 在理解磁盘IO之前，同样我们需要理解一些概念，例如： 文件系统 VFS 文件系统缓存 页缓存page cache 缓冲区高速缓存buffer cache 目录缓存 inode inode缓存 noop调用策略 3.2 分析工具 3.3 使用方式 \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看系统io信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eiotop\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//统计io详细信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eiostat -d -x -k \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e10\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看进程级io的信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003epidstat -d \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e -p pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看系统IO的请求，比如可以在发现系统IO异常时，可以使用该命令进行调查，就能指定到底是什么原因导致的IO异常\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eperf \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003erecord\u0026lt;/span\u003e -e block:block_rq_issue -ag\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e^C\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eperf report # 4、网络 4.1 说明 网络的监测是所有 Linux 子系统里面最复杂的，有太多的因素在里面，比如：延迟、阻塞、冲突、丢包等，更糟的是与 Linux 主机相连的路由器、交换机、无线信号都会影响到整体网络并且很难判断是因为 Linux 网络子系统的问题还是别的设备的问题，增加了监测和判断的复杂度。现在我们使用的所有网卡都称为自适应网卡，意思是说能根据网络上的不同网络设备导致的不同网络速度和工作模式进行自动调整。 4.2 分析工具 4.3 使用方式 \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//显示网络统计信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003enetstat -s\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//显示当前UDP连接状况\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003enetstat -nu\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//显示UDP端口号的使用情况\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003enetstat -apu\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//统计机器中网络连接各个状态个数\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003enetstat -a | awk \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\\'/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}\\'\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//显示TCP连接\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ess -t -a\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//显示sockets摘要信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ess -s\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//显示所有udp sockets\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ess -u -a\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//tcp,etcp状态\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003esar -n TCP,ETCP \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看网络IO\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003esar -n DEV \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//抓包以包为单位进行输出\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003etcpdump -i eth1 host \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e192.168.1.1\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eand\u0026lt;/span\u003e port \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e80\u0026lt;/span\u003e \u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//抓包以流为单位显示数据内容\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003etcpflow -cp host \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e192.168.1.1\u0026lt;/span\u003e # 5、系统负载 5.1 说明\nLoad 就是对计算机干活多少的度量（WikiPedia：the system Load is a measure of the amount of work that a compute system is doing）简单的说是进程队列的长度。Load Average 就是一段时间（1分钟、5分钟、15分钟）内平均Load。 5.2 分析工具 5.3 使用方式 \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看负载情况\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003euptime\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003etop\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evmstat\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//统计系统调用耗时情况\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003estrace -c -p pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//跟踪指定的系统操作例如epoll_wait\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003estrace -T -e epoll_wait -p pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//查看内核日志信息\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003edmesg # # 6、火焰图 6.1 说明\n火焰图（Flame Graph是 Bredan Gregg 创建的一种性能分析图表，因为它的样子近似 ?而得名。 火焰图主要是用来展示 CPU的调用栈。 y 轴表示调用栈，每一层都是一个函数。调用栈越深，火焰就越高，顶部就是正在执行的函数，下方都是它的父函数。 x 轴表示抽样数，如果一个函数在 x 轴占据的宽度越宽，就表示它被抽到的次数多，即执行的时间长。注意，x 轴不代表时间，而是所有的调用栈合并后，按字母顺序排列的。 火焰图就是看顶层的哪个函数占据的宽度最大。只要有”平顶”（plateaus），就表示该函数可能存在性能问题。颜色没有特殊含义，因为火焰图表示的是 CPU 的繁忙程度，所以一般选择暖色调。 常见的火焰图类型有On-CPU、Off-CPU、Memory、Hot/Cold、Differential等等。 6.2 安装依赖库 //安装systemtap，默认系统已安装\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eyum \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003einstall\u0026lt;/span\u003e systemtap systemtap-runtime\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//内核调试库必须跟内核版本对应，例如：uname -r \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e2.6.18-308.\u0026lt;/span\u003eel5\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ekernel-debuginfo\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-2.6.18-308.\u0026lt;/span\u003eel5.x86_64.rpm\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ekernel-devel\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-2.6.18-308.\u0026lt;/span\u003eel5.x86_64.rpm\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ekernel-debuginfo-common\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-2.6.18-308.\u0026lt;/span\u003eel5.x86_64.rpm\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//安装内核调试库\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003edebuginfo-\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003einstall\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e--enablerepo=debuginfo search kernel\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003edebuginfo-\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003einstall\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e--enablerepo=debuginfo search glibc\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003e 6.3 安装 git \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eclone\u0026lt;/span\u003e https://github.com/lidaohang/quick_location.git\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ecd\u0026lt;/span\u003e quick_location 6.4 CPU级别火焰图 cpu占用过高，或者使用率提不上来，你能快速定位到代码的哪块有问题吗？一般的做法可能就是通过日志等方式去确定问题。现在我们有了火焰图，能够非常清晰的发现哪个函数占用cpu过高，或者过低导致的问题。 6.4.1 on-CPU cpu占用过高，执行中的时间通常又分为用户态时间user和系统态时间sys。 使用方式： \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//on-CPU user\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003esh ngx_on_cpu_u.sh pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//进入结果目录\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ecd ngx_on_cpu_u\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//on-CPU kernel\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003esh ngx_on_cpu_k.sh pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//进入结果目录\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ecd ngx_on_cpu_k\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//开一个临时端口8088\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003epython -m SimpleHTTPServer \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8088\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//打开浏览器输入地址\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e127.0.0.1\u0026lt;/span\u003e:\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8088\u0026lt;/span\u003e/pid.svg DEMO： \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e#\u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003einclude\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003e\u0026lt;stdio.h\u003e\u0026lt;/stdio.h\u003e\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e#\u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003einclude\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003e\u0026lt;stdlib.h\u003e\u0026lt;/stdlib.h\u003e\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo3()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo2()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e(i=\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e ; i 10; i++)\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo3();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo1()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e(i = \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e; i1000; i++)\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo3();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003eint\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003emain(\u0026lt;span style=\"max-width: 100%;font-size: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evoid\u0026lt;/span\u003e)\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e( i =\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e; i1000000000; i++) {\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo1();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo2();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e }\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003e DEMO火焰图： 6.4.2 off-CPU cpu过低，利用率不高。等待下一轮CPU，或者等待I/O、锁、换页等等，其状态可以细分为可执行、匿名换页、睡眠、锁、空闲等状态。 使用方式： \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e// off-CPU user\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003esh ngx_off_cpu_u.sh pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//进入结果目录\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ecd ngx_off_cpu_u\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//off-CPU kernel\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003esh ngx_off_cpu_k.sh pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//进入结果目录\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ecd ngx_off_cpu_k\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//开一个临时端口8088\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003epython -m SimpleHTTPServer \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8088\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//打开浏览器输入地址\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e127.0.0.1\u0026lt;/span\u003e:\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8088\u0026lt;/span\u003e/pid.svg 官网DEMO： 6.5 内存级别火焰图 如果线上程序出现了内存泄漏，并且只在特定的场景才会出现。这个时候我们怎么办呢？有什么好的方式和工具能快速的发现代码的问题呢？同样内存级别火焰图帮你快速分析问题的根源。 使用方式： sh ngx_on_memory.sh pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//进入结果目录\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ecd ngx_on_memory\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//开一个临时端口8088\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003epython -m SimpleHTTPServer \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8088\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//打开浏览器输入地址\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e127.0.0.1\u0026lt;/span\u003e:\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8088\u0026lt;/span\u003e/pid.svg 官网DEMO： 6.6 性能回退-红蓝差分火焰图 你能快速定位CPU性能回退的问题么？如果你的工作环境非常复杂且变化快速，那么使用现有的工具是来定位这类问题是很具有挑战性的。当你花掉数周时间把根因找到时，代码已经又变更了好几轮，新的性能问题又冒了出来。主要可以用到每次构建中，每次上线做对比看，如果损失严重可以立马解决修复。 通过抓取了两张普通的火焰图，然后进行对比，并对差异部分进行标色：红色表示上升，蓝色表示下降。差分火焰图是以当前（“修改后”）的profile文件作为基准，形状和大小都保持不变。因此你通过色彩的差异就能够很直观的找到差异部分，且可以看出为什么会有这样的差异。 使用方式： cd quick_location\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//抓取代码修改前的profile 1文件\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eperf record -F \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e99\u0026lt;/span\u003e -p pid -g -- sleep \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e30\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eperf script \u0026gt; \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eout\u0026lt;/span\u003e.stacks1\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//抓取代码修改后的profile 2文件\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eperf record -F \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e99\u0026lt;/span\u003e -p pid -g -- sleep \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e30\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eperf script \u0026gt; \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eout\u0026lt;/span\u003e.stacks2\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//生成差分火焰图:\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e./FlameGraph/stackcollapse-perf.pl ../\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eout\u0026lt;/span\u003e.stacks1 \u0026gt; \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eout\u0026lt;/span\u003e.folded1\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e./FlameGraph/stackcollapse-perf.pl ../\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eout\u0026lt;/span\u003e.stacks2 \u0026gt; \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eout\u0026lt;/span\u003e.folded2\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e./FlameGraph/difffolded.pl \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eout\u0026lt;/span\u003e.folded1 \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eout\u0026lt;/span\u003e.folded2 | ./FlameGraph/flamegraph.pl \u0026gt; diff2.svg DEMO： \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//test.c\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e#\u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003einclude\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003e\u0026lt;stdio.h\u003e\u0026lt;/stdio.h\u003e\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e#\u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003einclude\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003e\u0026lt;stdlib.h\u003e\u0026lt;/stdlib.h\u003e\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo3()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo2()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e(i=\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e ; i 10; i++)\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo3();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo1()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e(i = \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e; i1000; i++)\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo3();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003eint\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003emain(\u0026lt;span style=\"max-width: 100%;font-size: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evoid\u0026lt;/span\u003e)\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e( i =\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e; i1000000000; i++) {\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo1();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo2();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e }\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//test1.c\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e#\u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003einclude\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003e\u0026lt;stdio.h\u003e\u0026lt;/stdio.h\u003e\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e#\u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003einclude\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003e\u0026lt;stdlib.h\u003e\u0026lt;/stdlib.h\u003e\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo3()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo2()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e(i=\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e ; i 10; i++)\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo3();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003efoo1()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e(i = \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e; i1000; i++)\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo3();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003evoid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003eadd()\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e(i = \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e; i10000; i++)\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo3();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e}\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;\"\u003eint\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003emain(\u0026lt;span style=\"max-width: 100%;font-size: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evoid\u0026lt;/span\u003e)\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;/span\u003e{\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eint\u0026lt;/span\u003e i;\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003efor\u0026lt;/span\u003e( i =\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003e; i1000000000; i++) {\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo1();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e foo2();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e add();\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e }\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e} DEMO红蓝差分火焰图： 7、案例分析 7.1 接入层nginx集群异常现象\n通过监控插件发现在2017.09.25 19点nginx集群请求流量出现大量的499，5xx状态码。并且发现机器cpu使用率升高，目前一直持续中。 7.2 分析nginx相关指标 a) 分析nginx请求流量： 结论： 通过上图发现流量并没有突增，反而下降了，跟请求流量突增没关系。 b) 分析nginx响应时间 结论： 通过上图发现nginx的响应时间有增加可能跟nginx自身有关系或者跟后端upstream响应时间有关系。 c) 分析nginx upstream响应时间 结论： 通过上图发现nginx upstream 响应时间有增加，目前猜测可能后端upstream响应时间拖住nginx，导致nginx出现请求流量异常。 7.3 分析系统cpu情况 a) 通过top观察系统指标 \u0026lt;span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003etop\u0026lt;/span\u003e 结论： 发现nginx worker cpu比较高 b) 分析nginx进程内部cpu情况 \u0026lt;span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"\u003eperf top -p pid\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;padding: 0px 0.5em;\"\u003e\u0026lt;img decoding=\"async\" src=\"https://www.kubehan.cn/wp-content/uploads/2020/07/frc-49960ae4b44a9a2641b511664c5c59f6.jpeg\"\u003e\u0026lt;/span\u003e 结论： 发现主要开销在free,malloc,json解析上面 7.4 火焰图分析cpua) 生成用户态cpu火焰图 \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//test.c\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e#\u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003einclude\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003e\u0026lt;stdio.h\u003e\u0026lt;/stdio.h\u003e\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e#\u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003einclude\u0026lt;/span\u003e \u0026lt;span style=\"max-width: 100%;line-height: inherit;\"\u003e\u0026lt;stdlib.h\u003e\u0026lt;/stdlib.h\u003e\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//on-CPU user\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003esh ngx_on_cpu_u.sh pid\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//进入结果目录\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003ecd ngx_on_cpu_u\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//开一个临时端口8088\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003epython -m SimpleHTTPServer \u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8088\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e//打开浏览器输入地址\u0026lt;/span\u003e\u0026lt;br style=\"max-width: 100%;font-size: inherit;color: inherit;line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e127.0.0.1\u0026lt;/span\u003e:\u0026lt;span style=\"max-width: 100%;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;box-sizing: border-box !important;overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8088\u0026lt;/span\u003e/pid.svg 结论： 发现代码里面有频繁的解析json操作，并且发现这个json库性能不高，占用cpu挺高。 7.5 案例总结 a) 分析请求流量异常，得出nginx upstream后端机器响应时间拉长 b) 分析nginx进程cpu高，得出nginx内部模块代码有耗时的json解析以及内存分配回收操作 7.5.1 深入分析 根据以上两点问题分析的结论，我们进一步深入分析。 后端upstream响应拉长，最多可能影响nginx的处理能力。但是不可能会影响nginx内部模块占用过多的cpu操作。并且当时占用cpu高的模块，是在请求的时候才会走的逻辑。不太可能是upstram后端拖住nginx，从而触发这个cpu的耗时操作。 7.5.2 解决方式 遇到这种问题，我们优先解决已知的，并且非常明确的问题。那就是cpu高的问题。解决方式先降级关闭占用cpu过高的模块，然后进行观察。经过降级关闭该模块cpu降下来了，并且nginx请求流量也正常了。之所以会影响upstream时间拉长，因为upstream后端的服务调用的接口可能是个环路再次走回到nginx。\n","date":"2020年77月13日","externalUrl":null,"permalink":"/2639.html","section":"Posts","summary":"","title":"Linux 系统故障排查，看这一篇就够了","type":"post"},{"content":"整体步骤：\n1.找到要更换的源的地址\n清华大学：https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\n网易源：http://mirrors.163.com/.help/ubuntu.html\n2.备份镜像源地址\nsudo cp /etc/apt/sources.list /etc/apt/sources_init.list 3.更换找到的国内镜像源地址\n将上面国内镜像源内容复制到/etc/apt/sources.list\n例如\n# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse # 预发布软件源，不建议启用 # deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse 4.更新源\nsudo apt-get update","date":"2020年77月13日","externalUrl":null,"permalink":"/2638.html","section":"Posts","summary":"","title":"乌班图更换镜像源为国内镜像源","type":"post"},{"content":"1.查看防火墙当前状态\nsudo ufw status\n2.开启防火墙\nsudo ufw enable\n3.关闭防火墙\nsudo ufw disable\n4.查看防火墙版本\nsudo ufw version\n5.默认允许外部访问本机\nsudo ufw default allow\n6.默认拒绝外部访问主机\nsudo ufw default deny\n7.允许外部访问53端口\nsudo ufw allow 53\n8.拒绝外部访问53端口\nsudo ufw deny 53\n9.允许某个IP地址访问本机所有端口\nsudo ufw allow from 192.168.0.1\n","date":"2020年77月13日","externalUrl":null,"permalink":"/2637.html","section":"Posts","summary":"","title":"ubuntu下防火墙的几个操作命令","type":"post"},{"content":" Linux系统扩容根目录磁盘空间 # 使用背景 # 发现虚拟机磁盘空间不够用了，于是准备给根分区进行扩容，控制台扩容或者添加磁盘后为发现没有生效，原因在于没有格式化。磁盘空间不生效\n整体思路 # 添加硬盘 进系统对磁盘分区 更改磁盘格式 创建物理卷 添加物理卷到物理卷组 扩容物理卷空间 重新加载物理卷 实施步骤 # 系统环境：CentOS Linux release 7.5.1804 (Core)\n新添加硬盘步骤省略\n扩容前磁盘情况\n[root@gysl-master ~]# df -hT 文件系统 类型 容量 已用 可用 已用% 挂载点 /dev/mapper/centos-root xfs 17G 16G 1.4G 92% / devtmpfs devtmpfs 1.4G 0 1.4G 0% /dev tmpfs tmpfs 1.4G 0 1.4G 0% /dev/shm tmpfs tmpfs 1.4G 27M 1.4G 2% /run tmpfs tmpfs 1.4G 0 1.4G 0% /sys/fs/cgroup /dev/sda1 xfs 1014M 142M 873M 14% /boot tmpfs tmpfs 285M 0 285M 0% /run/user/0 第一步：分区 # fdisk -l #查看新加的硬盘在哪 磁盘 /dev/sdb：53.7 GB, 53687091200 字节，104857600 个扇区 Units = 扇区 of 1 * 512 = 512 bytes 扇区大小(逻辑/物理)：512 字节 / 512 字节 I/O 大小(最小/最佳)：512 字节 / 512 字节 磁盘标签类型：dos 磁盘标识符：0x42d5e572 磁盘位于：/dev/sdb\n开始分区 fdisk /dev/sdb 输入m查看帮助 输入n增加新分区 输入p选分区 设置分区号，记住分区号，我这里为3 两次回车默认分配全部空闲空间 输入t更改分区格式 选择要更改的分区号 3 分区格式8e 输入w保存 重启操作系统 第二步：创建物理卷 # [root@node-002 dev]# pvcreate /dev/sdb3 #/dev/sdb3为新建的分区 Physical volume \"/dev/sda3\" successfully created [root@node-002 dev]# pvdisplay #查看物理卷大小和信息 这里获取VG_NAME 将新添加的物理卷加到现有的物理卷组 vgextend 上面获取的VG_NAME /dev/sdb3 查看卷组信息，使用vgdisplay命令 [root@gysl-master ~]# df -hT 文件系统 类型 容量 已用 可用 已用% 挂载点 /dev/mapper/centos-root xfs 67G 16G 52G 24% / 增加物理卷组的大小使用lvresize -L +30G 根目录文件系统/dev/mapper/centos-root lvresize -L +49.9G /dev/mapper/centos-root 重新加载物理卷 resize2fs /dev/mapper/centos-root 如果报错如下 resize2fs: Bad magic number in super-block 当尝试打开 /dev/mapper/vg_node003-lv_root 时 找不到有效的文件系统超级块. 则使用 [root@node-002 ~]# xfs_growfs /dev/mapper/centos-root meta-data=/dev/mapper/centos-root isize=512　agcount=4, agsize=2891264 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0 spinodes=0 data = bsize=4096 blocks=11565056, imaxpct=25 = sunit=0 swidth=0 blks naming = version 2 bsize=4096 ascii-ci=0 ftype=1 log = internal bsize=4096 blocks=5647, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 data blocks changed from 11565056 to 24672256 查看扩容后的大小 ，使用df -h命令 # [root@gysl-master ~]# df -hT 文件系统 类型 容量 已用 可用 已用% 挂载点 /dev/mapper/centos-root xfs 67G 16G 52G 24% / 成功扩容49.9G\n以上所述是我给大家介绍的Linux系统扩容根目录磁盘空间的操作方法，希望对大家有所帮助，如果大家有任何疑问请给我留言，我会及时回复大家的。\n","date":"2020年77月2日","externalUrl":null,"permalink":"/2634.html","section":"Posts","summary":"","title":"Linux系统扩容根目录磁盘空间","type":"post"},{"content":"让其他物理主机通过NAT网络访问到Hyper-V的虚拟机\n有时候我们会需要在其他的物理主机访问到Hyper-V虚拟主机，但是虚拟机主机使用的网络是宿主主机NAT模式，两者处于不同的网络中，这时候要让其他\n物理机访问到虚拟机可以使用端口映射功能，下面例子仅供参考，本人已亲测成功\n下面是hyper-v共享IP端口映射一些常用命令\n共享IP端口映射一些常用命令\n一、查询端口映射情况\nnetsh interface portproxy show v4tov4 查询这个IP所有的端口映射。\nnetsh interface portproxy show v4tov4|find \u0026ldquo;192.168.1.123\u0026rdquo;\n二、增加一个端口映射\nnetsh interface portproxy add v4tov4 listenport=140 listenaddress=192.168.1.93 connectaddress=192.168.137.140 connectport=22 例如：\nnetsh interface portproxy add v4tov4 listenport=8888 listenaddress=118.123.13.180 connectaddress=192.168.1.10 connectport=2222 三、删除一个端口映射\nnetsh interface portproxy delete v4tov4 listenaddress=主IP listenport=外网端口 到这里你就可以使用1.93这个宿主主机的140端口连接137.140这个主机的22端口了\n记得把宿主主机防火墙关闭了\n","date":"2020年66月28日","externalUrl":null,"permalink":"/2633.html","section":"Posts","summary":"","title":"让其他物理主机通过NAT网络访问到Hyper-V的虚拟机","type":"post"},{"content":"#!/bin/bash # Initialize the machine. This needs to be executed on every machine. # Add host domain name. cat\u0026gt;\u0026gt;/etc/hosts\u0026lt;\u0026lt;EOF 192.168.137.140 k8s-master 192.168.137.141 k8s-node1 192.168.137.142 k8s-node2 EOF # Modify related kernel parameters. cat\u0026gt;/etc/sysctl.d/kubernetes.conf\u0026lt;\u0026lt;EOF net.ipv4.ip_forward = 1 net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF sysctl -p /etc/sysctl.d/kubernetes.conf\u0026gt;\u0026/dev/null # Turn off and disable the firewalld. systemctl stop firewalld systemctl disable firewalld # Disable the SELinux. sed -i \u0026#039;s/=enforcing/=disabled/\u0026#039; /etc/selinux/config # Disable the swap. sed -i \u0026#039;s/^.*swap/#\u0026/g\u0026#039; /etc/fstab # Reboot the machine. reboot","date":"2020年66月23日","externalUrl":null,"permalink":"/2625.html","section":"Posts","summary":"","title":"k8s环境初始化配置shell脚本","type":"post"},{"content":" MySQL互为主从架构+keeplived实现高可用 # 简单描述下思路：\n首先大基建mysql主从复制环境，两台mysql互为主从\nmysql的安装过程，这里提供一个脚本进行安装\n#!/bin/bash function check_install_mysql_environment() { echo \"################检查本机安装mysql的基本条件########################\" echo \"Checking user :\" if [ $(id -u) != \"0\" ]; then echo \"Error: You must be root to run this script, please use root to install\" exit 1 else echo \"user is root, this is ok!\" fi echo \"checking os version\" if [ `uname -s`=\"linux\" ]; then echo \"os is linux,this is ok!\" else echo \"os isnot linux,this is fail!\" exit 1 fi if [ -d /data/mysql ]; then echo \"数据目录已经存在，选择是否备份\" read -p \"数据目录已经存在，选择是否备份[y/n]\": keys case \"$keys\" in [yY][eE][sS]|y|Y) echo \"开始备份........\" mv /data/mysql /data/mysql_`date +%Y%m%d%H%M%S` ls -ld /data/mysql_* keys=\"y\" ;; [nN][oO]|N|n ) echo \"不备份........\" rm -rf /data/mysql keys=\"n\" ;; *) echo \"输入有误，即将退出.......\" exit 1 esac else echo \"mysql datadir /data/mysql is not exist,this is ok!\" fi os_version=`uname -r|cut -d . -f 6` if [ ${os_version}=\"el7\" ] || [${os_version}=\"el6\" ]; then echo \"os version is el6 or el7, this is ok!\" else echo \"os version isnot el6 or el7, this is fail!\" exit 1 fi port=`netstat -ntl| awk \u0026#039;{ print $4}\u0026#039; |grep \u0026#039;3306\u0026#039;|awk -F: \u0026#039;{ print $4}\u0026#039;` if [[ ${port} = \"3306\" ]]; then echo \"mysql port 3306 is exist, please uninstall existed mysql or modify script , this is fail!\" exit 1 else echo \"msyql port is not 3306! this is ok!\" fi } function InstallMySQL() { echo -e \"\\n\" echo \"############################# 开始安装mysql########################\" if [ -s /etc/selinux/config ]; then sed -i \u0026#039;s/SELINUX=enforcing/SELINUX=disabled/g\u0026#039; /etc/selinux/config fi setenforce 0 groupadd mysql -g 512 useradd -u 512 -g mysql -s /sbin/nologin -d /home/mysql mysql #mysql directory configuration if [ -d /root/mysql-5.7.30-linux-glibc2.12-x86_64 ]; then rm -rf /root/mysql-5.7.30-linux-glibc2.12-x86_64 fi echo -e \"正在解压二进制文件..........\\n请耐心等待安装完成...........\" tar -zxvf /root/mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz \u0026gt; /dev/null if [ -d /usr/local/mysql ]; then mv /usr/local/mysql /usr/local/mysql_`date +%Y%m%d%H%M%S` echo \"已备份至所在目录\" fi mv /root/mysql-5.7.30-linux-glibc2.12-x86_64 /usr/local/mysql chown -R mysql:mysql /usr/local/mysql mkdir -p /data/mysql chown -R mysql:mysql /data/mysql echo \"directory /data/mysql created succeed!\" if [ -d /data/slowlog ]; then mv /data/slowlog /data/slowlog_`date +%Y%m%d%H%M%S` mkdir -p /data/slowlog chown -R mysql:mysql /data/slowlog echo \"directory /data/slowlog created succeed!\" else mkdir -p /data/slowlog chown -R mysql:mysql /data/slowlog echo \"directory /data/slowlog created succeed!\" fi mv /etc/my.cnf /etc/my.cnf.`date +%Y%m%d%H%M%S` cat \u0026gt;\u0026gt;/etc/my.cnf\u0026lt;\u0026lt;EOF [client] port=3306 socket=/tmp/mysql.sock default-character-set=utf8 [mysql] no-auto-rehash default-character-set=utf8 [mysqld] port=3306 character-set-server=utf8 socket=/tmp/mysql.sock basedir=/usr/local/mysql datadir=/data/mysql pid-file =/data/mysql/mysql.pid explicit_defaults_for_timestamp=true lower_case_table_names=1 back_log=103 max_connections=3000 max_connect_errors=100000 table_open_cache=512 external-locking=FALSE max_allowed_packet=32M sort_buffer_size=2M join_buffer_size=2M thread_cache_size=51 query_cache_size=32M #query_cache_limit=4M transaction_isolation=REPEATABLE-READ tmp_table_size=96M max_heap_table_size=96M ###***slowqueryparameters long_query_time=1 slow_query_log = 1 slow_query_log_file=/data/slowlog/slow.log ###***binlogparameters log-bin=mysql-bin binlog_cache_size=4M max_binlog_cache_size=4096M max_binlog_size=1024M binlog_format=row expire_logs_days=7 ###***relay-logparameters #relay-log=/data/3307/relay-bin #relay-log-info-file=/data/3307/relay-log.info #master-info-repository=table #relay-log-info-repository=table #relay-log-recovery=1 #***MyISAMparameters key_buffer_size=16M read_buffer_size=1M read_rnd_buffer_size=16M bulk_insert_buffer_size=1M #skip-name-resolve ###***master-slavereplicationparameters server-id=99 #slave-skip-errors=all #***Innodbstorageengineparameters innodb_buffer_pool_size=512M innodb_data_file_path=ibdata1:10M:autoextend #innodb_file_io_threads=8 innodb_thread_concurrency=16 innodb_flush_log_at_trx_commit=1 innodb_log_buffer_size=16M innodb_log_file_size=512M innodb_log_files_in_group=2 innodb_max_dirty_pages_pct=75 innodb_buffer_pool_dump_pct=50 innodb_lock_wait_timeout=50 innodb_file_per_table=on [mysqldump] quick max_allowed_packet=32M [myisamchk] key_buffer=16M sort_buffer_size=16M read_buffer=8M write_buffer=8M [mysqld_safe] open-files-limit=8192 log-error=/data/mysql/error.log pid-file=/data/mysql/mysqld.pid EOF chown -R mysql.mysql /data echo \"正在初始化数据库.................\" /usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnf --user=mysql --datadir=/data/mysql --basedir=/usr/local/mysql --initialize-insecure cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld chmod 700 /etc/init.d/mysqld chkconfig --add mysqld chkconfig --level 2345 mysqld on /etc/init.d/mysqld start /etc/init.d/mysqld status cat \u0026gt;\u0026gt; /etc/profile \u0026lt;\u0026lt;EOF export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mysql/lib EOF /usr/local/mysql/bin/mysqladmin -u root password $mysqlrootpwd #cat \u0026gt; /tmp/mysql_sec_script #delete from mysql.user where user!=\u0026#039;root\u0026#039; or host!=\u0026#039;localhost\u0026#039;; #grant all privileges on *.* to \u0026#039;sys_admin\u0026#039;@\u0026#039;%\u0026#039; identified by \u0026#039;MANAGER\u0026#039;; #flush privileges; #EOF #/usr/local/mysql/bin/mysql -u root -p$mysqlrootpwd -h localhost \u0026lt; /tmp/mysql_sec_script #rm -f /tmp/mysql_sec_script /etc/init.d/mysqld restart echo \"============================MySQL 5.7.22 install completed=========================\" echo -e \"\\n\" } function CheckInstall_result() { echo \"=====================================检查安装结果 ===================================\" ismysql=\"\" echo \"Checking...\" if [ -s /usr/local/mysql/bin/mysql ] \u0026\u0026 [ -s /usr/local/mysql/bin/mysqld_safe ] \u0026\u0026 [ -s /etc/my.cnf ] \u0026\u0026 [ `netstat -ntl| awk \u0026#039;{ print $4}\u0026#039; |grep \u0026#039;3306\u0026#039;|awk -F: \u0026#039;{ print $4}\u0026#039;`=\"3306\" ] ; then echo \"MySQL: OK\" ismysql=\"ok\" else echo \"Error: /usr/local/mysql not found!!! MySQL install failed.\" fi if [ \"$ismysql\" = \"ok\" ]; then netstat -ntl ps -ef|grep mysql echo \"=================checked successed!checking result MySQL completed! ================\" else echo \"Sorry,Failed to install MySQL!\" echo \"You can tail /root/mysql-install.log from your server.\" fi } function if_select_install() { echo -e \"\\n\" mysqlrootpwd=\"MANAGER\" echo -e \"Please input the root password for mysql:\" read -p \"(Default password: MANAGER):\" mysqlrootpwd if [ \"$mysqlrootpwd\" = \"\" ]; then mysqlrootpwd=\"MANAGER\" fi echo \"MySQL root password:$mysqlrootpwd\" echo -e \"=========do you want to install mysql ========\" isinstallmysql=\"n\" echo \"Install MySQL,Please input y\" read -p \"(Please input y or n):\" isinstallmysql case \"$isinstallmysql\" in [yY][eE][sS]|y|Y) echo \"You will install MySQL........\" isinstallmysql=\"y\" ;; [nN][oO]|N|n ) echo \"you will exit install MySQL........\" isinstallmysql=\"n\" exit 1 ;; *) echo \"INPUT error,You will exit install MySQL.......\" isinstallmysql=\"n\" exit 1 esac } #The installation flow path echo \"########### A tool to auto-compile \u0026 install MySQL on Redhat/CentOS 6 or 7 Linux ################ \" cd /root check_install_mysql_environment if_select_install InstallMySQL CheckInstall_result 上述脚本为安装mysql的脚本。直接执行交互式安装，两台机器都需要安装\n安装完毕后需要更改各自的配置文件\nserver-id=1更改不同值，主从mysql各自配置一个ID 接着就是登录数据库授权, 创建一个用户名为rep，密码为123456的账户，该账户可以被192.168.253网段下的所有ip地址使用，且该账户只能进行主从同步\nmysql \u0026gt; grant replication slave on *.* to ‘rep’@‘192.168.253.%’ identified by ‘123456’; mysql \u0026gt; flush tables with read lock;#然后刷新所有的表，同时给数据库加上一把锁，阻止对数据库进行任何的写操作 mysql \u0026gt; show master status;#获取二进制日志的信息 mysql\u0026gt; show master status; +------------------+----------+--------------+------------------+-------------------+ | File | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set | +------------------+----------+--------------+------------------+-------------------+ | mysql-bin.000004 | 2122282 | | | | +------------------+----------+--------------+------------------+-------------------+ File的值是当前使用的二进制日志的文件名，Position是该日志里面的位置信息（不需要纠结这个究竟代表什么），记住这两个值，会在下面配置从服务器时用到\n数据库的导入导出太简单，不做多说，\n做完最初的数据库手动同步后需要解锁表\nmysql \u0026gt; unlock tables; 如果数据库是全新安装的就不做手动同步了，直接跳过\n设置主从服务器 # 登录服务器执行以下SQL，作用是指定master服务器是谁，使用什么用户进行同步\nmysql\u0026gt; CHANGE MASTER TO MASTER_HOST=\u0026amp;#039;master_host_name\u0026amp;#039;,#主服务器ip，这里两台服务器就填写对方的ip地址就行 MASTER_USER=\u0026amp;#039;replication_user_name\u0026amp;#039;,#同步的账户 MASTER_PASSWORD=\u0026amp;#039;replication_password\u0026amp;#039;,#密码 MASTER_LOG_FILE=\u0026amp;#039;recorded_log_file_name\u0026amp;#039;,#show master status展现的File值 MASTER_LOG_POS=\u0026amp;#039;Position\u0026amp;#039;;#show master status展现的Position值 两台mysql执行完上述的SQL后分别启动主从复制进程\nmysql \u0026gt; start slave; 检查状态\nmysql \u0026gt; show slave status \\G #出现下面两个标志代表成功 Slave_IO_Running: Yes Slave_SQL_Running: Yes 排错 # Slave_IO_Running: NO # 这是一个很常见的错误（我也曾对这个错误咬牙切齿），总结起来就三个原因：\n主服务器的网络不通，或者主服务器的防火墙拒绝了外部连接3306端口 在配置从服务器时，输错了ip地址和密码，或者主服务器在创建用户时写错了用户名和密码 在配置从服务器时，输错了主服务器的二进制日志信息 排错过程：（主服务器ip：192.168.1.139，从服务器ip：192.168.1.204）\n第0步就是检查错误日志，如果不能快速排错，可以按我的步骤试试：\n1．首先在从服务器上执行ping程序，确定能ping通主服务器\n在从服务器上执行mysq的远程连接\n[root@slave204 log]# mysql -urep -p -h 192.168.1.139 -P3306 如果显示ERROR 1045 (28000): Access denied for user \u0026rsquo;test\u0026rsquo;@\u0026lsquo;192.168.1.204\u0026rsquo; (using password: YES)则跳转到第3\n2．登陆主服务器的mysql，查看所有的用户\nmysql \u0026gt; select user,host from mysql.user;检查授权情况 配置keepalived，以实现高可用 # 安装keepalived实现VIP切换，达到高可用，两台机器都安装\nyum install keepalived -y 编写配置脚本检查mysql的状态\n[root@localhost ~]# vim /opt/chk_mysql.sh #!/bin/bash counter=$(netstat -na|grep \u0026quot;LISTEN\u0026quot;|grep \u0026quot;3306\u0026quot;|wc -l) if [ \u0026quot;${counter}\u0026quot; -eq 0 ]; then /etc/init.d/keepalived stop fi chmod 755 添加执行权限 /opt/chk_mysql.sh 把原来的的配置文件情况写上一下文件\n! Configuration File for keepalived global_defs { notification_email { ops@wangshibo.cn tech@wangshibo.cn } notification_email_from ops@wangshibo.cn smtp_server 127.0.0.1 smtp_connect_timeout 30 router_id MASTER-HA } vrrp_script chk_mysql_port { #检测mysql服务是否在运行。有很多方式，比如进程，用脚本检测等等 script \"/opt/chk_mysql.sh\" #这里通过脚本监测 interval 2 #脚本执行间隔，每2s检测一次 weight -5 #脚本结果导致的优先级变更，检测失败（脚本返回非0）则优先级 -5 fall 2 #检测连续2次失败才算确定是真失败。会用weight减少优先级（1-255之间） rise 1 #检测1次成功就算成功。但不修改优先级 } vrrp_instance VI_1 { state MASTER interface eth0 #指定虚拟ip的网卡接口 mcast_src_ip 192.168.137.153 virtual_router_id 51 #路由器标识，MASTER和BACKUP必须是一致的 priority 101 #定义优先级，数字越大，优先级越高，在同一个vrrp_instance下，MASTER的优先级必须大于BACKUP的优先级。这样MASTER故障恢复后，就可以将VIP资源再次抢回来 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 192.168.137.110 } track_script { chk_mysql_port } } 并将以上配置文件复制到从服务器上，随后更改配置\n注意更改\ninterface eth0 mcast_src_ip 192.168.137.153 priority 101 state BACKUP #两台机器都配置为改值 配置完成后重启两台服务器的keeplived\nsystemctl restart keepalived 验证：\n关闭master，查看ip，可以发现虚拟IP已经飘逸到另外一台服务器了，重启启动keeplived后又回来了。\n说明部署成功\n最后，登录数据库授权虚拟ip地址段可以连接mysql后就行了虚拟ip的地址\n任意一台机器测试登录，可以正常登录便实现了高可用\n","date":"2020年66月18日","externalUrl":null,"permalink":"/2624.html","section":"Posts","summary":"","title":"MySQL互为主从架构+keeplived实现高可用","type":"post"},{"content":"最近在IBM上安装系统时出现了这么个情况超时的情况\n总结网上的解决办法：\n网上大多数教程都是这样的\ndracut:/# cd dev dracut:/# ls |grep sdb 这样子你就会看到所有的设备信息。找到sdbx,x为一个数字，是你u盘所在 dracut:/# reboot 重启之后，在install页面按e键修改\nvmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS\\x207\\x20x86_64.check quiet为 vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdbx(你u盘所在)quiet\n然后按Ctrl+x保存就好了。但是在操作过程中，我发现的dev里面的sdb开头的只有sdb,sdb1和sdb2，于是我就把它仨都试了一遍，就过都说找不到img文件。\n本来我以为我的电脑不能安装Linux的，后来我发现他们一般都说默认是sdb4，可我的dev里面没有sdb4，不过我的dev有个sdc4，于是我就使用sdc4\n修改\nvmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS\\x207\\x20x86_64.check quiet\n为\nvmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdc4 quiet\n弊端：对小白来说，找到自己的U盘的表示符难免会出错，\n我的解决办法：原理都一样 # 1.ISO下，在 /isolinux/isolinux.cfg文件中\n将原来的U盘标签 “CentOS 7 x86_64” 全部替换为自己设定的U盘标签，强烈建议U盘标签从简，不然一不小心就出错了\n里面的inst.stage2=hd:LABEL=CentOS\\x207\\x20x86_64\n这就是造成超时的原因，inst.stage2 这里应该是指向一个具体的地址，如果是DVD，它的标签就是“CentOS 7 x86_64”，而U盘则可能是你自己定义的标签。 这就造成了DVD能正常安装，U盘就不行了。\n2.在选择安装CentOS时，选择 Install CentOS 7 ,然后修改 按 e 键，进入修改状态，将 hd:LABEL= 修改为U盘的标签\nOK，到这里就能正确安装了\n","date":"2020年66月1日","externalUrl":null,"permalink":"/2616.html","section":"Posts","summary":"","title":"Warning: dracut-initqueue timeout解决办法","type":"post"},{"content":"不要脸的站长。我这一个小站你要来攻击？？？吃饱了撑着了吗？你咋这么闲？？？\n请你留点公德心！！！！\n你一抬脚，我就看见了你的袜子，你穿的破鞋！！！\n你脑子进地沟油吧！看到你我就想到四个字：身残志坚！！\n看见你就好像看见市场上快下市的小青菜，5毛钱一大把！！\n任何人工智能都敌不过阁下这款天然傻瓜！！\n作为失败的典型，你真的是太成功了！！！\n","date":"2020年66月1日","externalUrl":null,"permalink":"/2614.html","section":"Posts","summary":"","title":"不要脸的站长。我这一个小站你要来攻击","type":"post"},{"content":"","date":"2020年55月27日","externalUrl":null,"permalink":"/tags/hyper-v/","section":"标签","summary":"","title":"Hyper-V","type":"tags"},{"content":" Hyper-V虚拟机固定IP地址 # 最近在用虚拟机做实验，一会在家一会在公司的，网络环境老是变化，感觉挺烦的，写个文档记录下\n针对网上的一些教程说明：\n网上说的配置虚拟机ip地址为固定的ip地址的时候全部都是说： 打开控制面板，进入网络与共享中心，更改适配器的设置。找到刚才创建的虚拟机交换机。右键属性，修改IP地址。IP地址随你喜好，我这里用的IP:192.168.137.1，子网:255.255.255.0\n说这里我用的IP地址是。。。。。是个头啊？？？小白喜欢设置成192.168.11.*？？？然后呢，按照你的教程去发现虽然xshell能连接上虚拟机了，但是却死活都上不了网！！！！嗝屁了，死活不成功，\n说明一下，如果你即想根据你的心情来固定虚拟机的IP地址，又想让他能够上互联网，虚拟机内网ip必须设置成192.168.137.0网段的，想换别的网段就更改注册表去！！！！\n至于为什么是必须是137.0网段的，这是因为这是微软默认的一条NAT转发规则，当然你也可以改变转发规则！\n需求 # 需求一： # 不管物理机的网络如何变化，必须保证虚拟机的IP地址不变\n需求二： # 物理机能访问虚拟机，虚拟机之间可以互相通信\n需求三： # 无论物理机的网络环境怎么变化，虚拟机可以连接到外网\n需求四： # 无论物理机的网络环境怎么变化，虚拟机可以连接到外网并且保证虚拟机的IP地址不变\n先来重点实现需求一： # 1.按照图片步骤操作\n创建虚拟交换机\n这里有三个种类的虚拟机\n具体每个虚拟交换机作用是啥？ # 外部： 虚拟交换机部署完成后，虚拟机和宿主机连接到同一个虚拟交换机。虚拟机与宿主机获取同一网段的IP地址，与宿主机所在的网络中的其他计算机通信，每台虚拟机等同于宿主机所在网络的宿主机 选择此类虚拟交换机后虚拟机的ip地址和物理机的ip地址是同一个网段，变了网络环境后虚拟机的IP自然就发生了变化，起不到固定ip的作用\n内部： 内部网络相当于给宿主机虚拟一张网卡，用于于虚拟机通信，并且提供DHCP服务和NAT代理服务。虚拟机可以通过宿主机上网但是不能与宿主机所在的网络通信。 专用： 专用网络相当于虚拟一个专供虚拟机之间连接的虚拟交换机，所有的虚拟机连接到同一个虚拟交换机上，所有的虚拟机之间可以通信，但是不能访问宿主机以及宿主机所在的网络。 此类虚拟机只能在虚拟机间通信使用\n2.接着固定IP地址：找到刚刚创建的虚拟交换机的名称网卡，将网卡IP地址填写为手动获取，IP地址根据自己喜好来就行，但是这里根据自己的喜好来的话是上不互联网的,上面有介绍到。如图是我的\n3.固定虚拟机的IP地址的时候到了，过于简单，随便说说就行了\n登录虚拟机修改配置文件\nvi /etc/sysconfig/network-scripts/ifcfg-eth0 #网卡名称根据自己的情况而定 修改下面部分\nBOOTPROTO=static # 将dhcp设置为static DEVICE=eth0 #名称 ONBOOT=yes # 开机启动 IPADDR=10.10.10.200 # 这个需要和你前面设置的IP网段一样 GATEWAY=10.10.10.1 # 网关 DNS1=10.10.10.10 # 第一个DNS NETMASK=255.255.255.0 #子网掩码 重启网卡：\nsystemctl restart network 到这里需求一实现了\n实现需求二： # 这个比较简单，将所有虚拟机连接到同一个交换机上就行了\n实现需求三： # 需求三也比较简单，如果你的物理机能上外网的话，新建一个外网交换机或者使用默认的交换机便可以实现上外网的功能了，如果想上外网和ip不变，继续需求一的操作就行了。\n特别注意的地方就是：如果你不愿意折腾注册表的话，IP地址不能随意，必须是137.0网段的！\n实现上外网和ip不变（需求四） # 这里在需求一的基础上补充一点，只需要将物理机的网卡共享给你新建的内部交换机就能实现了，但是内网IP地址只能是137.0网段的 # hyper-v会自动生成一个default switch，根据微软的描述，default switch是为了无论物理机的网络环境怎么变化，虚拟机可以连接到外网。 一句话，物理机可以上网，虚拟机就可以\n","date":"2020年55月27日","externalUrl":null,"permalink":"/2603.html","section":"Posts","summary":"","title":"Hyper-V虚拟机固定IP地址且能上网","type":"post"},{"content":"WebDAV （Web-based Distributed Authoring and Versioning）是基于 HTTP 1.1 的一个通信协议。它为 HTTP 1.1 添加了一些扩展（就是在 GET、POST、HEAD 等几个 HTTP 标准方法以外添加了一些新的方法），使得应用程序可以直接将文件写到 Web Server 上，并且在写文件时候可以对文件加锁，写完后对文件解锁，还可以支持对文件所做的版本控制。这个协议的出现极大地增加了 Web 作为一种创作媒体对于我们的价值。基于 WebDAV 可以实现一个功能强大的内容管理系统或者配置管理系统。\n现在主流的WEB服务器一般都支持WebDAV，使用WebDAV的方便性，呵呵，就不用多说了吧，用过VS.NET开发ASP.NET应用的朋友就应该 知道，新建/修改WEB项目，其实就是通过WebDAV+FrontPage扩展做到的，下面我就较详细的介绍一下，WebDAV在tomcat中的配 置。\n如何禁止\n如何禁止DELETE、PUT、OPTIONS、TRACE、HEAD等协议访问应用程序应用程序呢？\n解决方法\n第一步：修改应用程序的web.xml文件的协议\n\u0026lt;?xml version=\"1.0\" encoding=\"UTF-8\"?\u0026gt; \u0026lt;web-app xmlns=\"http://java.sun.com/xml/ns/j2ee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\" version=\"2.4\"\u0026gt; 第二步：在应用程序的web.xml中添加如下的代码即可\n\u0026lt;security-constraint\u0026gt; \u0026lt;web-resource-collection\u0026gt; \u0026lt;url-pattern\u0026gt;/*\u0026lt;/url-pattern\u0026gt; \u0026lt;http-method\u0026gt;PUT\u0026lt;/http-method\u0026gt; \u0026lt;http-method\u0026gt;DELETE\u0026lt;/http-method\u0026gt; \u0026lt;http-method\u0026gt;HEAD\u0026lt;/http-method\u0026gt; \u0026lt;http-method\u0026gt;OPTIONS\u0026lt;/http-method\u0026gt; \u0026lt;http-method\u0026gt;TRACE\u0026lt;/http-method\u0026gt; \u0026lt;/web-resource-collection\u0026gt; \u0026lt;auth-constraint\u0026gt; \u0026lt;/auth-constraint\u0026gt; \u0026lt;/security-constraint\u0026gt; \u0026lt;login-config\u0026gt; \u0026lt;auth-method\u0026gt;BASIC\u0026lt;/auth-method\u0026gt; \u0026lt;/login-config\u0026gt; ","date":"2020年55月26日","externalUrl":null,"permalink":"/2602.html","section":"Posts","summary":"","title":"禁止不需要的 HTTP 方法--WebDAV","type":"post"},{"content":"全局配置一下代码就OK了\n将一下代码添加到nginx的server模块或者location模块\nif ($request_method ~ ^(PUT|DELETE)$) { return 403; } 或者\nif ($request_method !~ ^(GET|POST)$) { return 403; }","date":"2020年55月26日","externalUrl":null,"permalink":"/2601.html","section":"Posts","summary":"","title":"Nginx禁用非法请求http","type":"post"},{"content":"今天给某局在IBM X3650 M4上面安装windows server 2012一直停留在准备就绪和正在完成您的配置页面\n解决办法\n可能是我个人比较猪脑壳吧，这个坑之前没遇到过，也没有太注意！因为是内网环境，我安装完操作系统后系统进行重启，重启进入语言设置，协议接受。密钥激活，密码设置，然后就一直停留在正在完成您的配置，停留了好久好久就不往下继续，折腾了好久找到原因了\n重启进入密钥激活页面，找个密钥输入进去就行了！！！！坑！！！\n原因\n内网环境。无法访问互联网。也没有输入密钥，所以系统一直在保持访问互联网的姿势吧，大概是超时吧，也没有什么提示！输入密钥后几秒钟就行去了！！！\n","date":"2020年55月22日","externalUrl":null,"permalink":"/2599.html","section":"Posts","summary":"","title":"IBM X3650 M4上面安装系统停滞在正在为您准备界面","type":"post"},{"content":"记录一下Windows server 2008安装mysql8.0遇到的坑\n安装教程：Windows server安装mysql8.0\n背景：\n今天跑到某内网环境部署项目，要求安装mysql数据库，来之前我在官网下载了mysql.8.0.13的zip数据包来安装部署，遇到了下面几个问题，记录一下，方便日后好找\n问题1：数据库初始化错误\n2018-10-13T03:29:24.179826Z 0 [System] [MY-010116] [Server] D:\\Program Files\\MySQL\\bin\\mysqld.exe (mysqld 8.0.13) starting as process 7420 2018-10-13T03:29:24.205939Z 1 [ERROR] [MY-011011] [Server] Failed to find valid data directory. 2018-10-13T03:29:24.207560Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed. 2018-10-13T03:29:24.209780Z 0 [ERROR] [MY-010119] [Server] Aborting 2018-10-13T03:29:24.213334Z 0 [System] [MY-010910] [Server] D:\\Program Files\\MySQL\\bin\\mysqld.exe: Shutdown complete (mysqld 8.0.13) MySQL Community Server - GPL. 问题原因：网上查找的答案基本上都是让注释掉datadir这个项目，我感觉是不现实的，刚开始怀疑是my.ini的编写有问题，结果并不是，最终的问题还是文件编码的问题，索性用Notepad++来编写吧，最后就这样成功了\n问题1：数据库启动错误\nerror: Found option without preceding group in config file: D:\\mysql-8.0.13-win64\\my.ini at line: 1 Fatal error in defaults handling. Program aborted 问题原因： 当时创建my.ini文件时是新建txt文档后改名的，这样的my.ini文件格式可能是utf-8\n解决办法： my.ini文件保存为ANSI格式文件\n特别建议方法：先安装一个NotePad++来编写配置文件吧，不然遇到坑还不知道咋回事\n安装mysql8.0注意事项：\n看网上很多安装mysql8.0的教程都要求新建my.ini文件，其实不需要的\n1，mysql8 之后并不需要my.ini，会自动的生成data文件夹在解压之后的文件，端口默认3306,。若有这个文件，则初始化mysql不成功。\n2，自己若新建并设置了my.ini 文件，有data文件的话，在初始化之前要删除。然后再初始化\n3，在初始化之后会自动生成密码，要记下来，后续登上mysql需改密码之后才可后续操作。\n4，要更改加密规则，不然无法使用工具连接mysql\n","date":"2020年55月14日","externalUrl":null,"permalink":"/2588.html","section":"Posts","summary":"","title":"记录一下Windows server 2008安装mysql8.0遇到的坑","type":"post"},{"content":" Windows server安装mysql8.0 # 这里不像网上那么繁琐了，你既然知道安装mysql，想必您也具有一点点点点的mysql基础,这就足够了，\n1.首先下载mysql的二进制包： 点击下载mysql8.0.13\n2.将包解压到你想要用了作为mysql的安装路径的地方\n3.管理员运行cmd\n4.cd 解压路径/包名/bin 目录下，为了执行mysql的部分命令\n5.进行数据库初始化：\nmysqld --initialize --console 6.这里如果你没有安装 VC的话会报错\n安装VC2015-2019补丁：最新支持的 Visual C++ 下载\n安装简单，下载下来一步步运行就行了\n7.在解压目录下执行 mysqld \u0026ndash;initialize 初始化数据库，如果一开始就存在这个data文件夹请先删除它\n8.到这里初始化就能成功了，\n9.为了方便管理，可添加配置文件my.ini 要特别注意文件的编码，我在另一篇文章有记录这个问题\n10.安装mysql为服务\nmysqld --install 11.启动mysql服务\nnet start mysql 12.用初始化时记录的密码登录数据库修改密码\nmysql -uroot -ppassword #登录 use mysql; #选择数据库 ALTER USER \u0026#039;root\u0026#039;@\u0026#039;localhost\u0026#039; IDENTIFIED BY \u0026#039;password\u0026#039; PASSWORD EXPIRE NEVER; #更改加密方式 FLUSH PRIVILEGES; #刷新权限 以上所述是小编给大家介绍的解决Windows安装MySQL8.0 步骤及出现错误问题,希望对大家有所帮助，如果大家有任何疑问请给我留言，小编会及时回复大家的。在此也非常感谢大家的支持！\n如果你觉得本文对你有帮助，欢迎转载，烦请注明出处，谢谢！\n","date":"2020年55月14日","externalUrl":null,"permalink":"/2586.html","section":"Posts","summary":"","title":"Windows server安装mysql8.0","type":"post"},{"content":" 系统安装部署手册 # 第一章 部署环境 # 1.1服务器配置 # 内核 CPU型号 CPU数量 内存 磁盘 Linux3.10 Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz 2 8G 40G+160G 1.2系统环境参数 # 名称 版本 OS Centos7 Jdk 1.8 Mysql 5.7 Tomcat 9..0 第二章 MySQL安装 # 2.1安装准备 # 下载mysql文件，上传文件至/root/software/mysql目录，\n并解压至/usr/local/\n[root@db1 ~]# tar -zxvf mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz -C /usr/local/ 重命名文件\n[root@db1 ~]# cd /usr/local [root@db1 ~]# mv mysql-5.7.22-linux-glibc2.12-x86_64 mysql 2.2配置用户 # 创建mysql用户组\n[root@db1 ~]# groupadd mysql 创建mysql用户\n[root@db1 ~]# useradd –r –g -M mysql mysql 进入mysql目录\n[root@db1 ~]# cd /usr/local/mysql [root@db1 ~]# cd /usr/local/mysql [root@db1 mysql]# rm -rf data/* 修改mysql目录内的所有文件及目录的所有者为mysql，所属用户组为mysql\n[root@db1 mysql]#chown –R mysql:mysql ./ [root@db1 mysql]# chown –R mysql:root ./data 2.3初始化MySQL # 将配置文件复制到/etc目录\n如果/etc目录下存在先备份\n[root@cms1 mysql]# cp /etc/my.cnf /etc/my.cnf.bak 初始化之前修改my.cnf文件\n修改mysql数据文件目录配置\nbasedir=/usr/local/mysql datadir=/usr/local/mysql/data innodb_file_per_table=1 innodb_log_buffer_size = 10M innodb_flush_log_at_trx_commit = 2 innodb_lock_wait_timeout = 50 innodb_buffer_pool_size = 500M character-set-server=utf8 max_connections=1000 server-id=1 lower_case_table_names=1 socket=/tmp/mysql.sock [root@db1 mysql]# ./bin/mysqld --initialize --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --user=mysql 看到如下提示表示初始化\n2018-06-14T10:19:46.415292Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details). 2018-06-14T10:19:47.757098Z 0 [Warning] InnoDB: New log files created, LSN=45790 2018-06-14T10:19:47.965184Z 0 [Warning] InnoDB: Creating foreign key constraint system tables. 2018-06-14T10:19:48.025349Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 774397af-6fbc-11e8-acd6-00163e0a1ee6. 2018-06-14T10:19:48.027372Z 0 [Warning] Gtid table is not ready to be used. Table \u0026#039;mysql.gtid_executed\u0026#039; cannot be opened. 2018-06-14T10:19:48.031017Z 1 [Note] A temporary password is generated for root@db1: e5hvPoGZ;/du 记住生成的root密码\n将mysql.server启动文件复制到/etc/init.d目录\n/etc/init.d目录下的文件可以使用service命令操作\n[root@db1 mysql]# cp ./support-files/mysql.server /etc/init.d/mysqld [root@db1 mysql]# chmod +x /etc/init.d/mysqld [root@db1 mysql]# vim /etc/init.d/mysqld ###调整启动脚本 basedir=/usr/local/mysql datadir=/usr/local/mysql/data [root@db1 mysql]# /etc/init.d/mysqld start [root@db1 mysql]# ss -tnl|grep 3306 LISTEN 0 128 :::3306 :::* 2.4执行MySQL安全加固脚本 # [root@db1 mysql]# ./bin/mysql_secure_installation Securing the MySQL server deployment. Connecting to MySQL using a blank password. VALIDATE PASSWORD PLUGIN can be used to test passwords and improve security. It checks the strength of password and allows the users to set only those passwords which are secure enough. Would you like to setup VALIDATE PASSWORD plugin? Press y|Y for Yes, any other key for No: N ###是否启用密码复杂度检查插件 Securing the MySQL server deployment. Enter password for user root: ###输入临时密码 New password: ###输入新密码 Remove anonymous users? (Press y|Y for Yes, any other key for No) :Y ###移除匿名用户 Disallow root login remotely? (Press y|Y for Yes, any other key for No) : Y ###禁止root远程登录 Remove test database and access to it? (Press y|Y for Yes, any other key for No) : Y ###移除测试数据库 Reload privilege tables now? (Press y|Y for Yes, any other key for No) : Y ###重载权限表 2.5配置MySQL环境变量 # [root@db1 mysql]# vim /etc/profile 添加\nexport MYSQL_HOME=/usr/local/mysql export PATH=$MYSQL_HOME/bin:$PATH 保存退出\n使修改的环境变量生效\n[root@db1 ~]# source /etc/profile 启动mysql\n[root@db1 ~]# service mysqld start 关闭mysql\n[root@db1 ~]# service mysqld stop 重启mysql\n[root@db1 ~]# service mysqld restart 查看mysql运行状态\n[root@db1 ~]# service mysqld status 2.6设置开机启动 # 添加mysqld 到系统服务\n[root@db1 ~]# chkconfig --add mysqld 查看mysqld添加到mysql的启动状态\n[root@db1 ~]#chkconfig --list mysqld mysqld 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭\n注意：0-6表示mysql的运行级别，可以在/etc/inittab中查看系统包含的运行级别。\n0 - halt (Do NOT set initdefault to this) 1 - Single user mode 2 - Multiuser, without NFS (The same as 3, if you do not have networking) 3 - Full multiuser mode 4 - unused 5 - X11 6 - reboot (Do NOT set initdefault to this) 只需要3、5启动就行了，其它的不关心。\n如果3、5运行级别没有设置开机启动，则需要添加3、5运行级别运行mysql\n[root@db1 ~]# chkconfig --level 35 mysqld on Mysql****配置文件修改：\n编辑配置文件\n/etc/my.cnf 添加\n[mysqld] character_set_server=utf8 #修改数据库使用utf8编码 lower_case_table_names=1 #修改表名不区分大小写 max_allowed_packet = 1M #主要影响insert内容的大小，适量修改 max_connections=1000 #mysql的最大连接数 innodb_file_per_table=1 #InnoDB引擎独立表空间 建立数据库应用帐号\nmysql\u0026gt; grant all on *.* to \"zcms\"@\"%\" identified by \"zving10301\"; 第三章 JDK环境安装 # 3.1版本选择 # jdk-8uXX\n3.2安装 # [root@web1 ~]#tar xf 755 jdk-8u171-linux-x64.tar.gz [root@web1 ~]#mkdir /usr/java [root@web1 ~]#mv jdk1.8.0_171 /usr/java/ 3.3 配置环境变量 # 编辑/etc/profile vim /etc/profile 添加 export JAVA_HOME=/usr/java/jdk1.8.0_171 export PATH=$JAVA_HOME/bin:$PATH 使配置生效 source /etc/profile 第四章 Tomcat安装 # 4.1 版本选择 # apache-tomcat-9.0.xx.tar.gz\n4.2 安装 # 解压文件到/usr/local/\ntar -zxvf apache-tomcat-9.0.31.tar.gz -C /usr/local/ 修改目录名\ncd /usr/local/ mv apache-tomcat-9.0.31 tomcat 删除webapps目录下的所有文件\nrm –rf /usr/local/tomcat/webapps/* 4.3 Tomcat开机启动配置 # 执行vim /etc/rc.d/init.d/tomcat ,添加以下内容\n\\#!/bin/bash \\# \\# /etc/rc.d/init.d/tomcat \\# init script for tomcat precesses \\# \\# processname: tomcat \\# description: tomcat is a j2se server \\# chkconfig: 2345 86 16 \\# description: Start up the Tomcat servlet engine. if [ -f /etc/init.d/functions ]; then . /etc/init.d/functions elif [ -f /etc/rc.d/init.d/functions ]; then . /etc/rc.d/init.d/functions else echo -e \"/atomcat: unable to locate functions lib. Cannot continue.\" exit -1 fi RETVAL=$? \\#Tomcat目录 CATALINA_HOME=\"/usr/local/tomcat\" case \"$1\" in start) if [ -f $CATALINA_HOME/bin/startup.sh ]; then echo $\"Starting Tomcat\" $CATALINA_HOME/bin/startup.sh fi ;; stop) if [ -f $CATALINA_HOME/bin/shutdown.sh ]; then echo $\"Stopping Tomcat\" $CATALINA_HOME/bin/shutdown.sh fi ;; *) echo $\"Usage: $0 {start|stop}\" exit 1 ;; esac exit $RETVAL 添加开机启动 \\# chmod 775 /etc/rc.d/init.d/tomcat #赋予文件执行权限 \\# chkconfig --level 35 tomcat on #设置开机启动 防火墙开放8080:端口 修改/etc/sysconfig/iptables \\# vim /etc/sysconfig/iptables 重启防火墙 \\#service iptables restart 第五章 项目部署 # 上传项目程序war包到/usr/local/tomcat/weapps/下\n将所有程序包上传至该目录，根据情况更改项目名称便于访问\n解压程序包\nunzip *.war -d ROOT 更改数据库连接信息\nvim /usr/local/tomcat/webapps/web/WEB-INF/clas ses/application-prop.yml 根据数据使用情况进行更改\n数据导入\n将数据库的sql文件上传至服务器/usr/local/tomcat/下\n导入数据文件\nmysqldump -uroot -ppassword databasename \u0026lt; /usr/local/*.sql 启动Tomcat\n/usr/local/tomcat/bin/startup.sh 查看日志情况\ntail -f /usr/local/tomcat/logs/catalina.out 项目访问\n打开浏览器输入地址IP:端口/项目名称\n","date":"2020年55月14日","externalUrl":null,"permalink":"/2576.html","section":"Posts","summary":"","title":"系统安装部署手册","type":"post"},{"content":" logrotate日志切割压缩Nginx Tomcat Redis # 使用背景情况\n运维中日志处理是一个超级常见的任务，可能会经常性的挑取日志内容，比如天级的日志或者是周级，也或者是具体时段的，但是，如果日志两很大时候，日志过滤变得会很繁琐，还会造成空间浪费，资源浪费，特推出日志切割软件进行切割日志，\n一、logrotate介绍 # ​ logrotate软件是一个日志管理工具，用于非分隔日志，删除旧的日志文件，并创建新的日志文件，起到“转储作用”，可以为系统节省磁盘空间。一般centos系统已经自带安装好了。\n​ logrotate是基于crontab运行的，其脚本是/etc/cron.daily/logtotate，日志轮转是系统自发完成的，实际运行时，logrotate会调用配置文件/etc/logrotate.conf。每日任务执行，可以在/etc/logrotate.d目录里放置自定义好的配置文件，其中文件也会被 logrotate 读取。指明每个日志文件的特定规则。/var/lib/logrotate.status中默认记录logrotate上次轮询日志文件的时间\n二、安装logrotate # 一般系统都默认安装了，如果没有安装用yum安装一下就可以了\nyum –y install logrotate 三、使用案例 # 3.1切割Tomcat的Catalina.out # cat /etc/logrotate.d/tomcat#第一种 /usr/local/tomcats/*/logs/catalina.out { rotate 7 # 指定日志文件删除之前的转储次数，7表示保留7次备份 daily # 指定转储周期为每天 dateext # 使用日期为转储文件的后缀 copytruncate # 用于还在打开中的日志文件，把当前日志备份并截断 compress # 通过gzip压缩转储以后的日志 ifempty # 即使是空文件也转储，这个是logrotate的缺省选项 missingok # 如果日志不存在则忽略该警告信息 postrotate # postrotate/endscript,在转储以后需要执行的命令可以放入这个对，这两个关键字必须单独成行 find /usr/local/tomcats/*/logs \\( -name \"*.txt\" -o -name \"*.log\" \\) -mtime +0 -exec rm -rf {} \\; endscript } #第二种 /opt/tomcat/logs/catalina.out { rotate 14 daily copytruncate compress notifempty missingok size 10M } 如果等不及cron自动执行日志轮转，想手动强制切割日志，需要加-f参数；不过正式执行前最好通过Debug选项来验证一下（-d参数），这对调试也很重要\n执行方式\n/usr/sbin/logrotate -f /etc/logrotate.d/nginx(配置文件名称) /usr/sbin/logrotate -d -f /etc/logrotate.d/tomcat （配置文件名称） 3.2 redis 日志备份压缩 # cat /etc/logrotate.d/redis { rotate 14 daily dateext copytruncate compress ifempty missingok postrotate find /var/log/redis \\( -name \"*.txt\" -o -name \"*.log\" \\) -mtime +0 -exec rm -rf {} \\; endscript } 3.3 nginx日志切割 # vim /etc/logrotate.d/nginx /var/log/weblog/*.log {//日志路径 daily //指定转储周期为每天 compress //通过gzip 压缩转储以后的日志 rotate 7 //保存7天的日志 missingok //如果日志文件丢失，不要显示错误 notifempty //当日志文件为空时，不进行轮转 dateext //使用当期日期作为命名格式，exp: nginx_access.log-20190120 sharedscripts //运行postrotate脚本 postrotate //执行的指令 if [ -f /run/nginx.pid ]; then kill -USR1 `cat /run/nginx.pid` fi endscript //结束指令 } 3.4 PHP-FPM日志的配置实例 # vim /etc/logrotate.d/php /usr/local/php/var/log/*.log { daily compress rotate 7 missingok notifempty dateext sharedscripts postrotate if [ -f /usr/local/php/var/run/php-fpm.pid ]; then kill -USR2 `cat /usr/local/php/var/run/php-fpm.pid` fi endscript } 四、参数说明 # 参数 \u0026lt;th style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 说明 \u0026lt;/th\u0026gt; compress \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 启用压缩，指的是轮替后的旧日志，这里默认用的是gzip压缩的 \u0026lt;/td\u0026gt; compressoptions \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 以gzip -9的模式压缩 \u0026lt;/td\u0026gt; uncompresscmd \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 解压日志，默认是gunzip \u0026lt;/td\u0026gt; daily \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 每天轮替选项 \u0026lt;/td\u0026gt; dateext \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 轮替的日志文件会附加上一个短横线和YYYYMMDD格式的时间戳 \u0026lt;/td\u0026gt; delaycompress \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 将以前的日志文件压缩推迟到下一次轮替 \u0026lt;/td\u0026gt; ifempty \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 即使日志文件是空的也轮替 \u0026lt;/td\u0026gt; mail \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 将轮替后的文件发送到指定E-mail地址 \u0026lt;/td\u0026gt; copytruncate \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 用于还在打开中的日志文件，把当前日志备份并截断，开始轮替 \u0026lt;/td\u0026gt; mailfirst/maillast \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 向邮件发送轮替文件/轮替后历史文件（默认） \u0026lt;/td\u0026gt; monthly \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 一个月轮替一次 \u0026lt;/td\u0026gt; nocompress \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 如果在logrotate.conf中启用了压缩，这里是做不用压缩的参数 \u0026lt;/td\u0026gt; nomail \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 不发送邮件到任何地址 \u0026lt;/td\u0026gt; ifempty \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 如果日志时空的就不轮替 \u0026lt;/td\u0026gt; olddir directory \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 轮替后日志文件放入指定的目录，必须和当前日志文件在同一个文件系统 \u0026lt;/td\u0026gt; postrotate/endscript \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 在做完轮替后的命令，两个关键字必须单独成行，使用的操作在2者之间相当于分组“{}”，注意的使用外部指令时要用绝对路径 \u0026lt;/td\u0026gt; prerotate/endscript \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 在做轮替前的命令,同上 \u0026lt;/td\u0026gt; rotate count \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 轮替最多保留之前的数据几次，超出的将被删除或邮件接收，设为0则不保存 \u0026lt;/td\u0026gt; size size \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 当日志增长到指定大小的时候开始轮替，它不会考虑 \u0026lt;/td\u0026gt; start count \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 轮替文件名基于这个数字。 例如，指定0时，原日志文件轮替的备份文件以.0为扩展名，如果指定9，就直接从.9开始跳过0-8 然后再继续向后轮替rotate指定的次数。 \u0026lt;/td\u0026gt; weekly \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 如果当前的星期几比上次轮替的星期几少，或者过了一个多星期，就会发生轮替通常是在每周的第一天轮替，如果logrotate不是每天运行的，会在第一次有机会时进行轮替。 \u0026lt;/td\u0026gt; yearly \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 如果当前年份不同于上次轮替的年份，则进行日志轮替 \u0026lt;/td\u0026gt; create mode owner group \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 在轮替动作之后，postrotate脚本执行之前，立即使用刚轮替的日志文件名创建日志文件。 MODE 指定日志文件的权限(0660之类) OWNER 指定日志文件的属主 GROUP 指定日志文件的属组 \u0026lt;/td\u0026gt; extension ext \u0026lt;td style=\u0026quot;text-align: center;\u0026quot;\u0026gt; 日志文件可在轮替后使用指定的EXT扩展名。如果使用压缩，通常EXT后还会加上压缩文件的扩展名，通常是.gz。例如想把mylog.foo轮转为mylog.1.foo.gz而不是mylog.foo.1.gz \u0026lt;/td\u0026gt; ","date":"2020年55月14日","externalUrl":null,"permalink":"/2574.html","section":"Posts","summary":"","title":"logrotate日志切割压缩Nginx Tomcat Redis","type":"post"},{"content":"日常生活中我见得最多的基本上就是rwx权限了，但是还有一部分特殊权限们这里记录一下\n1.s权限（setuid） # 何为s权限？set uid 设置uid，也就是 让普通用户可以以root用户的角色运行只有root帐号才能运行的程序或命令\n值得我们注意的是： 文件属主和组设置SUID和GUID，文件在被设置了s权限后将以root身份执行。在设置s权限时文件属主、属组必须先设置相应的x权限，否则s权限并不能正真生效。\n实操演示： # [root@pythondesign ~]# ls -ld install.sh -rw-r--r-- 1 root root 20315 Apr 1 15:14 install.sh [root@pythondesign ~]# chmod u+s install.sh [root@pythondesign ~]# ls -ld install.sh -rwSr--r-- 1 root root 20315 Apr 1 15:14 install.sh [root@pythondesign ~]# chmod 755 install.sh [root@pythondesign ~]# ls -ld install.sh -rwxr-xr-x 1 root root 20315 Apr 1 15:14 install.sh [root@pythondesign ~]# chmod u+s install.sh [root@pythondesign ~]# ls -ld install.sh -rwsr-xr-x 1 root root 20315 Apr 1 15:14 install.sh [root@pythondesign ~]# 通过上面几个演示可以看出，在我们没有对文件添加x权限时候s权限是大写的S，添加x权限也就是添加755权限之后就变成了小写的s，只有变成小写的s，权限才能生效，Linux中passwd修改密码这个命令就是s权限的最好体现， Linux修改密码的passwd便是个设置了SUID的程序，普通用户无读写/etc/shadow文件的权限确可以修改自己的密码。\n[root@pythondesign ~]# ls -l which passwd -rwsr-xr-x. 1 root root 34928 May 11 2019 /usr/bin/passwd [root@pythondesign ~]# 这里如果没有了s权限，那么普通用户只有通过root来修改密码，这样root就知道了我普通用户的密码，这样是不行的。如果给用户设置成rw权限，那么用户就可以通过删除/etc/shadow里的root的密码，来让root无密码，可直接登陆。这样就会造成极大的风险\n设置方法：chmod u+s filename or command # 2.粘滞位（t） # 何为t权限？ 只能由属主和root来执行删除文件的权限 ，和上面一样也需要先有x权限，当没有x权限的时候，为大写T ，设置粘滞位的文件，只能由以下账户删除\n超级管理员 该目录的所有者 该文件的所有者 权限设置方法：chmod u+t filename or command # 3.其他特殊权限 # i：不可修改权限\n例：chattr u+i filename 则filename文件就不可修改，无论任何人，如果需要修改需要先删除i权限，用chattr -i filename就可以了。查看文件是否设置了i权限用lsattr filename。\na：只追加权限， 对于日志系统很好用，这个权限让目标文件只能追加，不能删除，而且不能通过编辑器追加。可以使用chattr +a设置追加权限\n","date":"2020年55月13日","externalUrl":null,"permalink":"/2567.html","section":"Posts","summary":"","title":"Linux特殊权限rws、rwS和rwt、rwT","type":"post"},{"content":" 前言 在运维的坑里摸爬滚打好几年了，我还记得我刚开始的时候，我只会使用一些简单的命令，写脚本的时候，也是要多简单有多简单，所以有时候写出来的脚本又长又臭。 像一些高级点的命令，比如说 Xargs 命令、管道命令、自动应答命令等，如果当初我要是知道，那我也可能写出简洁高效的脚本。 不管出于任何原因，我都想对一些 Linux 使用的高级命令进行用法说明，利人利己，以后不记得的话，我也可以回头翻来看看。 一、实用的 xargs 命令 在平时的使用中，我认为 xargs 这个命令还是较为重要和方便的。我们可以通过使用这个命令，将命令输出的结果作为参数传递给另一个命令。 比如说我们想找出某个路径下以 .conf 结尾的文件，并将这些文件进行分类，那么普通的做法就是先将以 .conf 结尾的文件先找出来，然后输出到一个文件中，接着 cat 这个文件，并使用 file 文件分类命令去对输出的文件进行分类。 这个普通的方法还的确是略显麻烦，那么这个时候 xargs 命令就派上用场了。\n例1：找出 / 目录下以 .conf 结尾的文件，并进行文件分类\n命令：# find / -name *.conf -type f -print | xargs file\n输出结果如下所示： xargs 后面不仅仅可以加文件分类的命令，你还可以加其他的很多命令，比如说实在一点的tar命令，你可以使用find命令配合tar命令，将指定路径的特殊文件使用find命令找出来，然后配合tar命令将找出的文件直接打包，命令如下： # find / -name *.conf -type f -print | xargs tar cjf test.tar.gz 二、命令或脚本后台运行 有时候我们进行一些操作的时候，不希望我们的操作在终端会话断了之后就跟着断了，特别是一些数据库导入导出操作，如果涉及到大数据量的操作，我们不可能保证我们的网络在我们的操作期间不出问题，所以后台运行脚本或者命令对我们来说是一大保障。 比如说我们想把数据库的导出操作后台运行，并且将命令的操作输出记录到文件，那么我们可以这么做：\nnohup mysqldump -uroot -pxxxxx —all-databases \u003e ./alldatabases.sql \u0026（xxxxx是密码） 当然如果你不想密码明文，你还可以这么做：\nnohup mysqldump -uroot -pxxxxx —all-databases \u003e ./alldatabases.sql （后面不加\u0026符号） 执行了上述命令后，会提示叫你输入密码，输入密码后，该命令还在前台运行，但是我们的目的是后天运行该命令，这个时候你可以按下Ctrl+Z，然后在输入bg就可以达到第一个命令的效果，让该命令后台运行，同时也可以让密码隐蔽输入。 命令后台执行的结果会在命令执行的当前目录下留下一个nohup.out文件，查看这个文件就知道命令有没有执行报错等信息。 三、找出当前系统内存使用量较高的进程 在很多运维的时候，我们发现内存耗用较为严重，那么怎么样才能找出内存消耗的进程排序呢？\n命令：# ps -aux | sort -rnk 4 | head -20 输出的第4列就是内存的耗用百分比。最后一列就是相对应的进程。 四、找出当前系统CPU使用量较高的进程 在很多运维的时候，我们发现CPU耗用较为严重，那么怎么样才能找出CPU消耗的进程排序呢？\n命令：# ps -aux | sort -rnk 3 | head -20 输出的第3列为CPU的耗用百分比，最后一列就是对应的进程。 我想大家应该也发现了，sort 命令后的3、4其实就是代表着第3列进行排序、第4列进行排序。 五、同时查看多个日志或数据文件 在日常工作中，我们查看日志文件的方式可能是使用tail命令在一个个的终端查看日志文件，一个终端就看一个日志文件。包括我在内也是，但是有时候也会觉得这种方式略显麻烦，其实有个工具叫做multitail可以在同一个终端同时查看多个日志文件。 首先安装multitail： # wget ftp://ftp.is.co.za/mirror/ftp.rpmforge.net/redhat/el6/en/x86_64/dag/RPMS/multitail-5.2.9-1.el6.rf.x86_64.rpm # yum -y localinstall multitail-5.2.9-1.el6.rf.x86_64.rpm multitail工具支持文本的高亮显示，内容过滤以及更多你可能需要的功能。 如下就来一个有用的例子：\n此时我们既想查看secure的日志指定过滤关键字输出，又想查看实时的网络ping情况：\n命令如下： # multitail -e \"Accepted\" /var/log/secure -l \"ping baidu.com\" 不是很方便？如果平时我们想查看两个日志之间的关联性，可以观察日志输出是否有触发等。如果分开两个终端可能来回进行切换有点浪费时间，这个multitail工具查看未尝不是一个好方法。 六、持续ping并将结果记录到日志 很多时候，运维总会听到一个声音，是不是网络出什么问题了啊，导致业务出现怪异的症状，肯定是服务器网络出问题了。这个就是俗称的背锅，业务出了问题，第一时间相关人员找不到原因很多情况下就会把问题归结于服务器网络有问题。 这个时候你去ping几个包把结果丢出来，人家会反驳你，刚刚那段时间有问题而已，现在业务都恢复正常了，网络肯定正常啊，这个时候估计你要气死。 你要是再拿出zabbix等网络监控的数据，这个时候就不太妥当了，zabbix的采集数据间隔你不可能设置成1秒钟1次吧？小编就遇到过这样的问题，结果我通过以下的命令进行了ping监控采集。 然后再有人让我背锅的时候，我把出问题时间段的ping数据库截取出来，大家公开谈，结果那次被我叼杠回去了，以后他们都不敢轻易甩锅了，这个感觉好啊。 命令：\nping api.jpush.cn | awk ‘{ print $0” “ strftime(“%Y-%m-%d %H:%M:%S”,systime()) } ‘ \u003e\u003e /tmp/jiguang.log \u0026\n输出的结果会记录到/tmp/jiguang.log 中，每秒钟新增一条ping记录，如下： 七、查看tcp连接状态 指定查看80端口的tcp连接状态，有利于分析连接是否释放，或者攻击时进行状态分析。 命令：# netstat -nat |awk ‘{print $6}’|sort|uniq -c|sort -rn 八、查找80端口请求数最高的前20个IP 有时候业务的请求量突然上去了，那么这个时候我们可以查看下请求来源IP情况，如果是集中在少数IP上的，那么可能是存在攻击行为，我们使用防火墙就可以进行封禁。命令如下： # netstat -anlp|grep 80|grep tcp|awk '{print $5}'|awk -F: '{print $1}'|sort|uniq -c|sort -nr|head -n20 九、ssh实现端口转发 可能很多的朋友都听说过ssh是linux下的远程登录安全协议，就是通俗的远程登录管理服务器。但是应该很少朋友会听说过ssh还可以做端口转发。其实ssh用来做端口转发的功能还是很强大的，下面就来做示范。 实例背景：我们公司是有堡垒机的，任何操作均需要在堡垒机上进行，有写开发人员需要访问ELasticSearch的head面板查看集群状态，但是我们并不想将ElasticSearch的9200端口映射出去，依然想通过堡垒机进行访问。所以才会将通往堡垒机（192.168.1.15）的请求转发到服务器ElasticSearch（192.168.1.19）的9200上。 例子：\n将发往本机（192.168.1.15）的9200端口访问转发到192.168.1.19的9200端口\nssh -p 22 -C -f -N -g -L 9200:192.168.1.19:9200 ihavecar@192.168.1.19\n记住：前提是先进行秘钥传输。 命令执行完后，访问192.168.1.15:9200端口则真实是访问192.168.1.19:9200端口。 ","date":"2020年55月12日","externalUrl":null,"permalink":"/2545.html","section":"Posts","summary":"","title":"很实用的 Linux 高级命令","type":"post"},{"content":"**LVS**三种工作模式、十种调度算法介绍\n工作模式介绍：\n1.Virtual server via NAT（VS-NAT）\n优点：集群中的物理服务器可以使用任何支持TCP/IP操作系统，物理服务器可以分配Internet的保留私有地址，只有负载均衡器需要一个合法的IP地址。\n缺点：扩展性有限。当服务器节点（普通PC服务器）数据增长到20个或更多时,负载均衡器将成为整个系统的瓶颈，因为所有的请求包和应答包都需要经过负载均衡器再生。假使TCP包的平均长度是536字节的话，平均包再生延迟时间大约为60us（在Pentium处理器上计算的，采用更快的处理器将使得这个延迟时间变短），负载均衡器的最大容许能力为8.93M/s，假定每台物理服务器的平台容许能力为400K/s来计算，负责均衡器能为22台物理服务器计算。\n解决办法：即使是是负载均衡器成为整个系统的瓶颈，如果是这样也有两种方法来解决它。一种是混合处理，另一种是采用Virtual Server via IP tunneling或Virtual Server via direct routing。如果采用混合处理的方法，将需要许多同属单一的RR DNS域。你采用Virtual Server via IP tunneling或Virtual Server via direct routing以获得更好的可扩展性。也可以嵌套使用负载均衡器，在最前端的是VS-Tunneling或VS-Drouting的负载均衡器，然后后面采用VS-NAT的负载均衡器。\n2.Virtual server via IP tunneling（VS-TUN）\n我们发现，许多Internet服务（例如WEB服务器）的请求包很短小，而应答包通常很大。\n优点：负载均衡器只负责将请求包分发给物理服务器，而物理服务器将应答包直接发给用户。所以，负载均衡器能处理很巨大的请求量，这种方式，一台负载均衡能为超过100台的物理服务器服务，负载均衡器不再是系统的瓶颈。使用VS-TUN方式，如果你的负载均衡器拥有100M的全双工网卡的话，就能使得整个Virtual Server能达到1G的吞吐量。\n缺点：但是，这种方式需要所有的服务器支持\u0026quot;IP Tunneling\u0026quot;(IP Encapsulation)协议，我仅在Linux系统上实现了这个，如果你能让其它操作系统支持，还在探索之中。\n3.Virtual Server via Direct Routing（VS-DR）\n优点：和VS－TUN一样，负载均衡器也只是分发请求，应答包通过单独的路由方法返回给客户端。与VS-TUN相比，VS-DR这种实现方式不需要隧道结构，因此可以使用大多数操作系统做为物理服务器，其中包括：Linux、Solaris 、FreeBSD 、windows、IRIX 6.5；HPUX11等。\n不足：要求负载均衡器的网卡必须与物理网卡在一个物理段上。\n三种IP负载均衡技术的优缺点比较:\n杂项　VS/NAT　VS/TUN　VS/DR\n服务器操作系统　任意　支持隧道　多数(支持Non-arp )\n服务器网络　私有网络　局域网/广域网　局域网\n服务器数目(100M网络) 10-20　100　多(100)\n服务器网关　负载均衡器　自己的路由　自己的路由\n效率　一般　高　最高\n调度算法介绍：\n1.轮叫调度（Round Robin）(简称rr)\n调度器通过“轮叫”调度算法将外部请求按顺序轮流分配到集群中的真实服务器上，它均等地对待每一台服务器，而不管服务器上实际的连接数和系统负载。\n2.加权轮叫（Weighted Round Robin）（简称wrr)\n调度器通过“加权轮叫”调度算法根据真实服务器的不同处理能力来调度访问请求。这样可以保证处理能力强的服务器能处理更多的访问流量。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。\n3.最少链接（Least Connections）(LC)\n调度器通过“最少连接”调度算法动态地将网络请求调度到已建立的链接数最少的服务器上。如果集群系统的真实服务器具有相近的系统性能，采用“最小连接”调度算法可以较好地均衡负载。\n4.加权最少链接（Weighted Least Connections）(WLC)\n在集群系统中的服务器性能差异较大的情况下，调度器采用“加权最少链接”调度算法优化负载均衡性能，具有较高权值的服务器将承受较大比例的活动连接负载。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。\n5.基于局部性的最少链接（Locality-Based Least Connections）(LBLC)\n“基于局部性的最少链接”调度算法是针对目标IP地址的负载均衡，目前主要用于Cache集群系统。该算法根据请求的目标IP地址找出该目标IP地址最近使用的服务器，若该服务器是可用的且没有超载，将请求发送到该服务器；若服务器不存在，或者该服务器超载且有服务器处于一半的工作负载，则用“最少链接” 的原则选出一个可用的服务器，将请求发送到该服务器。\n6.带复制的基于局部性最少链接（Locality-Based Least Connections with Replication）(LBLCR)\n“带复制的基于局部性最少链接”调度算法也是针对目标IP地址的负载均衡，目前主要用于Cache集群系统。它与LBLC算法的不同之处是它要维护从一个目标 IP地址到一组服务器的映射，而LBLC算法维护从一个目标IP地址到一台服务器的映射。该算法根据请求的目标IP地址找出该目标IP地址对应的服务器组，按“最小连接”原则从服务器组中选出一台服务器，若服务器没有超载，将请求发送到该服务器；若服务器超载，则按“最小连接”原则从这个集群中选出一台服务器，将该服务器加入到服务器组中，将请求发送到该服务器。同时，当该服务器组有一段时间没有被修改，将最忙的服务器从服务器组中删除，以降低复制的程度。\n7.目标地址散列（Destination Hashing）(DH)\n“目标地址散列”调度算法根据请求的目标IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。\n8.源地址散列（Source Hashing）(SH)\n“源地址散列”调度算法根据请求的源IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。\n\\9. 最短的期望的延迟（Shortest Expected Delay Scheduling SED）(SED)\n基于wlc算法。这个必须举例来说了\nABC三台机器分别权重123 ，连接数也分别是123。那么如果使用WLC算法的话一个新请求进入时它可能会分给ABC中的任意一个。使用sed算法后会进行这样一个运算\nA(1+1)/1\nB(1+2)/2\nC(1+3)/3\n根据运算结果，把连接交给C 。\n10.最少队列调度（Never Queue Scheduling NQ）(NQ)\n无需队列。如果有台 realserver的连接数＝0就直接分配过去，不需要在进行sed运算\n","date":"2020年55月9日","externalUrl":null,"permalink":"/2540.html","section":"Posts","summary":"","title":"LVS三种工作模式、十种调度算法介绍","type":"post"},{"content":"您的站点遇到了致命错误解决调试办法开启\n在wp-config.php文件加入如下代码进行刷新页面进行排查错误 // 开启WP_DEBUG模式#这里是更改原来的 define( ‘WP_DEBUG’, true ); //禁用出错就发送邮件通知 define( \u0026#039;WP_DISABLE_FATAL_ERROR_HANDLER\u0026#039;, true ); // 开启DEBUG日志，一定要记得关闭这个日志功能并清理这个日志文件哦，产生的日志文件在: /wp-content/debug.log define( ‘WP_DEBUG_LOG’, true ); // 显示errors and warnings define( ‘WP_DEBUG_DISPLAY’, true ); @ini_set( ‘display_errors’, ‘On’ ); 我的错误是由于一个插件导致的，更新插件时发生错误导致，直接进到终端rm -rf 删除插件重新安装就解决了\n","date":"2020年55月9日","externalUrl":null,"permalink":"/2527.html","section":"Posts","summary":"","title":"您的站点遇到了致命错误","type":"post"},{"content":"记录一下最近更新网站遇到的文章内容不显示的问题\n现象：打开文章如下图所示\n不显示文章内容\n原因是使用了百度收录查询插件\n该插件在主题下的文章模板(一般是single.php)，在需要显示百度收录结果的地方添加以下函数:\n\u0026lt;?php echo baidu_record();?\u0026gt; 位置如图：\n是因为此代码导致的文章不显示\n解决办法，要么删除代码要么启动插件baidu_record\n要么吧上面那串代码放到：如下图所示区域\n","date":"2020年55月9日","externalUrl":null,"permalink":"/2516.html","section":"Posts","summary":"","title":"记录一下最近更新网站遇到的文章内容不显示的问题","type":"post"},{"content":"PORT 主动模式：\n用户主机一个随机端口连接FTP SERVER的TCP21端口进行协商；\n用户主机告诉FTP SERVER，我的XXXX端口已经打开，你可以放心大胆的连过来；\n然后FTP SERVER就用TCP20端口连接用户主机的XXXX端口，数据传输开始\nFTP-Client-host 开启一个随机端口 -\u0026ndash;-\u0026ndash;-\u0026ndash;-\u0026mdash;-》 FTP Server 的TCP-21 进行协商\nFTP-Client host 把协商好的端口打开 《-\u0026ndash;-\u0026mdash; FTP Server 连进来\nFTP Server 用TCP-20 和客户端的随机端口进行数据传输\n要求：\nFTP-Server 的防火墙要开放 TCP 20,21 端口\nFTP-Client 端最好把防火墙关闭，因为用的是随机端口\n一句话，主动模式就是 client 端开放一个随机端口，Server端主动去连接。\nPASV 被动模式：\nFTP Client 随机端口 -\u0026ndash;-\u0026ndash;-\u0026ndash;-\u0026ndash;-\u0026mdash;》 FTP Server 的 TCP 21端口进行协商\nFTP Server 告诉FTP Client 我的XXX端口已打开，你可以连过来。\nFTP Client 用一个随机端口去连 FTP Server的 XXX端口，开始数据传输。\n被动模式要求，FTP Server 的防火墙开放 21 和 一个范围内的端口，在被动模式里设置的。\nFTP Client 则要有随机端口可用即可。\n一句话， 被动模式就是 Server 端开放一个随机端口 等待 客户端来连接\n","date":"2020年55月8日","externalUrl":null,"permalink":"/2507.html","section":"Posts","summary":"","title":"FileZilla-Server-FTP的主动模式和被动模式","type":"post"},{"content":"Redis相关命令及安全技术\nRedis 数据类型\nRedis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。\nString（字符串）\nstring 是 redis 最基本的类型，你可以理解成与 Memcached 一模一样的类型，一个 key 对应一个 value。\nstring 类型是二进制安全的。意思是 redis 的 string 可以包含任何数据。比如jpg图片或者序列化的对象。\nstring 类型是 Redis 最基本的数据类型，string 类型的值最大能存储 512MB。\n实例\nredis 127.0.0.1:6379\u0026gt; SET name \u0026ldquo;runoob\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; GET name\n\u0026ldquo;runoob\u0026rdquo;\n在以上实例中我们使用了 Redis 的 SET 和 GET 命令。键为 name，对应的值为 runoob。\n注意：一个键最大能存储512MB。\nHash（哈希）\nRedis hash 是一个键值(key=\u0026gt;value)对集合。\nRedis hash 是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象。\n实例\nredis\u0026gt; HMSET myhash field1 \u0026ldquo;Hello\u0026rdquo; field2 \u0026ldquo;World\u0026rdquo;\n\u0026ldquo;OK\u0026rdquo;\nredis\u0026gt; HGET myhash field1\n\u0026ldquo;Hello\u0026rdquo;\nredis\u0026gt; HGET myhash field2\n\u0026ldquo;World\u0026rdquo;\n实例中我们使用了 Redis HMSET, HGET 命令，HMSET 设置了两个 field=\u0026gt;value 对, HGET 获取对应 field 对应的 value。\n每个 hash 可以存储 232 -1 键值对（40多亿）。\nList（列表）\nRedis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。\n实例\nredis 127.0.0.1:6379\u0026gt; lpush runoob redis\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; lpush runoob mongodb\n(integer) 2\nredis 127.0.0.1:6379\u0026gt; lpush runoob rabitmq\n(integer) 3\nredis 127.0.0.1:6379\u0026gt; lrange runoob 0 10\n\u0026ldquo;rabitmq\u0026rdquo; \u0026ldquo;mongodb\u0026rdquo; \u0026ldquo;redis\u0026rdquo;\nredis 127.0.0.1:6379\u0026gt;\n列表最多可存储 232 - 1 元素 (4294967295, 每个列表可存储40多亿)。 Set（集合）\nRedis的Set是string类型的无序集合。\n集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。\nsadd 命令\n添加一个 string 元素到 key 对应的 set 集合中，成功返回1，如果元素已经在集合中返回 0，如果 key 对应的 set 不存在则返回错误。\nsadd key member\n实例\nredis 127.0.0.1:6379\u0026gt; sadd runoob redis\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; sadd runoob mongodb\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; sadd runoob rabitmq\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; sadd runoob rabitmq\n(integer) 0\nredis 127.0.0.1:6379\u0026gt; smembers runoob\n\u0026ldquo;redis\u0026rdquo; \u0026ldquo;rabitmq\u0026rdquo; \u0026ldquo;mongodb\u0026rdquo;\n注意：以上实例中 rabitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。\n集合中最大的成员数为 232 - 1(4294967295, 每个集合可存储40多亿个成员)。 zset(sorted set：有序集合)\nRedis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。\n不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。\nzset的成员是唯一的,但分数(score)却可以重复。\nzadd 命令\n添加元素到集合，元素在集合中存在则更新对应score\nzadd key score member\n实例\nredis 127.0.0.1:6379\u0026gt; zadd runoob 0 redis\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd runoob 0 mongodb\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd runoob 0 rabitmq\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd runoob 0 rabitmq\n(integer) 0\nredis 127.0.0.1:6379\u0026gt; \u0026gt; ZRANGEBYSCORE runoob 0 1000\n\u0026ldquo;mongodb\u0026rdquo; \u0026ldquo;rabitmq\u0026rdquo; \u0026ldquo;redis\u0026rdquo;\nRedis 命令\nRedis 命令用于在 redis 服务上执行操作。\n要在 redis 服务上执行命令需要一个 redis 客户端。Redis 客户端在我们之前下载的的 redis 的安装包中。\n语法\nRedis 客户端的基本语法为：\n$ redis-cli\n实例\n以下实例讲解了如何启动 redis 客户端：\n启动 redis 客户端，打开终端并输入命令 redis-cli。该命令会连接本地的 redis 服务。\n$redis-cli\nredis 127.0.0.1:6379\u0026gt;\nredis 127.0.0.1:6379\u0026gt; PING PONG\n在以上实例中我们连接到本地的 redis 服务并执行 PING 命令，该命令用于检测 redis 服务是否启动。\n在远程服务上执行命令\n如果需要在远程 redis 服务上执行命令，同样我们使用的也是 redis-cli 命令。\n语法\n$ redis-cli -h host -p port -a password\n实例\n以下实例演示了如何连接到主机为 127.0.0.1，端口为 6379 ，密码为 mypass 的 redis 服务上。\n$redis-cli -h 127.0.0.1 -p 6379 -a \u0026ldquo;mypass\u0026rdquo;\nredis 127.0.0.1:6379\u0026gt;\nredis 127.0.0.1:6379\u0026gt; PING\nPONG\nRedis 键(key)\nRedis 键命令用于管理 redis 的键。\n语法\nRedis 键命令的基本语法如下：\nredis 127.0.0.1:6379\u0026gt; COMMAND KEY_NAME\n实例\nredis 127.0.0.1:6379\u0026gt; SET runoobkey redis\nOK\nredis 127.0.0.1:6379\u0026gt; DEL runoobkey\n(integer) 1\n在以上实例中 DEL 是一个命令， runoobkey 是一个键。 如果键被删除成功，命令执行后输出 (integer) 1，否则将输出 (integer) 0\nRedis keys 命令\n下表给出了与 Redis 键相关的基本命令：\n序号 命令及描述\n1 DEL key\n该命令用于在 key 存在时删除 key。\n2 DUMP key\n序列化给定 key ，并返回被序列化的值。\n3 EXISTS key\n检查给定 key 是否存在。\n4 EXPIRE key seconds\n为给定 key 设置过期时间，以秒计。\n5 EXPIREAT key timestamp\nEXPIREAT 的作用和 EXPIRE 类似，都用于为 key 设置过期时间。 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳(unix timestamp)。\n6 PEXPIRE key milliseconds\n设置 key 的过期时间以毫秒计。\n7 PEXPIREAT key milliseconds-timestamp\n设置 key 过期时间的时间戳(unix timestamp) 以毫秒计\n8 KEYS pattern\n查找所有符合给定模式( pattern)的 key 。\n9 MOVE key db\n将当前数据库的 key 移动到给定的数据库 db 当中。\n10 PERSIST key\n移除 key 的过期时间，key 将持久保持。\n11 PTTL key\n以毫秒为单位返回 key 的剩余的过期时间。\n12 TTL key\n以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)。\n13 RANDOMKEY\n从当前数据库中随机返回一个 key 。\n14 RENAME key newkey\n修改 key 的名称\n15 RENAMENX key newkey\n仅当 newkey 不存在时，将 key 改名为 newkey 。\n16 TYPE key\n返回 key 所储存的值的类型。\nRedis DEL 命令\nRedis key(键)\nRedis DEL 命令用于删除已存在的键。不存在的 key 会被忽略。\n语法\nredis DEL 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; DEL KEY_NAME\n可用版本\n= 1.0.0\n返回值\n被删除 key 的数量。\n实例\n首先，我们在 redis 中创建一个 key 并设置值。\nredis 127.0.0.1:6379\u0026gt; SET w3ckey redis\nOK\n现在我们删除已创建的 key。\nredis 127.0.0.1:6379\u0026gt; DEL w3ckey\n(integer) 1\nRedis Dump 命令\nRedis key(键)\nRedis DUMP 命令用于序列化给定 key ，并返回被序列化的值。\n语法\nredis DUMP 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; DUMP KEY_NAME\n可用版本\n= 2.6.0\n返回值\n如果 key 不存在，那么返回 nil 。 否则，返回序列化之后的值。\n实例\n首先，我们在 redis 中创建一个 key 并设置值。\nredis\u0026gt; SET greeting \u0026ldquo;hello, dumping world!\u0026rdquo;\nOK\n现在使用 DUMP 序列化键值。\nredis\u0026gt; DUMP greeting\n\u0026ldquo;\\x00\\x15hello, dumping world!\\x06\\x00E\\xa0Z\\x82\\xd8r\\xc1\\xde\u0026rdquo;\nredis\u0026gt; DUMP not-exists-key\n(nil)\nRedis EXISTS 命令\nRedis key(键)\nRedis EXISTS 命令用于检查给定 key 是否存在。\n语法\nredis EXISTS 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; EXISTS KEY_NAME\n可用版本\n= 1.0.0\n返回值\n若 key 存在返回 1 ，否则返回 0 。\n实例\nredis 127.0.0.1:6379\u0026gt; EXISTS runoob-new-key\n(integer) 0\n现在我们创建一个名为 runoob-new-key 的键并赋值，再使用 EXISTS 命令。\nredis 127.0.0.1:6379\u0026gt; set runoob-new-key newkey\nOK\nredis 127.0.0.1:6379\u0026gt; EXISTS runoob-new-key\n(integer) 1\nredis 127.0.0.1:6379\u0026gt;\nRedis Expire 命令\nRedis key(键)\nRedis Expire 命令用于设置 key 的过期时间，key 过期后将不再可用。单位以秒计。\n语法\nredis Expire 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; Expire KEY_NAME TIME_IN_SECONDS\n可用版本\n= 1.0.0\n返回值\n设置成功返回 1 。 当 key 不存在或者不能为 key 设置过期时间时(比如在低于 2.1.3 版本的 Redis 中你尝试更新 key 的过期时间)返回 0 。\n实例\n首先创建一个 key 并赋值：\nredis 127.0.0.1:6379\u0026gt; SET runooobkey redis\nOK\n为 key 设置过期时间：\nredis 127.0.0.1:6379\u0026gt; EXPIRE runooobkey 60\n(integer) 1\n以上实例中我们为键 runooobkey 设置了过期时间为 1 分钟，1分钟后该键会自动删除。\nRedis Expireat 命令\nRedis key(键)\nRedis Expireat 命令用于以 UNIX 时间戳(unix timestamp)格式设置 key 的过期时间。key 过期后将不再可用。\n语法\nredis Expireat 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; Expireat KEY_NAME TIME_IN_UNIX_TIMESTAMP\n可用版本\n= 1.0.0\n返回值\n设置成功返回 1 。 当 key 不存在或者不能为 key 设置过期时间时(比如在低于 2.1.3 版本的 Redis 中你尝试更新 key 的过期时间)返回 0 。\n实例\n首先创建一个 key 并赋值：\nredis 127.0.0.1:6379\u0026gt; SET runoobkey redis\nOK\n为 key 设置过期时间：\nredis 127.0.0.1:6379\u0026gt; EXPIREAT runoobkey 1293840000\n(integer) 1\nEXISTS runoobkey\n(integer) 0\nRedis Keys 命令\nRedis key(键)\nRedis Keys 命令用于查找所有符合给定模式 pattern 的 key 。。\n语法\nredis KEYS 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; KEYS PATTERN\n可用版本\n= 1.0.0\n返回值\n符合给定模式的 key 列表 (Array)。\n实例\n首先创建一些 key，并赋上对应值：\nredis 127.0.0.1:6379\u0026gt; SET runoob1 redis\nOK\nredis 127.0.0.1:6379\u0026gt; SET runoob2 mysql\nOK\nredis 127.0.0.1:6379\u0026gt; SET runoob3 mongodb\nOK\n查找以 runoob 为开头的 key：\nredis 127.0.0.1:6379\u0026gt; KEYS runoob*\n\u0026ldquo;runoob3\u0026rdquo; \u0026ldquo;runoob1\u0026rdquo; \u0026ldquo;runoob2\u0026rdquo;\n获取 redis 中所有的 key 可用使用 *。\nredis 127.0.0.1:6379\u0026gt; KEYS * \u0026ldquo;runoob3\u0026rdquo; \u0026ldquo;runoob1\u0026rdquo; \u0026ldquo;runoob2\u0026rdquo;\nRedis PEXPIREAT 命令\nRedis key(键)\nRedis PEXPIREAT 命令用于设置 key 的过期时间，以毫秒计。key 过期后将不再可用。\n语法\nredis PEXPIREAT 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; PEXPIREAT KEY_NAME TIME_IN_MILLISECONDS_IN_UNIX_TIMESTAMP\n可用版本\n= 1.0.0\n返回值\n设置成功返回 1 。 当 key 不存在或者不能为 key 设置过期时间时(比如在低于 2.1.3 版本的 Redis 中你尝试更新 key 的过期时间)返回 0 。\n实例\n首先创建一个 key 并赋值：\nredis 127.0.0.1:6379\u0026gt; SET runoobkey redis\nOK\n为 key 设置过期时间：\nredis 127.0.0.1:6379\u0026gt; PEXPIREAT runoobkey 1555555555005\n(integer) 1\nRedis Move 命令\nRedis key(键)\nRedis MOVE 命令用于将当前数据库的 key 移动到给定的数据库 db 当中。\n语法\nredis Move 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; MOVE KEY_NAME DESTINATION_DATABASE\n可用版本\n= 1.0.0\n返回值\n移动成功返回 1 ，失败则返回 0 。\n实例 key 存在于当前数据库 # redis\u0026gt; SELECT 0 # redis默认使用数据库 0，为了清晰起见，这里再显式指定一次。\nOK\nredis\u0026gt; SET song \u0026ldquo;secret base - Zone\u0026rdquo;\nOK\nredis\u0026gt; MOVE song 1 # 将 song 移动到数据库 1\n(integer) 1\nredis\u0026gt; EXISTS song # song 已经被移走\n(integer) 0\nredis\u0026gt; SELECT 1 # 使用数据库 1\nOK\nredis:1\u0026gt; EXISTS song # 证实 song 被移到了数据库 1 (注意命令提示符变成了\u0026quot;redis:1\u0026quot;，表明正在使用数据库 1)\n(integer) 1\n当 key 不存在的时候 # redis:1\u0026gt; EXISTS fake_key\n(integer) 0\nredis:1\u0026gt; MOVE fake_key 0 # 试图从数据库 1 移动一个不存在的 key 到数据库 0，失败\n(integer) 0\nredis:1\u0026gt; select 0 # 使用数据库0\nOK\nredis\u0026gt; EXISTS fake_key # 证实 fake_key 不存在\n(integer) 0\n当源数据库和目标数据库有相同的 key 时 # redis\u0026gt; SELECT 0 # 使用数据库0\nOK\nredis\u0026gt; SET favorite_fruit \u0026ldquo;banana\u0026rdquo;\nOK\nredis\u0026gt; SELECT 1 # 使用数据库1\nOK\nredis:1\u0026gt; SET favorite_fruit \u0026ldquo;apple\u0026rdquo;\nOK\nredis:1\u0026gt; SELECT 0 # 使用数据库0，并试图将 favorite_fruit 移动到数据库 1\nOK\nredis\u0026gt; MOVE favorite_fruit 1 # 因为两个数据库有相同的 key，MOVE 失败\n(integer) 0\nredis\u0026gt; GET favorite_fruit # 数据库 0 的 favorite_fruit 没变\n\u0026ldquo;banana\u0026rdquo;\nredis\u0026gt; SELECT 1\nOK\nredis:1\u0026gt; GET favorite_fruit # 数据库 1 的 favorite_fruit 也是\n\u0026ldquo;apple\u0026rdquo;\nRedis PERSIST 命令\nRedis key(键)\nRedis PERSIST 命令用于移除给定 key 的过期时间，使得 key 永不过期。\n语法\nredis PERSIST 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; PERSIST KEY_NAME\n可用版本\n= 2.2.0\n返回值\n当过期时间移除成功时，返回 1 。 如果 key 不存在或 key 没有设置过期时间，返回 0 。\n实例\nredis\u0026gt; SET mykey \u0026ldquo;Hello\u0026rdquo;\nOK\nredis\u0026gt; EXPIRE mykey 10 # 为 key 设置生存时间\n(integer) 1\nredis\u0026gt; TTL mykey\n(integer) 10\nredis\u0026gt; PERSIST mykey # 移除 key 的生存时间\n(integer) 1\nredis\u0026gt; TTL mykey\n(integer) -1\nRedis Pttl 命令\nRedis key(键)\nRedis Pttl 命令以毫秒为单位返回 key 的剩余过期时间。\n语法\nredis Pttl 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; PTTL KEY_NAME\n可用版本\n= 2.6.0\n返回值\n当 key 不存在时，返回 -2 。 当 key 存在但没有设置剩余生存时间时，返回 -1 。 否则，以毫秒为单位，返回 key 的剩余生存时间。\n注意：在 Redis 2.8 以前，当 key 不存在，或者 key 没有设置剩余生存时间时，命令都返回 -1 。\n实例\n不存在的 key # redis\u0026gt; FLUSHDB\nOK\nredis\u0026gt; PTTL key\n(integer) -2\nkey 存在，但没有设置剩余生存时间 # redis\u0026gt; SET key value\nOK\nredis\u0026gt; PTTL key\n(integer) -1\n有剩余生存时间的 key # redis\u0026gt; PEXPIRE key 10086\n(integer) 1\nredis\u0026gt; PTTL key\n(integer) 6179\nRedis TTL 命令\nRedis key(键)\nRedis TTL 命令以秒为单位返回 key 的剩余过期时间。\n语法\nredis TTL 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; TTL KEY_NAME\n可用版本\n= 1.0.0\n返回值\n当 key 不存在时，返回 -2 。 当 key 存在但没有设置剩余生存时间时，返回 -1 。 否则，以秒为单位，返回 key 的剩余生存时间。\n注意：在 Redis 2.8 以前，当 key 不存在，或者 key 没有设置剩余生存时间时，命令都返回 -1 。\n实例\n不存在的 key # redis\u0026gt; FLUSHDB\nOK\nredis\u0026gt; TTL key\n(integer) -2\nkey 存在，但没有设置剩余生存时间 # redis\u0026gt; SET key value\nOK\nredis\u0026gt; TTL key\n(integer) -1\n有剩余生存时间的 key # redis\u0026gt; EXPIRE key 10086\n(integer) 1\nredis\u0026gt; TTL key\n(integer) 10084\nRedis RANDOMKEY 命令\nRedis key(键)\nRedis RANDOMKEY 命令从当前数据库中随机返回一个 key 。\n语法\nredis RANDOMKEY 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; RANDOMKEY\n可用版本\n= 1.0.0\n返回值\n当数据库不为空时，返回一个 key 。 当数据库为空时，返回 nil （windows 系统返回 null）。\n实例\n数据库不为空 # redis\u0026gt; MSET fruit \u0026ldquo;apple\u0026rdquo; drink \u0026ldquo;beer\u0026rdquo; food \u0026ldquo;cookies\u0026rdquo; # 设置多个 key\nOK\nredis\u0026gt; RANDOMKEY\n\u0026ldquo;fruit\u0026rdquo;\nredis\u0026gt; RANDOMKEY\n\u0026ldquo;food\u0026rdquo;\nredis\u0026gt; KEYS * # 查看数据库内所有key，证明 RANDOMKEY 并不删除 key\n\u0026ldquo;food\u0026rdquo; \u0026ldquo;drink\u0026rdquo; \u0026ldquo;fruit\u0026rdquo; 数据库为空 # redis\u0026gt; FLUSHDB # 删除当前数据库所有 key\nOK\nredis\u0026gt; RANDOMKEY\nRedis Rename 命令\nRedis key(键)\nRedis Rename 命令用于修改 key 的名称 。\n语法\nredis Rename 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; RENAME OLD_KEY_NAME NEW_KEY_NAME\n可用版本\n= 1.0.0\n返回值\n改名成功时提示 OK ，失败时候返回一个错误。\n当 OLD_KEY_NAME 和 NEW_KEY_NAME 相同，或者 OLD_KEY_NAME 不存在时，返回一个错误。 当 NEW_KEY_NAME 已经存在时， RENAME 命令将覆盖旧值。\n实例\nkey 存在且 newkey 不存在 # redis\u0026gt; SET message \u0026ldquo;hello world\u0026rdquo;\nOK\nredis\u0026gt; RENAME message greeting\nOK\nredis\u0026gt; EXISTS message # message 不复存在\n(integer) 0\nredis\u0026gt; EXISTS greeting # greeting 取而代之\n(integer) 1\n当 key 不存在时，返回错误 # redis\u0026gt; RENAME fake_key never_exists\n(error) ERR no such key\nnewkey 已存在时， RENAME 会覆盖旧 newkey # redis\u0026gt; SET pc \u0026ldquo;lenovo\u0026rdquo;\nOK\nredis\u0026gt; SET personal_computer \u0026ldquo;dell\u0026rdquo;\nOK\nredis\u0026gt; RENAME pc personal_computer\nOK\nredis\u0026gt; GET pc\n(nil)\nredis:1\u0026gt; GET personal_computer # 原来的值 dell 被覆盖了\n\u0026ldquo;lenovo\u0026rdquo;\nRedis Renamenx 命令\nRedis key(键)\nRedis Renamenx 命令用于在新的 key 不存在时修改 key 的名称 。\n语法\nredis Renamenx 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; RENAMENX OLD_KEY_NAME NEW_KEY_NAME\n可用版本\n= 1.0.0\n返回值\n修改成功时，返回 1 。 如果 NEW_KEY_NAME 已经存在，返回 0 。\n实例\nnewkey 不存在，改名成功 # redis\u0026gt; SET player \u0026ldquo;MPlyaer\u0026rdquo;\nOK\nredis\u0026gt; EXISTS best_player\n(integer) 0\nredis\u0026gt; RENAMENX player best_player\n(integer) 1\nnewkey存在时，失败 # redis\u0026gt; SET animal \u0026ldquo;bear\u0026rdquo;\nOK\nredis\u0026gt; SET favorite_animal \u0026ldquo;butterfly\u0026rdquo;\nOK\nredis\u0026gt; RENAMENX animal favorite_animal\n(integer) 0\nredis\u0026gt; get animal\n\u0026ldquo;bear\u0026rdquo;\nredis\u0026gt; get favorite_animal\n\u0026ldquo;butterfly\u0026rdquo;\nRedis Type 命令\nRedis key(键)\nRedis Type 命令用于返回 key 所储存的值的类型。\n语法\nredis Renamenx 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; TYPE KEY_NAME\n可用版本\n= 1.0.0\n返回值\n返回 key 的数据类型，数据类型有：\nnone (key不存在)\nstring (字符串)\nlist (列表)\nset (集合)\nzset (有序集)\nhash (哈希表)\n实例\n字符串 # redis\u0026gt; SET weather \u0026ldquo;sunny\u0026rdquo;\nOK\nredis\u0026gt; TYPE weather\nstring\n列表 # redis\u0026gt; LPUSH book_list \u0026ldquo;programming in scala\u0026rdquo;\n(integer) 1\nredis\u0026gt; TYPE book_list\nlist\n集合 # redis\u0026gt; SADD pat \u0026ldquo;dog\u0026rdquo;\n(integer) 1\nredis\u0026gt; TYPE pat\nset\nRedis 字符串(String)\nRedis 字符串数据类型的相关命令用于管理 redis 字符串值，基本语法如下：\n语法\nredis 127.0.0.1:6379\u0026gt; COMMAND KEY_NAME\n实例\nredis 127.0.0.1:6379\u0026gt; SET runoobkey redis\nOK\nredis 127.0.0.1:6379\u0026gt; GET runoobkey\n\u0026ldquo;redis\u0026rdquo;\n在以上实例中我们使用了 SET 和 GET 命令，键为 runoobkey。\nRedis 字符串命令\n下表列出了常用的 redis 字符串命令：\n序号 命令及描述\n1 SET key value\n设置指定 key 的值\n2 GET key\n获取指定 key 的值。\n3 GETRANGE key start end\n返回 key 中字符串值的子字符\n4 GETSET key value\n将给定 key 的值设为 value ，并返回 key 的旧值(old value)。\n5 GETBIT key offset\n对 key 所储存的字符串值，获取指定偏移量上的位(bit)。\n6 MGET key1 [key2..]\n获取所有(一个或多个)给定 key 的值。\n7 SETBIT key offset value\n对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit)。\n8 SETEX key seconds value\n将值 value 关联到 key ，并将 key 的过期时间设为 seconds (以秒为单位)。\n9 SETNX key value\n只有在 key 不存在时设置 key 的值。\n10 SETRANGE key offset value\n用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始。\n11 STRLEN key\n返回 key 所储存的字符串值的长度。\n12 MSET key value [key value …]\n同时设置一个或多个 key-value 对。\n13 MSETNX key value [key value …]\n同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。\n14 PSETEX key milliseconds value\n这个命令和 SETEX 命令相似，但它以毫秒为单位设置 key 的生存时间，而不是像 SETEX 命令那样，以秒为单位。\n15 INCR key\n将 key 中储存的数字值增一。\n16 INCRBY key increment\n将 key 所储存的值加上给定的增量值（increment） 。\n17 INCRBYFLOAT key increment\n将 key 所储存的值加上给定的浮点增量值（increment） 。\n18 DECR key\n将 key 中储存的数字值减一。\n19 DECRBY key decrement\nkey 所储存的值减去给定的减量值（decrement） 。\n20 APPEND key value\n如果 key 已经存在并且是一个字符串， APPEND 命令将指定的 value 追加到该 key 原来值（value）的末尾。\nedis SET 命令\nRedis 字符串(string)\nRedis SET 命令用于设置给定 key 的值。如果 key 已经存储其他值， SET 就覆写旧值，且无视类型。\n语法\nredis SET 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; SET KEY_NAME VALUE\n可用版本\n= 1.0.0\n返回值\n在 Redis 2.6.12 以前版本， SET 命令总是返回 OK 。\n从 Redis 2.6.12 版本开始， SET 在设置操作成功完成时，才返回 OK 。\n实例\n首先，我们在 redis 中创建一个 key 并设置值。\n对不存在的键进行设置 # redis 127.0.0.1:6379\u0026gt; SET key \u0026ldquo;value\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; GET key\n\u0026ldquo;value\u0026rdquo;\n对已存在的键进行设置 # redis 127.0.0.1:6379\u0026gt; SET key \u0026ldquo;new-value\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; GET key\n\u0026ldquo;new-value\u0026rdquo;\nRedis Get 命令\nRedis 字符串(string)\nRedis Get 命令用于获取指定 key 的值。如果 key 不存在，返回 nil 。如果key 储存的值不是字符串类型，返回一个错误。\n语法\nredis Get 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; GET KEY_NAME\n可用版本\n= 1.0.0\n返回值\n返回 key 的值，如果 key 不存在时，返回 nil。 如果 key 不是字符串类型，那么返回一个错误。\n实例\n对不存在的 key 或字符串类型 key 进行 GET # redis\u0026gt; GET db\n(nil)\nredis\u0026gt; SET db redis\nOK\nredis\u0026gt; GET db\n\u0026ldquo;redis\u0026rdquo;\n对不是字符串类型的 key 进行 GET # redis\u0026gt; DEL db\n(integer) 1\nredis\u0026gt; LPUSH db redis mongodb mysql\n(integer) 3\nredis\u0026gt; GET db\n(error) ERR Operation against a key holding the wrong kind of value\nRedis Getrange 命令\nRedis 字符串(string)\nRedis Getrange 命令用于获取存储在指定 key 中字符串的子字符串。字符串的截取范围由 start 和 end 两个偏移量决定(包括 start 和 end 在内)。\n语法\nredis Getrange 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; GETRANGE KEY_NAME start end\n可用版本\n= 2.4.0\n返回值\n截取得到的子字符串。\n实例\n首先，设置 mykey 的值并截取字符串。\nredis 127.0.0.1:6379\u0026gt; SET mykey \u0026ldquo;This is my test key\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; GETRANGE mykey 0 3\n\u0026ldquo;This\u0026rdquo;\nredis 127.0.0.1:6379\u0026gt; GETRANGE mykey 0 -1\n\u0026ldquo;This is my test key\u0026rdquo;\nRedis Getset 命令\nRedis 字符串(string)\nRedis Getset 命令用于设置指定 key 的值，并返回 key 的旧值。\n语法\nredis Getset 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; GETSET KEY_NAME VALUE\n可用版本\n= 1.0.0\n返回值\n返回给定 key 的旧值。 当 key 没有旧值时，即 key 不存在时，返回 nil 。\n当 key 存在但不是字符串类型时，返回一个错误。\n实例\n首先，设置 mykey 的值并截取字符串。\nredis\u0026gt; GETSET db mongodb # 没有旧值，返回 nil\n(nil)\nredis\u0026gt; GET db\n\u0026ldquo;mongodb\u0026rdquo;\nredis\u0026gt; GETSET db redis # 返回旧值 mongodb\n\u0026ldquo;mongodb\u0026rdquo;\nredis\u0026gt; GET db\n\u0026ldquo;redis\u0026rdquo;\nRedis Getbit 命令\nRedis 字符串(string)\nRedis Getbit 命令用于对 key 所储存的字符串值，获取指定偏移量上的位(bit)。\n语法\nredis Getbit 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; GETBIT KEY_NAME OFFSET\n可用版本\n= 2.2.0\n返回值\n字符串值指定偏移量上的位(bit)。\n当偏移量 OFFSET 比字符串值的长度大，或者 key 不存在时，返回 0 。\n实例\n对不存在的 key 或者不存在的 offset 进行 GETBIT， 返回 0 # redis\u0026gt; EXISTS bit\n(integer) 0\nredis\u0026gt; GETBIT bit 10086\n(integer) 0\n对已存在的 offset 进行 GETBIT # redis\u0026gt; SETBIT bit 10086 1\n(integer) 0\nredis\u0026gt; GETBIT bit 10086\n(integer) 1\nRedis Mget 命令\nRedis 字符串(string)\nRedis Mget 命令返回所有(一个或多个)给定 key 的值。 如果给定的 key 里面，有某个 key 不存在，那么这个 key 返回特殊值 nil 。\n语法\nredis Mget 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; MGET KEY1 KEY2 .. KEYN\n可用版本\n= 1.0.0\n返回值\n一个包含所有给定 key 的值的列表。\n实例\nredis 127.0.0.1:6379\u0026gt; SET key1 \u0026ldquo;hello\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; SET key2 \u0026ldquo;world\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; MGET key1 key2 someOtherKey\n\u0026ldquo;Hello\u0026rdquo; \u0026ldquo;World\u0026rdquo; (nil)\nRedis Setbit 命令\nRedis 字符串(string)\nRedis Setbit 命令用于对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit)。\n语法\nredis Setbit 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; Setbit KEY_NAME OFFSET\n可用版本\n= 2.2.0\n返回值\n指定偏移量原来储存的位。\n实例\nredis\u0026gt; SETBIT bit 10086 1\n(integer) 0 redis\u0026gt; GETBIT bit 10086\n(integer) 1\nredis\u0026gt; GETBIT bit 100 # bit 默认被初始化为 0\n(integer) 0\nRedis Setex 命令\nRedis 字符串(string)\nRedis Setex 命令为指定的 key 设置值及其过期时间。如果 key 已经存在， SETEX 命令将会替换旧的值。\n语法\nredis Setex 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; SETEX KEY_NAME TIMEOUT VALUE\n可用版本\n= 2.0.0\n返回值\n设置成功时返回 OK 。\n实例\nredis 127.0.0.1:6379\u0026gt; SETEX mykey 60 redis\nOK\nredis 127.0.0.1:6379\u0026gt; TTL mykey\n60\nredis 127.0.0.1:6379\u0026gt; GET mykey\n\u0026ldquo;redis\nRedis Setnx 命令\nRedis 字符串(string)\nRedis Setnx（SET if Not eXists） 命令在指定的 key 不存在时，为 key 设置指定的值。\n语法\nredis Setnx 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; SETNX KEY_NAME VALUE\n可用版本\n= 1.0.0\n返回值\n设置成功，返回 1 。 设置失败，返回 0 。\n实例\nredis\u0026gt; EXISTS job # job 不存在\n(integer) 0\nredis\u0026gt; SETNX job \u0026ldquo;programmer\u0026rdquo; # job 设置成功\n(integer) 1\nredis\u0026gt; SETNX job \u0026ldquo;code-farmer\u0026rdquo; # 尝试覆盖 job ，失败\n(integer) 0\nredis\u0026gt; GET job # 没有被覆盖\n\u0026ldquo;programmer\u0026rdquo;\nRedis Setrange 命令\nRedis 字符串(string)\nRedis Setrange 命令用指定的字符串覆盖给定 key 所储存的字符串值，覆盖的位置从偏移量 offset 开始。\n语法\nredis Setrange 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; SETRANGE KEY_NAME OFFSET VALUE\n可用版本\n= 2.2.0\n返回值\n被修改后的字符串长度。\n实例\nredis 127.0.0.1:6379\u0026gt; SET key1 \u0026ldquo;Hello World\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; SETRANGE key1 6 \u0026ldquo;Redis\u0026rdquo;\n(integer) 11\nredis 127.0.0.1:6379\u0026gt; GET key1\n\u0026ldquo;Hello Redis\u0026rdquo;\nRedis Strlen 命令\nRedis 字符串(string)\nRedis Strlen 命令用于获取指定 key 所储存的字符串值的长度。当 key 储存的不是字符串值时，返回一个错误。\n语法\nredis Strlen 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; STRLEN KEY_NAME\n可用版本\n= 2.2.0\n返回值\n字符串值的长度。 当 key 不存在时，返回 0。\n实例\n获取字符串的长度 # redis\u0026gt; SET mykey \u0026ldquo;Hello world\u0026rdquo;\nOK\nredis\u0026gt; STRLEN mykey\n(integer) 11\n不存在的 key 长度为 0 # redis\u0026gt; STRLEN nonexisting\n(integer) 0\nRedis Mset 命令\nRedis 字符串(string)\nRedis Mset 命令用于同时设置一个或多个 key-value 对。\n语法\nredis Mset 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; MSET key1 value1 key2 value2 .. keyN valueN\n可用版本\n= 1.0.1\n返回值\n总是返回 OK 。\n实例\nredis 127.0.0.1:6379\u0026gt; MSET key1 \u0026ldquo;Hello\u0026rdquo; key2 \u0026ldquo;World\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; GET key1\n\u0026ldquo;Hello\u0026rdquo;\nredis 127.0.0.1:6379\u0026gt; GET key2\n\u0026ldquo;World\u0026rdquo;\nRedis Msetnx 命令\nRedis 字符串(string)\nRedis Msetnx 命令用于所有给定 key 都不存在时，同时设置一个或多个 key-value 对。\n语法\nredis Msetnx 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; MSETNX key1 value1 key2 value2 .. keyN valueN\n可用版本\n= 1.0.1\n返回值\n当所有 key 都成功设置，返回 1 。 如果所有给定 key 都设置失败(至少有一个 key 已经存在)，那么返回 0 。\n实例 对不存在的 key 进行 MSETNX # redis\u0026gt; MSETNX rmdbs \u0026ldquo;MySQL\u0026rdquo; nosql \u0026ldquo;MongoDB\u0026rdquo; key-value-store \u0026ldquo;redis\u0026rdquo;\n(integer) 1\nredis\u0026gt; MGET rmdbs nosql key-value-store\n\u0026ldquo;MySQL\u0026rdquo; \u0026ldquo;MongoDB\u0026rdquo; \u0026ldquo;redis\u0026rdquo; MSET 的给定 key 当中有已存在的 key # redis\u0026gt; MSETNX rmdbs \u0026ldquo;Sqlite\u0026rdquo; language \u0026ldquo;python\u0026rdquo; # rmdbs 键已经存在，操作失败\n(integer) 0\nredis\u0026gt; EXISTS language # 因为 MSET 是原子性操作，language 没有被设置\n(integer) 0\nredis\u0026gt; GET rmdbs # rmdbs 也没有被修改\n\u0026ldquo;MySQL\u0026rdquo;\nRedis Psetex 命令\nRedis 字符串(string)\nRedis Psetex 命令以毫秒为单位设置 key 的生存时间。\n语法\nredis Psetex 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; PSETEX key1 EXPIRY_IN_MILLISECONDS value1\n可用版本\n= 2.6.0\n返回值\n设置成功时返回 OK 。\n实例\nredis 127.0.0.1:6379\u0026gt; PSETEX mykey 1000 \u0026ldquo;Hello\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; PTTL mykey\n999\nredis 127.0.0.1:6379\u0026gt; GET mykey\n\u0026ldquo;Hello\u0026rdquo;\nRedis Incr 命令\nRedis 字符串(string)\nRedis Incr 命令将 key 中储存的数字值增一。\n如果 key 不存在，那么 key 的值会先被初始化为 0 ，然后再执行 INCR 操作。\n如果值包含错误的类型，或字符串类型的值不能表示为数字，那么返回一个错误。\n本操作的值限制在 64 位(bit)有符号数字表示之内。\n语法\nredis Incr 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; INCR KEY_NAME\n可用版本\n= 1.0.0\n返回值\n执行 INCR 命令之后 key 的值。\n实例\nredis\u0026gt; SET page_view 20\nOK redis\u0026gt; INCR page_view\n(integer) 21\nredis\u0026gt; GET page_view # 数字值在 Redis 中以字符串的形式保存\n\u0026ldquo;21\u0026rdquo;\nRedis Incrby 命令\nRedis 字符串(string)\nRedis Incrby 命令将 key 中储存的数字加上指定的增量值。\n如果 key 不存在，那么 key 的值会先被初始化为 0 ，然后再执行 INCRBY 命令。\n如果值包含错误的类型，或字符串类型的值不能表示为数字，那么返回一个错误。\n本操作的值限制在 64 位(bit)有符号数字表示之内。\n语法\nredis Incrby 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; INCRBY KEY_NAME INCR_AMOUNT\n可用版本\n= 1.0.0\n返回值\n加上指定的增量值之后， key 的值。\n实例\nkey 存在且是数字值 # redis\u0026gt; SET rank 50\nOK\nredis\u0026gt; INCRBY rank 20\n(integer) 70\nredis\u0026gt; GET rank\n\u0026ldquo;70\u0026rdquo;\nkey 不存在时 # redis\u0026gt; EXISTS counter\n(integer) 0\nredis\u0026gt; INCRBY counter 30\n(integer) 30\nredis\u0026gt; GET counter\n\u0026ldquo;30\u0026rdquo;\nkey 不是数字值时 # redis\u0026gt; SET book \u0026ldquo;long long ago…\u0026rdquo;\nOK\nredis\u0026gt; INCRBY book 200\n(error) ERR value is not an integer or out of range\nRedis Incrbyfloat 命令\nRedis 字符串(string)\nRedis Incrbyfloat 命令为 key 中所储存的值加上指定的浮点数增量值。\n如果 key 不存在，那么 INCRBYFLOAT 会先将 key 的值设为 0 ，再执行加法操作。\n语法\nredis Incrbyfloat 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; INCRBYFLOAT KEY_NAME INCR_AMOUNT\n可用版本\n= 2.6.0\n返回值\n执行命令之后 key 的值。\n实例\n值和增量都不是指数符号 # redis\u0026gt; SET mykey 10.50\nOK\nredis\u0026gt; INCRBYFLOAT mykey 0.1\n\u0026ldquo;10.6\u0026rdquo;\n值和增量都是指数符号 # redis\u0026gt; SET mykey 314e-2\nOK\nredis\u0026gt; GET mykey # 用 SET 设置的值可以是指数符号\n\u0026ldquo;314e-2\u0026rdquo;\nredis\u0026gt; INCRBYFLOAT mykey 0 # 但执行 INCRBYFLOAT 之后格式会被改成非指数符号\n\u0026ldquo;3.14\u0026rdquo;\n可以对整数类型执行 # redis\u0026gt; SET mykey 3\nOK\nredis\u0026gt; INCRBYFLOAT mykey 1.1\n\u0026ldquo;4.1\u0026rdquo;\n后跟的 0 会被移除 # redis\u0026gt; SET mykey 3.0\nOK\nredis\u0026gt; GET mykey # SET 设置的值小数部分可以是 0\n\u0026ldquo;3.0\u0026rdquo;\nredis\u0026gt; INCRBYFLOAT mykey 1.000000000000000000000 # 但 INCRBYFLOAT 会将无用的 0 忽略掉，有需要的话，将浮点变为整数\n\u0026ldquo;4\u0026rdquo;\nredis\u0026gt; GET mykey\n\u0026ldquo;4\u0026rdquo;\nRedis Decr 命令\nRedis 字符串(string)\nRedis Decr 命令将 key 中储存的数字值减一。\n如果 key 不存在，那么 key 的值会先被初始化为 0 ，然后再执行 DECR 操作。\n如果值包含错误的类型，或字符串类型的值不能表示为数字，那么返回一个错误。\n本操作的值限制在 64 位(bit)有符号数字表示之内。\n语法\nredis Decr 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; DECR KEY_NAME\n可用版本\n= 1.0.0\n返回值\n执行命令之后 key 的值。\n实例\n对存在的数字值 key 进行 DECR # redis\u0026gt; SET failure_times 10\nOK\nredis\u0026gt; DECR failure_times\n(integer) 9\n对不存在的 key 值进行 DECR # redis\u0026gt; EXISTS count\n(integer) 0\nredis\u0026gt; DECR count\n(integer) -1\n对存在但不是数值的 key 进行 DECR # redis\u0026gt; SET company YOUR_CODE_SUCKS.LLC\nOK\nredis\u0026gt; DECR company\n(error) ERR value is not an integer or out of range\nRedis Decrby 命令\nRedis 字符串(string)\nRedis Decrby 命令将 key 所储存的值减去指定的减量值。\n如果 key 不存在，那么 key 的值会先被初始化为 0 ，然后再执行 DECRBY 操作。\n如果值包含错误的类型，或字符串类型的值不能表示为数字，那么返回一个错误。\n本操作的值限制在 64 位(bit)有符号数字表示之内。\n语法\nredis Decrby 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; DECRBY KEY_NAME DECREMENT_AMOUNT\n可用版本\n= 1.0.0\n返回值\n减去指定减量值之后， key 的值。\n实例\n对已存在的 key 进行 DECRBY # redis\u0026gt; SET count 100\nOK\nredis\u0026gt; DECRBY count 20\n(integer) 80\n对不存在的 key 进行DECRBY # redis\u0026gt; EXISTS pages\n(integer) 0\nredis\u0026gt; DECRBY pages 10\n(integer) -10\nRedis Append 命令\nRedis 字符串(string)\nRedis Append 命令用于为指定的 key 追加值。\n如果 key 已经存在并且是一个字符串， APPEND 命令将 value 追加到 key 原来的值的末尾。\n如果 key 不存在， APPEND 就简单地将给定 key 设为 value ，就像执行 SET key value 一样。\n语法\nredis Append 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; APPEND KEY_NAME NEW_VALUE\n可用版本\n= 2.0.0\n返回值\n追加指定值之后， key 中字符串的长度。\n实例\n对不存在的 key 执行 APPEND # redis\u0026gt; EXISTS myphone # 确保 myphone 不存在\n(integer) 0\nredis\u0026gt; APPEND myphone \u0026ldquo;nokia\u0026rdquo; # 对不存在的 key 进行 APPEND ，等同于 SET myphone \u0026ldquo;nokia\u0026rdquo;\n(integer) 5 # 字符长度\n对已存在的字符串进行 APPEND # redis\u0026gt; APPEND myphone \u0026quot; - 1110\u0026rdquo; # 长度从 5 个字符增加到 12 个字符\n(integer) 12\nredis\u0026gt; GET myphone\n\u0026ldquo;nokia - 1110\u0026rdquo;\nRedis 哈希(Hash)\nRedis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。\nRedis 中每个 hash 可以存储 232 - 1 键值对（40多亿）。\n实例\n127.0.0.1:6379\u0026gt; HMSET runoobkey name \u0026ldquo;redis tutorial\u0026rdquo; description \u0026ldquo;redis basic commands for caching\u0026rdquo; likes 20 visitors 23000\nOK\n127.0.0.1:6379\u0026gt; HGETALL runoobkey\n\u0026ldquo;name\u0026rdquo; \u0026ldquo;redis tutorial\u0026rdquo; \u0026ldquo;description\u0026rdquo; \u0026ldquo;redis basic commands for caching\u0026rdquo; \u0026ldquo;likes\u0026rdquo; \u0026ldquo;20\u0026rdquo; \u0026ldquo;visitors\u0026rdquo; \u0026ldquo;23000\u0026rdquo;\n在以上实例中，我们设置了 redis 的一些描述信息(name, description, likes, visitors) 到哈希表的 runoobkey 中。 Redis hash 命令\n下表列出了 redis hash 基本的相关命令：\n序号 命令及描述\n1 HDEL key field1 [field2]\n删除一个或多个哈希表字段\n2 HEXISTS key field\n查看哈希表 key 中，指定的字段是否存在。\n3 HGET key field\n获取存储在哈希表中指定字段的值。\n4 HGETALL key\n获取在哈希表中指定 key 的所有字段和值\n5 HINCRBY key field increment\n为哈希表 key 中的指定字段的整数值加上增量 increment 。\n6 HINCRBYFLOAT key field increment\n为哈希表 key 中的指定字段的浮点数值加上增量 increment 。\n7 HKEYS key\n获取所有哈希表中的字段\n8 HLEN key\n获取哈希表中字段的数量\n9 HMGET key field1 [field2]\n获取所有给定字段的值\n10 HMSET key field1 value1 [field2 value2 ]\n同时将多个 field-value (域-值)对设置到哈希表 key 中。\n11 HSET key field value\n将哈希表 key 中的字段 field 的值设为 value 。\n12 HSETNX key field value\n只有在字段 field 不存在时，设置哈希表字段的值。\n13 HVALS key\n获取哈希表中所有值\n14 HSCAN key cursor [MATCH pattern] [COUNT count]\n迭代哈希表中的键值对。\nRedis Hdel 命令\nRedis 哈希(Hash)\nRedis Hdel 命令用于删除哈希表 key 中的一个或多个指定字段，不存在的字段将被忽略。\n语法\nredis Hdel 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; HDEL KEY_NAME FIELD1.. FIELDN\n可用版本\n= 2.0.0\n返回值\n被成功删除字段的数量，不包括被忽略的字段。\n实例\nredis 127.0.0.1:6379\u0026gt; HSET myhash field1 \u0026ldquo;foo\u0026rdquo;\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; HDEL myhash field1\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; HDEL myhash field2\n(integer) 0\nRedis Hexists 命令\nRedis 哈希(Hash)\nRedis Hexists 命令用于查看哈希表的指定字段是否存在。\n语法\nredis Hexists 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; HEXISTS KEY_NAME FIELD_NAME\n可用版本\n= 2.0.0\n返回值\n如果哈希表含有给定字段，返回 1 。 如果哈希表不含有给定字段，或 key 不存在，返回 0 。\n实例\nredis 127.0.0.1:6379\u0026gt; HSET myhash field1 \u0026ldquo;foo\u0026rdquo;\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; HEXISTS myhash field1\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; HEXISTS myhash field2\n(integer) 0\nRedis 列表(List)\nRedis列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）\n一个列表最多可以包含 232 - 1 个元素 (4294967295, 每个列表超过40亿个元素)。\n实例\nredis 127.0.0.1:6379\u0026gt; LPUSH runoobkey redis\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; LPUSH runoobkey mongodb\n(integer) 2\nredis 127.0.0.1:6379\u0026gt; LPUSH runoobkey mysql\n(integer) 3\nredis 127.0.0.1:6379\u0026gt; LRANGE runoobkey 0 10\n\u0026ldquo;mysql\u0026rdquo;\n\u0026ldquo;mongodb\u0026rdquo;\n\u0026ldquo;redis\u0026rdquo;\n在以上实例中我们使用了 LPUSH 将三个值插入了名为 runoobkey 的列表当中。\nRedis 列表命令\n下表列出了列表相关的基本命令：\n序号 命令及描述\n1 BLPOP key1 [key2 ] timeout\n移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。\n2 BRPOP key1 [key2 ] timeout\n移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。\n3 BRPOPLPUSH source destination timeout\n从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。\n4 LINDEX key index\n通过索引获取列表中的元素\n5 LINSERT key BEFORE|AFTER pivot value\n在列表的元素前或者后插入元素\n6 LLEN key\n获取列表长度\n7 LPOP key\n移出并获取列表的第一个元素\n8 LPUSH key value1 [value2]\n将一个或多个值插入到列表头部\n9 LPUSHX key value\n将一个值插入到已存在的列表头部\n10 LRANGE key start stop\n获取列表指定范围内的元素\n11 LREM key count value\n移除列表元素\n12 LSET key index value\n通过索引设置列表元素的值\n13 LTRIM key start stop\n对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。\n14 RPOP key\n移除列表的最后一个元素，返回值为移除的元素。\n15 RPOPLPUSH source destination\n移除列表的最后一个元素，并将该元素添加到另一个列表并返回\n16 RPUSH key value1 [value2]\n在列表中添加一个或多个值\n17 RPUSHX key value\n为已存在的列表添加值\nRedis 集合(Set)\nRedis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。\nRedis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。\n集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。\n实例\nredis 127.0.0.1:6379\u0026gt; SADD runoobkey redis\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; SADD runoobkey mongodb\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; SADD runoobkey mysql\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; SADD runoobkey mysql\n(integer) 0\nredis 127.0.0.1:6379\u0026gt; SMEMBERS runoobkey\n\u0026ldquo;mysql\u0026rdquo;\n\u0026ldquo;mongodb\u0026rdquo;\n\u0026ldquo;redis\u0026rdquo;\n在以上实例中我们通过 SADD 命令向名为 runoobkey 的集合插入的三个元素。\nRedis 集合命令\n下表列出了 Redis 集合基本命令：\n序号 命令及描述\n1 SADD key member1 [member2]\n向集合添加一个或多个成员\n2 SCARD key\n获取集合的成员数\n3 SDIFF key1 [key2]\n返回给定所有集合的差集\n4 SDIFFSTORE destination key1 [key2]\n返回给定所有集合的差集并存储在 destination 中\n5 SINTER key1 [key2]\n返回给定所有集合的交集\n6 SINTERSTORE destination key1 [key2]\n返回给定所有集合的交集并存储在 destination 中\n7 SISMEMBER key member\n判断 member 元素是否是集合 key 的成员\n8 SMEMBERS key\n返回集合中的所有成员\n9 SMOVE source destination member\n将 member 元素从 source 集合移动到 destination 集合\n10 SPOP key\n移除并返回集合中的一个随机元素\n11 SRANDMEMBER key [count]\n返回集合中一个或多个随机数\n12 SREM key member1 [member2]\n移除集合中一个或多个成员\n13 SUNION key1 [key2]\n返回所有给定集合的并集\n14 SUNIONSTORE destination key1 [key2]\n所有给定集合的并集存储在 destination 集合中\n15 SSCAN key cursor [MATCH pattern] [COUNT count]\n迭代集合中的元素\nRedis 有序集合(sorted set)\nRedis 有序集合和集合一样也是string类型元素的集合,且不允许重复的成员。\n不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。\n有序集合的成员是唯一的,但分数(score)却可以重复。\n集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。 集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。\n实例\nredis 127.0.0.1:6379\u0026gt; ZADD runoobkey 1 redis\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; ZADD runoobkey 2 mongodb\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; ZADD runoobkey 3 mysql\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; ZADD runoobkey 3 mysql\n(integer) 0\nredis 127.0.0.1:6379\u0026gt; ZADD runoobkey 4 mysql\n(integer) 0\nredis 127.0.0.1:6379\u0026gt; ZRANGE runoobkey 0 10 WITHSCORES\n\u0026ldquo;redis\u0026rdquo; \u0026ldquo;1\u0026rdquo; \u0026ldquo;mongodb\u0026rdquo; \u0026ldquo;2\u0026rdquo; \u0026ldquo;mysql\u0026rdquo; \u0026ldquo;4\u0026rdquo;\n在以上实例中我们通过命令 ZADD 向 redis 的有序集合中添加了三个值并关联上分数。 Redis 有序集合命令\n下表列出了 redis 有序集合的基本命令:\n序号 命令及描述\n1 ZADD key score1 member1 [score2 member2]\n向有序集合添加一个或多个成员，或者更新已存在成员的分数\n2 ZCARD key\n获取有序集合的成员数\n3 ZCOUNT key min max\n计算在有序集合中指定区间分数的成员数\n4 ZINCRBY key increment member\n有序集合中对指定成员的分数加上增量 increment\n5 ZINTERSTORE destination numkeys key [key …]\n计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中\n6 ZLEXCOUNT key min max\n在有序集合中计算指定字典区间内成员数量\n7 ZRANGE key start stop [WITHSCORES]\n通过索引区间返回有序集合成指定区间内的成员\n8 ZRANGEBYLEX key min max [LIMIT offset count]\n通过字典区间返回有序集合的成员\n9 ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]\n通过分数返回有序集合指定区间内的成员\n10 ZRANK key member\n返回有序集合中指定成员的索引\n11 ZREM key member [member …]\n移除有序集合中的一个或多个成员\n12 ZREMRANGEBYLEX key min max\n移除有序集合中给定的字典区间的所有成员\n13 ZREMRANGEBYRANK key start stop\n移除有序集合中给定的排名区间的所有成员\n14 ZREMRANGEBYSCORE key min max\n移除有序集合中给定的分数区间的所有成员\n15 ZREVRANGE key start stop [WITHSCORES]\n返回有序集中指定区间内的成员，通过索引，分数从高到底\n16 ZREVRANGEBYSCORE key max min [WITHSCORES]\n返回有序集中指定分数区间内的成员，分数从高到低排序\n17 ZREVRANK key member\n返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序\n18 ZSCORE key member\n返回有序集中，成员的分数值\n19 ZUNIONSTORE destination numkeys key [key …]\n计算给定的一个或多个有序集的并集，并存储在新的 key 中\n20 ZSCAN key cursor [MATCH pattern] [COUNT count]\n迭代有序集合中的元素（包括元素成员和元素分值）\nRedis HyperLogLog\nRedis 在 2.8.9 版本添加了 HyperLogLog 结构。\nRedis HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定 的、并且是很小的。\n在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基 数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。\n但是，因为 HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身，所以 HyperLogLog 不能像集合那样，返回输入的各个元素。\n什么是基数?\n比如数据集 {1, 3, 5, 7, 5, 7, 8}， 那么这个数据集的基数集为 {1, 3, 5 ,7, 8}, 基数(不重复元素)为5。 基数估计就是在误差可接受的范围内，快速计算基数。\n实例\n以下实例演示了 HyperLogLog 的工作过程：\nredis 127.0.0.1:6379\u0026gt; PFADD runoobkey \u0026ldquo;redis\u0026rdquo;\n(integer) 1 redis 127.0.0.1:6379\u0026gt; PFADD runoobkey \u0026ldquo;mongodb\u0026rdquo;\n(integer) 1 redis 127.0.0.1:6379\u0026gt; PFADD runoobkey \u0026ldquo;mysql\u0026rdquo;\n(integer) 1 redis 127.0.0.1:6379\u0026gt; PFCOUNT runoobkey\n(integer) 3\nRedis HyperLogLog 命令\n下表列出了 redis HyperLogLog 的基本命令：\n序号 命令及描述\n1 PFADD key element [element …]\n添加指定元素到 HyperLogLog 中。\n2 PFCOUNT key [key …]\n返回给定 HyperLogLog 的基数估算值。\n3 PFMERGE destkey sourcekey [sourcekey …]\n将多个 HyperLogLog 合并为一个 HyperLogLog\nRedis 发布订阅\nRedis 发布订阅(pub/sub)是一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息。\nRedis 客户端可以订阅任意数量的频道。\n下图展示了频道 channel1 ， 以及订阅这个频道的三个客户端 —— client2 、 client5 和 client1 之间的关系：\n当有新消息通过 PUBLISH 命令发送给频道 channel1 时， 这个消息就会被发送给订阅它的三个客户端：\n实例\n以下实例演示了发布订阅是如何工作的。在我们实例中我们创建了订阅频道名为 redisChat:\nredis 127.0.0.1:6379\u0026gt; SUBSCRIBE redisChat\nReading messages… (press Ctrl-C to quit)\n\u0026ldquo;subscribe\u0026rdquo; \u0026ldquo;redisChat\u0026rdquo; (integer) 1\n现在，我们先重新开启个 redis 客户端，然后在同一个频道 redisChat 发布两次消息，订阅者就能接收到消息。\nredis 127.0.0.1:6379\u0026gt; PUBLISH redisChat \u0026ldquo;Redis is a great caching technique\u0026rdquo; (integer) 1\nredis 127.0.0.1:6379\u0026gt; PUBLISH redisChat \u0026ldquo;Learn redis by runoob.com\u0026rdquo;\n(integer) 1\n订阅者的客户端会显示如下消息 # \u0026ldquo;message\u0026rdquo; \u0026ldquo;redisChat\u0026rdquo; \u0026ldquo;Redis is a great caching technique\u0026rdquo; \u0026ldquo;message\u0026rdquo; \u0026ldquo;redisChat\u0026rdquo; \u0026ldquo;Learn redis by runoob.com\u0026rdquo; Redis 发布订阅命令\n下表列出了 redis 发布订阅常用命令：\n序号 命令及描述\n1 PSUBSCRIBE pattern [pattern …]\n订阅一个或多个符合给定模式的频道。\n2 PUBSUB subcommand [argument [argument …]]\n查看订阅与发布系统状态。\n3 PUBLISH channel message\n将信息发送到指定的频道。\n4 PUNSUBSCRIBE [pattern [pattern …]]\n退订所有给定模式的频道。\n5 SUBSCRIBE channel [channel …]\n订阅给定的一个或多个频道的信息。\n6 UNSUBSCRIBE [channel [channel …]]\n指退订给定的频道。\nRedis 事务\nRedis 事务可以一次执行多个命令， 并且带有以下两个重要的保证：\n批量操作在发送 EXEC 命令前被放入队列缓存。\n收到 EXEC 命令后进入事务执行，事务中任意命令执行失败，其余的命令依然被执行。\n在事务执行过程，其他客户端提交的命令请求不会插入到事务执行命令序列中。\n一个事务从开始到执行会经历以下三个阶段：\n开始事务。\n命令入队。\n执行事务。\n实例\n以下是一个事务的例子， 它先以 MULTI 开始一个事务， 然后将多个命令入队到事务中， 最后由 EXEC 命令触发事务， 一并执行事务中的所有命令：\nredis 127.0.0.1:6379\u0026gt; MULTI\nOK\nredis 127.0.0.1:6379\u0026gt; SET book-name \u0026ldquo;Mastering C++ in 21 days\u0026rdquo;\nQUEUED\nredis 127.0.0.1:6379\u0026gt; GET book-name\nQUEUED\nredis 127.0.0.1:6379\u0026gt; SADD tag \u0026ldquo;C++\u0026rdquo; \u0026ldquo;Programming\u0026rdquo; \u0026ldquo;Mastering Series\u0026rdquo;\nQUEUED\nredis 127.0.0.1:6379\u0026gt; SMEMBERS tag\nQUEUED\nredis 127.0.0.1:6379\u0026gt; EXEC\nOK \u0026ldquo;Mastering C++ in 21 days\u0026rdquo; (integer) 3 \u0026ldquo;Mastering Series\u0026rdquo; \u0026ldquo;C++\u0026rdquo; \u0026ldquo;Programming\u0026rdquo;\n单个 Redis 命令的执行是原子性的，但 Redis 没有在事务上增加任何维持原子性的机制，所以 Redis 事务的执行并不是原子性的。\n事务可以理解为一个打包的批量执行脚本，但批量指令并非原子化的操作，中间某条指令的失败不会导致前面已做指令的回滚，也不会造成后续的指令不做。\n这是官网上的说明 From redis docs on transactions:\nIt\u0026rsquo;s important to note that even when a command fails, all the other commands in the queue are processed – Redis will not stop the processing of commands.\n比如：\nredis 127.0.0.1:7000\u0026gt; multi\nOK\nredis 127.0.0.1:7000\u0026gt; set a aaa\nQUEUED\nredis 127.0.0.1:7000\u0026gt; set b bbb\nQUEUED\nredis 127.0.0.1:7000\u0026gt; set c ccc\nQUEUED\nredis 127.0.0.1:7000\u0026gt; exec OK OK OK\n如果在 set b bbb 处失败，set a 已成功不会回滚，set c 还会继续执行。 Redis 事务命令\n下表列出了 redis 事务的相关命令：\n序号 命令及描述\n1 DISCARD\n取消事务，放弃执行事务块内的所有命令。\n2 EXEC\n执行所有事务块内的命令。\n3 MULTI\n标记一个事务块的开始。\n4 UNWATCH\n取消 WATCH 命令对所有 key 的监视。\n5 WATCH key [key …]\n监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断\nRedis 脚本\nRedis 脚本使用 Lua 解释器来执行脚本。 Redis 2.6 版本通过内嵌支持 Lua 环境。执行脚本的常用命令为 EVAL。\n语法\nEval 命令的基本语法如下：\nredis 127.0.0.1:6379\u0026gt; EVAL script numkeys key [key …] arg [arg …]\n实例\n以下实例演示了 redis 脚本工作过程：\nredis 127.0.0.1:6379\u0026gt; EVAL \u0026ldquo;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}\u0026rdquo; 2 key1 key2 first second\n\u0026ldquo;key1\u0026rdquo; \u0026ldquo;key2\u0026rdquo; \u0026ldquo;first\u0026rdquo; \u0026ldquo;second\u0026rdquo; Redis 脚本命令\n下表列出了 redis 脚本常用命令：\n序号 命令及描述\n1 EVAL script numkeys key [key …] arg [arg …]\n执行 Lua 脚本。\n2 EVALSHA sha1 numkeys key [key …] arg [arg …]\n执行 Lua 脚本。\n3 SCRIPT EXISTS script [script …]\n查看指定的脚本是否已经被保存在缓存当中。\n4 SCRIPT FLUSH\n从脚本缓存中移除所有脚本。\n5 SCRIPT KILL\n杀死当前正在运行的 Lua 脚本。\n6 SCRIPT LOAD script\n将脚本 script 添加到脚本缓存中，但并不立即执行这个脚本。\nRedis 连接\nRedis 连接命令主要是用于连接 redis 服务。\n实例\n以下实例演示了客户端如何通过密码验证连接到 redis 服务，并检测服务是否在运行：\nredis 127.0.0.1:6379\u0026gt; AUTH \u0026ldquo;password\u0026rdquo;\nOK\nredis 127.0.0.1:6379\u0026gt; PING\nPONG\nRedis 连接命令\n下表列出了 redis 连接的基本命令：\n序号 命令及描述\n1 AUTH password\n验证密码是否正确\n2 ECHO message\n打印字符串\n3 PING\n查看服务是否运行\n4 QUIT\n关闭当前连接\n5 SELECT index\n切换到指定的数据库\nRedis 服务器\nRedis 服务器命令主要是用于管理 redis 服务。\n实例\n以下实例演示了如何获取 redis 服务器的统计信息：\nredis 127.0.0.1:6379\u0026gt; INFO\nServer # redis_version:2.8.13\nredis_git_sha1:00000000\nredis_git_dirty:0\nredis_build_id:c2238b38b1edb0e2\nredis_mode:standalone\nos:Linux 3.5.0-48-generic x86_64\narch_bits:64\nmultiplexing_api:epoll\ngcc_version:4.7.2\nprocess_id:3856\nrun_id:0e61abd297771de3fe812a3c21027732ac9f41fe\ntcp_port:6379\nuptime_in_seconds:11554\nuptime_in_days:0\nhz:10\nlru_clock:16651447\nconfig_file:\nClients # connected_clients:1\nclient-longest_output_list:0\nclient-biggest_input_buf:0\nblocked_clients:0\nMemory # used_memory:589016\nused_memory_human:575.21K\nused_memory_rss:2461696\nused_memory_peak:667312\nused_memory_peak_human:651.67K\nused_memory_lua:33792\nmem_fragmentation_ratio:4.18\nmem_allocator:jemalloc-3.6.0\nPersistence # loading:0\nrdb_changes_since_last_save:3\nrdb_bgsave_in_progress:0\nrdb_last_save_time:1409158561\nrdb_last_bgsave_status:ok\nrdb_last_bgsave_time_sec:0\nrdb_current_bgsave_time_sec:-1\naof_enabled:0\naof_rewrite_in_progress:0\naof_rewrite_scheduled:0\naof_last_rewrite_time_sec:-1\naof_current_rewrite_time_sec:-1\naof_last_bgrewrite_status:ok\naof_last_write_status:ok\nStats # total_connections_received:24\ntotal_commands_processed:294\ninstantaneous_ops_per_sec:0\nrejected_connections:0\nsync_full:0\nsync_partial_ok:0\nsync_partial_err:0\nexpired_keys:0\nevicted_keys:0\nkeyspace_hits:41\nkeyspace_misses:82\npubsub_channels:0\npubsub_patterns:0\nlatest_fork_usec:264\nReplication # role:master\nconnected_slaves:0\nmaster_repl_offset:0\nrepl_backlog_active:0\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0\nCPU # used_cpu_sys:10.49\nused_cpu_user:4.96\nused_cpu_sys_children:0.00\nused_cpu_user_children:0.01\nKeyspace # db0:keys=94,expires=1,avg_ttl=41638810\ndb1:keys=1,expires=0,avg_ttl=0\ndb3:keys=1,expires=0,avg_ttl=0\nRedis 服务器命令\n下表列出了 redis 服务器的相关命令:\n序号 命令及描述\n1 BGREWRITEAOF\n异步执行一个 AOF（AppendOnly File） 文件重写操作\n2 BGSAVE\n在后台异步保存当前数据库的数据到磁盘\n3 CLIENT KILL [ip:port] [ID client-id]\n关闭客户端连接\n4 CLIENT LIST\n获取连接到服务器的客户端连接列表\n5 CLIENT GETNAME\n获取连接的名称\n6 CLIENT PAUSE timeout\n在指定时间内终止运行来自客户端的命令\n7 CLIENT SETNAME connection-name\n设置当前连接的名称\n8 CLUSTER SLOTS\n获取集群节点的映射数组\n9 COMMAND\n获取 Redis 命令详情数组\n10 COMMAND COUNT\n获取 Redis 命令总数\n11 COMMAND GETKEYS\n获取给定命令的所有键\n12 TIME\n返回当前服务器时间\n13 COMMAND INFO command-name [command-name …]\n获取指定 Redis 命令描述的数组\n14 CONFIG GET parameter\n获取指定配置参数的值\n15 CONFIG REWRITE\n对启动 Redis 服务器时所指定的 redis.conf 配置文件进行改写\n16 CONFIG SET parameter value\n修改 redis 配置参数，无需重启\n17 CONFIG RESETSTAT\n重置 INFO 命令中的某些统计数据\n18 DBSIZE\n返回当前数据库的 key 的数量\n19 DEBUG OBJECT key\n获取 key 的调试信息\n20 DEBUG SEGFAULT\n让 Redis 服务崩溃\n21 FLUSHALL\n删除所有数据库的所有key\n22 FLUSHDB\n删除当前数据库的所有key\n23 INFO [section]\n获取 Redis 服务器的各种信息和统计数值\n24 LASTSAVE\n返回最近一次 Redis 成功将数据保存到磁盘上的时间，以 UNIX 时间戳格式表示\n25 MONITOR\n实时打印出 Redis 服务器接收到的命令，调试用\n26 ROLE\n返回主从实例所属的角色\n27 SAVE\n同步保存数据到硬盘\n28 SHUTDOWN [NOSAVE] [SAVE]\n异步保存数据到硬盘，并关闭服务器\n29 SLAVEOF host port\n将当前服务器转变为指定服务器的从属服务器(slave server)\n30 SLOWLOG subcommand [argument]\n管理 redis 的慢日志\n31 SYNC\n用于复制功能(replication)的内部命令\nRedis 数据备份与恢复\nRedis SAVE 命令用于创建当前数据库的备份。\n语法\nredis Save 命令基本语法如下：\nredis 127.0.0.1:6379\u0026gt; SAVE\n实例\nredis 127.0.0.1:6379\u0026gt; SAVE\nOK\n该命令将在 redis 安装目录中创建dump.rdb文件。\n恢复数据\n如果需要恢复数据，只需将备份文件 (dump.rdb) 移动到 redis 安装目录并启动服务即可。获取 redis 目录可以使用 CONFIG 命令，如下所示：\nredis 127.0.0.1:6379\u0026gt; CONFIG GET dir\n\u0026ldquo;dir\u0026rdquo; \u0026ldquo;/usr/local/redis/bin\u0026rdquo;\n以上命令 CONFIG GET dir 输出的 redis 安装目录为 /usr/local/redis/bin。 Bgsave\n创建 redis 备份文件也可以使用命令 BGSAVE，该命令在后台执行。\n实例\n127.0.0.1:6379\u0026gt; BGSAVE\nBackground saving started\nRedis 安全\n我们可以通过 redis 的配置文件设置密码参数，这样客户端连接到 redis 服务就需要密码验证，这样可以让你的 redis 服务更安全。\n实例\n我们可以通过以下命令查看是否设置了密码验证：\n127.0.0.1:6379\u0026gt; CONFIG get requirepass\n\u0026ldquo;requirepass\u0026rdquo; \u0026quot;\u0026quot;\n默认情况下 requirepass 参数是空的，这就意味着你无需通过密码验证就可以连接到 redis 服务。\n你可以通过以下命令来修改该参数：\n127.0.0.1:6379\u0026gt; CONFIG set requirepass \u0026ldquo;runoob\u0026rdquo;\nOK\n127.0.0.1:6379\u0026gt; CONFIG get requirepass \u0026ldquo;requirepass\u0026rdquo; \u0026ldquo;runoob\u0026rdquo;\n设置密码后，客户端连接 redis 服务就需要密码验证，否则无法执行命令。\n语法\nAUTH 命令基本语法格式如下：\n127.0.0.1:6379\u0026gt; AUTH password\n实例\n127.0.0.1:6379\u0026gt; AUTH \u0026ldquo;runoob\u0026rdquo;\nOK\n127.0.0.1:6379\u0026gt; SET mykey \u0026ldquo;Test value\u0026rdquo;\nOK\n127.0.0.1:6379\u0026gt; GET mykey\n\u0026ldquo;Test value\u0026rdquo;\nRedis 性能测试\nRedis 性能测试是通过同时执行多个命令实现的。\n语法\nredis 性能测试的基本命令如下：\nredis-benchmark [option] [option value]\n实例\n以下实例同时执行 10000 个请求来检测性能：\n$ redis-benchmark -n 10000 -q PING_INLINE: 141043.72 requests per second\nPING_BULK: 142857.14 requests per second\nSET: 141442.72 requests per second\nGET: 145348.83 requests per second\nINCR: 137362.64 requests per second\nLPUSH: 145348.83 requests per second\nLPOP: 146198.83 requests per second\nSADD: 146198.83 requests per second\nSPOP: 149253.73 requests per second\nLPUSH (needed to benchmark LRANGE): 148588.42 requests per second\nLRANGE_100 (first 100 elements): 58411.21 requests per second\nLRANGE_300 (first 300 elements): 21195.42 requests per second\nLRANGE_500 (first 450 elements): 14539.11 requests per second\nLRANGE_600 (first 600 elements): 10504.20 requests per second\nMSET (10 keys): 93283.58 requests per second\nredis 性能测试工具可选参数如下所示：\n序号 选项 描述 默认值\n1 -h 指定服务器主机名 127.0.0.1\n2 -p 指定服务器端口 6379\n3 -s 指定服务器 socket\n4 -c 指定并发连接数 50\n5 -n 指定请求数 10000\n6 -d 以字节的形式指定 SET/GET 值的数据大小 2\n7 -k 1=keep alive 0=reconnect 1\n8 -r SET/GET/INCR 使用随机 key, SADD 使用随机值\n9 -P 通过管道传输 请求 1\n10 -q 强制退出 redis。仅显示 query/sec 值\n11 \u0026ndash;csv 以 CSV 格式输出\n12 -l 生成循环，永久执行测试\n13 -t 仅运行以逗号分隔的测试命令列表。\n14 -I Idle 模式。仅打开 N 个 idle 连接并等待。\n实例\n以下实例我们使用了多个参数来测试 redis 性能：\n$ redis-benchmark -h 127.0.0.1 -p 6379 -t set,lpush -n 10000 -q\nSET: 146198.83 requests per second\nLPUSH: 145560.41 requests per second\n以上实例中主机为 127.0.0.1，端口号为 6379，执行的命令为 set,lpush，请求数为 10000，通过 -q 参数让结果只显示每秒执行的请求数。\nRedis 客户端连接\nRedis 通过监听一个 TCP 端口或者 Unix socket 的方式来接收来自客户端的连接，当一个连接建立后，Redis 内部会进行以下一些操作：\n首先，客户端 socket 会被设置为非阻塞模式，因为 Redis 在网络事件处理上采用的是非阻塞多路复用模型。\n然后为这个 socket 设置 TCP_NODELAY 属性，禁用 Nagle 算法\n然后创建一个可读的文件事件用于监听这个客户端 socket 的数据发送\n最大连接数\n在 Redis2.4 中，最大连接数是被直接硬编码在代码里面的，而在2.6版本中这个值变成可配置的。\nmaxclients 的默认值是 10000，你也可以在 redis.conf 中对这个值进行修改。\nconfig get maxclients\n\u0026ldquo;maxclients\u0026rdquo; \u0026ldquo;10000\u0026rdquo;\n实例\n以下实例我们在服务启动时设置最大连接数为 100000：\nredis-server \u0026ndash;maxclients 100000 客户端命令\nS.N. 命令 描述\n1 CLIENT LIST 返回连接到 redis 服务的客户端列表\n2 CLIENT SETNAME 设置当前连接的名称\n3 CLIENT GETNAME 获取通过 CLIENT SETNAME 命令设置的服务名称\n4 CLIENT PAUSE 挂起客户端连接，指定挂起的时间以毫秒计\n5 CLIENT KILL 关闭客户端连\nRedis 管道技术\nRedis 管道技术可以在服务端未响应时，客户端可以继续向服务端发送请求，并最终一次性读取所有服务端的响应。\n实例\n查看 redis 管道，只需要启动 redis 实例并输入以下命令：\n$(echo -en \u0026ldquo;PING\\r\\n SET runoobkey redis\\r\\nGET runoobkey\\r\\nINCR visitor\\r\\nINCR visitor\\r\\nINCR visitor\\r\\n\u0026rdquo;; sleep 10) | nc localhost 6379\n+PONG\n+OK\nredis\n:1\n:2\n:3\n以上实例中我们通过使用 PING 命令查看redis服务是否可用， 之后我们设置了 runoobkey 的值为 redis，然后我们获取 runoobkey 的值并使得 visitor 自增 3 次。\n在返回的结果中我们可以看到这些命令一次性向 redis 服务提交，并最终一次性读取所有服务端的响应\n管道技术的优势\n管道技术最显著的优势是提高了 redis 服务的性能。\n一些测试数据\n在下面的测试中，我们将使用Redis的Ruby客户端，支持管道技术特性，测试管道技术对速度的提升效果。\nrequire \u0026lsquo;rubygems\u0026rsquo;\nrequire \u0026lsquo;redis\u0026rsquo;\ndef bench(descr)\nstart = Time.now\nyield\nputs \u0026ldquo;#{descr} #{Time.now-start} seconds\u0026rdquo;\nend\ndef without_pipelining\nr = Redis.new\n10000.times {\nr.ping\n}\nend\ndef with_pipelining\nr = Redis.new\nr.pipelined {\n10000.times {\nr.ping\n}\n}\nend\nbench(\u0026ldquo;without pipelining\u0026rdquo;) {\nwithout_pipelining\n}\nbench(\u0026ldquo;with pipelining\u0026rdquo;) {\nwith_pipelining\n}\n从处于局域网中的Mac OS X系统上执行上面这个简单脚本的数据表明，开启了管道操作后，往返延时已经被改善得相当低了。\nwithout pipelining 1.185238 seconds\nwith pipelining 0.250783 seconds\n如你所见，开启管道后，我们的速度效率提升了5倍\nRedis 分区\n分区是分割数据到多个Redis实例的处理过程，因此每个实例只保存key的一个子集。\n分区的优势\n通过利用多台计算机内存的和值，允许我们构造更大的数据库。\n通过多核和多台计算机，允许我们扩展计算能力；通过多台计算机和网络适配器，允许我们扩展网络带宽。\n分区的不足\nredis的一些特性在分区方面表现的不是很好：\n涉及多个key的操作通常是不被支持的。举例来说，当两个set映射到不同的redis实例上时，你就不能对这两个set执行交集操作。\n涉及多个key的redis事务不能使用。\n当使用分区时，数据处理较为复杂，比如你需要处理多个rdb/aof文件，并且从多个实例和主机备份持久化文件。\n增加或删除容量也比较复杂。redis集群大多数支持在运行时增加、删除节点的透明数据平衡的能力，但是类似于客户端分区、代理等其他系统则不支持这项特性。然而，一种叫做presharding的技术对此是有帮助的。\n分区类型\nRedis 有两种类型分区。 假设有4个Redis实例 R0，R1，R2，R3，和类似user:1，user:2这样的表示用户的多个key，对既定的key有多种不同方式来选择这个key存放在哪个实例中。也就是说，有不同的系统来映射某个key到某个Redis服务。\n范围分区\n最简单的分区方式是按范围分区，就是映射一定范围的对象到特定的Redis实例。\n比如，ID从0到10000的用户会保存到实例R0，ID从10001到 20000的用户会保存到R1，以此类推。\n这种方式是可行的，并且在实际中使用，不足就是要有一个区间范围到实例的映射表。这个表要被管理，同时还需要各 种对象的映射表，通常对Redis来说并非是好的方法。\n哈希分区\n另外一种分区方法是hash分区。这对任何key都适用，也无需是object_name:这种形式，像下面描述的一样简单：\n用一个hash函数将key转换为一个数字，比如使用crc32 hash函数。对key foobar执行crc32(foobar)会输出类似93024922的整数。\n对这个整数取模，将其转化为0-3之间的数字，就可以将这个整数映射到4个Redis实例中的一个了。93024922 % 4 = 2，就是说key foobar应该被存到R2实例中。注意：取模操作是取除的余数，通常在多种编程语言中用%操作符实现。\n","date":"2020年55月7日","externalUrl":null,"permalink":"/2501.html","section":"Posts","summary":"","title":"Redis相关命令及安全技术","type":"post"},{"content":"mysql数据库备份shell脚本—直接拿来用的shell脚本\n经过我的一次次的尝试，脚本优化后写出来这个脚本给大家使用\n使用中遇到问题的可以留言联系方式解答\n#!/bin/bash #auto bakcup mysql db #by authprs hanwei 2019/12/03 #describe:备份多个数据库只需要在对应的目录建一个只含有数据库库名的mysql.list再执行脚本就行了 ######################## 定义\u0026变量 ################################### date=`date +\"%Y-%m-%d\"` BAK_DIR=/data/mysql_backup/ #目录 #MYSQLDB=\u0026#039;cat ./mysql.list\u0026#039; #数据库名 MYSQLUSR=root #用户名 MYSQPASSWD=123456 #密码 MYSQLCMD=/usr/local/mysql/bin/mysqldump #调用的数据库命令 ######################## 开始 ############################### #判断用户是否为超级用户。 if [ $UID -ne 0 ];then echo \"请使用超级用户。\" exit fi #判断MySQL数据库的备份目录目录是否存在。 if [ ! -d $BAK_DIR ];then mkdir -p $BAK_DIR echo -e \"33[32m $BAK_DIR 目录创建成功！33[0m\" else echo -e \"33[32m $BAK_DIR 已存在!33[0m\" fi #备份MySQL数据库的命令。 #命令格式为 -u用户 -p密码 -d指定的数据库 for database in `cat ${BAK_DIR}/mysql.list` do $MYSQLCMD -u${MYSQLUSR} -p${MYSQPASSWD} -x ${database} \u0026gt; $BAK_DIR/${date}.${database}.sql #检查是否备份成功。 if [ $? -eq 0 ];then echo -e \"33[32m 备份$database 成功！33[0m\" else echo -e \"33[32m 备份$database 失败，请检查...33[0m\" rm -rf $BAK_DIR/${date}.${database}.sql fi done","date":"2020年55月7日","externalUrl":null,"permalink":"/2499.html","section":"Posts","summary":"","title":"mysql数据库备份shell脚本—直接拿来用的shell脚本","type":"post"},{"content":" 大纲 DevOps是什么？\n为什么我们需要DevOps？\nDevOps与敏捷开发有何不同？\n重要的DevOps工具是什么？\nDocker如何帮助DevOps？\nKubernetes如何帮助DevOps？\nAzure DevOps如何帮助DevOps？\n持续集成，持续交付是什么？\n基础架构即代码是什么？\nTerraform和Ansible如何帮助DevOps？\nDevOps是什么？ 与围绕软件开发的大多数流行语一样，DevOps没有公认的定义。 定义从简单（如这两个定义）到复杂（可以持续一整本书）不等。 DevOps是文化理念，实践和应用快速交付工具的组合–AWS DevOps是组织内部的跨学科协作，旨在确保软件新版本的自动化持续交付，同时确保其正确性和可靠性 –L Leite 与其尝试定义DevOps，不如让我们了解软件开发如何演变为DevOps。 瀑布模型(Waterfall) 几十年前，软件开发以Waterfall模型为中心。 Waterfall模型开发，与建筑项目类似-例如，建立一座令人惊叹的桥梁。 你将分多个阶段构建软件，这些阶段可以持续几周到几个月不等。 在大多数Waterfall项目中，企业要几个月才能看到应用程序的有效版本。 构建优秀软件的关键要素 在瀑布模型中工作了几十年，我了解到了开发出色软件的一些关键要素： 沟通\n反馈\n自动化\n沟通的重要性 软件开发是一项涉及多种技能的跨学科工作。 人与人之间的交流对于软件项目的成功至关重要。 \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 在瀑布模型中，我们尝试通过准备有关需求，设计，体系结构和部署的详细文档来增强交流。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 但是，一段时间以来，我们了解到 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 增强团队内部沟通的最佳方法–使团队团结在一起，这样就能在同一个团队中获得各种技能。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 具有多种技能的跨职能团队，会使工作出色。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 早期反馈的重要性 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 快速获得反馈很重要。开发出色的软件就是要获得快速反馈。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 我们是否正在构建符合业务期望的应用程序？ \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你不能等待几个月才能获得反馈。你可能想快速了解。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 如果将其部署到生产环境中，你的应用程序会出现问题吗？ \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 我们越早发现问题，越容易解决。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 我们发现，最好的软件团队通常是快速反馈。帮助我们知道是否尽早在做正确的事情。 \u0026lt;/p\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 自动化的重要性 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 自动化至关重要。软件开发涉及广泛的活动。手动执行操作速度很慢且容易出错。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 在了解了开发出色软件的关键要素之后，让我们看看我们如何演变为敏捷开发和DevOps。 \u0026lt;/p\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发发展 \u0026lt;/h3\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 如果通过加强团队之间的沟通，获取快速反馈和引入自动化，敏捷开发是第一步。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发将业务团队和开发团队整合为一个团队，该团队致力于以小型迭代（称为Sprints）构建出色的软件。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发关注开发周期不是在数周或数，而是在几天甚至一天之内的小需求。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发如何增强团队之间的沟通？ \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发使业务团队和开发团队聚集在一起。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 业务团队负责定义构建什么内容。有什么要求？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 开发团队负责构建满足要求的产品。开发包括与你的软件的设计，编码，测试和打包有关的每个人。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 在敏捷开发中，业务代表（通常称为产品负责人）经常出现在团队中，团队可以清楚地了解业务目标。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 当开发团队对需求的理解不正确并且走错了路时，产品负责人将帮助他们进行课程更正，并保持正确的道路。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 结果：团队构建的最终产品是企业想要的东西。 \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 另一个重要因素，是敏捷开发团队具有跨职能的技能：编码技能（前端，API和数据库），测试技能和业务技能。 \u0026lt;/p\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发与自动化 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发团队关注哪些自动化领域？ \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 软件产品可能具有多种缺陷： \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 功能缺陷意味着产品无法正常工作。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 技术缺陷使软件维护困难。例如，代码质量问题。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 通常，敏捷开发团队专注于使用自动化来尽早发现技术和功能缺陷。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发团队专注于自动化测试。编写出色的单元测试以测试你的方法和类。编写出色的集成测试以测试你的模块和应用程序。敏捷开发团队还广泛关注代码质量–使用诸如SONAR之类的工具来评估应用程序的代码质量。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 如果你拥有出色的自动化测试和出色的代码质量检查，是否就足够了？ \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你可能还希望尽可能经常地运行它们。敏捷开发团队专注于持续集成。提交代码，运行单元测试，自动化测试和代码质量检查。这些都是在持续集成管道中自动执行的。在敏捷开发早期，最受欢迎的CI/CD工具是Jenkins。 \u0026lt;/p\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发如何促进即时反馈？ \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 最重要的因素是，企业无需等待数月即可看到最终产品。在每次版本迭代结束时，都会将该产品演示给所有利益相关者。在优先考虑下一次版本迭代结束时，将采纳所有反馈。结果：团队构建的最终产品是企业想要的东西。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 能够立即反馈的另一个重要因素是–持续集成。假设我将一些代码提交到版本控制中，在30分钟内，如果我的代码导致单元测试失败或集成测试失败，我将获得反馈。如果我的代码不符合代码质量标准或在单元测试中没有足够的代码覆盖率，我将获得反馈。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发成功了吗？是。当然。通过专注于改善业务与开发团队之间的沟通，并着重于尽早发现各种缺陷，Agile将软件开发提升到了一个新的水平。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 但是，出现了新的挑战。 \u0026lt;/p\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 微服务架构的演变 \u0026lt;/h3\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 现在，我们慢慢开始转向微服务架构，并且开始构建许多小型API，而不是构建大型整体应用程序。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 新的挑战是什么？ \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 运维变得更加重要。你每周要进行数百个小型微服务发布，而不是一个月发布一个整体。调试微服务中的问题并了解微服务中发生的事情变得很重要。 \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 是时候在软件开发中使用新的流行语了–DevOps。 \u0026lt;/p\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps的出现 \u0026lt;/h3\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps的重点是什么？ \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps的重点是加强开发与运维团队之间的沟通。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 如何使部署更容易？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 如何使运维团队更加了解开发团队做的事情？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps如何增强团队之间的沟通？ \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps使运维团队与开发团队更加接近。 \u0026lt;/p\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style='margin-bottom: 18px;margin-left: 50px;width: 577.422px;list-style-position: initial;list-style-image: initial;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;\u0026quot;\u0026gt; 在更成熟的企业中，开发团队和运维团队是一个团队。他们开始共享共同的目标，并且两个团队都开始了解另一个团队面临的挑战。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps团队关注的自动化领域是什么？ \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 除了敏捷开发的重点领域（持续集成和测试自动化）外，DevOps团队还致力于帮助使运维团队自动化，例如，在服务器上配置软件，部署应用程序以及监视生产环境。一些关键术语是持续部署和基础架构即代码。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 持续部署就是要在测试环境上持续部署新版本的软件。在像Google，Facebook这样的更成熟的组织中，Continuous Delivery可帮助将软件连续部署到生产中。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 基础设施即代码就是将基础设施视为应用程序代码。你可以使用自动化配置方式创建基础结构（服务器，负载平衡器和数据库）。你将对基础结构进行版本控制-以便可以跟踪。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps如何促进即时反馈？ \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps将运维和开发团队召集在一起。因为运维和开发都是同一团队的一部分，所以整个团队都了解与运维和开发相关的挑战。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 任何运维问题都会得到开发人员的快速关注。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 上线软件时遇到的任何挑战，都会引起运维团队的尽早关注。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps鼓励将持续集成，持续交付和基础架构作为代码。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 由于持续交付，如果我进行代码更改或配置更改破坏了测试或环境，那么我会在几个小时内知道。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 由于使用“基础结构即代码”，开发人员可以自行配置环境，部署代码并自行查找问题，而无需运维团队的任何帮助。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 尽管我们说敏捷开发和DevOps是使事情变得简单的两个不同的事物，但实际上，对于DevOps的含义没有公认的定义。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 我认为敏捷开发和DevOps是两个阶段，可以帮助我们改善构建出色软件。他们不会互相竞争，但是可以一起帮助我们构建出色的软件产品。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 就我而言，敏捷开发和DevOps是相辅相成 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 促进业务，开发和运维团队之间的沟通和反馈\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 通过自动化缓解痛点。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h2 style='margin-top: 18px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-size: 18px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);border-bottom: 1px solid rgb(234, 234, 234);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps的故事 \u0026lt;/h2\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 如果你是团队中的明星开发人员，因此软件问题需要你快速解决。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你要 checkout 项目。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你要快速创建本地环境。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你要修改代码。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你要更新单元测试和自动化测试。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你要提交提交代码。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你会收到一封电子邮件，指出将进行质量检查。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 一些集成测试会自动运行。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你的质量检查小组会收到一封电子邮件，要求你批准。他们进行手动测试并批准。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你的代码将在几分钟内投入生产。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 这就是DevOps的故事。 \u0026lt;/p\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps = Development + Operations \u0026lt;/h3\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; DevOps是软件开发的自然发展。DevOps不仅仅是工具，框架还是自动化。这是所有这些的结合。 \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps专注于人员，流程和产品。DevOps的“人员”部分是关于文化和树立良好思维模式的，这是一种促进开放式沟通并重视快速反馈的文化，一种重视高质量软件的文化。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 敏捷开发帮助弥合了业务团队与开发团队之间的鸿沟。开发团队了解业务的优先级，并与业务合作，以提供最有价值的故事为先。但是，开发团队和运维团队并没有保持一致。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 他们有不同的目标。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 开发团队的目标是将尽可能多的新功能投入生产。 \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; Ops团队的目标是保持生产环境尽可能稳定。 \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 如你所见，如果将产品投入生产很困难，那么开发人员和运维人员就无法保持一致。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; DevOps旨在使Dev和Ops团队实现共同目标。 \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 开发团队与运维团队合作，以了解和解决运维难题。Ops团队是Scrum团队的成员，了解开发中的功能。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 我们如何才能做到这一点？ \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 打破开发人员和行运维人员之间的隔墙！ \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 开发人员和运维人员结合-选项1 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 在成熟的DevOps企业中，Dev和Ops是同一Scrum团队的一部分，彼此分担责任。 \u0026lt;/p\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 开发人员和运维人员结合选项2 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 但是，如果你处在DevOps演进的早期阶段，那么如何才能使Dev和Ops拥有共同的目标并一起工作呢？ \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你可以执行以下操作： \u0026lt;/p\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;width: 577.422px;list-style-type: square;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 15px;\u0026quot;\u0026gt; 你可以开始做的一件事就是让开发团队分担运维团队的一些职责。例如，开发团队可以在生产部署后的第一周内负责新版本的发布。这有助于开发团队了解在发布新版本时操作所面临的挑战，并帮助他们团结起来找到更好的解决方案。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 15px;\u0026quot;\u0026gt; 你可以做的另一件事是让运维团队的代表参与Scrum活动。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 15px;\u0026quot;\u0026gt; 接下来，你可以使开发团队更清楚地看到运维团队面临的挑战。当你在运维中遇到任何挑战时，请使开发团队成为解决方案团队的一部分。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 由于自动化，出现了另一个有趣的选择。通过将基础结构即代码并为开发人员启用预配置，你可以创建操作和开发团队可以理解的通用语言-代码。 \u0026lt;/p\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps用例 \u0026lt;/h3\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 此图展示了两个简单的工作流程 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; No 1：使用Terraform和Azure DevOps来配置Kubernetes集群的基础架构。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; No 2 ：使用Azure DevOps持续部署微服务，以将微服务的Docker镜像构建和部署到Kubernetes群集中。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 这听起来复杂吗？ \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 让我们分解一下，尝试并理解它们。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 让我们从No 2开始-首先是持续部署。 \u0026lt;/p\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; No 2：使用Azure DevOps和Jenkins进行DevOps连续部署 \u0026lt;/h4\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 如果你不经常运行测试和代码质量检查，这有什么用？ \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 如果你没有足够频繁地部署软件，部署自动化有什么用？ \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 开发人员将代码提交到版本控制系统后，将立即执行以下步骤： \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 单元测试。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 代码质量检查。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 集成测试。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 应用程序打包—构建应用程序的可部署版本。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 应用程序部署-启用新版本的应用程序。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 给测试团队的电子邮件，用于测试应用程序。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 一旦获得测试团队的批准，该应用程序将立即部署到Next Environment。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 这称为连续部署。如果你持续部署到生产环境，则称为持续交付。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 最受欢迎的CI / CD工具是Azure DevOps和Jenkins \u0026lt;/p\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; No 1：使用Terraform实现DevOps中的基础架构即代码 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 在过去，我们创建环境并手动部署应用程序。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 每次创建服务器时，都需要手动完成。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 如果需要更新Java版本怎么办？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 是否需要应用安全补丁？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你手动进行。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 这是什么结果？ \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 错误几率很高。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 复制环境很困难。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 基础架构即代码 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 基础架构即代码—像应用程序代码一样对待基础架构 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 这是基础架构即代码应理解的一些重要事项 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 基础设施团队专注于增值工作（而不是例行工作）。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 更少的错误，可以从故障中快速恢复。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 服务器是一致的（避免配置漂移）。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 最受欢迎的IaC工具是Ansible和Terraform。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 通常，这些是IaC中的步骤 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 通过模板配置服务器（由云启用）\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 安装软件\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 配置软件\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 服务器配置 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 最受欢迎的配置工具是CloudFormation和Terraform。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 使用Terraform，你可以预配置服务器和基础架构的部分，例如负载平衡器，数据库，网络配置等。你可以使用使用Packer和AMI等工具预创建镜像来创建服务器（Amazon Machine Image）。 \u0026lt;/p\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 配置管理 \u0026lt;/h4\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 配置管理工具用于 \u0026lt;/p\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style='margin-bottom: 18px;margin-left: 50px;width: 577.422px;list-style-position: initial;list-style-image: initial;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;\u0026quot;\u0026gt; 安装软件\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;\u0026quot;\u0026gt; 配置软件\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 流行的配置管理工具是Chef，Puppet，Ansible和SaltStack。这些旨在在现有服务器上安装和管理软件。 \u0026lt;/p\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; Docker和Kubernetes在DevOps中的作用 \u0026lt;/h3\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; Docker和Kubernetes在DevOps中的作用是什么？ \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 在微服务世界中，可能会使用Java构建一些微服务，使用Python构建一些微服务，以及使用JavaScript构建一些微服务。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 不同的微服务将具有不同的构建和部署方式。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 这使运维团队的工作变得困难。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 3px;font-size: 12px;\u0026quot;\u0026gt; 我们如何有相同的方式来部署多种类型的应用程序？容器和Docker。 \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 使用Docker，你可以构建微服务的镜像-不管它们的语言如何。你可以在任何基础架构上以相同方式运行这些镜像。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 这简化了操作。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; Kubernetes通过帮助协调不同类型的容器并将其部署到集群。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; Kubernetes还提供： \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 服务发现。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 负载均衡。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 集中配置。\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; Docker和Kubernetes使DevOps变得容易。 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 重要的DevOps指标 \u0026lt;/h3\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 以下是一些重要的DevOps指标。 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 部署频率-将应用程序多长时间部署到生产一次？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 上线时间-从编码到投入生产，你需要花多长时间？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 新版本的失败率-新版本多少次失败？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 修复的交付时间-你需要多长时间进行生产修复并将其发布到生产中？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 平均恢复时间-从重大问题恢复到部署生产环境需要花费多长时间？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; DevOps最佳做法 \u0026lt;/h3\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 以下是DevOps的一些最佳做法 \u0026lt;/p\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 标准化\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 具有跨职能技能的团队 \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 关注团队文化 \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 自动化，自动化，自动化。 \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 不变的基础设施 \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 开发和生产环境相同 \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 版本控制 \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 自我配置管理 \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h3 style='margin-top: 20px;margin-bottom: 18px;padding-top: 10px;padding-bottom: 10px;font-weight: bold;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 如何衡量DevOps实施的成熟度 \u0026lt;/h3\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 你如何衡量DevOps实施的成熟度？这里是一些重要的问题。 \u0026lt;/p\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 700;\u0026quot;\u0026gt;开发\u0026lt;/span\u0026gt; \u0026lt;/h4\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; 每次提交都会触发自动测试和自动代码质量检查吗？\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你的代码是否持续交付生产？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你使用结对编程( pair programming )吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你使用TDD和BDD吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你有很多可重复使用的模块吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 开发团队可以自我配置环境吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 快速修复生产需要多长时间？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 700;\u0026quot;\u0026gt;测试\u0026lt;/span\u0026gt; \u0026lt;/h4\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你的测试是否自动化？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 自动化测试失败时，构建会失败吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你的测试周期短吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你有自动NFR测试吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 700;\u0026quot;\u0026gt;部署方式\u0026lt;/span\u0026gt; \u0026lt;/h4\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你是否具有开发和生产环境相同？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你是否使用A / B测试？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你是否使用金丝雀部署？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 只需单击一下按钮即可部署？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你可以通过单击按钮来回滚吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你能否通过单击按钮设置和释放基础结构？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 你是否将IAC和版本控制用于基础架构？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 700;\u0026quot;\u0026gt;监控方式\u0026lt;/span\u0026gt; \u0026lt;/h4\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 团队是否使用集中监控系统？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 只需单击一个按钮，开发团队就可以访问日志吗？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 如果生产中出现问题，团队是否会收到警报？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;h4 style='margin-top: 10px;margin-bottom: 10px;font-size: 15px;font-family: \u0026quot;Microsoft Yahei\u0026quot;;line-height: 1.1;color: rgb(85, 85, 85);text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; \u0026lt;span style=\u0026quot;font-weight: 700;\u0026quot;\u0026gt;团队与流程\u0026lt;/span\u0026gt; \u0026lt;/h4\u0026gt; \u0026lt;blockquote style='margin: 30px;padding: 15px 14px 10px;border-left-width: 5px;border-left-color: rgba(51, 102, 204, 0.67);color: rgb(136, 136, 136);font-size: 16px;background-color: rgb(238, 238, 238);font-family: \u0026quot;Microsoft Yahei\u0026quot;;text-align: start;white-space: normal;'\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;margin-left: 50px;width: 484.5px;list-style-position: initial;list-style-image: initial;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 团队是否希望不断改进？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 团队是否具备业务，开发和运维所需的全部技能？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-bottom: 6px;font-size: 12px;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 团队是否跟踪关键的DevOps指标并对其进行改进？ \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 译者：王延飞 \u0026lt;/p\u0026gt; \u0026lt;p style='margin-bottom: 18px;color: rgb(85, 85, 85);font-family: \u0026quot;Microsoft Yahei\u0026quot;;font-size: 15px;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);'\u0026gt; 原文链接：https://dzone.com/articles/devops-tutorial-devops-with-docker-kubernetes-and# \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;white-space: normal;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;white-space: normal;max-width: 100%;letter-spacing: 0.544px;line-height: 1.75em;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;max-width: 100%;font-size: 15px;color: rgb(85, 85, 85);letter-spacing: 0.544px;widows: 1;caret-color: rgb(51, 51, 51);box-sizing: border-box !important;overflow-wrap: break-word !important;\u0026quot;\u0026gt;END\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;hr style=\u0026quot;margin-top: 28px;white-space: normal;max-width: 100%;letter-spacing: 0.544px;text-align: center;widows: 1;caret-color: rgb(63, 63, 63);color: rgb(63, 63, 63);font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;text-size-adjust: auto;height: 1px;border-top-style: dotted;border-top-color: rgb(165, 165, 165);box-sizing: border-box !important;overflow-wrap: break-word !important;\u0026quot; /\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 15px;margin-bottom: 10px;white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\u0026quot;\u0026gt; \u0026lt;a target=\u0026quot;_blank\u0026quot; href=\u0026quot;http://mp.weixin.qq.com/s?__biz=MzI5ODQ2MzI3NQ==\u0026amp;mid=2247489047\u0026amp;idx=2\u0026amp;sn=b0fe10a93eb8fc1f1edbb47dc92699ff\u0026amp;chksm=eca42f53dbd3a6458f556ee8561fc293ca02bc328492d6b056df60b3116060268a96b959563c\u0026amp;scene=21#wechat_redirect\u0026quot; textvalue=\u0026quot;Kubernetes CKA线下班\u0026quot; data-itemshowtype=\u0026quot;0\u0026quot; tab=\u0026quot;innerlink\u0026quot; data-linktype=\u0026quot;2\u0026quot; rel=\u0026quot;noopener noreferrer\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;max-width: 100%;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: pointer;font-size: 15px;box-sizing: border-box !important;overflow-wrap: break-word !important;\u0026quot;\u0026gt;Kubernetes CKA线下班\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\u0026quot;\u0026gt;\u0026lt;a target=\u0026quot;_blank\u0026quot; href=\u0026quot;http://mp.weixin.qq.com/s?__biz=MzI5ODQ2MzI3NQ==\u0026amp;mid=2247489047\u0026amp;idx=2\u0026amp;sn=b0fe10a93eb8fc1f1edbb47dc92699ff\u0026amp;chksm=eca42f53dbd3a6458f556ee8561fc293ca02bc328492d6b056df60b3116060268a96b959563c\u0026amp;scene=21#wechat_redirect\u0026quot; textvalue=\u0026quot;你已选中了添加链接的内容\u0026quot; data-itemshowtype=\u0026quot;0\u0026quot; tab=\u0026quot;innerlink\u0026quot; data-linktype=\u0026quot;1\u0026quot; rel=\u0026quot;noopener noreferrer\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;js_jump_icon h5_image_link\u0026quot; data-positionback=\u0026quot;static\u0026quot; style=\u0026quot;top: auto;left: auto;margin: 0px;right: auto;bottom: auto;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;white-space: normal;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;font-size: 16px;font-variant-numeric: normal;font-variant-east-asian: normal;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(51, 51, 51);font-family: 微软雅黑;letter-spacing: 0.544px;widows: 1;text-align: center;line-height: 1.75em;background-color: rgb(255, 255, 255);box-sizing: border-box !important;overflow-wrap: break-word !important;\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;outer\u0026quot; label=\u0026quot;Powered by 135editor.com\u0026quot; style=\u0026quot;font-size: 16px;font-variant-numeric: normal;font-variant-east-asian: normal;white-space: normal;max-width: 100%;color: rgb(51, 51, 51);font-family: 微软雅黑;letter-spacing: 0.544px;line-height: 25.6px;text-align: justify;widows: 1;background-color: rgb(255, 255, 255);box-sizing: border-box !important;overflow-wrap: break-word !important;\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;outer\u0026quot; label=\u0026quot;Powered by 135editor.com\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; ","date":"2020年55月7日","externalUrl":null,"permalink":"/2475.html","section":"Posts","summary":"","title":"Docker，Kubernetes在DevOps中的作用","type":"post"},{"content":"根据Stackrox 最近进行的一项 调查，Kubernetes在市场上的主导地位继续得到加强，有86％的受访者将其用于容器编排。\n如果你是其中的一员，那么在Kubernetes继续快速增长的同时，这里有一些工具可以帮助你提高工作效率。 Kubernetes类别列表： 集群部署工具 监控工具 测试工具 安全 CLI工具 开发工具 持续集成/持续交付管道 Serverless工具 服务网格工具 服务发现 可视化和控制 集群部署工具 1. Keel 一个Kubernetes Operator，可自动执行DaemonSet，StatefulSet，Helm和Deployment更新。 这是一个用于构建整个Keel项目二进制文件的命令，该二进制文件没有依赖关系，没有自定义配置文件且没有锁定。 链接：https://keel.sh/ 2.Kube-prod-runtime Kubernetes中的服务集合，使生产环境运行工作负载变得容易。 该服务能够对Kubernetes集群监视性能，启用日志记录，实施认证管理，并允许通过公共DNS服务器自动发现K8中的资源。 还满足其他必要的基础架构需求。 链接：https://github.com/bitnami/kube-prod-runtime/ 3. K3sup 安装k3sup后，使用这个工具几分钟内就可以在任何本地或远程VM上生成kubeconfig 。 链接：https://github.com/alexellis/k3sup 监控工具 4. Kube-state-metrics 创建了一个基本程序来监听Kubernetes API服务器并帮助生成有关对象状态的指标。 它着重于群集内各种对象的健康状况，其中包括 nodes, pods, and deployment。 链接：https://github.com/kubernetes/kube-state-metrics 5. Rakess Rakess可帮助你查看所有提供的Kubernetes集群访问权限。 要检查单个资源命令，可使用“ kubectl auth can-i 列出 deployments ”，但不会 提供完整的概述。 链接：https://github.com/corneliusweig/rakkess 测试工具 6. Kubeval 验证Kubernetes YAML或JSON配置文件的工具。 通过运行Kubernetes OpenAPI规范来完成此过程。 链接：https：//github.com/instrumenta/kubeval 7. Helm-kubeval Kubernetes模式中使用的验证Charts的Helm插来 。 你还可以选择特定的Kubernetes版本来验证Charts。 链接：https://github.com/instrumenta/helm-kubeval 8. BotKube BotKube可以监视，调试和检查Kubernetes集群。 该工具可以集成到各种消息传递平台中，例如Slack和Mattermost。 开源且易于配置。 链接：https://www.botkube.io/ 9.Sonobuoy Sonobuoy是一款出色的诊断工具，可用于测试一致性，工作负载调试和自定义测试以确定Kubernetes集群的状态。 测试以非破坏性方式完成，可生成有关集群的清晰，有用的报告。 链接：https://sonobuoy.io/ 10. Snyk Container Snyk旨在—在整个软件开发生命周期中，始终如一地为你提供检测和修复容器和应用程序中漏洞的方法 。 链接：https://snyk.io/product/container-vulnerability-management/ 安全 11. Kubectl-aws-secrets 使用此程序可创建golang可执行文件，该可执行文件会导入AWS SSM参数服务–帮助你将对应用程序，服务和IT资源的访问作为机密保护到Kubernetes中。 进一步使用此golang可执行工具可以构建Helm插件或将其用作kubectl插件。 链接：https://github.com/xmin-github/kubectl-aws-secrets 12. Helm-aws-secret-plugin 完全按照Helm AWS Secrets插件名称中的说明进行操作。 链接：https://github.com/xmin-github/helm-aws-secret-plugin 13. Harbor 使用Harbor通过基于角色的访问控制来保护你的容器镜像 registry。 该工具将扫描镜像中的漏洞并将其签名使得可信任。 链接：https://goharbor.io/ 14. Kubesec 用于Kubernetes资源的安全风险分析工具。 链接：https://kubesec.io/ 15. Permission-Manager 权限管理器完全可以实现你的想法。 由SIGHUP开发的Permission-Manager是一个应用程序，可为Kubernetes启用基于角色的超简单访问控制管理—创建用户，分配名称空间/权限，并分发Kubeconfig YAML文件。 链接：https://github.com/sighupio/permission-manager 16. Kube-scan Octarine的新工具–专注于Kubernetes工作负载中的风险评估，在集群中作为Pod运行，并评估30种安全设置以创建风险基准。 该工具会分析哪些方法协同工作，以了解哪些组合会降低你的风险水平。 链接：https://www.octarinesec.com/solution-item/kube-scan/ 17. K-rail K-rail适用于你需要在策略实施中进行更多控制的情况。 你可以采取多种简单的特权升级路线，但是在多租户集群中，这些功能可能很危险或会带来不稳定。 链接：https://github.com/cruise-automation/k-rail 18. Kube2iam Kube2iam在Kubernetes的Pod中提供了IAM角色。 Kube2iam：https://github.com/jtblin/kube2iam 19. KIAM KIAM在功能上与Kube2iam有很多相似之处，但是你可能需要仔细查看每一个，以确定其用例是否最适合你的需求。 你可以在此处查看 KIAM和Kube2IAM的差异和用例的细分 。 KIAM：https://github.com/uswitch/kiam 20. KeyCloak KeyCloak是一个访问和身份管理的开源工具，它添加了应用程序身份验证，还可以方便地保护服务。无需处理存储用户和验证用户身份。 链接：https://www.keycloak.org 21. Tigera Tigera 由Project Calico提供，他提供的自动化通用安全策略，可以为你的Kubernetes需求提供了一套网络安全解决方案，并支持多云和传统环境。 链接：https：//www.tigera.io/ 22. Palo Alto Kubernetes Security 虽然仍处于Beta版，但它是Palo Alto的Kubernetes Security的存储库，它包含用于部署容器化防火墙的YAML文件。 链接：https://github.com/PaloAltoNetworks/Kubernetes 23. Klum Klum（Kubernetes Lazy User Manager）可以执行简单的任务，例如创建/删除/修改用户，发布kubeconfig文件并管理与用户关联的角色。 链接：https://github.com/ibuildthecloud/klum 24. Secrets OPerationS Secrets OPerationS（SOPS0被认为是管理Kubernetes secret 的最佳工具之一，它可与 AWS Key Management Service和 GCP Key Management Service以及Pretty Good Privacy（PGP）和 Azure Key Vault无缝结合使用。 在此处查看有关使用SOPS的完整文章： 使用Secrets OPerationS管理Kubernetes secret 链接：https://github.com/mozilla/sops 25. StrongDM StrongDM是用于保护和审核对服务器或数据库的访问的控制平面。 阅读全文： 具有StrongDM的服务器和数据库的身份和访问 链接：https://strongdm.com/ CLI工具 26. Krew Krew帮助开发人员发现有用的kubectl插件并为你的程序安装/管理它们。此工具类似于 APT， DNF或 Homebrew。 链接：https://github.com/kubernetes-sigs/krew/ 27. Ksniff kubectl的一个插件，有效利用 Wireshark和 tcpdump启动Kubernetes集群Pod的远程捕获。 链接：https://github.com/eldadru/ksniff 28. Kube-ps1 Kube-ps1是Zsh插件，它将帮助你查看要指定的上下文。 链接：https://github.com/jonmosco/kube-ps1 29. eksctl Eksctl是用于创建和管理集群升级的简单命令行界面工具。 还支持配置和使用自定义Amazon Machine Image（AMI），这使许多高级用例成为可能，例如使用自定义AMI或实时查询AWS以确定哪个AMI是必需的。 链接：https://eksctl.io/ 30. Kubefwd 如果你正在远程集群上运行Kubernetes服务，请使用Kubefwd将其转发到本地工作站。 链接：https://github.com/txn2/kubefwd 31. Kubeterminal 这更多是一个辅助工具，可以补充Kubectl和Kubernetes中的终端。 链接：https://github.com/samisalkosuo/kubeterminal 32. Skaffold Skaffold是一个命令行工具，可帮助开发人员进行持续的Kubernetes应用程序开发。Skaffold非常轻巧，不需要集群组件。 链接：https://skaffold.dev/ 33. Tilt 当你将大部分时间花在命令行上时，Tilt会将你的更改同步到集群，以供你查看迭代如何影响整体。 随着一切的旋转，Tilt向你显示每种资源的状态，浏览每种资源的日志，或查看所有资源的复用状态。所有更新都是在容器中完成的，并且超级快。 链接：https://tilt.dev/ 开发工具 34. Helm-2to3 创建了一个Helm V3插件，以帮助开发人员迁移和清理在Helm V2中创建的配置，并就地发布到Helm V3。 链接：https://github.com/helm/helm-2to3 35. Rook Rook可以自动执行存储管理员的任务：部署，引导，配置，供应，扩展，升级，迁移，灾难恢复，监视和资源管理 。 它还可以确保无论你选择哪种存储提供商，它都能在Kubernetes上始终运行。 链接：https://rook.io/ 36. Contour Contour是Kubernetes入口控制器，它为Envoy和服务代理提供控制平面。 链接：https://projectcontour.io/ 37. Kubebuilder 这将帮助你链接到Kubernetes API指南，从而使你深入了解如何设计和实现它们。 链接：https://book.kubebuilder.io/ 38. Shell-operator Shell Operator有助于简化Kubernetes运算符的创建。 链接：https://github.com/flant/shell-operator 39. Helm-operator-get-started 一种有助于管理你的Helm版本的工具。 链接：https://github.com/fluxcd/helm-operator-get-started 40. Kudo Kudo是一个工具包，主要使用YAML简化了构建Kubernetes Operators的过程。它将为你提供预定义的 Operators ，你可以直接对其进行自定义。 链接：https://kudo.dev/ 41. Helm-docs 该工具将从Helm charts 自动其生成 markdown 文件。该文件将包含有关charts 的元数据。 链接：https://github.com/norwoodj/helm-docs 持续集成/持续交付管道 42. Rafay Rafay是一种软件工具，可以简化公司或个人在构建内部平台，自动化框架和应用程序生命周期管理方面的工作。它还可以运行Kubernetes集群。 链接：https://rafay.co/ 43. Rancher Rancher是一个完整的软件平台，可以轻松部署容器化环境，而不仅仅是Kops和Kubespray等Kubernetes安装程序。 该平台提供了多种功能，包括基础架构管理，容器调度/编排，监视/运行状况检查/日志记录以及功能强大的基于角色的访问控制系统。 链接：https://rancher.com/ 44. Draft 其目标是简化在Kubernetes上运行的应用程序的构建。使用两个简单的命令，你就可以开始入侵基于容器的应用程序， 甚至不需要Docker或Kubernetes。 链接：https://draft.sh/ Serverless工具 45. Knative Knative是一个基于Kubernetes的开源平台，它提供了一组构建模块，以简化Kubernetes和Istio在管理和操作Lambda函数方面的使用。 链接：https://cloud.google.com/knative/ 服务网格工具 46. Kiali Kiali帮助开发人员观察，定义和验证服务网格的连接。 它创建服务网格拓扑的可视化图形，并提供对断路器，请求路由，等待时间，断路器等功能。 链接：https://www.kiali.io/documentation/features/ 47. Kuma 一个通用的开源服务网格和微服务控制面板，可以在VM环境和Kubernetes上运行。 链接：https://github.com/Kong/kuma 48. Tenkai Tenkai是基于Helm Charts的微服务管理工具。该工具使用Web GUI界面从Helm Charts调出存储库，轻松配置和部署它们。 链接：https://github.com/softplan/tenkai 服务发现 49. Vert.X 服务发现 大量服务发现工具的存储库，使用Vert.X来发现和注册和公开的服务应用程序。服务也可以来自Kubernetes、Docker和 Consul 上。 链接：https://github.com/vert-x3/vertx-service-discovery 可视化和控制 50. Octant 一个基于Web的开源工具，可让Kubernetes工作负载可视化，并为你提供工作负载的实时更新查看。 链接：https://octant.dev/ 51. Kubernetic Kubernetic提供了–集群和更新实时可视化查看，以及支持多个集群的功能等。 链接：https://kubernetic.com/ 译者：王延飞 原文链接：https://dzone.com/articles/50-useful-kubernetes-tools-list-part-2 END\n","date":"2020年55月7日","externalUrl":null,"permalink":"/2431.html","section":"Posts","summary":"","title":"51个Kubernetes工具提高工作效率，涵盖监控、安全、测试、开放、服务网格等！","type":"post"},{"content":"","date":"2020年55月7日","externalUrl":null,"permalink":"/categories/k8s%E9%9B%86%E7%BE%A4%E7%9B%91%E6%8E%A7/","section":"Categories","summary":"","title":"K8s集群监控","type":"categories"},{"content":"安装教程开始\n准备启动盘：\n1.下载镜像文件到官网\n2.找个微PE做启动盘\n准备好机器及磁盘分区\n开机进入bios选择你的U盘启动进去\n1，Install Deepin 20 Beta desktop（安装桌面版）\n2，选择“简体中文\u0026quot;1\n3，友情提示不用管，继续安装\n4，安装位置选择\n5，分区（测试目的，直接默认分区）\n6、安装信息确认\n7、安装过程中信息提示\n8、安装成功\n9、接下来就是选择时区和创建用户\n不在叙述，相信你可以的\n","date":"2020年55月7日","externalUrl":null,"permalink":"/2409.html","section":"Posts","summary":"","title":"deepin20安装教程","type":"post"},{"content":"今天用到了河马查杀工具；个人感觉不是很准确，误报比较多\n#!/bin/bash # @Author: HanWei # @Date: 2020-04-30 10:27:33 # @Last Modified by: HanWei # @Last Modified time: 2020-04-30 10:42:11 # @E-mail: han_wei_95@163.com # #系统版本：CentOS Linux release 7.7.1908 (Core) #[root@hanwei opt]# ./hm version #[*] hm - hm webshell scanner #[*] 软件当前版本 1.7.0 hm#linux-amd64.d0bb40e #[*] 当前特征库版本 13 #[*] mid 5c579f535c04a6adc0f89cc54c4707ea # #安装河马查杀工具 cd /opt/ wget http://dl.shellpub.com/hm/latest/hm-linux-amd64.tgz?version=1.7.0 tar zxf hm-linux-amd64.tgz #安装完成 #查杀webshell ./hm scan 您的web目录 # 扫描完成之后结果会保存为result.csv文件，使用记事本或者excel打开查看 不懂得 ","date":"2020年44月30日","externalUrl":null,"permalink":"/2399.html","section":"Posts","summary":"","title":"使用河马查杀webshel","type":"post"},{"content":"刚买的新电脑安装操作系统一定要注意硬盘是否被bitlocker加密！\n前几天帮一MM的戴尔灵越14燃5488和一GG的Lenovo E490重装系统发现居然两台电脑的C盘和D盘，直接说是所有的盘了，全部被锁定。很是过分了。关键是用不都不知道啥时候被锁的用户也没有发现，按照常规思路，进入PE，准备格盘重装操作系统WIN10，改了BIOS的几项设置之后，再进入PE发现硬盘被bitlocker锁住了，资源管理器里面不能格式化磁盘，\n完蛋，那我就用工具强行格式化得了。强行用diskgenius进行格式化C盘，格式化错误。算了。重新分区吧。后来干脆重新分区才解决，幸亏电脑是新买的，没怎么用，里面没有什么数据，如果有数据的话，数据估计都惨了，机主不知道什么密钥，也没有备份cer密钥。\n从这两例电脑安装操作系统来看，估计以后还有很多无良商家把新主机用bitlocker加密的，一旦改动bios或者某些硬件，都会把硬盘锁死，在网上看了有很多很多网友都是在系统更新重启后发现硬盘被bitlocker锁死的，他们根本不知道什么bitlocker的密码，也没有导出密钥。也看到很多网友在用bitlocker加密过程中因为加密时间十几个小时太长了，点了取消，导致硬盘无法访问的案例。还有网友解开bitlocker锁时间太长，中突出问题导致解锁失败失败，导致无法打开的案例。他们最终都是数据损失惨重，最后只有分区格式化硬盘才做了系统。\n新电脑做系统的时候最好检查下硬盘是否被bitlocker加锁，尝试下导出cer密钥解锁。如果有重要数据，最好复制出数据到移动硬盘确保安全，解锁硬盘的时间太长了，估计有十几个小时，还不如直接拷贝数据来得快和保险。在BIOS中关闭TPM和PTT。\nbitlcoker真是坑爹货，是windows的个大bug，被无良商家加以利用，导致用户数据再不知情的情况下受损，真是巨坑！\n请你们狂喷！！！！！！！！！！！！！！！！！！！！！！！\n","date":"2020年44月29日","externalUrl":null,"permalink":"/2397.html","section":"Posts","summary":"","title":"系统被BitLocker锁定无法进入系统","type":"post"},{"content":" 作者：Shekhar Gulati\n原文：dzone.com/articles/5-docker-utilities-you-should-know 导读 Docker 社区已经创建了许多开源工具，它们能帮我们处理各种用例。作者在本文中推荐了 5 款认为最有用的 Docker 工具，分别是 Watchtower（自动更新 Docker 容器）、docker-gc（容器和镜像的垃圾回收）、docker-slim（容器瘦身）、 rocker：突破 Dockerfile 的限制，以及 ctop（容器的类顶层接口）。 Docker 社区已经创建了许多开源工具，它们所能帮你处理的用例甚至会超出你的想象。 你可以在网上找到很多酷炫的 Docker 工具，其中大部分是开源的，都可以在 Github 上找到。在过去的两年里，我非常热衷于 Docker，在大多数开发项目中都使用了它。当你开始使用 Docker 后，你会发现它适用的场景比你最初预想的还更多。你会希望 Docker 尽可能为你多做一点事，而它不会让你失望的！ Docker 社区非常活跃，每天都会出现许多有用的工具，时时关注社区中发生的所有创新是很困难的。为了帮助你，我收集了一些我在日常工作中使用的又有趣又实用的 Docker 工具，这些工具提升了我的工作效率，减少了原本需要手工完成的工作。 1、watchtower：自动更新 Docker 容器 Watchtower 监视运行容器并监视这些容器最初启动时的镜像有没有变动。当 Watchtower 检测到一个镜像已经有变动时，它会使用新镜像自动重新启动相应的容器。我想在我的本地开发环境中尝试最新的构建镜像，所以使用了它。 Watchtower 本身被打包为 Docker 镜像，因此可以像运行任何其他容器一样运行它。要运行 Watchtower，你需要执行以下命令： $ docker run -d --name watchtower --rm -v /\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evar\u0026lt;/span\u003e/run/docker.sock:/\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evar\u0026lt;/span\u003e/run/docker.sock v2tec/watchtower --interval \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e30\u0026lt;/span\u003e\u0026lt;br\u003e 在上面的命令中，我们使用一个挂载文件 /var/run/docker.sock 启动了 Watchtower 容器。这么做是有必要的，为的是使 Watchtower 可以与 Docker 守护 API 进行交互。我们将 30 秒传递给间隔选项 interval。此选项定义了 Watchtower 的轮询间隔。Watchtower 支持更多的选项，你可以根据文档中的描述来使用它们。 我们现在启动一个 Watchtower 可以监视的容器。 $ docker run -p \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e4000\u0026lt;/span\u003e:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e80\u0026lt;/span\u003e --name friendlyhello shekhargulati/friendlyhello:latest\u0026lt;br\u003e 现在，Watchtower 将开始温和地监控这个 friendlyhello 容器。当我将新镜像推送到 Docker Hub 时，Watchtower 在接下来的运行中将检测到一个新的可用的镜像。它将优雅地停止那个容器并使用这个新镜像启动容器。它将传递我们之前传递给这条 run 命令的选项。换句话说，该容器将仍然使用 4000:80 发布端口来启动。 默认情况下，Watchtower 将轮询 Docker Hub 注册表以查找更新的镜像。通过传递环境变量 REPO_USER 和 REPO_PASS 中的注册表凭据，可以将 Watchtower 配置为轮询私有注册表。 要了解更多 Watchtower 的相关信息，建议你阅读 Watchtower 文档 https://github.com/v2tec/watchtower/blob/master/README.md GitHub 地址：https://github.com/v2tec/watchtower 2、docker-gc：容器和镜像的垃圾回收 Docker-gc 工具通过删除不需要的容器和镜像来帮你清理 Docker 主机。它会删除存在超过一个小时的所有容器。此外，它还删除不属于任何留置容器的镜像。 你可以将 docker-gc 作为脚本和容器来使用。我们将以容器的形式运行 docker-gc。若要使用 docker-gc 来查找所有可以删除的容器和镜像，命令如下： $ docker run --rm -v /\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evar\u0026lt;/span\u003e/run/docker.sock:/\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evar\u0026lt;/span\u003e/run/docker.sock -e DRY RUN=\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e1\u0026lt;/span\u003e spotify/docker-gc\u0026lt;br\u003e 上述命令中，我们加载了 docker.sock 文件，以便 docker-gc 能够与 Docker API 交互。我们传递了一个环境变量 DRY_RUN=1 来查找将被删除的容器和镜像。如果不提供该参数，docker-gc 会删除所有容器和镜像。最好事先确认 docker-gc 要删除的内容。上述命令的输出如下所示： [\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e2017\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-04\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-28\u0026lt;/span\u003eT06:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e27\u0026lt;/span\u003e:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e24\u0026lt;/span\u003e] [INFO] : The following container would have been removed \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e0\u0026lt;/span\u003ec1b3b0972bb792bee508 \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e60\u0026lt;/span\u003ec35a4 bc08ba32b527d53eab173d12a15c28deb931/vibrant_ yonath[\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e2017\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-04\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-28\u0026lt;/span\u003eT06:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e27\u0026lt;/span\u003e:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e24\u0026lt;/span\u003e] [INFO] : The following container would have been removed \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e2\u0026lt;/span\u003ea72d41e4b25e2782f7844e188643e395650a9ecca660e7a0dc2b7989e5acc28 /friendlyhello_ web[\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e2017\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-04\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-28\u0026lt;/span\u003eT06:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e27\u0026lt;/span\u003e:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e24\u0026lt;/span\u003e] [INFO] : The following image would have been removed sha256:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e00f\u0026lt;/span\u003e017a8c2a6e1 fe2f fd05c281 f27d069d2a99323a8cd514dd35f228ba26d2ff[busybox: latest][\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e2017\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-04\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-28\u0026lt;/span\u003eT06:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e27\u0026lt;/span\u003e:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e24\u0026lt;/span\u003e] [ INFO] : The following image would have been removed sha256 :\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e4\u0026lt;/span\u003ea323b466a5ac4ce6524 \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e8d\u0026lt;/span\u003ed970b538922c54e535700cafe9448b52a3094483ea[hello-world:latest][\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e2017\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-04\u0026lt;/span\u003e\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-28\u0026lt;/span\u003eT06:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e27\u0026lt;/span\u003e:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e24\u0026lt;/span\u003e] [INFO] : The following image would have been removed sha256:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e4\u0026lt;/span\u003ea323b4 \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e66\u0026lt;/span\u003ea5ac4ce65248dd970b538922c54e535700cafe9448b52a3094483ea[python:\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e2.7\u0026lt;/span\u003e-slim]\u0026lt;br\u003e 如果你认同 docker-gc 清理方案， 可以不使用 DRY_RUN 再次运行 docker-gc 执行清空操作。 $ docker run --rm -v /\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evar\u0026lt;/span\u003e/run/docker.sock:/\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evar\u0026lt;/span\u003e/run/docker.sock spotify/docker-gc\u0026lt;br\u003e docker-gc 还支持一些其他的选项。建议你阅读 docker-gc 文档以了解更多相关信息： https://github.com/spotify/docker-gc/blob/master/README.md GitHub 地址：https://github.com/spotify/docker-gc 3、docker-slim：面向容器的神奇减肥药 如果你担心你的 Docker 镜像的大小，docker-slim 可以帮你排忧解难。 docker-slim 工具使用静态和动态分析方法来为你臃肿的镜像瘦身。要使用 docker-slim，可以从 Github 下载 Linux 或者 Mac 的二进制安装包。成功下载之后，将它加入到你的系统变量 PATH 中。 为举例需要，我参考 Docker 官方文档创建了一个名为 friendlyhello 的 Docker 镜像，该镜像大小为 194MB（如下所示）： 你可以看到，对于一个简单的应用程序，我们必须下载 194 MB 的数据。让我们用 docker-slim 来看看它能减掉多少脂肪。 $ docker-slim build --http-probe friendlyhello\u0026lt;br\u003e docker-slim 工具对胖镜像进行一系列的检查、测量，最终创建一个瘦版本的镜像。让我们看看这个减过肥的大小吧。 正如你所看到的，镜像大小被减少到 24.9 MB。你可以启动这个容器，它将以同样的方式运行。docker-slim 工具支持 Java、Python、Ruby 和 Node.js 应用。 你自己试试，看看能减下来多少。在我的个人项目中，我发现它在大多数情况下都适用。你可以从其文档中了解更多关于 docker-slim 的信息： https://github.com/docker-slim/docker-slim/blob/master/README.md GitHub 地址：https://github.com/docker-slim/docker-slim 4、rocker：突破 Dockerfile 的限制 大多数使用 Docker 的开发人员都使用 Dockerfile 来构建镜像。Dockerfile 是一种声明式的方法，用于定义用户可以在命令行上调用的所有命令，从而组装镜像。 Rocker（https://github.com/grammarly/rocker）为 Dockerfile 指令集增加了新的指令。Grammarly 为了解决他们遇到的 Dockerfile 格式的问题，创建了 Rocker。Grammarly 团队写了一篇深入的博客，解释他们创建它的原因。我建议你读一读，以更好地了解 Rocker。他们在博文中强调了两个问题： Docker 镜像的大小。 缓慢的构建速度。 该博客还提到了 Rocker 加入的一些新指令。参考 Rocker 文档，了解 Rocker 支持的所有指令： https://github.com/grammarly/rocker/blob/master/README.md MOUNT 用于在构建之间共享卷，以便能够被依赖项管理工具重用。 在 Dockerfile 中原本已有 FROM 指令。而 Rocker 使我们可以添加一条以上的 FROM 指令。这意味着你可以通过单个 Rockerfile 创建多个镜像。第一批指令用于构建产品所有的依赖；第二批指令用于构建产品；这能够极大地降低镜像大小。 TAG 用于在构建的不同阶段标识镜像，这意味着你不必手动为每个镜像打标签。 PUSH 用于将镜像推送到镜像仓库。 ATTACH 使你能够交互式地运行中间步骤。这一点对于调试非常有用。 要使用 Rocker，首先必须在你的机器上安装。对 Mac 用户来说，就是简单地运行几条 brew 命令： $ brew tap grammarly/tap$ brew install grammarly/tap/rocker\u0026lt;br\u003e 一旦完成安装，你就可以通过传递 Rockerfile 使用 Rocker 来构建镜像了： FROM python:2.7-slimWORKDIR /appADD . /appRUN pip \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003einstall\u0026lt;/span\u003e -r requirements. txtEXPOSE \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e80\u0026lt;/span\u003eENV \u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003eNAME\u0026lt;/span\u003e WorldCMD [\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(214, 157, 133);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\"python\"\u0026lt;/span\u003e,\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(214, 157, 133);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e\"app.Py\"\u0026lt;/span\u003e]TAG shekhargulati/ friendlyhello:{{ .VERSION }}PUSH shekhargulati/friendlyhello:{{ .VERSION }}\u0026lt;br\u003e 若要构建一个镜像并将其推送到 Docker Hub，你可以运行以下命令： $ rocker d build --push -\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(86, 156, 214);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003evar\u0026lt;/span\u003e VERSION\u0026lt;span style=\"font-size: inherit;line-height: inherit;color: rgb(184, 215, 163);overflow-wrap: inherit !important;word-break: inherit !important;\"\u003e-1.0\u0026lt;/span\u003e\u0026lt;br\u003e GitHub 地址：https://github.com/grammarly/rocker 5、ctop：容器的类顶层接口 ctop 是我最近开始使用的一个工具，它能够提供多个容器的实时指标视图。如果你是一个 Mac 用户，可以使用 brew 安装，如下所示： $ brew install ctop\u0026lt;br\u003e 一旦完成安装，就可以开始使用 ctop 了。现在，你只需要配置 DOCKER_HOST 环境变量。 你可以运行 ctop 命令，查看所有容器的状态。 若只想查看正在运行的容器，可以使用 ctop -a 命令。 ctop 是一个简单的工具，对于了解在你的主机上运行的容器很有帮助。你可以在 ctop 文档中了解更多相关信息： https://github.com/bcicen/ctop/blob/master/README.md GitHub 地址：https://github.com/bcicen/ctop 以上是我发现的很有用的 5 款 Docker 工具。你在日常工作中使用 Docker 工具吗？希望这些工具能够为你带来帮助，也欢迎在评论中推荐你觉得有用的工具。 -End- 加小编微信：xiaobaito，免费获取一份架构师资料。还可以邀请加入咱们的「菜鸟架构」技术群一起讨论技术，禁止发广告及垃圾信息哦。 热门阅读 免费获取一份架构资料！ Redis 10亿数据量只需要100MB内存！ 面试官问我数据库缓存一致性的四种方案！ MySQL常用优化指南，及大表优化思路！\nMySQL可以实现一个简单版搜索引擎？ 面试必问！有没有比读写锁更快的锁？ 两小时入门 Docker，太腻害了！ Spring Boot + Vue 如此强大？ 更多请关注“菜鸟架构”公众号，将不断呈现更多架构干货！\n给个在看，谢谢老板！ ","date":"2020年44月28日","externalUrl":null,"permalink":"/2381.html","section":"Posts","summary":"","title":"推荐 5 款超好用的开源 Docker 工具！","type":"post"},{"content":" “ etcd 作为 Kubernetes 集群的元数据存储，是被业界广泛使用的强一致性 KV 存储，但近日被挖掘出一个存在 3 年之久的数据不一致 bug——client 写入后无法在异常节点读取到数据，即数据丢失。本文介绍了我们是如何从问题分析、大胆猜测、严谨验证、排除、工程化复现，从 raft 到 boltdb，从源码定制再到 chaos monkey，一步步定位并解决 etcd 数据不一致 bug 的详细流程，并将解决方案提交给社区，移植到 etcd 3.4/3.3 生产环境分支。希望通过本文，能够揭开 etcd 的神秘面纱，让大家对 etcd 的原理和问题定位有一个较为深入的了解。 问题背景 诡异的 K8S 滚动更新异常 笔者某天收到同事反馈，测试环境中 K8S 集群进行滚动更新发布时未生效。通过 kube-apiserver 查看发现，对应的 Deployment 版本已经是最新版，但是这个最新版本的 Pod 并未创建出来。 针对该现象，我们最开始猜测可能是 kube-controller-manager 的 bug 导致，但是观察 controller-manager 日志并未发现明显异常。第一次调高 controller-manager 的日志等级并进行重启操作之后，似乎由于 controller-manager 并没有 watch 到这个更新事件，我们仍然没有发现问题所在。此时，观察 kube-apiserver 日志，同样也没有出现明显异常。 于是，再次调高日志等级并重启 kube-apiserver，诡异的事情发生了，之前的 Deployment 正常滚动更新了！ etcd 数据不一致 ？ 由于从 kube-apiserver 的日志中同样无法提取出能够帮助解决问题的有用信息，起初我们只能猜测可能是 kube-apiserver 的缓存更新异常导致的。正当我们要从这个切入点去解决问题时，该同事反馈了一个更诡异的问题——自己新创建的 Pod，通过 kubectl查询 Pod 列表，突然消失了！纳尼？这是什么骚操作？经过我们多次测试查询发现，通过 kubectl 来 list pod 列表，该 pod 有时候能查到，有时候查不到。那么问题来了，K8s api 的 list 操作是没有缓存的，数据是 kube-apiserver 直接从 etcd 拉取返回给客户端的，难道是 etcd 本身出了问题？ 众所周知，etcd 本身是一个强一致性的 KV 存储，在写操作成功的情况下，两次读请求不应该读取到不一样的数据。怀着不信邪的态度，我们通过 etcdctl 直接查询了 etcd 集群状态和集群数据，返回结果显示 3 个节点状态都正常，且 RaftIndex 一致，观察 etcd 的日志也并未发现报错信息，唯一可疑的地方是 3 个节点的 dbsize 差别较大。接着，我们又将 client 访问的 endpoint 指定为不同节点地址来查询每个节点的 key 的数量，结果发现 3 个节点返回的 key 的数量不一致，甚至两个不同节点上 Key 的数量差最大可达到几千！而直接通过 etcdctl 查询刚才创建的 Pod，发现访问某些 endpoint 能够查询到该 pod，而访问其他 endpoint 则查不到。至此，基本可以确定 etcd 集群的节点之间确实存在数据不一致现象。 问题分析和排查过程 遇事不决问Google 强一致性的存储突然数据不一致了，这么严重的问题，想必日志里肯定会有所体现。然而，可能是 etcd 开发者担心日志太多会影响性能的缘故，etcd 的日志打印的比较少，以至于我们排查了 etcd 各个节点的日志，也没有发现有用的报错日志。甚至是在我们调高日志级别之后，仍没有发现异常信息。 作为一个21世纪的程序员，遇到这种诡异且暂时没头绪的问题，第一反应当然是先 Google 一下啦，毕竟不会 StackOverFlow 的程序员不是好运维！Google 输入“etcd data inconsistent” 搜索发现，并不是只有我们遇到过该问题，之前也有其他人向 etcd 社区反馈过类似问题，只是苦于没有提供稳定的复现方式，最后都不了了之。如 issue： https://github.com/etcd-io/etcd/issues/9630\nhttps://github.com/etcd-io/etcd/issues/10407 https://github.com/etcd-io/etcd/issues/10594 https://github.com/etcd-io/etcd/issues/11643 由于这个问题比较严重，会影响到数据的一致性，而我们生产环境中当前使用了数百套 etcd 集群，为了避免出现类似问题，我们决定深入定位一番。 etcd 工作原理和术语简介 在开始之前，为方便读者理解，这里先简单介绍下 etcd 的常用术语和基本读写原理。 术语表： 名称 \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;含义\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Raft\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;etcd 使用的一致性算法\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;WAL\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;预写 Log，持久化数据，防止节点重启等导致数据丢失\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Snapshot\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;快照，数据更新超过阈值时，会通过快照的方式来压缩 WAL 文件大小\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;MVCC\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;多版本并发控制\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;DB\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;boltdb/bboltdb，实际存储 etcd v3 的数据\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;162.33333333333334\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Revision\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;版本号，作为 etcd 数据的逻辑时钟\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Auth revision\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;鉴权操作所用的版本号，为了避免 TOCTOU 问题引入\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Propose\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;发起一次 Raft 请求提案\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Committed\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;一半以上的节点同意这次请求后的状态，此时数据可以被应用层 apply\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Apply\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;应用层实际将 Committed 的数据应用到 DB\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Compact\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;压缩历史版本数据\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Defrag\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;碎片整理，压缩 etcd 的 db 存储大小\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;\u0026quot; width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Endpoint\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;客户端指定的 etcd 访问地址\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Node\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;组成 etcd 集群的节点\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Term\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;任期，每进行一次 leader 选举 Term 会增加 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;Index\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;单调递增，每次经过 Raft 模块发起变更操作时由 leader 增加\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;CommittedIndex\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;经过 Raft 协议同意提交的数据 Index\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;AppliedIndex\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;已经被应用层应用的 Index\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026quot;53.000000000000014\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;ConsistentIndex\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td width=\u0026quot;373.3333333333333\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;为保证\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;不\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;重复 Apply 同一条数\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;据引入，保证 Apply 操作的幂等性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;ReadIndex\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; style=\u0026quot;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;通过 Raft 模块获取 leader 当前的 committedIndex\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; etcd 是一个强一致性的分布式 KV 存储，所谓强一致性，简单来说就是一个写操作成功后，从任何一个节点读出来的数据都是最新值，而不会出现写数据成功后读不出来或者读到旧数据的情况。etcd 通过 raft 协议来实现 leader 选举、配置变更以及保证数据读写的一致性。下面简单介绍下 etcd 的读写流程： 写数据流程（以 leader 节点为例，见上图）： \u0026lt;ol class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;list-style-type: decimal;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;etcd 任一节点的 etcd server 模块收到 Client 写请求（如果是 follower 节点，会先通过 Raft 模块将请求转发至 leader 节点处理）。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;etcd server 将请求封装为 Raft 请求，然后提交给 Raft 模块处理。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-top: auto;margin-bottom: auto;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;leader 通过 Raft 协议与集群中 follower 节点进行交互，将消息复制到follower 节点，于此同时，并行将日志持久化到 WAL。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-top: auto;margin-bottom: auto;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;span style='font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;font-family: \u0026quot;Times New Roman\u0026quot;;'\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;follower 节点对该请求进行响应，回复自己是否同意该请求。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-top: auto;margin-bottom: auto;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;当集群中超过半数节点（(n/2)+1 members ）同意接收这条日志数据时，表示该请求可以被Commit，R\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;aft 模块通知 etcd server 该日志数据已经 Commit，可以进行 Apply。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-top: auto;margin-bottom: auto;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;各个节点的 etcd server 的 applierV3 模块异步进行 Apply 操作，并通过 MVCC 模块写入后端存储 BoltDB。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;margin-top: auto;margin-bottom: auto;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 15px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;当 client 所连接的节点数据 apply 成功后，会返回给客户端 apply 的结果。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;读数据流程\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;list-style-type: disc;\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;etcd 任一节点的 etcd server 模块收到客户端读请求（Range 请求）\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;判断读请求类型，如果是串行化读（serializable）则直接进入 Apply 流程\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;如果是线性一致性读（linearizable），则进入 Raft 模块\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;Raft 模块向 leader 发出 ReadIndex 请求，获取当前集群已经提交的最新数据 Index\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;等待本地 AppliedIndex 大于或等于 ReadIndex 获取的 CommittedIndex 时，进入 Apply 流程\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;Apply 流程：通过 Key 名从 KV Index 模块获取 Key 最新的 Revision，再通过 Revision 从 BoltDB 获取对应的 Key 和 Value。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;section data-style-type=\u0026quot;5\u0026quot; data-tools=\u0026quot;新媒体排版\u0026quot; data-id=\u0026quot;2700487\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;position: static\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;margin-bottom: 10px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;初步验证\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;通常集群正常运行情况下，如果没有外部变更的话，一般不会出现这么严重的问题。我们查询故障 etcd 集群近几天的发布记录时发现，故障前一天对该集群进行的一次发布中，由于之前 dbsize 配置不合理，导致 db 被写满，集群无法写入新的数据，为此运维人员更新了集群 dbsize 和 compaction 相关配置，并重启了 etcd。重启后，运维同学继续对 etcd 手动执行了 compact 和 defrag 操作，来压缩 db 空间。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;通过上述场景，我们可以初步判断出以下几个可疑的触发条件：\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;ol start=\u0026quot;1\u0026quot; type=\u0026quot;1\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt; dbsize 满\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt; dbsize 和 compaction 配置更新\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt; compaction 操作和 defrag 操作\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt; 重启 etcd\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt;\u0026lt;section style=\u0026quot;margin-top: 15px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;出了问题肯定要能够复现才更有利于解决问题，正所谓能够复现的 bug 就不叫 bug。复现问题之前，我们通过分析 etcd 社区之前的相关 issue 发现，触发该 bug 的共同条件都包含执行过 compaction 和 defrag 操作，同时重启过 etcd 节点。因此，我们计划首先尝试同时模拟这几个操作，观察是否能够在新的环境中复现。为此我们新建了一个集群，然后通过编写脚本向集群中不停的写入和删除数据，直到 dbsize 达到一定程度后，对节点依次进行配置更新和重启，并触发 compaction 和 defrag 操作。然而经过多次尝试，我们并没有复现出类似于上述数据不一致的场景。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section data-style-type=\u0026quot;5\u0026quot; data-tools=\u0026quot;新媒体排版\u0026quot; data-id=\u0026quot;2700487\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;position: static\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;color: rgb(15, 64, 249);text-align: left;margin-bottom: 10px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: rgb(0, 0, 0);\u0026quot;\u0026gt;抽丝剥茧，初现端倪\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;color: rgb(15, 64, 249);text-align: left;margin-bottom: 15px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;text-align: justify;\u0026quot;\u0026gt;紧接着，在之后的测试中无意发现，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;text-align: justify;\u0026quot;\u0026gt;client 指定不同的 endpoint 写数据\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;text-align: justify;\u0026quot;\u0026gt;，能够查到数据的节点也不同。比如，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;text-align: justify;\u0026quot;\u0026gt;endpoint 指定为 node1 进行写数据，3个节点都可以查到数据；endpoint 指定为 node2 进行写数据，node2 和 node3 可以查到；endpoint 指定为 node3 写数据，只有 node3 自己能够查到。具体情况如下表：\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;color: rgb(15, 64, 249);text-align: left;margin-bottom: 15px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;text-align: justify;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;color: rgb(15, 64, 249);text-align: left;margin-bottom: 15px;white-space: normal;border-color: initial;border-style: none;border-width: 0px;padding: 0px;margin-top: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;text-align: justify;\u0026quot;\u0026gt;于是我们做出了初步的猜测，有以下几种可能：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;ol class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;list-style-type: decimal;\u0026quot;\u0026gt; \u0026lt;li style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;集群可能分裂了，leader 未将消息发送给 follower 节点。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;leader 给 follower 节点发送了消息，但是 log 异常，没有对应的 command 。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;leader 给 follower 节点发送了消息，有对应的 command，但是 apply 异常，操作还未到 KV Index 和 boltdb 就异常了。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;leader 给 follower 节点发送了消息, 有对应的 command，但是 apply 异常，KV Index 出现了问题。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;leader 给 follower 节点发送了消息, 有对应的 command，但是 apply 异常，boltdb 出现了问题。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 10px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;为了验证我们的猜测，我们进行了一系列测试来缩小问题范围：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;首先，我们\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;通过 endpoint status 查看集群信息，发现 3 个节点的 clusterId，leader，raftTerm，raftIndex 信息均一致，而 dbSize 大小和 revision 信息不一致。clusterId 和 leader 一致，基本\u0026lt;/span\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: rgb(111, 129, 254);\u0026quot;\u0026gt;排除了集群分裂的猜测\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;，而 raftTerm 和 raftIndex 一致，说明 leader 是有向 follower 同步消息的，也\u0026lt;/span\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: rgb(111, 129, 254);\u0026quot;\u0026gt;进一步排除了第一个猜测\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;，但是 WAL落盘有没有异常还不确定。dbSize 和 revision 不一致则进一步说明了 3 个节点数据已经发生不一致了。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;margin-bottom: 15px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;其次，由于 etcd 本身提供了一些 dump 工具，例如 etcd-dump-log 和 etcd-dump-db。我们可以像下图一样，使用 etcd-dump-log dump 出指定 WAL 文件的内容，使用 etcd-dump-db dump 出 db 文件的数据，方便对 WAL 和 db 数据进行分析。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 15px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;于是，\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;我们向 node3 写了一条便于区分的数据\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;，然后通过 etcd-dump-log 来分析 3 个节点的 WAL，按照刚才的测试，\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;endpoint 指定为 node3 写入的数据\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;，通过其他两个节点应该查不到的。但是我们发现 3 个节点都收到了 WAL log，也就是说 WAL 并没有丢，因此\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: rgb(111, 129, 254);\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;排除了第二个猜测\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;margin-top: 5px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;接下来我们 dump 了 db 的数据进行分析，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;发现 endpoint 指定为 node3 写入的数据\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;，在其他两个节点的 db 文件里找不到，也就是说数据确实没有落到 db，而不是写进去了查不出来。\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: rgb(111, 129, 254);\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;既然 WAL 里有而 db 里没有，因此很大可能是 apply 流程异常了，数据可能在 apply 时被丢弃了。\u0026lt;/strong\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;由于现有日志无法提供更有效的信息，我们打算在 etcd 里新加一些日志来更好地帮助我们定位问题。etcd 在做 apply 操作时，trace 日志会打印超过每个超过 100ms 的请求，我们首先把 100ms 这个阈值调低，调整到 1ns，这样每个 apply 的请求都能够记录下来，可以更好的帮助我们定位问题。\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;padding-left: 0em;padding-right: 0em;letter-spacing: 0px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;编译好新版本之后，我们替换了其中一个 etcd 节点，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;然后向不同 node 发起写请求测试。\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;果然，我们发现了一条不同寻常的错误日志：\u0026quot;error\u0026quot;:\u0026quot;auth:revision in header is old\u0026quot;，因此我们断定问题很可能是因为——发出这条错误日志的节点，对应的 key 刚好没有写进去。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;padding-left: 0em;padding-right: 0em;letter-spacing: 0px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;padding-left: 0em;padding-right: 0em;letter-spacing: 0px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;搜索代码后，我们发现 etcd 在进行 apply 操作时，如果开启了鉴权，在鉴权时会判断 raft 请求 header 中的 AuthRevision，如果请求中的 AuthRevision 小于当前 node 的\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;AuthRevision，则会认为 AuthRevision 太老而导致 Apply 失败。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section class=\u0026quot;code-snippet__fix code-snippet__js\u0026quot;\u0026gt; \u0026lt;ul class=\u0026quot;code-snippet__line-index code-snippet__js\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;pre class=\u0026quot;code-snippet__js\u0026quot; data-lang=\u0026quot;swift\u0026quot;\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;func (as *authStore) isOpPermitted(userName string, revision uint64, key, rangeEnd []byte, permTyp authpb.Permission_Type) error {\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; // ...\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; if revision \u0026amp;lt; as.Revision() {\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; return ErrAuthOldRevision\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; }\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; // ...\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;}\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/section\u0026gt; 这样看来，很可能是不同节点之间的 AuthRevision 不一致了，AuthRevision 是 etcd 启动时直接从 db 读取的，每次变更后也会及时的写入 db，于是我们简单修改了下 etcd-dump-db工具，将每个节点 db 内存储的 AuthRevision 解码出来对比了下，发现 3 个节点的 AuthRevision 确实不一致，node1 的 AuthRevision 最高，node3 的 AuthRevision 最低，这正好能够解释之前的现象，endpoint 指定为 node1 写入的数据，3 个节点都能查到，指定为 node3 写入的数据，只有 node3 能够查到，因为 AuthRevision 较低的节点发起的 Raft 请求，会被 AuthRevision 较高的节点在 Apply 的过程中丢弃掉（如下表）。 源码之前，了无秘密？ 目前为止我们已经可以明确，新写入的数据通过访问某些 endpoint 查不出来的原因是由于 AuthRevision 不一致。但是，数据最开始发生不一致问题是否是由 AuthRevision 造成，还暂时不能断定。为什么这么说呢？因为 AuthRevision 很可能也是受害者，比如 AuthRevision 和数据的不一致都是由同一个原因导致的，只不过是 AuthRevision 的不一致放大了数据不一致的问题。但是，为更进一步接近真相，我们先假设 AuthRevision 就是导致数据不一致的罪魁祸首，进而找出导致 AuthRevision 不一致的真实原因。 原因到底如何去找呢？正所谓，源码之前了无秘密，我们首先想到了分析代码。于是，我们走读了一遍 Auth 操作相关的代码（如下），发现只有在进行权限相关的写操作（如增删用户/角色，为角色授权等操作）时，AuthRevision 才会增加。AuthRevision 增加后，会和写权限操作一起，写入 backend 缓存，当写操作超过一定阈值（默认 10000 条记录）或者每隔100ms（默认值），会执行刷盘操作写入 db。由于 AuthRevision 的持久化和创建用户等操作的持久化放在一个事务内，因此基本不会存在创建用户成功了，而 AuthRevision 没有正常增加的情况。 \u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span class=\"code-snippet__function\"\u003e\u0026lt;span class=\"code-snippet__keyword\"\u003efunc\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__params\"\u003e(as *authStore)\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__title\"\u003eUserAdd\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet__params\"\u003e(r *pb.AuthUserAddRequest)\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__params\"\u003e(*pb.AuthUserAddResponse, error)\u0026lt;/span\u003e\u0026lt;/span\u003e {\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__comment\"\u003e// ...\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tx := as.be.BatchTx()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tx.Lock()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__keyword\"\u003edefer\u0026lt;/span\u003e tx.Unlock() \u0026lt;span class=\"code-snippet__comment\"\u003e// Unlock时满足条件会触发commit操作\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__comment\"\u003e// ...\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e putUser(tx, newUser)\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e as.commitRevision(tx)\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__keyword\"\u003ereturn\u0026lt;/span\u003e \u0026pb.AuthUserAddResponse{}, \u0026lt;span class=\"code-snippet__literal\"\u003enil\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e}\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span class=\"code-snippet__function\"\u003e\u0026lt;span class=\"code-snippet__keyword\"\u003efunc\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__params\"\u003e(t *batchTxBuffered)\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__title\"\u003eUnlock\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet__params\"\u003e()\u0026lt;/span\u003e\u0026lt;/span\u003e {\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__keyword\"\u003eif\u0026lt;/span\u003e t.pending != \u0026lt;span class=\"code-snippet__number\"\u003e0\u0026lt;/span\u003e {\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e t.backend.readTx.Lock() \u0026lt;span class=\"code-snippet__comment\"\u003e// blocks txReadBuffer for writing.\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e t.buf.writeback(\u0026t.backend.readTx.buf)\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e t.backend.readTx.Unlock()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__keyword\"\u003eif\u0026lt;/span\u003e t.pending \u003e= t.backend.batchLimit {\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e t.commit(\u0026lt;span class=\"code-snippet__literal\"\u003efalse\u0026lt;/span\u003e)\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e }\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e }\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e t.batchTx.Unlock()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e}\u0026lt;/span\u003e 那么，既然 3 个节点的 AuthRevision 不一致，会不会是因为某些节点写权限相关的操作丢失了，从而没有写入 db ？如果该猜测成立，3 个节点的 db 里 authUser 和 authRole 的 bucket 内容应该有所不同才对。于是为进一步验证，我们继续修改了下 etcd-dump-db 这个工具，加入了对比不同 db 文件 bucket 内容的功能。遗憾的是，通过对比发现，3 个节点之间的 authUser 和 authRole bucket 的内容并没有什么不同。 既然节点写权限相关的操作没有丢，那会不会是命令重复执行了呢？查看异常时间段内日志时发现，其中包含了较多的 auth 操作；进一步分别比对 3 个节点的 auth 操作相关的日志又发现，部分节点日志较多，而部分节点日志较少，看起来像是存在命令重复执行现象。由于日志压缩，虽然暂时还不能确定是重复执行还是操作丢失，但是这些信息能够为我们后续的排查带来很大启发。 我们继续观察发现，不同节点之间的 AuthRevison虽有差异，但是差异较小，而且差异值在我们压测期间没有变过。既然不同节点之间的 AuthRevision 差异值没有进一步放大，那么通过新增的日志基本上也看不出什么问题，因为不一致现象的出现很可能是在过去的某个时间点瞬时造成的。这就造成我们如果想要发现问题根因，还是要能够复现 AuthRevison 不一致或者数据不一致问题才行，并且要能够抓到复现瞬间的现场。 问题似乎又回到了原点，但好在我们目前已经排除了很多干扰信息，将目标聚焦在了 auth 操作上。 混沌工程，成功复现\n鉴于之前多次手动模拟各种场景都没能成功复现，我们打算搞一套自动化的压测方案来复现这个问题，方案制定时主要考虑的点有以下几个：\n如何增大复现的概率？ 根据之前的排查结果，很有可能是 auth 操作导致的数据不一致，因此我们实现了一个 monkey 脚本，每隔一段时间，会向集群写入随机的用户、角色，并向角色授权，同时进行写数据操作，以及随机的重启集群中的节点，详细记录每次一操作的时间点和执行日志。 怎样保证在复现的情况下，能够尽可能的定位到问题的根因？ 根据之前的分析得出，问题根因大概率是 apply 过程中出了问题，于是我们在 apply 的流程里加入了详细的日志，并打印了每次 apply 操作committedIndex、appliedIndex、consistentIndex 等信息。 \u0026lt;li\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 15px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;如果复现成功，如何能够在第一时间发现？\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;由于日志量太大，只有第一时间发现问题，才能够更精确的缩小问题范围，才能更利于我们定位问题。于是我们实现了一个简单的 metric-server，每隔一分钟拉取各个节点的 key 数量，并进行对比，将差异值暴露为 metric，通过 prometheus 进行拉取，并用 grafana 进行展示，一旦差异值超过一定阈值（写入数据量大的情况下，就算并发统计各个节点的 key 数量，也可能会有少量的差异，所以这里有一个容忍误差)，则立刻通过统一告警平台向我们推送告警，以便于及时发现。\u0026lt;/span\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 25px;margin-top: 10px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;方案搞好后，我们新建了一套 etcd 集群，部署了我们的压测方案，打算进行长期观察。结果第二天中午，我们就收到了微信告警——集群中存在数据不一致现象。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 25px;margin-top: 15px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;于是，我们立刻登录压测机器进行分析，首先停掉了压测脚本，然后查看了集群中各个节点的 AuthRevision，发现 3 个节点的 AuthRevision 果然不一样！根据 grafana 监控面板上的监控数据，我们将数据不一致出现的时间范围缩小到了 10 分钟内，然后重点分析了下这 10 分钟的日志，发现在某个节点重启后，consistentIndex 的值比重启前要小。然而 etcd 的所有 apply 操作，幂等性都依赖 consistentIndex 来保证，当进行 apply 操作时，会判断当前要 apply 的 Entry 的 Index 是否大于 consistentIndex，如果 Index 大于 consistentIndex，则会将 consistentIndex 设为 Index，并允许该条记录被 apply。否则，则认为该请求被重复执行了，不会进行实际的 apply 操作。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section class=\u0026quot;code-snippet__fix code-snippet__js\u0026quot;\u0026gt; \u0026lt;ul class=\u0026quot;code-snippet__line-index code-snippet__js\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;pre class=\u0026quot;code-snippet__js\u0026quot; data-lang=\u0026quot;go\u0026quot;\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;// applyEntryNormal apples an EntryNormal type raftpb request to the EtcdServer\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet__function\u0026quot;\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet__keyword\u0026quot;\u0026gt;func\u0026amp;lt;/span\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__params\u0026quot;\u0026gt;(s *EtcdServer)\u0026amp;lt;/span\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__title\u0026quot;\u0026gt;applyEntryNormal\u0026amp;lt;/span\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet__params\u0026quot;\u0026gt;(e *raftpb.Entry)\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt; {\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; shouldApplyV3 := \u0026amp;lt;span class=\u0026quot;code-snippet__literal\u0026quot;\u0026gt;false\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__keyword\u0026quot;\u0026gt;if\u0026amp;lt;/span\u0026gt; e.Index \u0026gt; s.consistIndex.ConsistentIndex() {\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;// set the consistent index of current executing entry\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; s.consistIndex.setConsistentIndex(e.Index)\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; shouldApplyV3 = \u0026amp;lt;span class=\u0026quot;code-snippet__literal\u0026quot;\u0026gt;true\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; }\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;// ...\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;// do not re-apply applied entries.\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__keyword\u0026quot;\u0026gt;if\u0026amp;lt;/span\u0026gt; !shouldApplyV3 {\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__keyword\u0026quot;\u0026gt;return\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; }\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt; \u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;// ...\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;}\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/section\u0026gt; 也就是说，由于 consistentIndex 的减小，etcd 本身依赖它的幂等操作将变得不再幂等，导致权限相关的操作在 etcd 重启后被重复 apply 了，即一共apply 了两次！ 问题原理分析 为何 consistentIndex 会减小？走读了 consistentIndex 相关代码后，我们终于发现了问题的根因：consistentIndex 本身的持久化，依赖于 mvcc 的写数据操作；通过 mvcc 写入数据时，会调用 saveIndex 来持久化 consistentIndex 到 backend，而 auth 相关的操作，是直接读写的 backend，并没有经过 mvcc。这就导致，如果做了权限相关的写操作，并且之后没有通过 mvcc 写入数据，那么这期间 consistentIndex 将不会被持久化，如果这时候重启了 etcd，就会造成权限相关的写操作被 apply 两次，带来的副作用可能会导致 AuthRevision 重复增加，从而直接造成不同节点的 AuthRevision 不一致，而 AuthRevision 不一致又会造成数据不一致。 \u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span class=\"code-snippet__function\"\u003e\u0026lt;span class=\"code-snippet__keyword\"\u003efunc\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__title\"\u003eputUser\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet__params\"\u003e(lg *zap.Logger, tx backend.BatchTx, user *authpb.User)\u0026lt;/span\u003e\u0026lt;/span\u003e {\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e b, err := user.Marshal()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tx.UnsafePut(authUsersBucketName, user.Name, b) \u0026lt;span class=\"code-snippet__comment\"\u003e// 直接写入Backend，未经过MVCC，此时不会持久化consistentIndex\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e}\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e\u0026lt;span class=\"code-snippet__function\"\u003e\u0026lt;span class=\"code-snippet__keyword\"\u003efunc\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__params\"\u003e(tw *storeTxnWrite)\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__title\"\u003eEnd\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet__params\"\u003e()\u0026lt;/span\u003e\u0026lt;/span\u003e {\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__comment\"\u003e// only update index if the txn modifies the mvcc state.\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__keyword\"\u003eif\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__built_in\"\u003elen\u0026lt;/span\u003e(tw.changes) != \u0026lt;span class=\"code-snippet__number\"\u003e0\u0026lt;/span\u003e {\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tw.s.saveIndex(tw.tx) \u0026lt;span class=\"code-snippet__comment\"\u003e// 当通过MVCC写数据时，会触发consistentIndex持久化\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tw.s.revMu.Lock()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tw.s.currentRev++\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e }\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tw.tx.Unlock()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e \u0026lt;span class=\"code-snippet__keyword\"\u003eif\u0026lt;/span\u003e \u0026lt;span class=\"code-snippet__built_in\"\u003elen\u0026lt;/span\u003e(tw.changes) != \u0026lt;span class=\"code-snippet__number\"\u003e0\u0026lt;/span\u003e {\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tw.s.revMu.Unlock()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e }\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e tw.s.mu.RUnlock()\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e}\u0026lt;/span\u003e 再回过头来，为什么数据不一致了还可以读出来，而且读出来的数据还可能不一样？etcd 不是使用了 raft 算法吗，难道不能够保证强一致性吗？其实这和 etcd 本身的读操作实现有关。 上边我们已经讲过，etcd 为了提升读数据的性能，使用了 ReadIndex 操作来实现从当前节点读取数据，而不是每次都从 leader 读。 而影响 ReadIndex 操作的，一个是 leader 节点的 CommittedIndex，一个是当前节点的 AppliedIndex，etcd 在 apply 过程中，无论 apply 是否成功，都会更新 AppliedIndex，这就造成，虽然当前节点 apply 失败了，但读操作在判断的时候，并不会感知到这个失败，从而导致某些节点可能读不出来数据；而且 etcd 支持多版本并发控制，同一个 key 可以存在多个版本的数据，apply 失败可能只是更新某个版本的数据失败，这就造成不同节点之间最新的数据版本不一致，导致读出不一样的数据。 影响范围 该问题从 2016 年引入，所有开启鉴权的 etcd3 集群都会受到影响，在特定场景下，会导致 etcd 集群多个节点之间的数据不一致，并且 etcd 对外表现还可以正常读写，日志无明显报错。 触发条件 使用的为 etcd3 集群，并且开启了鉴权。\netcd 集群中节点发生重启。\n节点重启之前，有 grant-permission 操作(或短时间内对同一个权限操作连续多次增删)，且操作之后重启之前无其他数据写入。\n通过非重启节点向集群发起写数据请求。\n修复方案 \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;了解了问题的根因，修复方案就比较明确了，我们只需要在 auth 操作调用 commitRevision 后，触发 consistentIndex 的持久化操作，就能够保证 etcd 在重启的时候 consistentIndex 的本身的正确性，从而保证 auth 操作的幂等性。具体的修复方式我们已经向 etcd 社区提交了 \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;text-decoration: underline;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;text-decoration: underline;font-size: 14px;color: rgb(0, 82, 255);\u0026quot;\u0026gt;PR #11652\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;，\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;目前这个特性已经 backport 到 3.4，3.3 等版本，将会在最近一个 release 更新。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;那么如果数据已经不一致了怎么办，有办法恢复吗？在 etcd 进程没有频繁重启的情况下，可以先找到 authRevision 最小的节点，它的数据应该是最全的，然后利用 etcd 的 move-leader 命令，将 leader 转移到这个节点，再依次将其他节点移出集群，备份并删除数据目录，然后将节点重新加进来，此时它会从 leader 同步一份最新的数据，这样就可以使集群其他节点的数据都和 leader 保持一致，即最大可能地不丢数据。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt; \u0026lt;/h2\u0026gt;\u0026lt;section data-style-type=\u0026quot;5\u0026quot; data-tools=\u0026quot;新媒体排版\u0026quot; data-id=\u0026quot;2700487\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;position: static\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;color: rgb(15, 64, 249);\u0026quot; data-css=\u0026quot;color:#f05454\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;升级建议\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;margin-bottom: 20px;\u0026quot;\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;需要注意的是，升级有风险，新版本虽然解决了这个问题，但由于升级过程中需要重启 etcd，这个重启过程仍可能触发这个 bug。因此升级修复版本前建议停止写权限相关操作，并且手动触发一次写数据操作之后再重启节点，避免因为升级造成问题。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;另外，不建议直接跨大版本升级，\u0026lt;span style=\u0026quot;color: rgb(0, 0, 0);font-size: 14px;\u0026quot;\u0026gt;例如从 etcd3.2 → etcd3.3。\u0026lt;/span\u0026gt;大版本升级有一定的风险，需谨慎测试评估，我们之前发现过由 lease 和 auth 引起的另一个不一致问题，具体可见 \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;text-decoration: underline;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;text-decoration: underline;font-size: 14px;color: rgb(0, 82, 255);\u0026quot;\u0026gt;issue \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;text-decoration: underline;font-size: 14px;color: rgb(0, 82, 255);\u0026quot;\u0026gt;#11689\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;，以及相关 \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;text-decoration: underline;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;text-decoration: underline;font-size: 14px;color: rgb(0, 82, 255);\u0026quot;\u0026gt;PR \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;text-decoration: underline;font-size: 14px;color: rgb(0, 82, 255);\u0026quot;\u0026gt;#11691\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt; \u0026lt;/h2\u0026gt;\u0026lt;section data-style-type=\u0026quot;5\u0026quot; data-tools=\u0026quot;新媒体排版\u0026quot; data-id=\u0026quot;2700487\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;position: static\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;color: rgb(15, 64, 249);\u0026quot; data-css=\u0026quot;color:#f05454\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;问题总结\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;margin-bottom: 20px;\u0026quot;\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;导致该问题的直接原因，是由于 consistentIndex 在进行权限相关操作时未持久化，从而导致 auth 相关的操作不幂等，造成了数据的不一致。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;而造成 auth 模块未持久化 consistentIndex 的一个因素，是因为 consistentIndex 目前是在 mvcc 模块实现的，并未对外暴露持久化接口，只能通过间接的方式来调用，很容易漏掉。为了优化这个问题，我们重构了 consistentIndex 相关操作，将它独立为一个单独的模块，其他依赖它的模块可以直接调用，一定程度上可以避免将来再出现类似问题，具体见 \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: rgb(0, 82, 255);text-decoration: underline;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;PR #11699\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-size: 16px;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;另一方面，etcd 的 apply 操作本身是个异步流程，而且失败之后没有打印任何错误日志，很大程度上增加了排障的难度，因此我们后边也向社区提交了相关 \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: rgb(0, 82, 255);text-decoration: underline;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;PR #11670\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;，\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;来优化 apply 失败时的日志打印，便于定位问题。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color: black;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;padding-left: 0em;padding-right: 0em;letter-spacing: 0px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;color: black;\u0026quot;\u0026gt;造成问题定位困难的另一个原因，是 auth revision 目前没有对外暴露 metric 或者 api，每次查询只能通过 etcd-dump-db 工具来直接从 db 获取，为方便 debug，我们也增加了相关的\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;padding-left: 0em;padding-right: 0em;letter-spacing: 0px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: rgb(0, 82, 255);text-decoration: underline;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: rgb(0, 82, 255);text-decoration: underline;font-size: 14px;\u0026quot;\u0026gt;metric\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt; 和 \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;color: rgb(0, 82, 255);text-decoration: underline;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;status api\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;，\u0026lt;span style=\u0026quot;color: rgb(0, 0, 0);font-size: 14px;\u0026quot;\u0026gt;增强了 auth revision 的可观测性和可测试性。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;padding-left: 0em;padding-right: 0em;letter-spacing: 0px;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: rgb(0, 0, 0);font-size: 14px;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section data-style-type=\u0026quot;5\u0026quot; data-tools=\u0026quot;新媒体排版\u0026quot; data-id=\u0026quot;2700487\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;border-color: initial;border-style: none;border-width: 0px;\u0026quot; data-css=\u0026quot;border-color: initial;border-style: none;border-width: 0px;position: static\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;color: rgb(15, 64, 249);\u0026quot; data-css=\u0026quot;color:#f05454\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;相关 PR/issue 查看地址\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;white-space: normal;margin-bottom: 20px;\u0026quot;\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section class=\u0026quot;code-snippet__fix code-snippet__js\u0026quot;\u0026gt; \u0026lt;ul class=\u0026quot;code-snippet__line-index code-snippet__js\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;pre class=\u0026quot;code-snippet__js\u0026quot; data-lang=\u0026quot;javascript\u0026quot;\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;PR #\u0026amp;lt;span class=\u0026quot;code-snippet__number\u0026quot;\u0026gt;11652\u0026amp;lt;/span\u0026gt; ：https:\u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;//github.com/etcd-io/etcd/pull/11652\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;issue #\u0026amp;lt;span class=\u0026quot;code-snippet__number\u0026quot;\u0026gt;11689\u0026amp;lt;/span\u0026gt;：https:\u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;//github.com/etcd-io/etcd/issues/11689\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;PR #\u0026amp;lt;span class=\u0026quot;code-snippet__number\u0026quot;\u0026gt;11691\u0026amp;lt;/span\u0026gt;：https:\u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;//github.com/etcd-io/etcd/pull/11691\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;PR #\u0026amp;lt;span class=\u0026quot;code-snippet__number\u0026quot;\u0026gt;11699\u0026amp;lt;/span\u0026gt; ：https:\u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;//github.com/etcd-io/etcd/pull/11699\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;PR #\u0026amp;lt;span class=\u0026quot;code-snippet__number\u0026quot;\u0026gt;11670\u0026amp;lt;/span\u0026gt; ：https:\u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;//github.com/etcd-io/etcd/pull/11670\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;metric ：https:\u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;//github.com/etcd-io/etcd/pull/11652/commits/f14d2a087f7b0fd6f7980b95b5e0b945109c95f3\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span class=\u0026quot;code-snippet_outer\u0026quot;\u0026gt;status api ：https:\u0026amp;lt;span class=\u0026quot;code-snippet__comment\u0026quot;\u0026gt;//github.com/etcd-io/etcd/pull/11659\u0026amp;lt;/span\u0026gt;\u0026amp;lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/section\u0026gt; 参考资料 \u0026lt;span class=\"code-snippet_outer\"\u003eetcd 源码：https:\u0026lt;span class=\"code-snippet__comment\"\u003e//github.com/etcd-io/etcd\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003eetcd 存储实现：https:\u0026lt;span class=\"code-snippet__comment\"\u003e//www.codedump.info/post/20181125-etcd-server/\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003e高可用分布存储 etcd 的实现原理：https:\u0026lt;span class=\"code-snippet__comment\"\u003e//draveness.me/etcd-introduction/\u0026lt;/span\u003e\u0026lt;/span\u003e\u0026lt;span class=\"code-snippet_outer\"\u003eetcd raft 设计与实现：https:\u0026lt;span class=\"code-snippet__comment\"\u003e//zhuanlan.zhihu.com/p/51063866,https://zhuanlan.zhihu.com/p/51065416\u0026lt;/span\u003e\u0026lt;/span\u003e \u003c section data-style-type=\"5\" data-tools=\"新媒体排版\" data-id=\"2700487\"\u003e \u003c section style=\"border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px;\" data-css=\"border-color: initial;border-style: none;border-width: 0px;margin-top: 20px;padding: 0px\"\u003e 致谢 ","date":"2020年44月27日","externalUrl":null,"permalink":"/2368.html","section":"Posts","summary":"","title":"三年之久的 etcd3 数据不一致 bug 分析","type":"post"},{"content":" 2020年4月14日，Exploit DB公布了一个针对Edimax WiFi桥接器的远程执行漏洞的利用(EDB-ID：48318)，绿盟科技格物实验室结合绿盟威胁情报中心（NTI）对相应设备的暴露情况进行验证，发现2020年年初至今，Edimax WiFi桥接器暴露数量达到6000台以上。 绿盟威胁情报中心（NTI）已支持对该事件的在线检测（https://nti.nsfocus.com），同时使用绿盟威胁情报赋能的产品也均已支持对该事件的精确检测。 事件脆弱性分析 绿盟科技格物实验室发现除了2020年4月14日由Exploit DB公布的RCE之外，Exploit DB中还存在8个Edimax的漏洞利用。 事件互联网暴露情况 绿盟科技格物实验室发现2020年年初至今，互联网中暴露的无需认证的Edimax WiFi桥接器共665个，暴露但需要认证的Edimax WiFi桥接器共5580个。 事件威胁分析 绿盟科技格物实验室发现，在对漏洞利用增加交互的当天（2020年4月18日），便捕获到了利用匿名DNS Log平台对该漏洞的探测行为。次日（2020年4月19日）便捕获到利用该漏洞投递样本的行为。整个事件的流程为： 【4月14日】漏洞利用公布。 【4月18日】紧急在威胁捕获系统中增加了针对该漏洞的交互。 【4月18日】绿盟科技格物实验室捕获到针对该漏洞的探测行为，值得注意的是，此次捕获到的探测行为不同于往常，其尝试请求dnslog.cn，通过查询dns记录的方式确认设备是否具备脆弱性。 【4月19日】绿盟科技格物实验室捕获到利用该漏洞投递样本的行为。 【4月21日】利用该漏洞投递样本的行为出现了爆发的现象。 该事件在NTI的查询详情如下： 涉及到该事件的C\u0026C服务器的详情如下： 此外，通过绿盟威胁情报中心威胁知识图谱发现，针对Edimax WiFi桥接器漏洞投递的部分样本为Gafgyt家族的变种（如下图所示）。说明部分蠕虫家族已经更新其漏洞库，对这些设备发动攻击。 IOC持续更新中，完整IOC列表可在绿盟威胁情报中心（https://nti.nsfocus.com）获取。 绿盟威胁情报中心 绿盟威胁情报中心（NSFOCUS Threat Intelligence center, NTI）依托公司专业的安全团队和强大的安全研究能力，对全球网络安全威胁和态势进行持续观察和分析，以威胁情报的生产、运营、应用等能力及关键技术作为核心研究内容，推出了绿盟威胁情报平台以及一系列集成威胁情报的新一代安全产品，为用户提供可操作的情报数据、专业的情报服务和高效的威胁防护能力，帮助用户更好地了解和应对各类网络威胁。 绿盟科技格物实验室 \u0026lt;p style=\u0026quot;max-width: 100%;box-sizing: border-box;min-height: 1em;overflow-wrap: break-word !important;\u0026quot;\u0026gt; 绿盟科技格物实验室专注于工业互联网、物联网和车联网三大业务场景的安全研究。致力于以场景为导向，智能设备为中心的漏洞挖掘、研究与安全分析，关注物联网资产、漏洞、威胁分析。目前已发布多篇研究报告，包括《物联网安全白皮书》、《物联网安全年报2017》、《物联网安全年报2018》、《物联网安全年报2019》、《国内物联网资产的暴露情况分析》、《智能设备安全分析手册》等。与产品团队联合推出绿盟物联网安全风控平台，定位运营商行业物联网卡的风险管控；推出固件安全检测平台，以便快速发现设备中可能存在的漏洞，以避免因弱口令、溢出等漏洞引起设备控制权限的泄露。 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section powered-by=\u0026quot;xiumi.us\u0026quot; style=\u0026quot;margin-top: 10px;margin-bottom: 10px;max-width: 100%;box-sizing: border-box;text-align: center;overflow-wrap: break-word !important;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;padding-right: 1em;padding-left: 1em;max-width: 100%;box-sizing: border-box;display: inline-block;overflow-wrap: break-word !important;\u0026quot;\u0026gt; \u0026lt;span title=\u0026quot;\u0026quot; opera-tn-ra-cell=\u0026quot;_$.pages:0.layers:0.comps:19.title1\u0026quot; style=\u0026quot;padding: 0.3em 0.5em;max-width: 100%;box-sizing: border-box;display: inline-block;border-radius: 0.5em;background-color: rgb(111, 186, 44);font-size: 14px;color: rgb(255, 255, 255);overflow-wrap: break-word !important;\u0026quot;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;max-width: 100%;box-sizing: border-box;min-height: 1em;overflow-wrap: break-word !important;\u0026quot;\u0026gt; 绿盟科技伏影实验室 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;margin-top: -1em;padding: 20px 10px 10px;max-width: 100%;box-sizing: border-box;border-width: 1px;border-style: solid;border-color: rgba(62, 62, 62, 0.17);background-color: rgb(244, 244, 244);overflow-wrap: break-word !important;\u0026quot;\u0026gt; \u0026lt;section powered-by=\u0026quot;xiumi.us\u0026quot; style=\u0026quot;max-width: 100%;box-sizing: border-box;text-align: justify;font-size: 13px;overflow-wrap: break-word !important;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;max-width: 100%;box-sizing: border-box;min-height: 1em;overflow-wrap: break-word !important;\u0026quot;\u0026gt; 绿盟科技伏影实验室专注于安全威胁与监测技术研究。研究目标包括僵尸网络威胁，DDoS对抗，WEB对抗，流行服务系统脆弱利用威胁、身份认证威胁，数字资产威胁，黑色产业威胁及新兴威胁。通过掌控现网威胁来识别风险，缓解威胁伤害，为威胁对抗提供决策支撑。 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; ","date":"2020年44月27日","externalUrl":null,"permalink":"/2345.html","section":"Posts","summary":"","title":"【威胁通告】攻击者利用漏洞攻击Edimax WiFi桥接器","type":"post"},{"content":"记录一下ORACLE 10gR2的软件下载地址，备用。\n复制下载链接到迅雷下载，那样不用登陆 # 下载OTN上的这些软件，你需要一个OTN免费帐号，不过如果通过迅雷进行下载，就不用登陆OTN了：\nOracle Database 10g Release 2 (10.2.0.1.0) Enterprise/Standard Edition for Microsoft Windows (32-bit)\nhttp://download.oracle.com/otn/nt/oracle10g/10201/10201_database_win32.zip\nhttp://download.oracle.com/otn/nt/oracle10g/10201/10201_client_win32.zip\nhttp://download.oracle.com/otn/nt/oracle10g/10201/10201_clusterware_win32.zip\nhttp://download.oracle.com/otn/nt/oracle10g/10201/10201_gateways_win32.zip\nOracle Database 10g Release 2 (10.2.0.1.0) Enterprise/Standard Edition for Microsoft Windows (x64)\nhttp://download.oracle.com/otn/nt/oracle10g/10201/102010_win64_x64_database.zip\nhttp://download.oracle.com/otn/nt/oracle10g/10201/102010_win64_x64_client.zip\nhttp://download.oracle.com/otn/nt/oracle10g/10201/102010_win64_x64_clusterware.zip\nOracle Database 10g Release 2 (10.2.0.1.0) Enterprise/Standard Edition for Linux x86\nhttp://download.oracle.com/otn/linux/oracle10g/10201/10201_database_linux32.zip\nhttp://download.oracle.com/otn/linux/oracle10g/10201/10201_client_linux32.zip\nhttp://download.oracle.com/otn/linux/oracle10g/10201/10201_gateways_linux32.zip\nOracle Database 10g Release 2 (10.2.0.1.0) Enterprise/Standard Edition for Linux x86-64\nhttp://download.oracle.com/otn/linux/oracle10g/10201/10201_database_linux_x86_64.cpio.gz\nhttp://download.oracle.com/otn/linux/oracle10g/10201/10201_client_linux_x86_64.cpio.gz\nhttp://download.oracle.com/otn/linux/oracle10g/10201/10201_clusterware_linux_x86_64.cpio.gz\nhttp://download.oracle.com/otn/linux/oracle10g/10201/10201_gateways_linux_x86_64.cpio.gz\nOracle Database 10g Release 2 (10.2.0.1.0) Enterprise/Standard Edition for AIX5L\nhttp://download.oracle.com/otn/aix/oracle10g/10201/10gr2_aix5l64_database.cpio.gz\nhttp://download.oracle.com/otn/aix/oracle10g/10201/10gr2_aix5l64_client.cpio.gz\nhttp://download.oracle.com/otn/aix/oracle10g/10201/10gr2_aix5l64_cluster.cpio.gz\nhttp://download.oracle.com/otn/aix/oracle10g/10201/10gr2_aix5l64_gateways.cpio.gz\nOracle Database 10g Release 2 (10.2.0.2) Enterprise/Standard Edition for Solaris Operating System (x86)\nhttp://download.oracle.com/otn/solaris/oracle10g/10202/10202_database_solx86.zip\nhttp://download.oracle.com/otn/solaris/oracle10g/10202/10202_client_solx86.zip\nhttp://download.oracle.com/otn/solaris/oracle10g/10202/10202_clusterware_solx86.zip\nOracle Database 10g Release 2 (10.2.0.1.0) Enterprise/Standard Edition for Solaris Operating System (x86-64)\nhttp://download.oracle.com/otn/solaris/oracle10g/10201/x8664/10201_database_solx86_64.zip\nhttp://download.oracle.com/otn/solaris/oracle10g/10201/x8664/10201_client_solx86_64.zip\nhttp://download.oracle.com/otn/solaris/oracle10g/10201/x8664/10201_clusterware_solx86_64.zip\n收藏备忘！\n","date":"2020年44月27日","externalUrl":null,"permalink":"/2339.html","section":"Posts","summary":"","title":"Oracle数据库下载链接","type":"post"},{"content":"","date":"2020年44月27日","externalUrl":null,"permalink":"/tags/oracle/","section":"标签","summary":"","title":"Oracle","type":"tags"},{"content":"这几天遇到个oracle数据库需要导出导导入的问题；记录一下步骤\nwindows下导出脚本，也可以做备份脚本：\n@echo off exp mpuser/mp@ldwbmp full=y file=d:\\backup\\ldwb_%date:~0,4%%date:~5,2%%date:~8,2%.dmp pause 导入步骤记录： # 一开始没有注意导入数据库数据时数据库的字符集问题，导致问题一堆\n查看数据库字符集：\nselect userenv(\u0026#039;language\u0026#039;) from dual; 客户端字符集： # select * from nls_instance_parameters; 会话字符集（v$nls_parameters） # select * from nls_session_parameters; 数据导入 # 需要先建立表空间及授权用户\n我这里备份有建表sql语句所以只执行sql就ok了\n执行sql语句： # 登录数据库：\nsqlplus system/密码\n登录数据库后输入：\n@sql脚本绝对路径即可执行\nimp aichannel/aichannel@HUST full=y file= d:\\data\\newsmgnt.dmp ignore=y imp 用户名/密码@库名 full=y file=dmp绝对路径 ignore=y\n","date":"2020年44月27日","externalUrl":null,"permalink":"/2330.html","section":"Posts","summary":"","title":"Oracle数据导入导出","type":"post"},{"content":"","date":"2020年44月27日","externalUrl":null,"permalink":"/tags/%E7%94%B2%E9%AA%A8%E6%96%87/","section":"标签","summary":"","title":"甲骨文","type":"tags"},{"content":"之前使用了各种编辑器都不尽人意，今天发现一款，非常喜欢，。推荐给大家\nWP Githuber MD简介 # WP Githuber MD是一款多功能的WordPress Markdown编辑器插件，它提供了多种功能，例如Markdown编辑器、实时预览、拼写检查、图像粘贴、HTML到Markdown帮助器等。\nWP Githuber MD 兼容经典编辑器和Gutenberg编辑器，可以为单个文章启用/禁用Markdown，支持自定义文章类型，支持代码语法高亮、流程图、甘特图、KaTex、数学公式渲染、 顺序图等等。\nWP Githuber MD 是中国台湾开发者开发的，所以自带简体和繁体中文。\nWP Githuber MD 的运行机制 # WP Githuber MD会将您的Markdown内容保存到 wp_posts.post_content_filtered\n将Markdown解析为HTML，将解析后的HTML内容保存到 wp_posts.post_content\n该插件将检测您的Markdown内容并决定要加载哪些脚本，以避免加载不必要的脚本。例如，如果启用了代码语法高亮，则必须再次更新您的文章才能生效\n安装方式 # 后台搜索WP Githuber MD下载安装后启用就行\n点击前往编辑器{.wp-editor-md-post-content-link}\n","date":"2020年44月26日","externalUrl":null,"permalink":"/2316.html","section":"Posts","summary":"","title":"Wordpress强烈推荐的编辑器","type":"post"},{"content":"","date":"2020年44月26日","externalUrl":null,"permalink":"/categories/%E5%85%B3%E4%BA%8E%E5%8D%9A%E4%B8%BB/","section":"Categories","summary":"","title":"关于博主","type":"categories"},{"content":"前提条件：\n您的Tomcat服务器上已经开启了443端口（HTTPS服务的默认端口）。 已安装OpenSSL工具。 已下载Tomcat服务器所需要的证书文件 已登录您的Tomcat服务器。\n说明：\nTomcat 9强制要求证书别名设置为tomcat。您需要使用以下keytool命令将protocol=\u0026ldquo;HTTP/1.1\u0026quot;转换成protocol=\u0026ldquo;org.apache.coyote.http11.Http11NioProtocol\u0026rdquo;\nkeytool -changealias -keystore domain name.pfx -alias alias -destalias tomcat 证书文件名称为domain name.pfx，\n证书密码文件名称为pfx-password.txt。\n操作步骤：\n1.解压已下载保存到本地的Tomcat证书文件并且上传到服务器\n2.在Tomcat安装目录下新建cert目录，将解压的证书和密码文件拷贝到cert目录下。\n3.修改配置文件server.xml，并保存。\n文件路径：Tomcat安装目录/conf/server.xml\n去掉以下内容的注释\n\u0026lt;Connector port=\"8443\" protocol=\"HTTP/1.1\" port=\"8443\" SSLEnabled=\"true\" maxThreads=\"150\" scheme=\"https\" secure=\"true\" clientAuth=\"false\" sslProtocol=\"TLS\" /\u0026gt; 参照以下内容修改\u0026lt;Connector port=\u0026ldquo;443\u0026quot;标签内容\n\u0026lt;Connector port=\"443\" #port属性根据实际情况修改（https默认端口为443）。如果使用其他端口号，则您需要使用https://yourdomain:port的方式来访问您的网站。 protocol=\"HTTP/1.1\" SSLEnabled=\"true\" scheme=\"https\" secure=\"true\" keystoreFile=\"Tomcat安装目录/cert/domain name.pfx\" #证书名称前需加上证书的绝对路径，请使用您证书的文件名替换domain name。 keystoreType=\"PKCS12\" keystorePass=\"证书密码\" #请替换为密码文件pfx-password.txt中的内容。 clientAuth=\"false\" SSLProtocol=\"TLSv1+TLSv1.1+TLSv1.2\" ciphers=\"TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256\"/\u0026gt; 4.配置web.xml文件，开启HTTP强制跳转HTTPS\n在文件后添加以下内容：\n\u0026lt;login-config\u0026gt; \u0026lt;!-- Authorization setting for SSL --\u0026gt; \u0026lt;auth-method\u0026gt;CLIENT-CERT\u0026lt;/auth-method\u0026gt; \u0026lt;realm-name\u0026gt;Client Cert Users-only Area\u0026lt;/realm-name\u0026gt; \u0026lt;/login-config\u0026gt; \u0026lt;security-constraint\u0026gt; \u0026lt;!-- Authorization setting for SSL --\u0026gt; \u0026lt;web-resource-collection \u0026gt; \u0026lt;web-resource-name \u0026gt;SSL\u0026lt;/web-resource-name\u0026gt; \u0026lt;url-pattern\u0026gt;/*\u0026lt;/url-pattern\u0026gt; \u0026lt;/web-resource-collection\u0026gt; \u0026lt;user-data-constraint\u0026gt; \u0026lt;transport-guarantee\u0026gt;CONFIDENTIAL\u0026lt;/transport-guarantee\u0026gt; \u0026lt;/user-data-constraint\u0026gt; \u0026lt;/security-constraint\u0026gt; 5.重启Tomcat。\n访问https://您的域名\n如果网页地址栏出现绿色小锁标志，表示证书安装成功。\n验证证书是否安装成功时，如果网站无法通过https正常访问，需确认您安装证书的服务器443端口是否已开启或被其他工具拦截。\n","date":"2020年44月26日","externalUrl":null,"permalink":"/2309.html","section":"Posts","summary":"","title":"Tomcat安装PFX格式证书--配置https","type":"post"},{"content":"","date":"2020年44月18日","externalUrl":null,"permalink":"/tags/linux/","section":"标签","summary":"","title":"Linux","type":"tags"},{"content":"","date":"2020年44月18日","externalUrl":null,"permalink":"/tags/vxlan/","section":"标签","summary":"","title":"Vxlan","type":"tags"},{"content":"上篇文章结尾提到 Linux 是支持 VXLAN 的，我们可以使用 Linux 搭建基于 VXLAN 的 overlay 网络，以此来加深对 VXLAN 的理解，毕竟光说不练假把式。\n1. 点对点的 VXLAN # 先来看看最简单的点对点 VXLAN 网络，点对点 VXLAN 即两台主机构建的 VXLAN 网络，每台主机上有一个 VTEP，VTEP 之间通过它们的 IP 地址进行通信。点对点 VXLAN 网络拓扑图如图所示：\n为了不影响主机的网络环境，我们可以使用 Linux VRF 来隔离 root network namespace 的路由。VRF（Virtual Routing and Forwarding）是由路由表和一组网络设备组成的路由实例，你可以理解为轻量级的 network namespace，只虚拟了三层的网络协议栈，而 network namespace 虚拟了整个网络协议栈。详情参看 Linux VRF(Virtual Routing Forwarding)的原理和实现。\nLinux Kernel 版本大于 4.3 才支持 VRF，建议做本文实验的同学先升级内核。 当然了，如果你有专门用来做实验的干净主机，可以不用 VRF 来隔离。\n下面结合 VRF 来创建一个点对点 VXLAN 网络。\n首先在 192.168.57.50 上创建 VXLAN 接口：\n$ ip link add vxlan0 type vxlan \\ id 42 \\ dstport 4789 \\ remote 192.168.57.54 \\ local 192.168.57.50 \\ dev eth0 重要参数解释：\nid 42 : 指定 VNI 的值，有效值在 1 到 $2^{24}$ 之间。 dstport : VTEP 通信的端口，IANA 分配的端口是 4789。如果不指定，Linux 默认使用 8472。 remote : 对端 VTEP 的地址。 local : 当前节点 VTEP 要使用的 IP 地址，即当前节点隧道口的 IP 地址。 dev eth0 : 当前节点用于 VTEP 通信的设备，用来获取 VTEP IP 地址。这个参数与 local 参数目的相同，二选一即可。 查看 vxlan0 的详细信息：\n$ ip -d link show vxlan0 11: vxlan0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc noqueue master vrf-test state UNKNOWN mode DEFAULT group default qlen 1000 link/ether 82:f3:76:95:ab:e1 brd ff:ff:ff:ff:ff:ff promiscuity 0 vxlan id 42 remote 192.168.57.54 local 192.168.57.50 srcport 0 0 dstport 4789 ageing 300 udpcsum noudp6zerocsumtx noudp6zerocsumrx 接下来创建一个 VRF，并将 vxlan0 绑定到该 VRF 中：\n$ ip link add vrf0 type vrf table 10 $ ip link set vrf0 up $ ip link set vxlan0 master vrf0 再次查看 vxlan0 的信息：\n$ ip -d link show vxlan0 13: vxlan0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc noqueue master vrf0 state UNKNOWN mode DEFAULT group default qlen 1000 link/ether aa:4d:80:e3:75:e0 brd ff:ff:ff:ff:ff:ff promiscuity 0 vxlan id 42 remote 192.168.57.54 local 192.168.57.50 srcport 0 0 dstport 4789 ageing 300 udpcsum noudp6zerocsumtx noudp6zerocsumrx vrf_slave table 10 addrgenmode eui64 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535 你会发现多了 VRF 的信息。\n接下来为 vxlan0 配置 IP 地址并启用它：\n$ ip addr add 172.18.1.2/24 dev vxlan0 $ ip link set vxlan0 up 执行成功后会发现 VRF 路由表项多了下面的内容，所有目的地址是 172.18.1.0/24 网络包要通过 vxlan0 转发：\n$ ip route show vrf vrf0 172.18.1.0/24 dev vxlan0 proto kernel scope link src 172.18.1.2 同时也会增加一条 FDB 转发表：\n$ bridge fdb show 00:00:00:00:00:00 dev vxlan0 dst 192.168.57.54 self permanent 这个表项的意思是，默认的 VTEP 对端地址为 192.168.57.54。换句话说，原始报文经过 vxlan0 后会被内核添加上 VXLAN 头部，而外部 UDP 头的目的 IP 地址会被冠上 192.168.57.54。\n在另一台主机（192.168.57.54）上也进行相同的配置：\n$ ip link add vxlan0 type vxlan id 42 dstport 4789 remote 192.168.57.50 $ ip link add vrf0 type vrf table 10 $ ip link set vrf0 up $ ip link set vxlan0 master vrf0 $ ip addr add 172.18.1.3/24 dev vxlan0 $ ip link set vxlan0 up 一切大功告成之后，就可以相互通信了，在 192.168.57.50 上 ping 172.18.1.3：\n$ ping 172.18.1.3 -I vrf0 同时使用 wireshark 远程抓包：\n$ ssh root@192.168.57.54 \u0026#39;tcpdump -i any -s0 -c 10 -nn -w - port 4789\u0026#39; | /Applications/Wireshark.app/Contents/MacOS/Wireshark -k -i - 具体含义我就不解释了，参考 Tcpdump 示例教程。\n可以看到 VXLAN 报文可以分为三块：\n最内层是 overlay 网络中实际通信的实体看到的报文（比如这里的 ARP 请求），它们和经典网络的通信报文没有任何区别，除了因为 MTU 导致有些报文比较小。 中间一层是 VXLAN 头部，我们最关心的字段 VNI 确实是 42。 最外层是 VTEP 所在主机的通信报文头部，目的 IP 地址为对端 192.168.57.54。 下面来分析这个最简单的模式下 vxlan 通信的过程：\n发送 ping 报文到 172.18.1.3，查看路由表，报文会从 vxlan0 发出去。\n内核发现 vxlan0 的 IP 是 172.18.1.2/24，和目的 IP 在同一个网段，所以在同一个局域网，需要知道对方的 MAC 地址，因此会发送 ARP 报文查询。\nARP 报文源 MAC 地址为 vxlan0 的 MAC 地址，目的 MAC 地址为全 1 的广播地址（ff:ff:ff:ff:ff:ff）。\nVXLAN 根据配置（VNI 42）添加上头部。\n对端的 VTEP 地址为 192.168.57.54，将报文发送到该地址。\n对端主机接收到这个报文，内核发现是 VXLAN 报文，会根据 VNI 发送给对应的 VTEP。\nVTEP 去掉 VXLAN 头部，取出真正的 ARP 请求报文，同时，VTEP 会记录源 MAC 地址和 IP 地址信息到 FDB 表中，这便是一次学习过程。然后生成 ARP 应答报文。\n$ bridge fdb show 00:00:00:00:00:00 dev vxlan0 dst 192.168.57.50 self permanent aa:4d:80:e3:75:e0 dev vxlan0 dst 192.168.57.50 self 应答报文目的 MAC 地址是发送方 VTEP 的 MAC 地址，目的 IP 是发送方 VTEP 的 IP 地址，直接发送给目的 VTEP。\n应答报文通过 underlay 网络直接返回给发送方主机，发送方主机根据 VNI 把报文转发给 VTEP，VTEP 解包取出 ARP 应答报文，添加 ARP 缓存到内核，并根据报文学习到目的 VTEP 的 IP 地址和目的 MAC 地址，添加到 FDB 表中。\n$ ip neigh show vrf vrf0 172.18.1.3 dev vxlan0 lladdr 76:06:5c:15:d9:78 STALE $ bridge fdb show 00:00:00:00:00:00 dev vxlan0 dst 192.168.57.54 self permanent fe:4a:7e:a2:b5:5d dev vxlan0 dst 192.168.57.54 self 至此 VTEP 已经知道了通信需要的所有信息，后续 ICMP 的 ping 报文都是在这条逻辑隧道中单播进行的，不再需要发送 ARP 报文查询。\n总结以上过程：一个 VXLAN 网络的 ping 报文要经历 ARP 寻址 + ICMP 响应 两个过程，一旦 VTEP 设备学习到了对方 ARP 地址，后续通信就可以免去 ARP 寻址的过程。\n2. VXLAN + Bridge # 上述的点对点 VXLAN 网络通信双方只有一个 VTEP，且只有一个通信实体，而在实际生产中，每台主机上都有几十台甚至上百台虚拟机或容器需要通信，因此需要一种机制将这些通信实体组织起来，再通过隧道口 VTEP 转发出去。\n方案其实也很常见，Linux Bridge 就可以将多块虚拟网卡连接起来，因此可以选择使用 Bridge 将多个虚拟机或容器放到同一个 VXLAN 网络中，网络拓扑图如图所示：\n和上面的模式相比，这里只是多了一个 Bridge，用来连接不同 network namespace 中的 veth pair，同时 VXLAN 网卡也需要连接到该 Bridge。\n首先在 192.168.57.50 上创建 VXLAN 接口：\n$ ip link add vxlan0 type vxlan \\ id 42 \\ dstport 4789 \\ local 192.168.57.50 \\ remote 192.168.57.54 然后创建网桥 bridge0，把 VXLAN 网卡 vxlan0 绑定到上面，然后将 bridge0 绑定到 VRF 中，并启动它们：\n$ ip link add br0 type bridge $ ip link set vxlan0 master br0 $ ip link add vrf0 type vrf table 10 $ ip link set br0 master vrf0 $ ip link set vxlan0 up $ ip link set br0 up $ ip link set vrf0 up 下面创建 network namespace 和一对 veth pair，并把 veth pair 的其中一端绑定到网桥，然后把另一端放到 network namespace 并绑定 IP 地址 172.18.1.2：\n$ ip netns add ns0 $ ip link add veth0 type veth peer name eth0 netns ns0 $ ip link set veth0 master br0 $ ip link set veth0 up $ ip -n ns0 link set lo up $ ip -n ns0 addr add 172.18.1.2/24 dev eth0 $ ip -n ns0 link set eth0 up 用同样的方法在另一台主机上配置 VXLAN 网络，绑定 172.18.1.3 到另外一个 network namespace 中的 eth0：\n$ ip link add vxlan0 type vxlan \\ id 42 \\ dstport 4789 \\ local 192.168.57.54 \\ remote 192.168.57.50 $ ip link add br0 type bridge $ ip link set vxlan0 master br0 $ ip link add vrf0 type vrf table 10 $ ip link set br0 master vrf0 $ ip link set vxlan0 up $ ip link set br0 up $ ip link set vrf0 up $ ip netns add ns0 $ ip link add veth0 type veth peer name eth0 netns ns0 $ ip link set veth0 master br0 $ ip link set veth0 up $ ip -n ns0 link set lo up $ ip -n ns0 addr add 172.18.1.3/24 dev eth0 $ ip -n ns0 link set eth0 up 从 172.18.1.2 ping 172.18.1.3 发现整个通信过程和前面的实验类似，只不过容器发出的 ARP 报文会先经过网桥，再转发给 vxlan0，然后在 vxlan0 处由 Linux 内核添加 VXLAN 头部，最后发送给对端。\n逻辑上，VXLAN 网络下不同主机上的 network namespace 中的网卡都被连接到了同一个网桥上，这样就可以在同一个主机上创建同一 VXLAN 网络下的多个容器，并相互通信了。\n3. 多播模式的 VXLAN # 上面两种模式只能点对点连接，也就是说同一个 VXLAN 网络中只能有两个节点，这怎么能忍。。。有没有办法让同一个 VXLAN 网络中容纳多个节点呢？我们先来回顾一下 VXLAN 通信的两个关键信息：\n对方虚拟机（或容器）的 MAC 地址 对方所在主机的 IP 地址（即对端 VTEP 的 IP 地址） 跨主机的容器之间首次通信时需要知道对方的 MAC 地址，因此会发送 ARP 报文查询。如果有多个节点，就要把 ARP 查询报文发送到所有节点，但传统的 ARP 报文广播是做不到的，因为 Underlay 和 Overlay 不在同一个二层网络，默认情况下 ARP 广播是逃不出主机的。要想实现 Overlay 网络的广播，必须要把报文发送到所有 VTEP 所在的节点，为了解决这个问题，大概有两种思路：\n使用多播，把网络中的某些节点组成一个虚拟的整体。 事先知道 MAC 地址和 VTEP IP 信息，直接把 ARP 和 FDB 信息告诉发送方 VTEP。一般是通过外部的分布式控制中心来收集这些信息，收集到的信息会分发给同一个 VXLAN 网络的所有节点。 我们先来看看多播是怎么实现的，分布式控制中心留到下一篇再讲。\n如果 VXLAN 要使用多播模式，需要底层的网络支持多播功能，多播地址范围为 224.0.0.0~239.255.255.255。 和上面的 点对点 VXLAN + Bridge 模式相比，这里只是将对端的参数改成 group 参数，其他不变，命令如下：\n# 在主机 192.168.57.50 上执行 $ ip link add vxlan0 type vxlan \\ id 42 \\ dstport 4789 \\ local 192.168.57.50 \\ group 224.1.1.1 $ ip link add br0 type bridge $ ip link set vxlan0 master br0 $ ip link add vrf0 type vrf table 10 $ ip link set br0 master vrf0 $ ip link set vxlan0 up $ ip link set br0 up $ ip link set vrf0 up $ ip netns add ns0 $ ip link add veth0 type veth peer name eth0 netns ns0 $ ip link set veth0 master br0 $ ip link set veth0 up $ ip -n ns0 link set lo up $ ip -n ns0 addr add 172.18.1.2/24 dev eth0 $ ip -n ns0 link set eth0 up # 在主机 192.168.57.54 上执行 $ ip link add vxlan0 type vxlan \\ id 42 \\ dstport 4789 \\ local 192.168.57.54 \\ group 224.1.1.1 $ ip link add br0 type bridge $ ip link set vxlan0 master br0 $ ip link add vrf0 type vrf table 10 $ ip link set br0 master vrf0 $ ip link set vxlan0 up $ ip link set br0 up $ ip link set vrf0 up $ ip netns add ns0 $ ip link add veth0 type veth peer name eth0 netns ns0 $ ip link set veth0 master br0 $ ip link set veth0 up $ ip -n ns0 link set lo up $ ip -n ns0 addr add 172.18.1.3/24 dev eth0 $ ip -n ns0 link set eth0 up 和上面的实验明显有区别的是 FDB 表项的内容：\n$ bridge fdb show 00:00:00:00:00:00 dev vxlan0 dst 224.1.1.1 self permanent dst 字段的值变成了多播地址 224.1.1.1，而不是之前对方的 VTEP 地址，VTEP 会通过 IGMP（Internet Group Management Protocol） 加入同一个多播组 224.1.1.1。\n我们来分析下多播模式下 VXLAN 通信的全过程：\n发送 ping 报文到 172.18.1.3，查看路由表，报文会从 vxlan0 发出去。 内核发现 vxlan0 的 IP 是 172.18.1.2/24，和目的 IP 在同一个网段，所以在同一个局域网，需要知道对方的 MAC 地址，因此会发送 ARP 报文查询。 ARP 报文源 MAC 地址为 vxlan0 的 MAC 地址，目的 MAC 地址为全 1 的广播地址（ff:ff:ff:ff:ff:ff）。 VXLAN 根据配置（VNI 42）添加上头部。 到这一步就和之前不一样了，由于不知道对端 VTEP 在哪台主机，根据多播配置，VTEP 会往多播地址 224.1.1.1 发送多播报文。 多播组中的所有主机都会收到这个报文，内核发现是 VXLAN 报文，就会根据 VNI 发送给相应的 VTEP。 收到报文的所有主机的 VTEP 会去掉 VXLAN 的头部，取出真正的 ARP 请求报文。同时，VTEP 会记录源 MAC 地址和 IP 地址信息到 FDB 表中，这便是一次学习过程。如果发现 ARP 不是发送给自己的，就直接丢弃；如果是发送给自己的，则生成 ARP 应答报文。 后面的步骤就和上面的实验相同了。 整个通信过程和之前比较类似，只是 Underlay 采用组播的方式发送报文，对于多节点的 VXLAN 网络来说比较简单高效。但多播也是有它的问题的，并不是所有网络设备都支持多播（比如公有云），再加上多播方式带来的报文浪费，在实际生成中很少被采用。下篇文章就着重介绍如何通过分布式控制中心来自动发现 VTEP 和 MAC 地址等信息。\n4. 参考资料 # linux 上实现 vxlan 网络 ","date":"2020年44月18日","externalUrl":null,"permalink":"/posts/vxlan-linux/","section":"Posts","summary":"","title":"VXLAN 基础教程：在 Linux 上配置 VXLAN 网络","type":"posts"},{"content":" 通告编号:NS-2020-0028 2020-04-16 TAG： \u0026lt;td style=\u0026quot;margin: 5px 10px; border-color: #d8d8d8; word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #000000; font-size: 14px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;Git、凭证泄露、CVE-2020-5260\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; 漏洞危害： \u0026lt;td style=\u0026quot;margin: 5px 10px; border-color: #d8d8d8; word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: #000000;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;攻击者利用此漏洞，\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;可\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: #000000;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;获取Git用户凭据。\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; 版本： \u0026lt;td style=\u0026quot;margin: 5px 10px; border-color: #d8d8d8; word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;1.0\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/td\u0026gt; 1 漏洞概述 4月15日，Git发布安全通告公布了一个导致Git用户凭证泄露的漏洞（CVE-2020-5260）。Git使用凭证助手(credential helper)来帮助用户存储和检索凭证。当URL中包含经过编码的换行符（%0a）时，可能将非预期的值注入到credential helper的协议流中。受影响版本 Git对恶意 URL 执行 git clone 命令时会触发此漏洞，攻击者可利用恶意URL欺骗Git客户端发送主机凭据。请相关用户采取措施进行防护。 参考链接： \u0026lt;p style=\u0026quot;text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%; color: black; background: none 0% 0% repeat scroll white; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;https://github.com/git/git/security/advisories/GHSA-qm7j-c969-7j4q\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em; text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;padding: 10px; color: #ffffff; margin-top: -15px; margin-right: auto; margin-left: auto; display: inline-block; border-color: #004738; border-radius: 5px; background-color: #004738; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;color: inherit;\u0026quot;\u0026gt; \u0026lt;strong style=\u0026quot;color: inherit;\u0026quot;\u0026gt;SEE MORE →\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box; border: 0px none initial;\u0026quot; data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block; box-sizing: border-box; border: 0px none initial;\u0026quot; data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify; margin-top: 8px; padding-right: 10px; font-weight: bold; line-height: 28px; max-width: 100%; color: #004738; min-height: 32px; border-bottom: 1.5px solid #004738; border-top-color: #004738; border-right-color: #004738; border-left-color: #004738;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;margin-right: 8px; padding: 4px 10px; color: #ffffff; display: block; float: left; line-height: 20px; max-width: 100%; background-color: #004738;\u0026quot; title=\u0026quot;\u0026quot; data-original-title=\u0026quot;\u0026quot;\u0026gt;2\u0026lt;/span\u0026gt;\u0026lt;strong style=\u0026quot;border-color: #004738; color: inherit;\u0026quot; data-brushtype=\u0026quot;text\u0026quot;\u0026gt;影响范围\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong style=\u0026quot;font-size: 15px; caret-color: red; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;受影响版本\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;padding-left: 30px;\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.17.x \u0026lt;= 2.17.3\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.18.x \u0026lt;= 2.18.2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.19.x \u0026lt;= 2.19.3\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.20.x \u0026lt;= 2.20.2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.21.x \u0026lt;= 2.21.1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.22.x \u0026lt;= 2.22.2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.23.x \u0026lt;= 2.23.1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.24.x \u0026lt;= 2.24.1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.25.x \u0026lt;= 2.25.2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Git 2.26.x \u0026lt;= 2.26.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 15px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;不受影响版本\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul class=\u0026quot;list-paddingleft-2\u0026quot; style=\u0026quot;padding-left: 30px;\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.17.4\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.18.3\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.19.4\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.20.3\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.21.2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.22.3\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.23.2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.24.2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.25.3\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;Git 2.26.1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 20px;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block; box-sizing: border-box; border: 0px none initial;\u0026quot; data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify; margin-top: 8px; padding-right: 10px; font-weight: bold; line-height: 28px; max-width: 100%; color: #004738; min-height: 32px; border-bottom: 1.5px solid #004738; border-top-color: #004738; border-right-color: #004738; border-left-color: #004738;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;margin-right: 8px; padding: 4px 10px; color: #ffffff; display: block; float: left; line-height: 20px; max-width: 100%; background-color: #004738;\u0026quot; title=\u0026quot;\u0026quot; data-original-title=\u0026quot;\u0026quot;\u0026gt;3\u0026lt;/span\u0026gt;漏洞检测 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;3.1 版本检测\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 125%;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;相关用户可通过版本检测的方式判断当前应用是否存在风险。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;使用如下命令可查看当前Git的版本：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;table width=\u0026quot;100%\u0026quot; cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-width: 2px; border-color: windowtext; background: none 0% 0% repeat scroll #bfbfbf; padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;git --version\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;若当前使用版本在受影响范围内，则可能存在安全风险。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;display: inline-block; box-sizing: border-box; border: 0px none initial;\u0026quot; data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify; margin-top: 8px; padding-right: 10px; font-weight: bold; line-height: 28px; max-width: 100%; color: #004738; min-height: 32px; border-bottom: 1.5px solid #004738; border-top-color: #004738; border-right-color: #004738; border-left-color: #004738;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;margin-right: 8px; padding: 4px 10px; color: #ffffff; display: block; float: left; line-height: 20px; max-width: 100%; background-color: #004738;\u0026quot; title=\u0026quot;\u0026quot; data-original-title=\u0026quot;\u0026quot;\u0026gt;4\u0026lt;/span\u0026gt;漏洞防护 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;4.1 官方升级\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;目前官方已在最新版本中修复了该漏洞，请受影响的用户尽快升级版本进行防护，官方下载链接：https://github.com/git/git/releases\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;可使用如下命令进行安装更新（以2.23.2为例）：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;table width=\u0026quot;100%\u0026quot; cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-width: 2px; border-color: windowtext; background: none 0% 0% repeat scroll #bfbfbf; padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;wget https://github.com/git/git/archive/v2.23.2.tar.gz\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;tar zxvf v2.23.2.tar.gz\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;cd git-2.23.2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;make configure\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;./configure --prefix=/usr/local/git --with-iconv=/usr/local/libiconv\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;make all doc\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;make install install-doc install-html\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;echo \u0026quot;export PATH=$PATH:/usr/local/git/bin:/usr/local/git/libexec/git-core\u0026quot; \u0026gt;\u0026gt; /etc/bashrc\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;4.2 其他防护措施\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%; background: none 0% 0% repeat scroll white;\u0026quot;\u0026gt;若相关用户暂时无法进行升级操作，也\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;可采用以下措施进行防护：\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; background: none 0% 0% repeat scroll white; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;方法一：使用以下命令禁用\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;credential helper\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;table width=\u0026quot;100%\u0026quot; cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: windowtext; background: none 0% 0% repeat scroll #bfbfbf; padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;git config --unset credential.helper\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;git config --global --unset credential.helper\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;git config --system --unset credential.helper\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;margin-bottom: 10px; text-indent: 32px; background: none 0% 0% repeat scroll white; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; background: none 0% 0% repeat scroll white; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;方法二：提高警惕避免恶意\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;URL\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%; background: none 0% 0% repeat scroll white; font-size: 14px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;1、git clone时检查URL的主机名和用户名部分是否存在编码的换行符（%0a）或凭据协议注入的证据（例如host=github.com）。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%; background: none 0% 0% repeat scroll white; font-size: 14px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;2、避免将子模块与不受信任的仓库一起使用（不要使用clone --recurse-submodules；只有在检查.gitmodules中找到url之后，才使用git submodule update）。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; text-indent: 28px; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%; background: none 0% 0% repeat scroll white; font-size: 14px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;3、请勿对不信任的URL执行git clone。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center; line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: center; font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #004738;\u0026quot;\u0026gt;\u0026lt;strong style=\u0026quot;line-height: 1.8;\u0026quot;\u0026gt;END\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center; font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 1.8;\u0026quot;\u0026gt;作者：绿盟科技威胁对抗能力部\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;box-sizing: border-box; font-family: Helvetica, Arial, sans-serif; border: 0px none initial;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block; width: 150px; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-2a48ebb68d973c69cea63e7d48ef54e1.png\u0026quot; alt=\u0026quot;【漏洞通告】Git凭证泄露漏洞（CVE-2020-5260）通告\u0026quot; /\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box; font-family: Helvetica, Arial, sans-serif; border: 0px none initial;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block; box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-145ee74f0b6a5fccc5818a48960b4c59.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】Git凭证泄露漏洞（CVE-2020-5260）通告\u0026quot; /\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box; font-family: Helvetica, Arial, sans-serif; border: 0px none initial;\u0026quot; data-color=\u0026quot;#6fba2c\u0026quot; data-custom=\u0026quot;#6fba2c\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;width: 100%; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;padding-right: 10px; padding-left: 10px; line-height: 30px; height: 30px; color: #ffffff; background-color: #6fba2c; text-align: center; box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;声明\u0026lt;/strong\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;padding: 10px; background-color: #fafafa; color: #666666; line-height: 30px; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;font-size: 14px; color: #555555; font-variant-numeric: normal; line-height: 28.8px; widows: 1; text-indent: 28px;\u0026quot;\u0026gt; 本安全公告仅用来描述可能存在的安全问题，绿盟科技不为此安全公告提供任何保证或承诺。由于传播、利用此安全公告所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，绿盟科技以及安全公告作者不为此承担任何责任。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;font-size: 14px; color: #555555; font-variant-numeric: normal; line-height: 28.8px; widows: 1; text-indent: 28px;\u0026quot;\u0026gt; 绿盟科技拥有对此安全公告的修改和解释权。如欲转载或传播此安全公告，必须保证此安全公告的完整性，包括版权声明等全部内容。未经绿盟科技允许，不得任意修改或者增减此安全公告内容，不得以任何方式将其用于商业目的。 \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;font-size: 14px; box-sizing: border-box; border: 0px none initial;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center; display: inline-block;\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-145ee74f0b6a5fccc5818a48960b4c59.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】Git凭证泄露漏洞（CVE-2020-5260）通告\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box; border: 0px none initial;\u0026quot; data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;85996\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;padding: 40px; background-color: #f4f4f4; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #030303; font-weight: 600; font-size: 24px; font-family: arial, helvetica, sans-serif;\u0026quot; data-brushtype=\u0026quot;text\u0026quot;\u0026gt;绿盟科技安全情报\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size: 40px; color: #3f3f3f;\u0026quot;\u0026gt;∣\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #030303;\u0026quot; data-brushtype=\u0026quot;text\u0026quot;\u0026gt;微信公众号\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 14px; display: inline-block; vertical-align: top; width: 50%; text-align: right; box-sizing: border-box;\u0026quot; data-width=\u0026quot;50%\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-5f91c74212bb9c8191aa6a3cc529e729.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】Git凭证泄露漏洞（CVE-2020-5260）通告\u0026quot; /\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;padding-left: 10px; display: inline-block; width: 50%; text-align: left; box-sizing: border-box;\u0026quot; data-width=\u0026quot;50%\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-731e3a7317eae184eeee6fe7ce8b0ccd.png\u0026quot; alt=\u0026quot;【漏洞通告】Git凭证泄露漏洞（CVE-2020-5260）通告\u0026quot; /\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 6px; box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: #0c0c0c;\u0026quot; data-brushtype=\u0026quot;text\u0026quot;\u0026gt;长按识别二维码，关注网络安全威胁信息\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; ","date":"2020年44月16日","externalUrl":null,"permalink":"/2292.html","section":"Posts","summary":"","title":"【漏洞通告】Git凭证泄露漏洞（CVE-2020-5260）通告","type":"post"},{"content":" 通告编号:NS-2020-0027 2020-04-15 TAG： \u0026lt;td style=\u0026quot;margin: 5px 10px;border-color: rgb(216, 216, 216);word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.5em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;微软、安全更新\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;、CVE-2020-0938、CVE-2020-1020、CVE-2020-1027、CVE-2020-0968\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; 漏洞危害： \u0026lt;td style=\u0026quot;margin: 5px 10px;border-color: rgb(216, 216, 216);word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: rgb(0, 0, 0);font-family: 微软雅黑, \u0026amp;quot;Microsoft YaHei\u0026amp;quot;;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;color: red;\u0026quot;\u0026gt;攻击者利用本次安全更新中的漏洞，\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;color: red;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;可造成信息泄露、特权提升、远程代码执行等\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; 版本： \u0026lt;td style=\u0026quot;margin: 5px 10px;border-color: rgb(216, 216, 216);word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;1.0\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/td\u0026gt; 1 漏洞概述 4月15日，微软发布4月安全补丁更新，修复了113个从简单的欺骗攻击到远程执行代码的安全问题，涉及Windows、Office、Internet Explorer、Edge、Windows Defender、Visual Studio等多个产品，其中包括3个已被在野利用的0-day漏洞。这三个漏洞分布在 Windows Adobe Type Manager Library 和Windows 内核中。 3月24日，微软发布编号为的ADV200006安全通告指出Adobe Type Manager Library在处理multi-master字体（Adobe Type 1 PostScript格式）时存在缺陷，攻击者可以精心构造恶意文档并诱使用户使用Windows Preview pane预览，从而利用该漏洞来远程执行代码。微软在三月的通告提供了相应的缓解措施，在本次月度更新中提供了修复补丁。 请相关用户及时更新补丁进行防护，详细漏洞列表请参考附录。 参考链接： \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;background: none 0% 0% repeat scroll white;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;color: black;\u0026quot;\u0026gt;https://portal.msrc.microsoft.com/en-us/security-guidance/releasenotedetail/2020-Apr\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 1.75em;text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;padding: 10px;color: #ffffff;margin-top: -15px;margin-right: auto;margin-left: auto;display: inline-block;border-color: #004738;border-radius: 5px;background-color: #004738;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;color: inherit;\u0026quot;\u0026gt; \u0026lt;strong style=\u0026quot;color:inherit;\u0026quot;\u0026gt;SEE MORE →\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot; style=\u0026quot;display: inline-block;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;margin-top: 8px;padding-right: 10px;font-weight: bold;line-height: 28px;max-width: 100%;color: rgb(0, 71, 56);min-height: 32px;border-bottom: 1.5px solid rgb(0, 71, 56);border-top-color: rgb(0, 71, 56);border-right-color: rgb(0, 71, 56);border-left-color: rgb(0, 71, 56);\u0026quot;\u0026gt; \u0026lt;span data-original-title=\u0026quot;\u0026quot; placeholder=\u0026quot;1\u0026quot; title=\u0026quot;\u0026quot; style=\u0026quot;margin-right: 8px;padding: 4px 10px;color: rgb(255, 255, 255);display: block;float: left;line-height: 20px;max-width: 100%;background-color: rgb(0, 71, 56);\u0026quot;\u0026gt;2\u0026lt;/span\u0026gt;\u0026lt;strong data-brushtype=\u0026quot;text\u0026quot; style=\u0026quot;border-color: rgb(0, 71, 56);color: inherit;\u0026quot;\u0026gt;重点漏洞简述\u0026lt;br /\u0026gt; \u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;color: black;background: none 0% 0% repeat scroll white;\u0026quot;\u0026gt;本月微软月度更新修复的漏洞中，严重程度为关键（Critical）的漏洞共有 17个，重要（Important）漏洞有 96个。\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;以下为此次更新中影响较大的漏洞，请相关用户着重进行关注：\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-kerning: auto;font-feature-settings: normal;font-variation-settings: normal;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1020、CVE-2020-0938：Adobe Font Manager库远程执行代码漏洞\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;这是两个影响Windows Adobe Type Manager Library 的远程代码执行漏洞，微软曾在三月下旬发布通告提供了相应的缓解措施，本次月度更新中提供了补丁。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;漏洞缘于Windows Adobe Type Manager Library在处理multi-master字体（Adobe Type 1 PostScript格式）时存在缺陷。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;对于除Windows 10以外的所有系统，成功利用该漏洞的攻击者可以远程执行代码。对于运行Windows 10的系统，成功利用该漏洞的攻击者可以在AppContainer沙盒上下文中以有限的权限执行代码。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Type 1字体分析远程执行代码漏洞通告及缓解措施请参阅文章：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;https://mp.weixin.qq.com/s/7n-4VHSMyulfVAc5MNa7Jg\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;官方通告链接：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;background: none 0% 0% repeat scroll white;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1020\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;background: none 0% 0% repeat scroll white;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0938\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1027：Windows内核特权提升漏洞\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;此漏洞存在于Windows内核处理内存中对象的过程中。成功利用此漏洞的攻击者能够以提升后的权限执行代码。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;官方通告链接：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;background: none 0% 0% repeat scroll white;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;color: windowtext;\u0026quot;\u0026gt;https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1027\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 29px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0968：脚本引擎内存损坏漏洞\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;在 Internet Explorer 中，脚本引擎在处理内存中对象的过程中存在一个远程代码执行漏洞。该漏洞可破坏内存，使攻击者在当前用户的上下文中执行任意代码。成功利用此漏洞的攻击者可获得与当前用户相同的权限。如果当前用户以管理用户权限登录，成功利用该漏洞的攻击者可以完全控制受影响的系统。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;官方通告链接：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;background: none 0% 0% repeat scroll white;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0968\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 20px;\u0026quot;\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot; style=\u0026quot;display: inline-block;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;margin-top: 8px;padding-right: 10px;font-weight: bold;line-height: 28px;max-width: 100%;color: rgb(0, 71, 56);min-height: 32px;border-bottom: 1.5px solid rgb(0, 71, 56);border-top-color: rgb(0, 71, 56);border-right-color: rgb(0, 71, 56);border-left-color: rgb(0, 71, 56);\u0026quot;\u0026gt; \u0026lt;span data-original-title=\u0026quot;\u0026quot; placeholder=\u0026quot;1\u0026quot; title=\u0026quot;\u0026quot; style=\u0026quot;margin-right: 8px;padding: 4px 10px;color: rgb(255, 255, 255);display: block;float: left;line-height: 20px;max-width: 100%;background-color: rgb(0, 71, 56);\u0026quot;\u0026gt;3\u0026lt;/span\u0026gt;影响范围 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;table cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-top-width: 2px;border-left-width: 2px;border-color: windowtext;padding: 0px 7px;word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;99\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;漏洞编号\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: windowtext windowtext windowtext currentcolor;border-left-style: none;border-top-width: 2px;border-right-width: 2px;border-left-width: medium;padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;430\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;受影响产品版本\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;border-left-width: 2px;padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;23\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1020、\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0938\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-right-width: 2px;border-left-width: medium;padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;430\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1607 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1607 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 7 for 32-bit Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 7 for x64-based Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 8.1 for 32-bit systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 8.1 for x64-based systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows RT 8.1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for 32-bit Systems Service Pack 2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for 32-bit Systems Service Pack 2 (Server Core \u0026amp;nbsp; installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for Itanium-Based Systems Service Pack 2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for x64-based Systems Service Pack 2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for x64-based Systems Service Pack 2 (Server \u0026amp;nbsp; Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 R2 for Itanium-Based Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 R2 for x64-based Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 R2 for x64-based Systems Service Pack 1 \u0026amp;nbsp; (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012 R2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012 R2 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2016\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2016 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2019\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2019 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server, version 1803 (Server Core Installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server, version 1903 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server, version 1909 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;border-left-width: 2px;padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;23\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1027\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-right-width: 2px;border-left-width: medium;padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;430\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1607 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1607 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 7 for 32-bit Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 7 for x64-based Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 8.1 for 32-bit systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 8.1 for x64-based systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows RT 8.1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for 32-bit Systems Service Pack 2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for 32-bit Systems Service Pack 2 (Server Core \u0026amp;nbsp; installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for Itanium-Based Systems Service Pack 2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for x64-based Systems Service Pack 2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for x64-based Systems Service Pack 2 (Server \u0026amp;nbsp; Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 R2 for Itanium-Based Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 R2 for x64-based Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 R2 for x64-based Systems Service Pack 1 \u0026amp;nbsp; (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012 R2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012 R2 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2016\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2016 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2019\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2019 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server, version 1803 (Server Core Installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server, version 1903 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server, version 1909 (Server Core installation)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td rowspan=\u0026quot;2\u0026quot; style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;border-bottom-width: 2px;border-left-width: 2px;padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;23\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0968\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-right-width: 2px;border-left-width: medium;padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;429\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Internet Explorer 11：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1803 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1809 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2019\u0026amp;nbsp;\u0026amp;nbsp; 4549949\u0026amp;nbsp; Security Update\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1909 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1709 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1903 for ARM64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1607 for 32-bit Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 10 Version 1607 for x64-based Systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2016\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 7 for 32-bit Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 7 for x64-based Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 8.1 for 32-bit systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 8.1 for x64-based systems\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows RT 8.1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 R2 for x64-based Systems Service Pack 1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012\u0026amp;nbsp;\u0026amp;nbsp; 4550917\u0026amp;nbsp; Monthly Rollup\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2012 R2\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp; 4550961\u0026amp;nbsp; Monthly Rollup\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-width: medium 2px 2px medium;padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; width=\u0026quot;23\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Internet Explorer 9：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for 32-bit Systems Service Pack 2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Server 2008 for x64-based Systems Service Pack 2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 20px;\u0026quot;\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot; style=\u0026quot;display: inline-block;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;margin-top: 8px;padding-right: 10px;font-weight: bold;line-height: 28px;max-width: 100%;color: rgb(0, 71, 56);min-height: 32px;border-bottom: 1.5px solid rgb(0, 71, 56);border-top-color: rgb(0, 71, 56);border-right-color: rgb(0, 71, 56);border-left-color: rgb(0, 71, 56);\u0026quot;\u0026gt; \u0026lt;span data-original-title=\u0026quot;\u0026quot; placeholder=\u0026quot;1\u0026quot; title=\u0026quot;\u0026quot; style=\u0026quot;margin-right: 8px;padding: 4px 10px;color: rgb(255, 255, 255);display: block;float: left;line-height: 20px;max-width: 100%;background-color: rgb(0, 71, 56);\u0026quot;\u0026gt;4\u0026lt;/span\u0026gt;漏洞防护 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, \u0026amp;quot;Microsoft YaHei\u0026amp;quot;;\u0026quot;\u0026gt;4.1\u0026amp;nbsp; 补丁更新\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;目前微软官方已针对受支持的系统版本发布修复了以上漏洞的安全补丁，强烈建议受影响用户尽快安装补丁进行防护，官方下载链接：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;background: none 0% 0% repeat scroll white;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;color: black;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;https://portal.msrc.microsoft.com/en-us/security-guidance/releasenotedetail/2020-Apr\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;注：由于网络问题、计算机环境问题等原因，Windows Update的补丁更新可能出现失败。用户在安装补丁后，应及时检查补丁是否成功更新。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;右键点击Windows徽标，选择“设置(N)”，选择“更新和安全”-“Windows更新”，查看该页面上的提示信息，也可点击“查看更新历史记录”查看历史更新情况。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;针对未成功安装的更新，可点击更新名称跳转到微软官方下载页面，建议用户点击该页面上的链接，转到“Microsoft更新目录”网站下载独立程序包并安装。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-top: 8px;padding-right: 10px;font-size: 16px;white-space: normal;font-weight: bold;line-height: 28px;max-width: 100%;color: rgb(0, 71, 56);min-height: 32px;border-bottom: 1.5px solid rgb(0, 71, 56);border-top-color: rgb(0, 71, 56);border-right-color: rgb(0, 71, 56);border-left-color: rgb(0, 71, 56);\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span data-original-title=\u0026quot;\u0026quot; placeholder=\u0026quot;1\u0026quot; title=\u0026quot;\u0026quot; style=\u0026quot;margin-right: 8px;padding: 4px 10px;color: rgb(255, 255, 255);display: block;float: left;line-height: 20px;max-width: 100%;background-color: rgb(0, 71, 56);\u0026quot;\u0026gt;附录\u0026lt;/span\u0026gt;产品漏洞列表\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;table cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: windowtext;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;color: black;\u0026quot;\u0026gt;影响产品\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: windowtext windowtext windowtext currentcolor;border-left-style: none;border-left-width: medium;padding: 0px 7px;word-break: break-all;\u0026quot; width=\u0026quot;89\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;color: black;\u0026quot;\u0026gt;CVE \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;color: black;\u0026quot;\u0026gt;编号\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: windowtext windowtext windowtext currentcolor;border-left-style: none;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;color: black;\u0026quot;\u0026gt;漏洞标题\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: windowtext windowtext windowtext currentcolor;border-left-style: none;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;color: black;\u0026quot;\u0026gt;严重程度\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Dynamics\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1022\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Dynamics Business Central 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0907\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Components 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0687\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0938\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Adobe Font Manager Library 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1020\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Adobe Font Manager Library 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0931\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0929\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0932\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0974\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Scripting Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0968\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Scripting Engine 内存破坏漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Scripting Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0969\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Chakra Scripting Engine 内存破坏漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Scripting Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0970\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Scripting Engine 内存破坏漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0965\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows Codecs Library 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Hyper-V\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0910\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Hyper-V 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Media\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0948\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Media Foundation 内存破坏漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Media\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0949\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Media Foundation 内存破坏漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Media\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0950\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Media Foundation 内存破坏漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Critical\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Android App\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0943\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft YourPhone Application for Android \u0026amp;nbsp; Authentication Bypass Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Apps\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1019\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft RMS Sharing App for Mac 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Dynamics\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1018\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Dynamics Business Central/NAV \u0026amp;nbsp; Information Disclosure\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Dynamics\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1049\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Dynamics 365 (On-Premise) Cross Site \u0026amp;nbsp; Scripting Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Dynamics\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1050\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Dynamics 365 (On-Premise) Cross Site \u0026amp;nbsp; Scripting Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0784\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;DirectX 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0987\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1004\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Graphics Component 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1005\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0952\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows GDI 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0958\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Win32k 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0964\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;GDI+ 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0982\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Graphics Component 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0988\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0992\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0994\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0995\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0999\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1008\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0889\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0953\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0959\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft JET Database Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0960\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Jet Database Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0760\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0906\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Excel 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0935\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;OneDrive for Windows 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0979\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Excel 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0980\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Word 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0991\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0961\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office Access Connectivity Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0984\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft (MAU) Office 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0920\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0923\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0924\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0925\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0926\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0927\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0930\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0933\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0954\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0971\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0972\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 欺骗漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0973\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0975\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 欺骗漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0976\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 欺骗漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0977\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft SharePoint 欺骗漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0978\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Office SharePoint XSS Vulnerability\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0794\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 拒绝服务漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0944\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Connected User Experiences and Telemetry Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1001\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Push Notification Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1006\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Push Notification Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1029\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Connected User Experiences and Telemetry Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0934\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0940\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Push Notification Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0942\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Connected User Experiences and Telemetry Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0981\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Token 安全功能绕过漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1009\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1011\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1016\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Push Notification Service 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1017\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Push Notification Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1094\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Work Folder Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows DNS\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0993\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows DNS 拒绝服务漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Open Source Software\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1026\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;MSR JavaScript Cryptography Library 安全功能绕过漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Remote Desktop Client\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0919\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Remote Desktop App for Mac 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Visual Studio\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0899\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Visual Studio 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Visual Studio\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0900\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Visual Studio Extension Installer Service 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Defender\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0835\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Defender Antimalware Platform Hard Link 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Defender\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1002\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Defender 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Hyper-V\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0917\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Hyper-V 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Hyper-V\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0918\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Hyper-V 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0913\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0955\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel Information Disclosure in CPU \u0026amp;nbsp; Memory Access\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1000\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1003\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1007\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1027\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0699\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Win32k 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0821\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0888\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;DirectX 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0936\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Scheduled Task 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0956\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Win32k 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0957\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Win32k 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0962\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Win32k 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Kernel\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1015\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Media\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0945\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Media Foundation 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Media\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0946\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Media Foundation 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Media\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0947\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Media Foundation 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Media\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0937\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Media Foundation 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Media\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0939\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Media Foundation 信息泄露漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Update Stack\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0985\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Update Stack 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Update Stack\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0996\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Update Stack 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Update Stack\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0983\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows Update Stack\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-1014\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Windows Update Client 特权提升漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Important\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Scripting Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0895\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Windows VBScript Engine 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Low\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Scripting Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0966\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;VBScript 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Low\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext;border-top-style: none;border-top-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;93\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Microsoft Scripting Engine\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;95\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;CVE-2020-0967\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;\u0026quot; width=\u0026quot;167\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;VBScript 远程代码执行漏洞\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-color: currentcolor windowtext windowtext currentcolor;border-top-style: none;border-left-style: none;border-top-width: medium;border-left-width: medium;padding: 0px 7px;word-break: break-all;\u0026quot; width=\u0026quot;88\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Moderate\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: rgb(0, 71, 56);\u0026quot;\u0026gt;\u0026lt;strong style=\u0026quot;line-height: 1.8;\u0026quot;\u0026gt;END\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 1.8;\u0026quot;\u0026gt;作者：绿盟科技威胁对抗能力部\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block;width: 150px;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-2a48ebb68d973c69cea63e7d48ef54e1.png\u0026quot; alt=\u0026quot;【漏洞通告】微软更新多个产品高危漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-145ee74f0b6a5fccc5818a48960b4c59.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】微软更新多个产品高危漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section data-color=\u0026quot;#6fba2c\u0026quot; data-custom=\u0026quot;#6fba2c\u0026quot; style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;width: 100%;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;padding-right: 10px;padding-left: 10px;line-height: 30px;height: 30px;color: rgb(255, 255, 255);background-color: rgb(111, 186, 44);text-align: center;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;声明\u0026lt;/strong\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;padding: 10px;background-color: rgb(250, 250, 250);color: rgb(102, 102, 102);line-height: 30px;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;font-size: 14px;color: rgb(85, 85, 85);font-variant-numeric: normal;line-height: 28.8px;widows: 1;text-indent: 28px;\u0026quot;\u0026gt; 本安全公告仅用来描述可能存在的安全问题，绿盟科技不为此安全公告提供任何保证或承诺。由于传播、利用此安全公告所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，绿盟科技以及安全公告作者不为此承担任何责任。\u0026amp;nbsp;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;font-size: 14px;color: rgb(85, 85, 85);font-variant-numeric: normal;line-height: 28.8px;widows: 1;text-indent: 28px;\u0026quot;\u0026gt; 绿盟科技拥有对此安全公告的修改和解释权。如欲转载或传播此安全公告，必须保证此安全公告的完整性，包括版权声明等全部内容。未经绿盟科技允许，不得任意修改或者增减此安全公告内容，不得以任何方式将其用于商业目的。\u0026amp;nbsp;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;font-size: 14px;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;display: inline-block;\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-145ee74f0b6a5fccc5818a48960b4c59.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】微软更新多个产品高危漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;85996\u0026quot; style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;padding: 40px;background-color: rgb(244, 244, 244);box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;span data-brushtype=\u0026quot;text\u0026quot; style=\u0026quot;color: rgb(3, 3, 3);font-weight: 600;font-size: 24px;font-family: arial, helvetica, sans-serif;\u0026quot;\u0026gt;绿盟科技安全情报\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 24px;color: rgb(3, 3, 3);font-weight: 600;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 40px;color: rgb(63, 63, 63);\u0026quot;\u0026gt;∣\u0026lt;/span\u0026gt;\u0026lt;span data-brushtype=\u0026quot;text\u0026quot; style=\u0026quot;color: rgb(3, 3, 3);\u0026quot;\u0026gt;微信公众号\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section data-width=\u0026quot;50%\u0026quot; style=\u0026quot;margin-top: 14px;display: inline-block;vertical-align: top;width: 50%;text-align: right;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-5f91c74212bb9c8191aa6a3cc529e729.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】微软更新多个产品高危漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section data-width=\u0026quot;50%\u0026quot; style=\u0026quot;padding-left: 10px;display: inline-block;width: 50%;text-align: left;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-731e3a7317eae184eeee6fe7ce8b0ccd.png\u0026quot; alt=\u0026quot;【漏洞通告】微软更新多个产品高危漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 6px;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;span data-brushtype=\u0026quot;text\u0026quot; style=\u0026quot;color: rgb(12, 12, 12);\u0026quot;\u0026gt;长按识别二维码，关注网络安全威胁信息\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; ","date":"2020年44月15日","externalUrl":null,"permalink":"/2286.html","section":"Posts","summary":"","title":"【漏洞通告】微软更新多个产品高危漏洞通告","type":"post"},{"content":" 通告编号:NS-2020-0026 2020-04-15 TAG： \u0026lt;td style=\u0026quot;margin: 5px 10px;border-color: rgb(216, 216, 216);word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;WebLogic、CVE-2020-2801、CVE-2020-2883、CVE-2020-2884、CVE-2020-2915\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/td\u0026gt; 漏洞等级： \u0026lt;td style=\u0026quot;margin: 5px 10px;border-color: rgb(216, 216, 216);word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: rgb(255, 0, 0);font-family: 微软雅黑, \u0026amp;quot;Microsoft YaHei\u0026amp;quot;;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: rgb(255, 0, 0);font-size: 14px;font-family: 微软雅黑, \u0026amp;quot;Microsoft YaHei\u0026amp;quot;;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;高，\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;攻击者利用此类漏洞，可实现远程代码执行。\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color: rgb(255, 0, 0);font-size: 14px;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;color: red;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; \u0026nbsp;应急等级： \u0026lt;td colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;1\u0026quot; style=\u0026quot;border-left-color: rgb(216, 216, 216);border-top-color: rgb(216, 216, 216);margin: 5px 10px;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: rgb(255, 192, 0);\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;黄色\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; 版本： \u0026lt;td style=\u0026quot;margin: 5px 10px;border-color: rgb(216, 216, 216);word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;1.0\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/td\u0026gt; 1 漏洞概述 北京时间4月15日，Oracle官方发布了2020年4月关键补丁更新公告CPU（Critical Patch Update），修复了397个不同程度的漏洞。其中包括三个针对Weblogic的严重漏洞（CVE-2020-2801、CVE-2020-2883、CVE-2020-2884）和一个Oracle Coherence远程代码执行漏洞（CVE-2020-2915），使用了Oracle Coherence 库的产品受此漏洞影响。本次四个漏洞均为T3协议存在缺陷、未经身份验证的攻击者可通过此类漏洞实现远程代码执行，CVSS评分均为9.8，利用复杂度低。建议用户尽快采取措施，对上述漏洞进行防护。 CVE-2020-2801复现成功截图： 参考链接： \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;background: none 0% 0% repeat scroll white;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;https://www.oracle.com/security-alerts/cpuapr2020.html\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 1.75em;text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;padding: 10px;color: #ffffff;margin-top: -15px;margin-right: auto;margin-left: auto;display: inline-block;border-color: #004738;border-radius: 5px;background-color: #004738;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;color: inherit;\u0026quot;\u0026gt; \u0026lt;strong style=\u0026quot;color:inherit;\u0026quot;\u0026gt;SEE MORE →\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section data-role=\u0026quot;paragraph\u0026quot; style=\u0026quot;overflow:hidden;height: 0px;\u0026quot;\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot; style=\u0026quot;display: inline-block;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;margin-top: 8px;padding-right: 10px;font-weight: bold;line-height: 28px;max-width: 100%;color: rgb(0, 71, 56);min-height: 32px;border-bottom: 1.5px solid rgb(0, 71, 56);border-top-color: rgb(0, 71, 56);border-right-color: rgb(0, 71, 56);border-left-color: rgb(0, 71, 56);\u0026quot;\u0026gt; \u0026lt;span data-original-title=\u0026quot;\u0026quot; placeholder=\u0026quot;1\u0026quot; title=\u0026quot;\u0026quot; style=\u0026quot;margin-right: 8px;padding: 4px 10px;color: rgb(255, 255, 255);display: block;float: left;line-height: 20px;max-width: 100%;background-color: rgb(0, 71, 56);\u0026quot;\u0026gt;2\u0026lt;/span\u0026gt;\u0026lt;strong data-brushtype=\u0026quot;text\u0026quot; style=\u0026quot;border-color: rgb(0, 71, 56);color: inherit;\u0026quot;\u0026gt;影响范围\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;WebLogic受影响版本\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;10.3.6.0.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;12.1.3.0.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;12.2.1.3.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;12.2.1.4.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;Coherence\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;受影响版本\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;3.7.1.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;12.1.3.0.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;12.2.1.3.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;12.2.1.4.0\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 1.75em;text-indent: 2em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;注：\u0026lt;/span\u0026gt;在WebLogic Server 11g Release（10.3.4）及以上版本的安装包中默认集成了Oracle Coherence 库。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;section\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot; style=\u0026quot;display: inline-block;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;margin-top: 8px;padding-right: 10px;font-weight: bold;line-height: 28px;max-width: 100%;color: rgb(0, 71, 56);min-height: 32px;border-bottom: 1.5px solid rgb(0, 71, 56);border-top-color: rgb(0, 71, 56);border-right-color: rgb(0, 71, 56);border-left-color: rgb(0, 71, 56);\u0026quot;\u0026gt; \u0026lt;span data-original-title=\u0026quot;\u0026quot; placeholder=\u0026quot;1\u0026quot; title=\u0026quot;\u0026quot; style=\u0026quot;margin-right: 8px;padding: 4px 10px;color: rgb(255, 255, 255);display: block;float: left;line-height: 20px;max-width: 100%;background-color: rgb(0, 71, 56);\u0026quot;\u0026gt;3\u0026lt;/span\u0026gt;漏洞检测 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, \u0026amp;quot;Microsoft YaHei\u0026amp;quot;;\u0026quot;\u0026gt;3.1\u0026amp;nbsp; 本地检测\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;可使用如下命令对Weblogic版本和补丁安装的情况进行排查。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;table width=\u0026quot;100%\u0026quot; cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr style=\u0026quot;height:25px;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;border-width: 2px;border-color: windowtext;background: none 0% 0% repeat scroll rgb(216, 216, 216);padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; height=\u0026quot;25\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;$ cd /Oracle/Middleware/wlserver_10.3/server/lib\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;$ java -cp weblogic.jar \u0026amp;nbsp; weblogic.version\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;在显示结果中，如果没有补丁安装的信息，则说明存在风险，如下图所示：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 15px;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;3.2 远程检测\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;3.2.1 Nmap服务检测\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Nmap工具提供了Weblogic T3协议的扫描脚本，可探测开启T3服务的Weblogic主机。命令如下：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;table width=\u0026quot;100%\u0026quot; cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-width: 2px;border-color: windowtext;background: none 0% 0% repeat scroll rgb(216, 216, 216);padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;nmap -n -v -Pn \u0026amp;nbsp; –sV [主机或网段地址] -p7001,7002 --script=weblogic-t3-info.nse\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;如下图红框所示，目标开启了T3协议且Weblogic版本在受影响范围之内，如果相关人员没有安装官方的安全补丁，则存在漏洞风险。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 0em;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;3.2.2 互联网资产排查\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;绿盟科技威胁情报中心（NTI）提供对互联网开放网络资产信息查看的功能，企业用户可通过在NTI上检索自有资产信息端口开放情况，查看企业资产是否受此漏洞影响。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 0em;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;41173\u0026quot; data-color=\u0026quot;#004738\u0026quot; data-custom=\u0026quot;#004738\u0026quot; style=\u0026quot;display: inline-block;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;margin-top: 8px;padding-right: 10px;font-weight: bold;line-height: 28px;max-width: 100%;color: rgb(0, 71, 56);min-height: 32px;border-bottom: 1.5px solid rgb(0, 71, 56);border-top-color: rgb(0, 71, 56);border-right-color: rgb(0, 71, 56);border-left-color: rgb(0, 71, 56);\u0026quot;\u0026gt; \u0026lt;span data-original-title=\u0026quot;\u0026quot; placeholder=\u0026quot;1\u0026quot; title=\u0026quot;\u0026quot; style=\u0026quot;margin-right: 8px;padding: 4px 10px;color: rgb(255, 255, 255);display: block;float: left;line-height: 20px;max-width: 100%;background-color: rgb(0, 71, 56);\u0026quot;\u0026gt;4\u0026lt;/span\u0026gt;漏洞防护 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, \u0026amp;quot;Microsoft YaHei\u0026amp;quot;;\u0026quot;\u0026gt;4.1\u0026amp;nbsp; 补丁更新\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;Oracle目前已发布补丁修复了上述漏洞，请用户参考官方通告及时下载受影响产品更新补丁，并参照补丁安装包中的readme文件进行安装更新，以保证长期有效的防护。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;注：Oracle官方补丁需要用户持有正版软件的许可账号，使用该账号登陆https://support.oracle.com后，可以下载最新补丁。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 1.75em;text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 0em;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;4.2\u0026amp;nbsp; 临时缓解措施\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;如果用户暂时无法安装更新补丁，可通过下列措施对漏洞进行临时防护：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;用户可通过控制T3协议的访问来临时阻断针对利用T3协议漏洞的攻击。Weblogic Server 提供了名为 weblogic.security.net.ConnectionFilterImpl 的默认连接筛选器，此连接筛选器接受所有传入连接，可通过此连接筛选器配置规则，对T3及T3s协议进行访问控制，详细操作步骤如下：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;1.\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;进入Weblogic控制台，在base_domain的配置页面中，进入“安全”选项卡页面，点击“筛选器”，进入连接筛选器配置。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 28px;line-height: 1.75em;text-align: left;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;2.\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;font-kerning: auto;font-feature-settings: normal;font-variation-settings: normal;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;在连接筛选器中输入：weblogic.security.net.ConnectionFilterImpl，参考以下写法，在连接筛选器规则中配置符合企业实际情况的规则：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;table width=\u0026quot;100%\u0026quot; cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr style=\u0026quot;height:72px;\u0026quot;\u0026gt; \u0026lt;td style=\u0026quot;border-color: windowtext;border-top-width: 2px;border-right-width: 2px;border-left-width: 2px;background: none 0% 0% repeat scroll rgb(216, 216, 216);padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot; height=\u0026quot;72\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;127.0.0.1 * * allow t3 t3s\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;本机IP ** allow t3 t3s\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;允许访问的IP\u0026amp;nbsp; * * allow t3 t3s\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;* * * deny t3 t3s\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;table width=\u0026quot;100%\u0026quot; cellspacing=\u0026quot;0\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-width: 2px;border-color: windowtext;background: none 0% 0% repeat scroll rgb(216, 216, 216);padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;line-height: 1.75em;text-indent: 2em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;连接筛选器规则格式如下：target localAddress localPort action protocols，其中：\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 7px;margin-bottom: 10px;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;target 指定一个或多个要筛选的服务器。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 7px;margin-bottom: 10px;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;localAddress 可定义服务器的主机地址。(如果指定为一个星号 (*)，则返回的匹配结果将是所有本地 IP 地址。)\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 7px;margin-bottom: 10px;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;localPort 定义服务器正在监听的端口。(如果指定了星号，则匹配返回的结果将是服务器上所有可用的端口)。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 7px;margin-bottom: 10px;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;action 指定要执行的操作。(值必须为“allow”或“deny”。)\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 7px;margin-bottom: 10px;margin-left: 28px;line-height: 1.75em;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;protocols 是要进行匹配的协议名列表。(必须指定下列其中一个协议：http、https、t3、t3s、giop、giops、dcom 或 ftp。) 如果未定义协议，则所有协议都将与一个规则匹配。\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 7px;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;3.\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;font-kerning: auto;font-feature-settings: normal;font-variation-settings: normal;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;保存后若规则未生效，\u0026lt;span style=\u0026quot;color: red;\u0026quot;\u0026gt;建议重新启动\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;color: red;\u0026quot;\u0026gt;Weblogic服务（重启Weblogic服务会导致业务中断，建议相关人员评估风险后，再进行操作）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;。以Windows环境为例，重启服务的步骤如下：\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;进入域所在目录下的bin目录，在Windows系统中运行stopWebLogic.cmd文件终止weblogic服务，Linux系统中则运行stopWebLogic.sh文件。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;text-indent: 0em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-kerning: auto;font-feature-settings: normal;font-variation-settings: normal;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;待终止脚本执行完成后，再运行startWebLogic.cmd或startWebLogic.sh文件启动Weblogic，即可完成Weblogic服务重启。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;若参考上述操作配置了连接筛选器后，导致Weblogic无法启动，可参考“附录A Weblogic服务恢复”章节，及时进行业务恢复。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-top: 8px;padding-right: 10px;font-size: 16px;white-space: normal;font-weight: bold;line-height: 28px;max-width: 100%;color: rgb(0, 71, 56);min-height: 32px;border-bottom: 1.5px solid rgb(0, 71, 56);border-top-color: rgb(0, 71, 56);border-right-color: rgb(0, 71, 56);border-left-color: rgb(0, 71, 56);\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span data-original-title=\u0026quot;\u0026quot; placeholder=\u0026quot;1\u0026quot; title=\u0026quot;\u0026quot; style=\u0026quot;margin-right: 8px;padding: 4px 10px;color: rgb(255, 255, 255);display: block;float: left;line-height: 20px;max-width: 100%;background-color: rgb(0, 71, 56);\u0026quot;\u0026gt;附录A\u0026lt;/span\u0026gt;WebLogic服务恢复\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;控制台恢复\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;在服务重启前，可进入Weblogic控制台删除相关配置，详细步骤如下：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;1.\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;依次点击“base_domain”—\u0026gt; “安全”—\u0026gt;“筛选器”\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 29px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;2.\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;font-kerning: auto;font-feature-settings: normal;font-variation-settings: normal;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;将原有配置清空，点击保存。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 29px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;3.\u0026lt;span style=\u0026quot;font-variant-numeric: normal;font-variant-east-asian: normal;font-stretch: normal;line-height: normal;font-kerning: auto;font-feature-settings: normal;font-variation-settings: normal;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;点击“查看更改和重新启动”，进入“重新启动核对清单”，勾选“AdminServer（管理）”，点击“重新启动”按钮。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;section data-role=\u0026quot;list\u0026quot;\u0026gt; \u0026lt;ul style=\u0026quot;padding-left: 30px;\u0026quot; class=\u0026quot;list-paddingleft-2\u0026quot;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 15px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 125%;\u0026quot;\u0026gt;配置文件恢复\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: left;text-indent: 28px;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 125%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;配置完连接筛选器后，配置信息会保存在“OracleMiddlewareuser_projectsdomainsbase_domainconfigconfig.xml”文件中。用文本编辑器打开上述文件，找到如下配置内容后删除：\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;table width=\u0026quot;100%\u0026quot; cellpadding=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;border-color: windowtext;background: none 0% 0% repeat scroll rgb(216, 216, 216);padding: 0px 7px;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;connection-filter\u0026gt;weblogic.security.net.ConnectionFilterImpl\u0026lt;/connection-filter\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 107%;font-size: 14px;font-family: 微软雅黑, Microsoft YaHei;\u0026quot;\u0026gt;\u0026lt;connection-filter-rule\u0026gt;* * 7001 deny t3 \u0026amp;nbsp; t3s\u0026lt;/connection-filter-rule\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;line-height: 1.75em;\u0026quot;\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: rgb(0, 71, 56);\u0026quot;\u0026gt;\u0026lt;strong style=\u0026quot;line-height: 1.8;\u0026quot;\u0026gt;END\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 1.8;\u0026quot;\u0026gt;作者：绿盟科技威胁对抗能力部\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block;width: 150px;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-2a48ebb68d973c69cea63e7d48ef54e1.png\u0026quot; alt=\u0026quot;【漏洞通告】WebLogic多个远程代码执行漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-145ee74f0b6a5fccc5818a48960b4c59.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】WebLogic多个远程代码执行漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section data-color=\u0026quot;#6fba2c\u0026quot; data-custom=\u0026quot;#6fba2c\u0026quot; style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;width: 100%;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;padding-right: 10px;padding-left: 10px;line-height: 30px;height: 30px;color: rgb(255, 255, 255);background-color: rgb(111, 186, 44);text-align: center;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;声明\u0026lt;/strong\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;padding: 10px;background-color: rgb(250, 250, 250);color: rgb(102, 102, 102);line-height: 30px;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;font-size: 14px;color: rgb(85, 85, 85);font-variant-numeric: normal;line-height: 28.8px;widows: 1;text-indent: 28px;\u0026quot;\u0026gt; 本安全公告仅用来描述可能存在的安全问题，绿盟科技不为此安全公告提供任何保证或承诺。由于传播、利用此安全公告所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，绿盟科技以及安全公告作者不为此承担任何责任。\u0026amp;nbsp;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;font-size: 14px;color: rgb(85, 85, 85);font-variant-numeric: normal;line-height: 28.8px;widows: 1;text-indent: 28px;\u0026quot;\u0026gt; 绿盟科技拥有对此安全公告的修改和解释权。如欲转载或传播此安全公告，必须保证此安全公告的完整性，包括版权声明等全部内容。未经绿盟科技允许，不得任意修改或者增减此安全公告内容，不得以任何方式将其用于商业目的。\u0026amp;nbsp;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;font-size: 14px;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;display: inline-block;\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-145ee74f0b6a5fccc5818a48960b4c59.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】WebLogic多个远程代码执行漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section data-tools=\u0026quot;135编辑器\u0026quot; data-id=\u0026quot;85996\u0026quot; style=\u0026quot;border-width: 0px;border-style: none;border-color: initial;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;padding: 40px;background-color: rgb(244, 244, 244);box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;margin-bottom: 10px;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;span data-brushtype=\u0026quot;text\u0026quot; style=\u0026quot;color: rgb(3, 3, 3);font-weight: 600;font-size: 24px;font-family: arial, helvetica, sans-serif;\u0026quot;\u0026gt;绿盟科技安全情报\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 24px;color: rgb(3, 3, 3);font-weight: 600;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 40px;color: rgb(63, 63, 63);\u0026quot;\u0026gt;∣\u0026lt;/span\u0026gt;\u0026lt;span data-brushtype=\u0026quot;text\u0026quot; style=\u0026quot;color: rgb(3, 3, 3);\u0026quot;\u0026gt;微信公众号\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section data-width=\u0026quot;50%\u0026quot; style=\u0026quot;margin-top: 14px;display: inline-block;vertical-align: top;width: 50%;text-align: right;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-5f91c74212bb9c8191aa6a3cc529e729.jpeg\u0026quot; alt=\u0026quot;【漏洞通告】WebLogic多个远程代码执行漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section data-width=\u0026quot;50%\u0026quot; style=\u0026quot;padding-left: 10px;display: inline-block;width: 50%;text-align: left;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-731e3a7317eae184eeee6fe7ce8b0ccd.png\u0026quot; alt=\u0026quot;【漏洞通告】WebLogic多个远程代码执行漏洞通告\u0026quot; class=\u0026quot;aligncenter\u0026quot; /\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;margin-top: 6px;box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;span data-brushtype=\u0026quot;text\u0026quot; style=\u0026quot;color: rgb(12, 12, 12);\u0026quot;\u0026gt;长按识别二维码，关注网络安全威胁信息\u0026lt;/span\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, Arial, sans-serif;\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; ","date":"2020年44月15日","externalUrl":null,"permalink":"/2270.html","section":"Posts","summary":"","title":"【漏洞通告】WebLogic多个远程代码执行漏洞通告","type":"post"},{"content":"","date":"2020年44月15日","externalUrl":null,"permalink":"/categories/python%E5%9F%BA%E7%A1%80/","section":"Categories","summary":"","title":"Python基础","type":"categories"},{"content":"K8S Dashboard安装好以后，通过Firefox浏览器解决办法kubernetes-dashboard是可以打开的，但通过Google Chrome浏览器，无法成功浏览页面，对于一些新手来说，傻乎乎的用谷歌打开，缺怎么也打不开，一睹站在怀疑人生的道路上。这里分别给出两盒问题的解决方案\n不支持谷歌浏览器webui解决办法：\n自己创建证书，不使用kubeadmz自动生成的证书\nmkdir key \u0026\u0026 cd key openssl genrsa -out dashboard.key 2048 10.10.10.139为master节点的IP地址 # openssl genrsa -out dashboard.key 2048 openssl req -new -out dashboard.csr -key dashboard.key -subj \u0026#039;/CN=10.10.10.139\u0026#039; openssl x509 -req -in dashboard.csr -signkey dashboard.key -out dashboard.crt 删除原有证书 # 注意新版的Dashboard的namespace已经变为kubernetes-dashboard了，旧版本的在默认的namespace # kubectl delete secret kubernetes-dashboard-certs -n kubernetes-dashboard 创建新证书的secret # kubectl create secret generic kubernetes-dashboard-certs --from-file=dashboard.key --from-file=dashboard.crt -n kubernetes-dashboard 查找正在运行的pod # kubectl get pod -n kubernetes-dashboard 删除pod，这里补充一下，可能有些小伙不敢删除这个pod，放心好了，删除后，新的pod会自动启动起来。 # kubectl delete po pod的name -n kubernetes-dashboard 如果pod比较多的时候，可以使用以下这条命令批量删除。 # kubectl get pod -n kubernetes-dashboard | grep -v NAME | awk \\\u0026#039;{print kubectl delete po $1 -n kubernetes-dashboard}\\\u0026#039; | sh 这时，再次刷新Chrome浏览器的Dashboard页面就能正常浏览了\n显示英文解决办法\n因为官方默认采用zh显示中文，而不是zh-CN。而浏览器默认为zh-CN。只需要改一下显示语言即可。后期可能会自适应中文。找到谷歌浏览器的设置页-\u0026ndash;-\u0026mdash;-\u0026gt;语言-\u0026ndash;-\u0026ndash;-\u0026ndash;\u0026gt;将中文置顶，原来是中文简体刷新页面变能正常显示中文了\n","date":"2020年44月13日","externalUrl":null,"permalink":"/2240.html","section":"Posts","summary":"","title":"kubernetes-dashboard不支持谷歌浏览器webui及显示英文解决办法","type":"post"},{"content":" 4月9日，WannaRen勒索病毒作者公布了解密密钥，基于公布的秘钥，绿盟科技研发了相应的解密程序。针对该病毒，我们整理了如下你所关心的FAQ： Q 感染该病毒后有啥特征？ A 勒索病毒本身的目的就是要引起受害者注意，因此很容易判断是否感染。该病毒会在用户桌面及磁盘根目录创建多个勒索提示信息文件，包括：@WannaRen@.exe、想解密请看此图片.gif、想解密请看此文本.txt、想解密请看此文本.gif、团队解密.jpg。 加密文件后缀名被修改为.WannaRen，同时被加密文件头部存在WannaRenkey的字符串标识。 \u0026nbsp;\nQ 该病毒为何能引起广泛关注？ A 首先病毒名称蹭了“前任”WannaCry的热度，甚至还高度模仿其解密工具；其次攻击者使用了多个吸引眼球的图片，包括勒索信息图片及解密工具界面。 \u0026nbsp; Q 该病毒执行流程是什么样的？ A 首先从攻击者的C\u0026C域名(cpu.sslsngyl90.com)下载PowerShell脚本文件并执行，可在系统日志中查看到相应的PowerShell执行记录。 PowerShell作为下载器，会再次下载文件wwlib.dll、WINWORD.EXE到C:ProgramData目录下。 其中WINWORD.EXE为微软Office 2017中正常的Word主程序，具备有效的数字签名，利用DLL劫持方式，加载同目录下的后门文件wwlib.dll。 WINWORD.EXE会以系统服务的方式，实现开机自启动，并且会在重启执行后删除自身服务。 通过系统日志，可查看服务(WINWORDC)创建的具体信息。 wwlib.dll加载执行后，会调用同期下载到C:UsersPublic目录下的文件you，并在内存中解密执行，最终完成文件加密操作。 \u0026nbsp; Q 该病毒的传播途径有哪些？ A\n从目前已知感染案例进行溯源分析，受害者主要是遭受了“水坑攻击”，从第三方网站下载了包含后门代码的常用软件，包括文本编辑器及激活工具等；另外结合样本特征进行关联分析，还发现与去年早期的某邮件钓鱼攻击有关，因此判断攻击者前期是结合了软件分发、邮件钓鱼等多种APT攻击手段，控制了大量受害者主机。 Q 该病毒是否具备蠕虫特征？ A 从目前已知的案例来看，攻击者主要是通过PowerShell脚本下发病毒母体的方式来执行加密，同时病毒加载器会执行自删除操作，并未发现横向传播的蠕虫特征。但PowerShell脚本中同时还存在EternalBlue(永恒之蓝)MS17-010漏洞的利用模块，不排除攻击者后续可能结合该漏洞进行传播的可能。 \u0026nbsp; Q 如何防范该病毒的进一步传播？ A 从目前受害者群体分析，受害用户大多以个人终端用户为主，同时也包括部分企业用户。结合该病毒传播渠道及感染特征，建议从网络及主机层面进行防护。 首先在网络层面，可对攻击者的C\u0026C域名(sslsngyl90.com)进行监控并阻断，包括利用主机防火墙或出口网关设备等；其次在主机层面，建议安装并使用具备主动防御功能的安全软件，以对未知恶意程序行为进行拦截，此外由于普通用户很少使用PowerShell功能，可通过NTFS权限，禁用该功能。 \u0026nbsp;\nQ 被加密文件能否解密？ A 该病毒使用了对称和非对称（RSA+RC4）的混合算法进行加密，但目前病毒作者(WannaRenemal@goat.si)联系了国内某安全团队，并主动提供了解密私钥。结合加密算法，绿盟科技开发了两款解密工具。 1）WannarenDecrypt.exe 将目标路径作为参数输入，输出为同目录下后缀名为.ns.decrypt的文件 链接1: https://pan.baidu.com/s/1ZldVHNfuFC4NrPARqqmF4g 提取码: s42h\n链接2：https://github.com/FuYingLAB-NSFOCUS/WannarenDecrypt 2) wannaren.py 通过python脚本（导入rsa和crypto模块），可成功进行解密。 链接：https://cloud.nsfocus.com/api/krosa/secwarning/files/解密脚本.zip Q 是否有受害者支付赎金解密？ A 从攻击者提供的比特币钱包地址来看，截止目前共收到了两笔共计0.00009490 BTC的转账，折合人民币不到5元，这与勒索信息中要求的0.05 BTC相差甚远，因此判断还并未有受害者支付赎金。 \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #5a5a5a;\u0026quot;\u0026gt;END\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;color: #8f8f3f; box-sizing: border-box;\u0026quot;\u0026gt;\u0026amp;nbsp; WannaRen事件分析报告 http://blog.nsfocus.net/wannaren-report-0409/ \u0026lt;p style=\u0026quot;text-align: center; letter-spacing: 1.5px;\u0026quot;\u0026gt; 扫码关注，绿盟科技安全情报 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p style=\u0026quot;color: #8f8f3f;\u0026quot;\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;p\u0026gt; \u0026amp;nbsp; \u0026lt;/p\u0026gt; ","date":"2020年44月10日","externalUrl":null,"permalink":"/2206.html","section":"Posts","summary":"","title":"关于WannaRen勒索病毒相关的FAQ（附解密工具）","type":"post"},{"content":"关闭正在运行的 MySQL ：\n[root@www.woai.it ~]# service mysql stop [root@www.woai.it ~]# mysqld_safe --skip-grant-tables \u0026 为了安全可以这样禁止远程连接：\n[root@www.woai.it ~]# mysqld_safe --skip-grant-tables --skip-networking \u0026 使用mysql连接server：\n[root@www.woai.it ~]# mysql -p 更改密码：\nmysql\u0026gt; update mysql.user set authentication_string=password(\u0026#039;oppo@123!QAZ\u0026#039;) where user=\u0026#039;root\u0026#039;; mysql\u0026gt; update mysql.user set authentication_string=password(\u0026#039;oppo@123!QAZ\u0026#039;) where user=\u0026#039;root\u0026#039; and Host = \u0026#039;localhost\u0026#039;; *特别提醒注意的一点是，新版的mysql数据库下的user表中已经没有Password字段了\n而是将加密后的用户密码存储于authentication_string字段\nmysql\u0026gt; flush privileges; mysql\u0026gt; quit; 但此时操作似乎功能不完全，还要alter user…\nmysql\u0026gt; alter user \u0026#039;root\u0026#039;@\u0026#039;localhost\u0026#039; identified by \u0026#039;123qwe\u0026#039;; 这样也可以：\nmysql\u0026gt; set password for \u0026#039;root\u0026#039;@\u0026#039;localhost\u0026#039;=password(\u0026#039;123qwe\u0026#039;); 修改完毕。重启\n[root@localhost ~]# service mysql restart 然后mysql就可以连接了\n重点给大家介绍下mysql 5.7 root密码修改\nMySQL管理者密码设置或修改：\n依据官方说明5.6以后版本，第一次启动时会在root目录下生产一个随机密码，文件名.mysql_secret。\n[root@bright ~]# cat /root/.mysql_secret # Password set for user \u0026#039;root@localhost\u0026#039; at 2015-03-27 23:12:10 :Jj+FTiqvyrF [root@bright ~]# cd /usr/local/mysql/bin/ [root@bright bin]# ./mysqladmin -u root -h localhost password \u0026#039;123456\u0026#039; -p Enter password: #此行输入.mysql_secret里第二行内容\nmysqladmin: [Warning] Using a password on the command line interface can be insecure. Warning: Since password will be sent to server in plain text, use ssl connection to ensure password safety. 官方的方式，笔者无论是否使用\u0026ndash;skip-grant-tables启动mysql都测试失败，亲们可以测试：\nshell\u0026gt;mysql -uroot -p\u0026#039;password\u0026#039; #password即.mysql_secret里的密码 mysql\u0026gt;SET PASSWORD = PASSWORD(\u0026#039;newpasswd\u0026#039;); 旧版本，安装后ROOT无密码，按如下操作：\n方法一：\nshell\u0026gt;service mysqld stop #停止mysql服务 shell\u0026gt;mysqld_safe --skip-grant-tables \u0026 #以不启用grant-tables模式启动mysql shell\u0026gt;mysql -uroot -p #输入命令回车进入，出现输入密码提示直接回车。 mysql\u0026gt;use mysql; mysql\u0026gt;update user set password=PASSWORD(\"123456\")where user=\"root\"; #更改密码为 123456 mysql\u0026gt;flush privileges; #更新权限 mysql\u0026gt;quit #退出 关闭后台运行的mysl：fg 然后ctrl + c结束\n重启mysql\n方法二：\nshell\u0026gt;service mysqld stop #停止mysql服务 shell\u0026gt;mysqld_safe --skip-grant-tables \u0026 #以不启用grant-tables模式启动mysql shell\u0026gt;mysql -uroot -p #输入命令回车进入，出现输入密码提示直接回车。 mysql \u0026gt; set password for root@localhost = password(\u0026#039;mysqlroot\u0026#039;); 方法三：\nshell\u0026gt;/path/mysqladmin -u UserName -h Host password \u0026#039;new_password\u0026#039; -p 关闭后台运行的mysl：fg 然后ctrl + c结束 重启mysql\n","date":"2020年44月10日","externalUrl":null,"permalink":"/2204.html","section":"Posts","summary":"","title":"mysql忘记用户密码怎么办--重置密码","type":"post"},{"content":"","date":"2020年44月9日","externalUrl":null,"permalink":"/categories/devops/","section":"Categories","summary":"","title":"Devops","type":"categories"},{"content":"大家都知道，安装使用docker的时候默认的是国外的镜像源，使用起来有点难度，这里说说怎么切换docker源为国内的镜像源\n国内下载docker镜像大部分都比较慢，下面给大家介绍2个镜像源\n阿里云的镜像源 # 注册阿里云用户获取镜像源：点击跳转获取加速地址\n地址填写自己的专属加速地址\n使用的时候修改/etc/docker/daemon.json文件就可以了，\ncat\u0026nbsp;/etc/docker/daemon.json { \u0026nbsp;\u0026nbsp;\"registry-mirrors\":\u0026nbsp;[\"https://xk4sok19.mirror.aliyuncs.com\"] } 修改保存后重启 Docker 以使配置生效\ndocker中国官方的镜像源 # cat\u0026nbsp;/etc/docker/daemon.json { \u0026nbsp;\u0026nbsp;\"registry-mirrors\":\u0026nbsp;[\"https://registry.docker-cn.com\"] } 修改保存后重启 Docker 以使配置生效\n","date":"2020年44月9日","externalUrl":null,"permalink":"/2191.html","section":"Posts","summary":"","title":"Docker镜像之开源镜像加速--切换docker镜像源","type":"post"},{"content":" 场景描述： # 有一个需求，需要根目录的空间大于50G，然而发现安装完系统之后我的根目录空间只有刚好50G，需要进行扩容！\n于是发现/home这个挂载点的空间有70+G.于是就想着将这里的空间弄点到根目录去，然后就有了下面的故事\n备份 # 备份/home目录下的所有文件，注意：备份文件随后不要改变其属性，\ncd cp\u0026nbsp;-rp\u0026nbsp;/home\u0026nbsp;homebak 卸载/home # umount\u0026nbsp;/home 如果失败通过以下指令终止/home下的进程\nfuser\u0026nbsp;-m\u0026nbsp;-v\u0026nbsp;-i\u0026nbsp;-k\u0026nbsp;/home df -hT查看挂载信息及文件系统名称将其记录下来\n/dev/mapper/centos-home /dev/mapper/centos-root vgdisplay查看卷组信息\n删除/home所在的lv文件系统\nlvremove\u0026nbsp;-y\u0026nbsp;/dev/mapper/centos-home 扩展根目录空间大小这里增加20G大小\n[root@localhost\u0026nbsp;~]#\u0026nbsp;lvextend\u0026nbsp;-L\u0026nbsp;+20G\u0026nbsp;/dev/mapper/centos-root \u0026nbsp;\u0026nbsp;Size\u0026nbsp;of\u0026nbsp;logical\u0026nbsp;volume\u0026nbsp;centos/root\u0026nbsp;changed\u0026nbsp;from\u0026nbsp;50.00\u0026nbsp;GiB\u0026nbsp;(12800\u0026nbsp;extents)\u0026nbsp;to\u0026nbsp;70.00\u0026nbsp;GiB\u0026nbsp;(17920\u0026nbsp;extents). \u0026nbsp;\u0026nbsp;Logical\u0026nbsp;volume\u0026nbsp;centos/root\u0026nbsp;successfully\u0026nbsp;resized. 扩展根目录文件系统\n[root@localhost\u0026nbsp;~]#\u0026nbsp;xfs_growfs\u0026nbsp;/dev/mapper/centos-root meta-data=/dev/mapper/centos-root\u0026nbsp;isize=512\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;agcount=4,\u0026nbsp;agsize=3276800\u0026nbsp;blks \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;=\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;sectsz=4096\u0026nbsp;\u0026nbsp;attr=2,\u0026nbsp;projid32bit=1 \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;=\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;crc=1\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;finobt=0\u0026nbsp;spinodes=0 data\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;=\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;bsize=4096\u0026nbsp;\u0026nbsp;\u0026nbsp;blocks=13107200,\u0026nbsp;imaxpct=25 \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;=\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;sunit=0\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;swidth=0\u0026nbsp;blks naming\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;=version\u0026nbsp;2\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;bsize=4096\u0026nbsp;\u0026nbsp;\u0026nbsp;ascii-ci=0\u0026nbsp;ftype=1 log\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;=internal\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;bsize=4096\u0026nbsp;\u0026nbsp;\u0026nbsp;blocks=6400,\u0026nbsp;version=2 \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;=\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;sectsz=4096\u0026nbsp;\u0026nbsp;sunit=1\u0026nbsp;blks,\u0026nbsp;lazy-count=1 realtime\u0026nbsp;=none\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;extsz=4096\u0026nbsp;\u0026nbsp;\u0026nbsp;blocks=0,\u0026nbsp;rtextents=0 data\u0026nbsp;blocks\u0026nbsp;changed\u0026nbsp;from\u0026nbsp;13107200\u0026nbsp;to\u0026nbsp;18350080 重新创建/home所在的lv文件系统剩余53G\nlvcreate\u0026nbsp;-L\u0026nbsp;53G\u0026nbsp;-n\u0026nbsp;/dev/mapper/centos-home 格式化/home文件系统\nmkfs.xfs\u0026nbsp;/dev/mapper/centos-home 挂载： mount\u0026nbsp;/dev/mapper/centos-home\u0026nbsp;/home","date":"2020年44月9日","externalUrl":null,"permalink":"/2189.html","section":"Posts","summary":"","title":"Centos7.6将/home的磁盘空间转移到根目录下--扩容根目录空间大小","type":"post"},{"content":" 1.准备docker环境 # 在每个节点上安装docker-ce-18.09.9\n下载阿里源repo文件 # curl -o /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repo curl -o /etc/yum.repos.d/docker-ce.repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo yum install -y docker-ce-18.09.9 加速镜像源 # mkdir -p /etc/docker vi /etc/docker/daemon.json { \"exec-opts\":[\"native.cgroupdriver=systemd\"], \"registry-mirrors\" : [ \"https://kzflb.mirror.aliyuncs.com\", \"https://docker.mirrors.ustc.edu.cn\", \"https://registry.docker-cn.com\", \"https://dockerhub.azk8s.cn\", \"https://reg-mirror.qiniu.com\", \"https://ot2k4d59.mirror.aliyuncs.com/\" ] } 配置网卡转发,看值是否为1 # sysctl -a |grep -w net.ipv4.ip_forward net.ipv4.ip_forward = 1 若未配置，需要执行如下 # cat \u0026lt;\u0026lt;EOF \u0026gt; /etc/sysctl.d/docker.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward=1 EOF sysctl -p /etc/sysctl.d/docker.conf 2.下载镜像 # 使用docker pull的方式，下载如下镜像到各节点\ngcr.azk8s.cn/google_containers/kube-apiserver:v1.16.2 gcr.azk8s.cn/google_containers/kube-controller-manager:v1.16.2 gcr.azk8s.cn/google_containers/kube-scheduler:v1.16.2 gcr.azk8s.cn/google_containers/kube-proxy:v1.16.2 gcr.azk8s.cn/google_containers/pause:3.1 gcr.azk8s.cn/google_containers/etcd:3.3.15-0 gcr.azk8s.cn/google_containers/coredns:1.6.2 quay.io/coreos/flannel:v0.11.0-amd64 nginx:alpine kubernetesui/dashboard:v2.0.0-beta5 kubernetesui/metrics-scraper:v1.0.1 centos:centos7.5.1804 mysql:5.7 quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.28.0 镜像下载相关学习链接：点击跳转查看\n启动docker报错 # 报错分析：应该是daemo.json文件编写的时候格式发生变化\n/etc/docker/daemon.json 编写json文件时应到注意一下几点\n注意标点符号应当严格为英文符号 单词必须正确 json文件格式核查是否正确 注意所有内容需有括号括起来 完整格式截图如下\n","date":"2020年44月9日","externalUrl":null,"permalink":"/2187.html","section":"Posts","summary":"","title":"k8s环境准备之docker（一）","type":"post"},{"content":" TAG： \u0026lt;td style=\u0026quot;margin: 5px 10px; border-color: #d8d8d8; word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #000000; font-size: 14px; font-family: 微软雅黑, 'Microsoft YaHei';\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;line-height: 107%;\u0026quot;\u0026gt;WannaRen、勒索软件、kms\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; 版本： \u0026lt;td style=\u0026quot;margin: 5px 10px; border-color: #d8d8d8; word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14px;\u0026quot;\u0026gt;1.0\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/td\u0026gt; 1 事件背景 近日，网络上出现一种新型勒索病毒并在PC上开始传播。该勒索软件会加密Windows系统中的文件，并且以“.WannaRen”后缀命名。攻击者留下比特币钱包并索取0.05比特币。绿盟科技应急响应团队通过跟踪分析，发现“kms激活工具 19.5.2.exe”为勒索软件下载器，该下载器伪装成kms激活工具诱导用户下载。 SEE MORE → \u0026nbsp; 2揭秘恶意软件分发链 2.1\u0026nbsp; 恶意软件伪装为激活工具（kms）分发 近日，有客户反馈中了勒索病毒，勒索提示信息为“WannaRen”，排查发现主机不存在MS17-010漏洞。经过沟通，了解到客户之前下载过KMS类的系统激活工具。分析发现KMS工具存在访问URL加载其他恶意程序的行为。 经过分析排查，发现在“kms激活工具 19.5.2.exe”程序中，捆绑了powershell恶意代码。如下： 恶意代码执行时，首先延时2000秒（33分钟），一定程度上造成没有恶意行为的假象，影响安全研究人员分析；如果系统中安装了360、QQ防护则不执行后续代码。 核心代码如下： 功能为：获取并执行hxxp://cs.sslsngyl90.com中的代码。 在4月7号晚上，该页面中的代码大概如下： 获取到的powershell脚本主要功能为：下载程序到本地执行。 其中的WINWORD.EXE带数字签名，可以绕过杀软检测，wwlib.dll使用vmp加壳，其编译信息和加壳信息与WannaRen勒索信息程序一致。 @WannaRen@.exe程序PE信息： wwlib.dll程序PE信息： 在分析环境，wwlib.dll不能被运行，所以无法确认是否存在加密行为。截止目前8号下午5点，已发出的安全分析文章，认为该程序（wwlib.dll）即WannaRen的加密模块。 2.2\u0026nbsp; \u0026nbsp;后门、勒索、挖矿一体的下载器 上述分析的其实只是恶意代码的“冰山一角”，hxxp://cs.sslsngyl90.com中后续的代码还会执行更多的行为，包括： 下载并执行挖矿程序（门罗币） 下载“永恒之蓝”工具包并集成批量扫描工具 Everything工具外壳程序，实际为木马程序，开放并监听本地3611端口 甚至包含一些驱动程序，创建设备\\Device\\WinRing0_1_2_0等。 门罗币挖矿进程： 成功下载到本地的文件： 同时，该病毒存在一些“缺陷”，即部分URL已经“失效”或者返回404，导致脚本异常退出中断执行。 2.3\u0026nbsp; 恶意软件仍在持续更新中\n4月8号，发现hxxp://cs.sslsngyl90.com中的代码已经更新，开头部分如下： 可以发现已经不包含疑似勒索的WINWORD.EXE和wwlib.dll程序，以门罗币挖矿为主要代码。 2.4\u0026nbsp; 事件关联 本次事件发现的WINWORD.EXE和wwlib.dll程序，与2019年6月处理的一次“钓鱼”事件具有很强的相似性。 WannaRen事件中wwlib.dll的导出函数： WannaRen事件中WINWORD.EXE中加载wwlib.dll的相关代码： 2019年6月钓鱼事件中wwlib.dll的导出函数： 可以发现，在导出函数名上，具备很强的关联性。并且都是伪装成word程序，加载wwlib.dll文件。在2019年6月钓鱼事件中wwlib.dll为木马程序，回连IP：106.12.9.32。 3防护建议 不要下载或打开来路不明的文件，并且及时备份重要数据，妥善保管。 安装并使用具备主动防御功能的终端防护软件，并及时更新病毒库版本。 4IoC信息 下载器使用URL： hxxp://cs.sslsngyl90.com hxxp://cpu.sslsngyl90.com/vip.txt \u0026nbsp; 各模块hash： WINWORD.EXE\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; CEAA5817A65E914AA178B28F12359A46 wwlib.dll \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;9854723BF668C0303A966F2C282F72EA you \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;2D84337218E87A7E99245BD8B53D6EAB nb.exe \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\u0026nbsp;CA8AB64CDA1205F0993A84BC76AD894A officekms.exe\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;39E5B7E7A52C4F6F86F086298950C6B8 WinRing0x64.sys\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;0C0195C48B6B8582FA6F6373032118DA \u0026lt;p style=\u0026quot;text-align: center; font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #004738;\u0026quot;\u0026gt;\u0026lt;strong style=\u0026quot;line-height: 1.8;\u0026quot;\u0026gt;END\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center; font-family: Helvetica, Arial, sans-serif;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;line-height: 1.8;\u0026quot;\u0026gt;作者：绿盟科技威胁对抗能力部\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;section style=\u0026quot;box-sizing: border-box; font-family: Helvetica, Arial, sans-serif; border: 0px none initial;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block; width: 150px; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-2a48ebb68d973c69cea63e7d48ef54e1.png\u0026quot; alt=\u0026quot;【威胁分析】揭秘！WannaRen勒索病毒背后，一条恶意软件分发产业链\u0026quot; /\u0026gt;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box; font-family: Helvetica, Arial, sans-serif; border: 0px none initial;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;text-align: center; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;display: inline-block; box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/04/frc-145ee74f0b6a5fccc5818a48960b4c59.jpeg\u0026quot; alt=\u0026quot;【威胁分析】揭秘！WannaRen勒索病毒背后，一条恶意软件分发产业链\u0026quot; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;box-sizing: border-box; font-family: Helvetica, Arial, sans-serif; border: 0px none initial;\u0026quot; data-color=\u0026quot;#6fba2c\u0026quot; data-custom=\u0026quot;#6fba2c\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;width: 100%; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;section style=\u0026quot;padding-right: 10px; padding-left: 10px; line-height: 30px; height: 30px; color: #ffffff; background-color: #6fba2c; text-align: center; box-sizing: border-box;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;声明\u0026lt;/strong\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;section style=\u0026quot;padding: 10px; background-color: #fafafa; color: #666666; line-height: 30px; box-sizing: border-box;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;font-size: 14px; color: #555555; font-variant-numeric: normal; line-height: 28.8px; widows: 1; text-indent: 28px;\u0026quot;\u0026gt; 本安全公告仅用来描述可能存在的安全问题，绿盟科技不为此安全公告提供任何保证或承诺。由于传播、利用此安全公告所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，绿盟科技以及安全公告作者不为此承担任何责任。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;font-size: 14px; color: #555555; font-variant-numeric: normal; line-height: 28.8px; widows: 1; text-indent: 28px;\u0026quot;\u0026gt; 绿盟科技拥有对此安全公告的修改和解释权。如欲转载或传播此安全公告，必须保证此安全公告的完整性，包括版权声明等全部内容。未经绿盟科技允许，不得任意修改或者增减此安全公告内容，不得以任何方式将其用于商业目的。 \u0026lt;/p\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/section\u0026gt; ","date":"2020年44月9日","externalUrl":null,"permalink":"/2155.html","section":"Posts","summary":"","title":"【威胁分析】揭秘！WannaRen勒索病毒背后，一条恶意软件分发产业链","type":"post"},{"content":" 假设apache日志格式为118.78.199.98 – - [09/Jan/2010:00:59:59 +0800] \"GET /Public/Css/index.css HTTP/1.1″ 304 – \"http://www.a.cn/common/index.php\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6.3)\" 问题1：在apachelog中找出访问次数最多的10个IP。 awk '{print $1}' apache_log |sort |uniq -c|sort -nr|head -n 10 awk 首先将每条日志中的IP抓出来，如日志格式被自定义过，可以 -F 定义分隔符和 print指定列；sort进行初次排序，为的使相同的记录排列到一起；upiq -c 合并重复的行，并记录重复次数。head进行前十名筛选；sort -nr按照数字进行倒叙排序。 我参考的命令是：显示10条最常用的命令sed -e \"s/| //n/g\" ~/.bash_history | cut -d ' ' -f 1 | sort | uniq -c | sort -nr | head 问题2：在apache日志中找出访问次数最多的几个分钟。awk '{print\u0026nbsp; $4}' access_log |cut -c 14-18|sort|uniq -c|sort -nr|head\nawk 用空格分出来的第四列是[09/Jan/2010:00:59:59；cut -c 提取14到18个字符剩下的内容和问题1类似。 问题3：在apache日志中找到访问最多的页面：awk '{print $11}' apache_log |sed 's/ .*cn/(.*/)/\"//1/g'|sort |uniq -c|sort -rn|head 类似问题1和2，唯一特殊是用sed的替换功能将\"http://www.a.cn/common/index.php\"替换成括号内的内容：\"http://www.a.cn（/common/index.php）\" 问题4：在apache日志中找出访问次数最多（负载最重）的几个时间段（以分钟为单位），然后在看看这些时间哪几个IP访问的最多？1,查看apache进程:\nps aux | grep httpd | grep -v grep | wc -l 2,查看80端口的tcp连接:\nnetstat -tan | grep \"ESTABLISHED\" | grep \":80\" | wc -l 3,通过日志查看当天ip连接数，过滤重复:\ncat access_log | grep \"19/May/2011\" | awk '{print $2}' | sort | uniq -c | sort -nr 4,当天ip连接数最高的ip都在干些什么(原来是蜘蛛):\ncat 9 | grep \"09/Nov/2019:00\" | grep \"123.113.5.7\" | awk '{print $8}' | sort | uniq -c | sort -nr | head -n 10 5,当天访问页面排前10的url:\ncat access_log | grep \u0026ldquo;19/May/2010:00\u0026rdquo; | awk \u0026lsquo;{print $8}\u0026rsquo; | sort | uniq -c | sort -nr | head -n 10\n6,用tcpdump嗅探80端口的访问看看谁最高tcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F\".\" '{print $1\".\"$2\".\"$3\".\"$4}' | sort | uniq -c | sort -nr 接着从日志里查看该ip在干嘛:\ncat access_log | grep 220.181.38.183| awk '{print $1\"/t\"$8}' | sort | uniq -c | sort -nr | less 7,查看某一时间段的ip连接数:\ngrep \"2006:0[7-8]\" www20110519.log | awk '{print $2}' | sort | uniq -c| sort -nr | wc -l 8,当前WEB服务器中联接次数最多的20条ip地址:\nnetstat -ntu |awk '{print $5}' |sort | uniq -c| sort -n -r | head -n 20 9,查看日志中访问次数最多的前10个IP\ncat 9|cut -d ' ' -f 1 |sort |uniq -c | sort -nr | awk '{print $0 }' | head -n 10 |less 10,查看日志中出现100次以上的IP\ncat 9 |cut -d \u0026rsquo; \u0026rsquo; -f 1 |sort |uniq -c | awk \u0026lsquo;{if ($1 \u0026gt; 100) print $0}\u0026rsquo;｜sort -nr |less\n11,查看最近访问量最高的文件cat access_log |tail -10000|awk '{print $7}'|sort|uniq -c|sort -nr|less 12,查看日志中访问超过100次的页面cat access_log | cut -d \u0026rsquo; \u0026rsquo; -f 7 | sort |uniq -c | awk \u0026lsquo;{if ($1 \u0026gt; 100) print $0}\u0026rsquo; | less\n13,列出传输时间超过 30 秒的文件cat access_log|awk '($NF \u003e 30){print $7}'|sort -n|uniq -c|sort -nr|head -20 14,列出最最耗时的页面(超过60秒的)的以及对应页面发生次数cat access_log |awk '($NF \u003e 60 \u0026\u0026 $7~//.php/){print $7}'|sort -n|uniq -c|sort -nr|head -100 ","date":"2020年44月2日","externalUrl":null,"permalink":"/2128.html","section":"Posts","summary":"","title":"Apache日志分析","type":"post"},{"content":"首先，打开centos7，在选择进入系统的界面按\u0026ldquo;e\u0026rdquo;进入编辑页面。\n然后按向下键，找到以\u0026ldquo;Linux16\u0026rdquo;开头的行，在该行的最后面输入\u0026ldquo;init=/bin/sh\u0026rdquo;\n接下来按\u0026ldquo;ctrl+X\u0026rdquo;组合键进入单用户模式\n接下来再输入\u0026ldquo;mount -o remount,rw /\u0026rdquo;(注意mount与－o之间和rw与/之间的有空格)\n然后再输入\u0026ldquo;passwd\u0026rdquo;回接下来再输入touch /.autorelabel,回车\n","date":"2020年44月2日","externalUrl":null,"permalink":"/2125.html","section":"Posts","summary":"","title":"Centos7忘记密码找回","type":"post"},{"content":"Apache的主配置文件：/etc/httpd/conf/httpd.conf\n默认站点主目录：/var/www/html/\nApache服务器的配置信息全部存储在主配置文件/etc/httpd/conf/httpd.conf中，这个文件中的内容非常多，用wc命令统计一共有1009行，其中大部分是以#开头的注释行。\n[root@justin ~]# wc -l /etc/httpd/conf/httpd.conf\n/etc/httpd/conf/httpd.conf\n[root@justin ~]#\n配置文件包括三部分：\n[root@justin ~]# grep '\\' /etc/httpd/conf/httpd.conf -n\n33:### Section 1: Global Environment\n245:### Section 2: 'Main' server configuration\n973:### Section 3: Virtual Hosts\n[root@justin ~]#\n1）Global Environment-\u0026ndash;全局环境配置，决定Apache服务器的全局参数\n2）Main server configuration-\u0026ndash;主服务配置，相当于是Apache中的默认Web站点，如果我们的服务器中只有一个站点，那么就只需在这里配置就可以了。\n3）Virtual Hosts-\u0026ndash;虚拟主机，虚拟主机不能与Main Server主服务器共存，当启用了虚拟主机之后，Main Server就不能使用了\n1）Global Environment\nServerTokens OS\n在出现错误页的时候是否显示服务器操作系统的名称，ServerTokens Prod为不显示\nServerRoot \"/etc/httpd\"\n用于指定Apache的运行目录，服务启动之后自动将目录改变为当前目录，在后面使用到的所有相对路径都是想对这个目录下\nPidFile run/httpd.pid\n记录httpd守护进程的pid号码，这是系统识别一个进程的方法，系统中httpd进程可以有多个，但这个PID对应的进程是其他的父进程\nTimeout 60\n服务器与客户端断开的时间\nKeepAlive Off\n是否持续连接（因为每次连接都得三次握手，如果是访问量不大，建议打开此项，如果网站访问量比较大关闭此项比较好），修改为：KeepAlive On 表示允许程序性联机\nMaxKeepAliveRequests 100\n表示一个连接的最大请求数\nKeepAliveTimeout 15\n断开连接前的时间\nStartServers 8\nMinSpareServers 5\nMaxSpareServers 20\nServerLimit 256\nMaxClients 256\nMaxRequestsPerChild 4000\n系统默认的模块，表示为每个访问启动一个进程（即当有多个连接公用一个进程的时候，在同一时刻只能有一个获得服务）。\nStartServer开始服务时启动8个进程，最小空闲5个进程，最多空闲20个进程。\nMaxClient限制同一时刻客户端的最大连接请求数量超过的要进入等候队列。\nMaxRequestsPerChild每个进程生存期内允许服务的最大请求数量，0表示永不结束\nStartServers 4\nMaxClients 300\nMinSpareThreads 25\nMaxSpareThreads 75\nThreadsPerChild 25\nMaxRequestsPerChild 0\n为Apache配置线程访问，即每对WEB服务访问启动一个线程，这样对内存占用率比较小。\nServerLimit服务器允许配置进程数的上限。\nThreadLimit每个子进程可能配置的线程上限\nStartServers启动两个httpd进程，\nMaxClients同时最多能发起250个访问，超过的要进入队列等待，其大小有ServerLimit和ThreadsPerChild的乘积决定\nThreadsPerChild每个子进程生存期间常驻执行线程数，子线程建立之后将不再增加\nMaxRequestsPerChild每个进程启动的最大线程数，如达到限制数时进程将结束，如置为0则子线程永不结束\nListen 80\n监听的端口，如有多块网卡，默认监听所有网卡\n150 LoadModule auth_basic_module modules/mod_auth_basic.so\n\u0026hellip;\u0026hellip;\nLoadModule version_module modules/mod_version.so\n启动时加载的模块 mod_access已经更名为mod_authz_host\nInclude conf.d/*.conf\n加载的配置文件\nUser apache\nGroup apache\n启动服务后转换的身份，在启动服务时通常以root身份，然后转换身份，这样增加系统安全\n2）Main server configuration\nServerAdmin root@localhost\n管理员的邮箱\n#ServerName www.example.com:80\n默认是不需要指定的，服务器通过名字解析过程来获得自己的名字，但如果解析有问题（如反向解析不正确），或者没有DNS名字，也可以在这里指定IP地址，当这项不正确的时候服务器不能正常启动。前面启动Apache时候提示正在启动 httpd：httpd: apr_sockaddr_info_get() failed forjustin httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1forServerName，解决方法就是启动该项把www.example.com:80修改为自己的域名或者直接修改为localhost\n285 UseCanonicalName Off\n如果客户端提供了主机名和端口，Apache将会使用客户端提供的这些信息来构建自引用URL。这些值与用于实现基于域名的虚拟主机的值相同，并且对于同样的客户端可用。CGI变量SERVER_NAME和SERVER_PORT也会由客户端提供的值来构建\nDocumentRoot \"/var/www/html\"\n网页文件存放的目录\nOptions FollowSymLinks\nAllowOverride None\n对根目录的一个权限的设置\n","date":"2020年44月2日","externalUrl":null,"permalink":"/2115.html","section":"Posts","summary":"","title":"Apache的配置文件讲解","type":"post"},{"content":"本人在百度上面搜索了超级多的yaml文件来部署dashboard始终未成功，部署文件不生效就是文件不存在，很是头疼，这里将最近2019年11月成功部署的记录进行笔记存下来，仅供参考\ncd /dashboard/ wget https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml 更改yaml文件\nsed -i \\\u0026#039;s/k8s.gcr.io/loveone/g\\\u0026#039; kubernetes-dashboard.yaml sed -i \\\u0026#039;/targetPort:/a\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ nodePort: 30001\\\\n\\\\ \\\\ type: NodePort\\\u0026#039; kubernetes-dashboard.yaml 创建\nkubectl create -f kubernetes-dashboard.yaml 查看部署情况\nkubectl get deployment kubernetes-dashboard -n kube-system kubectl get pods -n kube-system -o wide kubectl get services -n kube-system netstat -ntlp|grep 30001 访问https://ip:30001\n获取令牌\nkubectl get secret -n kube-system kubectl describe -n kube-system secret {NAME} 这里千万不要直接粘贴复制过去。因为你粘贴的会带有一个空格，必须先粘贴到文本里面把空格删除了才行 成功了\n","date":"2020年44月1日","externalUrl":null,"permalink":"/2106.html","section":"Posts","summary":"","title":"K8s部署kubernetes-dashboard","type":"post"},{"content":" TAG： \u0026lt;td style=\u0026quot;margin: 5px 10px; border-color: #d8d8d8; word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;Linux Kernel、信息泄漏、权限提升、CVE-2020-8835\u0026lt;/strong\u0026gt; \u0026lt;/td\u0026gt; 漏洞危害： \u0026lt;td style=\u0026quot;margin: 5px 10px; border-color: #d8d8d8; word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;攻击者利用此漏洞\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;，\u0026lt;strong\u0026gt;可实现信息获取与权限提升\u0026lt;/strong\u0026gt;。\u0026lt;/strong\u0026gt; \u0026lt;/td\u0026gt; 版本： \u0026lt;td style=\u0026quot;margin: 5px 10px; border-color: #d8d8d8; word-break: break-all;\u0026quot; valign=\u0026quot;top\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;1.0\u0026lt;br /\u0026gt; \u0026lt;/strong\u0026gt; \u0026lt;/td\u0026gt; 1 漏洞概述 3月31日，选手Manfred Paul在Pwn2Own比赛上用于演示Linux内核权限提升的漏洞被CVE收录，漏洞编号为CVE-2020-8835。此漏洞由于bpf验证系统在Linux内核中没有正确计算某些操作的寄存器限制，导致本地攻击者可以利用此缺陷越界读取机密信息(内核内存)或将用户提升为管理权限。请相关用户采取措施进行防护。 参考链接： https://security-tracker.debian.org/tracker/CVE-2020-8835 https://people.canonical.com/~ubuntu-security/cve/2020/CVE-2020-8835.html 2影响范围 受影响版本 Linux Kernel 5.4 Linux Kernel 5.5 3漏洞检测 3.1 版本检测\nLinux系统用户可以通过查看版本来判断当前系统是否在受影响范围内，查看操作系统版本信息命令如下： cat /proc/version 4漏洞防护 4.1 官方升级\n受影响用户可通过升级Linux系统内核的方式进行防护，下载链接： https://github.com/torvalds/linux/releases Debian bullseye 受影响信息请查阅： https://security-tracker.debian.org/tracker/CVE-2020-8835 Ubuntu发行版详情信息请查阅： https://people.canonical.com/~ubuntu-security/cve/2020/CVE-2020-8835.html 4.2 临时防护措施 若相关用户暂时无法更新Linux Kernel，可采用发行商提供的缓解措施，通过修改内核参数来对普通用户进行限制。 Ubuntu： 将kernel.unprivileged_bpf_disabled sysctl设置为1 $ sudo sysctl kernel.unprivileged_bpf_disabled=1 \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; $ echo kernel.unprivileged_bpf_disabled=1 | \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: left; line-height: 1.75em;\u0026quot;\u0026gt; sudo tee /etc/sysctl.d/90-CVE-2020-8835.conf \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; 在使用安全引导的系统上，这个问题也会得到缓解。 Redhat： # sysctl -w kernel.unprivileged_bpf_disabled=1 ","date":"2020年33月31日","externalUrl":null,"permalink":"/2080.html","section":"Posts","summary":"","title":"【漏洞通告】Linux Kernel 信息泄漏\u0026权限提升漏洞（CVE-2020-8835）通告","type":"post"},{"content":" Docker架构 # Docker的基本能概念 # 镜像：简而言之就相当于是一个root文件系统，提供了容器运行时所需要的程序，库，资源、配置文件及运行时准备的运行参数\n容器：容器是镜像运行时的实体，容器可以被创建、启动、停止、删除、暂停等\n容器的本质就是一个进程。但是由与直接在宿主执行的进程有所不同，容器进程运行于属于自己的独立的命名空间。因此容器可以拥有自己的root文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全。也因为这种隔离的特性，很多人初学 Docker 时常常会混淆容器和虚拟机\n仓库：镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务\ndocker Registry 就是这样的服务，通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过\u0026laquo;/span\u0026gt;仓库名\u0026gt;:\u0026laquo;/span\u0026gt;标签\u0026gt;的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以latest作为默认标签。\nCentos安装Docker # 卸载掉旧版本 # 较旧的 Docker 版本称为 docker 或 docker-engine 。如果已安装这些程序，请卸载它们以及相关的依赖项\nyum remove docker \\\ndocker-client \\\ndocker-client-latest \\\ndocker-common \\\ndocker-latest \\\ndocker-latest-logrotate \\\ndocker-logrotate \\\ndocker-engine\n执行上面的命令卸载相关软件包\n安装 Docker Engine-Community # 安装最新版本的 Docker Engine-Community 和 containerd，或者转到下一步安装特定版本：\nyum install docker-ce docker-ce-cli containerd.io\n如果提示您接受 GPG 密钥，请选是。\n有多个 Docker 仓库吗？\n如果启用了多个 Docker 仓库，则在未在 yum install 或 yum update 命令中指定版本的情况下，进行的安装或更新将始终安装最高版本，这可能不适合您的稳定性需求。\nDocker 安装完默认未启动。并且已经创建好 docker 用户组，但该用户组下没有用户。\n要安装特定版本的 Docker Engine-Community，请在存储库中列出可用版本，然后选择并安装：\n1、列出并排序您存储库中可用的版本。此示例按版本号（从高到低）对结果进行排序。\nyum list docker-ce --showduplicates | sort -r\ndocker-ce.x86_64 3:18.09.1-3.el7 docker-ce-stable\ndocker-ce.x86_64 3:18.09.0-3.el7 docker-ce-stable\ndocker-ce.x86_64 18.06.1.ce-3.el7 docker-ce-stable\ndocker-ce.x86_64 18.06.0.ce-3.el7 docker-ce-stable\n2、通过其完整的软件包名称安装特定版本，该软件包名称是软件包名称（docker-ce）加上版本字符串（第二列），从第一个冒号（:）一直到第一个连字符，并用连字符（-）分隔。例如：docker-ce-18.09.1。\nyum install docker-ce-\u003cVERSION_STRING\u003e docker-ce-cli-\u003cVERSION_STRING\u003e containerd.io\n启动 Docker。\nsystemctl start docker\n\u0026lt;span style=\u0026quot;color: black; font-size: 9pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;查看启动状态\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 通过运行 hello-world 映像来验证是否正确安装了 Docker Engine-Community 。\ndocker run hello-world\nDocker使用 # 相关命令\ndocker搬运工的相关命令：\n查看本地镜像：docker images\n查看镜像运行状态和信息:docker ps -a\n查看完整镜像信息：docker inspect或docker images --no-trunc\n查找镜像：docker search ID\n创建镜像：docker build -t='镜像名' .\n下载镜像：docker pull 镜像名称（默认最新版）\n启动容器：docker run -i -t 镜像名 /bin/bash 或docker start ID 或docker restart ID\n退出容器：exit logout 或docker stop ID 或 docker kill ID\n重新进入容器：docker attach ID\n进入运行中的容器：docker exec ID /bin/bashd\n守护态运行：docker run -d -t -name ......\n导出容器：docker export 容器ID \u003e 文件\n导入容器：cat centos-test.tar | docker import - centos:test\n删除容器：docker rm $(docker ps –a –q)\n启动带有服务的容器：docker run -d -p 虚拟端口：真端口 -h 服务名称\n镜像名称或ID\n保存镜像：docker save -o 镜像名\n父镜像\n载入镜像：docker load -i 镜像名\n或 docker load \u003c 镜像名称\n删除镜像：docker rmi ID\n删除容器：先退出容器后 docker rm$(docker ps -a -q)\nDocker容器使用 # 获取镜像：通过docker pull 镜像名称就可以拉下来镜像使用\n启动容器：$ docker run -it ubuntu /bin/bash\n参数说明：\n-i: 交互式操作。\n-t: 终端。\nubuntu: ubuntu 镜像。\n/bin/bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。\n退出终端：exit\n相关命令\n查看本地镜像：docker images\n查看镜像运行状态和信息:docker ps -a\n查看完整镜像信息：docker inspect或docker images --no-trunc\n查找镜像：docker search ID\n创建镜像：docker build -t='镜像名' .\n下载镜像：docker pull 镜像名称（默认最新版）\n启动容器：docker run -i -t 镜像名 /bin/bash 或docker start ID 或docker restart ID\n退出容器：exit logout 或docker stop ID 或 docker kill ID\n重新进入容器：docker attach ID 退出容器终端，会导致容器的停止。\n进入运行中的容器：docker exec ID /bin/bashd 退出容器终端，不会导致容器的停止。\n守护态运行：docker run -d -t -name ......\n导出容器：docker export 容器ID \u003e 文件 导出到本地\n导入容器：cat centos-test.tar | docker import - centos:test\n删除容器：docker rm $(docker ps –a –q)\n启动带有服务的容器：docker run -d -p 虚拟端口：真端口 -h 服务名称 镜像名称或ID\n保存镜像：docker save -o 镜像名 父镜像\n载入镜像：docker load -i 镜像名 或 docker load \u003c 镜像名称\n删除镜像：docker rmi ID\n删除容器：先退出容器后 docker rm$(docker ps -a -q)\n运行一个web应用 # docker pull training/webapp\ndocker run -d -P training/webapp python app.py\n参数说明:\n-d:让容器在后台运行。\n-P:将容器内部使用的网络端口映射到我们使用的主机上。\n查看web应用容器：docker ps -a 出现了运行端口信息\n设置端口映射 # 我们也可以通过 -p 参数来设置不一样的端口：\ndocker run -d -p 5000:5000 training/webapp python app.py\n容器内部的 5000 端口映射到我们本地主机的 5000 端口上。\n网络端口的快捷方式\n# 通过docker ps可以看到容器映射的端口 docker port可以查看知道容器的映射端口情况\n查看 WEB 应用程序日志 # docker logs [ID或者名字] 可以查看容器内部的标准输出。\n-f: 让docker logs 像使用 tail -f 一样来输出容器内部的标准输出。\n查看WEB应用程序容器的进程 # 我们还可以使用 docker top 来查看容器内部运行的进程\ndocker top 容器的ID\n检查 WEB 应用程序 # 使用 docker inspect 来查看 Docker 的底层信息。它会返回一个 JSON 文件记录着 Docker 容器的配置和状态信息。\ndocker inspect 容器ID 检查容器\n删除容器：docker rm -f docker inspect 容器ID\nDocker镜像使用 # 导出镜像 # docker images 来列出本地主机上的镜像。\n获取新的镜像 # 当我们在本地主机上使用一个不存在的镜像时 Docker 就会自动下载这个镜像。如果我们想预先下载这个镜像，我们可以使用 docker pull 命令来下载它。\n查找镜像 # 我们也可以使用 docker search 命令来搜索镜像。比如我们需要一个 httpd 的镜像来作为我们的 web 服务。我们可以通过 docker search 命令搜索 httpd 来寻找适合我们的镜像。\nNAME: 镜像仓库源的名称\nDESCRIPTION: 镜像的描述\nOFFICIAL: 是否 docker 官方发布\nstars: 类似 Github 里面的 star，表示点赞、喜欢的意思。\nAUTOMATED: 自动构建。\n拖取镜像 # 我们决定使用上图中的 httpd 官方版本的镜像，使用命令 docker pull 来下载镜像。\n删除镜像 # \u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体; background-color: white;\u0026quot;\u0026gt;镜像删除使用\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Helvetica; background-color: white;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;docker rmi\u0026lt;/strong\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体; background-color: white;\u0026quot;\u0026gt;命令，比如我们删除\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Helvetica; background-color: white;\u0026quot;\u0026gt; httpd \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体; background-color: white;\u0026quot;\u0026gt;镜像：\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: black; font-family: Consolas; font-size: 9pt;\u0026quot;\u0026gt;docker rmi httpd \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 创建镜像 # 当我们从 docker 镜像仓库中下载的镜像不能满足我们的需求时，我们可以通过以下两种方式\n对镜像进行更改。\n1、从已经创建的容器中更新镜像，并且提交这个镜像\n2、使用 Dockerfile 指令来创建一个新的镜像\n更新镜像 # 更新镜像之前需要使用镜像创建一个容器\n\u0026lt;span style=\u0026quot;color: black; font-family: Consolas; font-size: 9pt;\u0026quot;\u0026gt;docker run \u0026lt;span style=\u0026quot;color: #666600;\u0026quot;\u0026gt;-\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;t \u0026lt;span style=\u0026quot;color: #666600;\u0026quot;\u0026gt;-\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;i ubuntu\u0026lt;span style=\u0026quot;color: #666600;\u0026quot;\u0026gt;:\u0026lt;span style=\u0026quot;color: #006666;\u0026quot;\u0026gt;15.10\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #666600;\u0026quot;\u0026gt;/\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;bin\u0026lt;span style=\u0026quot;color: #666600;\u0026quot;\u0026gt;/\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;bash \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 此时进入到容器终端，在更新完成后exit退出容器\n可以使用docker commit 来提交容器副本\ndocker commit -m=\"has update\" -a=\"runoob\" e218edb10161 runoob/ubuntu:v2\n各个参数说明：\n-m: 提交的描述信息\n-a: 指定镜像作者\ne218edb10161：容器 ID\nrunoob/ubuntu:v2: 指定要创建的目标镜像名\n我们可以使用 docker images 命令来查看我们的新镜像 runoob/ubuntu:v2：\n构建镜像 # 我们使用命令 docker build ， 从零开始来创建一个新的镜像。为此，我们需要创建一个 Dockerfile 文件，其中包含一组指令来告诉 Docker 如何构建我们的镜像。\nDockerfile标准示范：\nFROM:它的妈妈是谁（基础镜像）\nMAINTAINER：告诉别人，你创造了它（维护者信息）\nRUN：你想让它干啥（在命令前面加上RUN）\nADD：往它肚子里放点文件（COPY文件，会自动解压）\nWORKDIR：我是cd，今天刚化了妆（切换到工作目录）\nEXPOSE：我要打开的门是啥（端口）\nRUN：奔跑吧，兄弟！（要做的操作）\nENV：容器的环境变量\nCMD：容器需要执行的命令\n然后，我们使用 Dockerfile 文件，通过 docker build 命令来构建一个镜像。\ndocker build -t runoob/centos:6.7 .\n-t ：指定要创建的目标镜像名\n. ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径\n我们可以使用 docker tag 命令，为镜像添加一个新的标签。\nrunoob@runoob:~$ docker tag 860c279d2fec runoob/centos:dev\nDocker容器连接 # 容器中运行着一些网络应用，要想要外部访问这些应用，需要通过端口映射将端口映射出去\n创建一个httpd容器作为实验\n查看运行的结果\n我们也可以使用 -p 标识来指定容器端口绑定到主机端口。\n两种方式的区别是:\n-P :是容器内部端口随机映射到主机的高端口。\n-p : 是容器内部端口绑定到指定的主机端口。\n也可以绑定容器的网络地址，比如127.0.0.1\n这样就可以通过6000端口访问到内部的80端口。默认绑定的tcp端口如果要绑定udp端口，可以在后面加上udp\ndocker run -d -p 127.0.0.1:7000:80/udp httpd\ndocker port 命令可以让我们快捷地查看端口的绑定情况。\nDocker 容器互联 # 端口映射并不是唯一把 docker 连接到另一个容器的方法。\ndocker 有一个连接系统允许将多个容器连接在一起，共享连接信息。\ndocker 连接会创建一个父子关系，其中父容器可以看到子容器的信息。\n容器命名：--name\n新建网络：docker network create -d bridge test-net\n参数说明：\n-d：参数指定 Docker 网络类型，有 bridge、overlay。\n其中 overlay 网络类型用于 Swarm mode，在本小节中你可以忽略它。\n连接容器 # 在运行时候添加参数\u0026ndash;network 网络名 加入到网络\n进入容器相互ping通则证明两容器互联了\n配置DNS # 在宿主机的 /etc/docker/daemon.json 文件中增加以下内容来设置全部容器的 DNS：\n{\n\"dns\"\n:\n[\n\"114.114.114.114\",\n\"8.8.8.8\"\n]\n}\n设置后，启动容器的 DNS 会自动配置为 114.114.114.114 和 8.8.8.8。\n配置完，需要重启 docker 才能生效。\n查看容器的 DNS 是否生效可以使用以下命令，它会输出容器的 DNS 信息：\ndocker run -it --rm 容器名称 cat etc/resolv.conf\n手动指定容器的配置 # 如果只想在指定的容器设置 DNS，则可以使用以下命令：\n$ docker run -it --rm host_ubuntu --dns=114.114.114.114\n--dns-search=test.com ubunt\nu\n参数说明：\n-h HOSTNAME 或者 --hostname=HOSTNAME： 设定容器的主机名，它会被写到容器内的 /etc/ho\nstname 和 /etc/hosts。\n--dns=IP_ADDRESS： 添加 DNS 服务器到容器的 /etc/resolv.conf 中，让容器用这个服务器来解析所有不在 /etc/hosts 中的主机名。\n--dns-search=DOMAIN： 设定容器的搜索域，当设定搜索域为 .example.com 时，在搜索一个名为 host 的主机时，DNS 不仅搜索 host，还会搜索 host.example.com。\n如果在容器启动时没有指定 \u0026ndash;dns 和 \u0026ndash;dns-search，Docker 会默认用宿主主机上的 /etc/resolv.conf 来配置容器的 DNS\nDocker仓库管理 # 注册:在 https://hub.docker.com 免费注册一个 Docker 账号。\n登录docker login 退出：docker logout\n推送镜像 # 用户登录后，可以通过 docker push 命令将自己的镜像推送到 Docker Hub。\n以下命令中的 username 请替换为你的 Docker 账号用户名。\ndocker tag ubuntu:18.04 username/ubuntu:18.04\nDocker之Dockerfile # Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。\n基本的命令格式：\n编写镜像文件dockerfile\nFROM:它的妈妈是谁（基础镜像）\nMAINTAINER：告诉别人，你创造了它（维护者信息）\nRUN：你想让它干啥（在命令前面加上RUN）\nADD：往它肚子里放点文件（COPY文件，会自动解压）\nWORKDIR：我是cd，今天刚化了妆（切换到工作目录）\nEXPOSE：我要打开的门是啥（端口）\nRUN：奔跑吧，兄弟！（要做的操作）\nENV：容器的环境变量\nCMD：容器需要执行的命令\nFROM指令：标注基础镜像归属\nRUN指令：用于执行命令\n命令格式：\nshell 格式：\nRUN \u003c命令行命令\u003e\n# \u003c命令行命令\u003e 等同于，在终端操作的 shell 命令。\nexec 格式：\nRUN [\"可执行文件\",\n\"参数1\",\n\"参数2\"]\n# 例如：\n# RUN [\"./test.php\", \"dev\", \"offline\"] 等价于 RUN ./test.php dev offline\n注意：Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大。例如：\nFROM centos\nRUN yum install wget\nRUN wget -O redis.tar.gz \"http://download.redis.io/releases/redis-5.0.3.tar.gz\"\nRUN tar -xvf redis.tar.gz\n以上执行会创建 3 层镜像。可简化为以下格式：\nFROM centos\nRUN yum install wget \\\n\u0026\u0026 wget -O redis.tar.gz \"http://download.redis.io/releases/redis-5.0.3.tar.gz\" \\\n\u0026\u0026 tar -xvf redis.tar.gz\n如上，以 \u0026\u0026 符号连接命令，这样执行后，只会创建 1 层镜像。\n构建镜像 # 进入dockerfile文件所在目录执行构建命令\ndocker build -t nginx:test . .表示当前路径下的dockerfile\n注意：上下文路径下不要放无用的文件，因为会一起打包发送给 docker 引擎，如果文件过多会造成过程缓慢。\nDocker指定详解 # COPY：复制从上下文目录中复制文件或者目录到容器里指定路径。\nCOPY [--chown=\u003cuser\u003e:\u003cgroup\u003e]\n\u003c源路径1\u003e...\n\u003c目标路径\u003e\nCOPY [--chown=\u003cuser\u003e:\u003cgroup\u003e]\n[\"\u003c源路径1\u003e\",...\n\"\u003c目标路径\u003e\"]\n[--chown=:]：可选参数，用户改变复制到容器内文件的拥有者和属组。\nADD：ADD 指令和 COPY 的使用格式一致（同样需求下，官方推荐使用 COPY）\n不同之处：\nADD 的优点：在执行 \u003c源文件\u003e 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 \u003c目标路径\u003e。\nADD 的缺点：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定\nCMD：类似于RUN指令用于运行程序，但二者运行的时间点不同:\nCMD 在docker run 时运行。\nRUN 是在 docker build。\n作用：为启动的容器指定默认要运行的程序，程序运行结束，容器也就结束。CMD 指令指定的程序可被 docker run 命令行参数中指定要运行的程序所覆盖。\n注意：如果 Dockerfile 中如果存在多个 CMD 指令，仅最后一个生效。\n格式：\nCMD \u003cshell 命令\u003e\nCMD [\"\u003c可执行文件或命令\u003e\",\"\",\"\",...]\nCMD [\"\",\"\",...]\n# 该写法是为 ENTRYPOINT 指令指定的程序提供默认参数\n推荐使用第二种格式，执行过程比较明确。第一种格式实际上在运行的过程中也会自动转换成第二种格式运行，并且默认可执行文件是 sh。\nENTRYPOINT：类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序。\n但是, 如果运行 docker run 时使用了 --entrypoint 选项，此选项的参数可当作要运行的程序覆盖 ENTRYPOINT 指令指定的程序。\n优点：在执行 docker run 的时候可以指定 ENTRYPOINT 运行所需的参数。\n注意：如果 Dockerfile 中如果存在多个 ENTRYPOINT 指令，仅最后一个生效。\n格式：\nENTRYPOINT [\"\",\"\",\"\",...]\n可以搭配 CMD 命令使用：一般是变参才会使用 CMD ，这里的 CMD 等于是在给 ENTRYPOINT 传参，以下示例会提到。\n示例：\n假设已通过 Dockerfile 构建了 nginx:test 镜像：\nFROM nginx\nENTRYPOINT [\"nginx\",\n\"-c\"]\n# 定参\nCMD [\"/etc/nginx/nginx.conf\"]\n# 变参\n1、不传参运行\n$ docker run nginx:test\n容器内会默认运行以下命令，启动主进程。\nnginx -c /etc/nginx/nginx.conf\n2、传参运行\n$ docker run nginx:test -c /etc/nginx/new.conf\n容器内会默认运行以下命令，启动主进程(/etc/nginx/new.conf:假设容器内已有此文件)\nnginx -c /etc/nginx/new.conf\nENV:设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。\n格式：\nENV ENV =\u003cvalue1\u003e\n=\u003cvalue2\u003e...\n以下示例设置 NODE_VERSION = 7.2.0 ，\n在后续的指令中可以通过 $NODE_VERSION 引用：\nENV NODE_VERSION 7.2.\nRUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n\u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"\nARG：构建参数，与 ENV 作用一至。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。\n构建命令 docker build 中可以用 --build-arg \u003c参数名\u003e=\u003c值\u003e 来覆盖。\n格式：\nARG \u003c参数名\u003e[=\u003c默认值\u003e]\nVOLUME:定义匿名数据卷。在启动容器时忘记挂载数据卷，会自动挂载到匿名卷。\n作用：\n避免重要的数据，因容器重启而丢失，这是非常致命的。\n避免容器不断变大。\n格式：\nVOLUME [\"\u003c路径1\u003e\",\n\"\u003c路径2\u003e\"...]\nVOLUME \u003c路径\u003e\n在启动容器 docker run 的时候，我们可以通过 -v 参数修改挂载点。\nEXPOSE:仅仅只是声明端口。\n作用：\n帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射。\n在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。\n格式：\nEXPOSE \u003c端口1\u003e\n[\u003c端口2\u003e...]\nWORKDIR：指定工作目录。用 WORKDIR 指定的工作目录，会在构建镜像的每一层中都存在。（WORKDIR 指定的工作目录，必须是提前创建好的）。\ndocker build 构建镜像过程中的，每一个 RUN 命令都是新建的一层。只有通过 WORKDIR 创建的目录才会一直存在。\n格式：\nWORKDIR \u003c工作目录路径\u003e\nUSER:用于指定执行后续命令的用户和用户组，这边只是切换后续命令执行的用户（用户和用户组必须提前已经存在）。\n格式：\nUSER \u003c用户名\u003e[:\u003c用户组\u003e]\nHEALTHCHECK:用于指定某个程序或者指令来监控 docker 容器服务的运行状态。\n格式：\nHEALTHCHECK [选项] CMD \u003c命令\u003e：设置检查容器健康状况的命令\nHEALTHCHECK NONE：如果基础镜像有健康检查指令，使用这行可以屏蔽掉其健康检查指令\nHEALTHCHECK [选项] CMD \u003c命令\u003e\n:\n这边 CMD 后面跟随的命令使用，可以参考 CMD 的用法。\nONBUILD:用于延迟构建命令的执行。简单的说，就是 Dockerfile 里用 ONBUILD 指定的命令，在本次构建镜像的过程中不会执行（假设镜像为 test-build）。当有新的 Dockerfile 使用了之前构建的镜像 FROM test-build ，这是执行新镜像的 Dockerfile 构建时候，会执行 test-build 的 Dockerfile 里的 ONBUILD 指定的命令。\n格式：\n\u0026lt;span style=\u0026quot;color: black; font-size: 9pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: Consolas;\u0026quot;\u0026gt;ONBUILD \u0026lt;span style=\u0026quot;color: #666600;\u0026quot;\u0026gt;\u0026lt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;其它指令\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #666600; font-family: Consolas;\u0026quot;\u0026gt;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; Docker之Compose # Docker之Matchine # Docker之集群管理 # Docker实战 # ","date":"2020年33月30日","externalUrl":null,"permalink":"/2070.html","section":"Posts","summary":"","title":"Docker学习教程","type":"post"},{"content":" 1、问题：\n在Windows家庭版下安装了docker，并尝试在其中运行jupyter notebook等服务，但映射完毕之后，在主机的浏览器中，打开localhost:port无法访问对应的服务。\n2、问题出现的原因：\nThe reason you're having this, is because on Linux, the docker daemon (and your co\nntainers) run on the Linux machine itself, so \"localhost\" is also the host that the container is running on, and the ports are mapped to.\nOn Windows (and OS X), the docker daemon, and your containers cannot run natively, so only the docker client is running on your Windows machine, but the daemon (and your containers) run in a VirtualBox Virtual Machine, that runs Linux.\n因为docker是运行在Linux上的，在Windows中运行docker，实际上还是在Windows下先安装了一个Linux环境，然后在这个系统中运行的docker。也就是说，服务中使用的localhost指的是这个Linux环境的地址，而不是我们的宿主环境Windows。\n3、解决方法：\n通过命令:\ndocker-machine ip default # 其中，default 是docker-machine的name，可以通过docke\nr-machine -ls 查看\n找到这个Linux的ip地址，一般情况下这个地址是192.168.99.100，然后在Windows的浏览器中，输入这个地址，加上服务的端口即可启用了。\n比如，首先运行一个docker 容器：\ndocker run -it -p 8888:8888 conda:v1\n其中，conda:v1是我的容器名称。然后在容器中开启jupyter notebook 服务：\njupyter notebook --no-browser --port=8888 --ip=172.17.0.2 --allow-root\n其中的ip参数为我的容器的ip地址，可以通过如下命令获得：\ndocker inspect container_id\n最后在windows浏览器中测试结果：\nhttp://192.168.99.100:8888 ","date":"2020年33月30日","externalUrl":null,"permalink":"/2060.html","section":"Posts","summary":"","title":"解决windows系统无法对docker容器进行端口映射的问题","type":"post"},{"content":"环境： \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;# CentOS 7 \u0026lt;/span\u0026gt; $ setenforce 0 # 临时关闭，重启后失效\n$ systemctl stop firewalld.service # 临时关闭，重启后失效\n# 修改字符集，否则可能报 input/output error的问题，因为日志里打印了中文\n$ localedef -c -f UTF-8 -i zh_CN zh_CN.UTF-8\n$ export LC_ALL=zh_CN.UTF-8\n$ echo \u0026lsquo;LANG=\u0026ldquo;zh_CN.UTF-8\u0026rdquo;\u0026rsquo; \u0026gt; /etc/locale.conf\n准备Python3和Python虚拟环境\n安装依赖包： \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;yum -y install wget sqlite-devel xz gcc automake zlib-devel openssl-devel epel-release git\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 安装Python3.6：\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;yum -y install python36 python36-devel\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 建立Python虚拟环境\n因为 CentOS 6/7 自带的是 Python2，而 Yum 等工具依赖原来的 Python，为了不扰乱原来的环境我们来使用 Python 虚拟环境\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size:9pt\u0026quot;\u0026gt;$ python3 -m \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;venv \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:9pt\u0026quot;\u0026gt;py3 \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ source /opt/py3/bin/activate \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt;# \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;看到下面的提示符代表成功，以后运行\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; Jumpserver \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;都要先运行以上\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; source \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;命令，以下所有命令均在该虚拟环境中运行\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;(py3) [root@localhost py3]\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 懒癌解决办法：自动载入虚拟环境\n此项仅为懒癌晚期的人员使用，防止运行 Jumpserver 时忘记载入 Python 虚拟环境导致程序无法运行。使用autoenv\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ git clone https://github.com/kennethreitz/autoenv.git \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ echo 'source /opt/autoenv/activate.sh' \u0026gt;\u0026gt; ~/.bashrc \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;$ source ~/.bashrc\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 安装jumpserver\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt/ \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ git clone https://github.com/jumpserver/jumpserver.git \u0026amp;\u0026amp; cd jumpserver \u0026amp;\u0026amp; git checkout master \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt;$ echo \u0026quot;source /opt/py3/bin/activate\u0026quot; \u0026gt; /opt/jumpserver/.env # \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;进入\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; jumpserver \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;目录时将自动载入\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; python \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;虚拟环境\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt;# \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;首次进入\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; jumpserver \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;文件夹会有提示，按\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; y \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;即可\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;# Are you sure you want to allow this? (y/N) y\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 安装依赖RPM包\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt/jumpserver/requirements \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt;$ yum -y install $(cat rpm_requirements.txt) # \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;如果没有任何报错请继续\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 安装 Python 库依赖\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;$ pip install -r requirements.txt\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 安装 Redis, Jumpserver 使用 Redis 做 cache 和 celery broke\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ yum -y install redis \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ systemctl enable redis \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;$ systemctl start redis\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 安装 MySQL\n安装过程就过了，用原来的就行\n本教程使用 Mysql 作为数据库，如果不使用 Mysql 可以跳过相关 Mysql 安装和配置\n# centos7\n$ yum -y install mariadb mariadb-devel mariadb-server # centos7下安装的是mariadb\n$ systemctl enable mariadb\n$ systemctl start mariadb\n# centos6 自带的 mysql5.1 不支持，请在其他服务器上创建 jumpserver 数据库连接\n创建数据库 Jumpserver 并授权\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ mysql \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;\u0026gt; create database jumpserver default charset 'utf8'; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;\u0026gt; grant all on jumpserver.* to 'jumpserver'@'127.0.0.1' identified by 'weakPassword'; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;\u0026gt; flush privileges;\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 修改 Jumpserver 配置文件\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt/jumpserver \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cp config_example.py config.py \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;$ vi config.py\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 这里特别需要注意：更改的地方要完全对整齐，不能用tab建，只能用空格键，并且要完全对齐，\n注意更改的地方如下\n# Jumpserver 使用 SECRET_KEY 进行加密，请务必修改以下设置\n# SECRET_KEY = os.environ.get(\u0026lsquo;SECRET_KEY\u0026rsquo;) or \u0026lsquo;2vym+ky!997d5kkcc64mnz06y1mmui3lut#(^wd=%s_qj$1%x\u0026rsquo;\nSECRET_KEY =\n\u0026rsquo;请随意输入随机字符串（推荐字符大于等于 50位）\u0026rsquo;\n# DEBUG 模式 True为开启 False为关闭，默认开启，生产环境推荐关闭\n# 注意：如果设置了DEBUG = False，访问8080端口页面会显示不正常，需要搭建 nginx 代理才可以正常访问\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;DEBUG \u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;=\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt; os\u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;.\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;environ\u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;.\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;get(\u0026lt;span style=\u0026quot;color:#4070a0\u0026quot;\u0026gt;\u0026quot;DEBUG\u0026quot;\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;) \u0026lt;span style=\u0026quot;color:#007020\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;or\u0026lt;/strong\u0026gt;\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;span style=\u0026quot;color:#007020\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;True\u0026lt;/strong\u0026gt;\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; # 日志级别，默认为DEBUG，可调整为INFO, WARNING, ERROR, CRITICAL，默认INFO\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;LOG_LEVEL \u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;=\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt; os\u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;.\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;environ\u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;.\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;get(\u0026lt;span style=\u0026quot;color:#4070a0\u0026quot;\u0026gt;\u0026quot;LOG_LEVEL\u0026quot;\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;) \u0026lt;span style=\u0026quot;color:#007020\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;or\u0026lt;/strong\u0026gt;\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;span style=\u0026quot;color:#4070a0\u0026quot;\u0026gt;'WARNING'\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;LOG_DIR \u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;=\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt; os\u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;.\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;path\u0026lt;span style=\u0026quot;color:#666666\u0026quot;\u0026gt;.\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;join(BASE_DIR, \u0026lt;span style=\u0026quot;color:#4070a0\u0026quot;\u0026gt;'logs'\u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;)\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; # 默认使用SQLite3，如果使用其他数据库请注释下面两行\n# DB_ENGINE = \u0026lsquo;sqlite3\u0026rsquo;\n# DB_NAME = os.path.join(BASE_DIR, \u0026lsquo;data\u0026rsquo;, \u0026lsquo;db.sqlite3\u0026rsquo;)\n# 如果需要使用mysql或postgres，请取消下面的注释并输入正确的信息,本例使用mysql做演示(mariadb也是mysql)\nDB_ENGINE = os.environ.get(\"DB_ENGINE\") or\n'mysql'\nDB_HOST = os.environ.get(\"DB_HOST\") or\n'127.0.0.1'\nDB_PORT = os.environ.get(\"DB_PORT\") or\n3306\nDB_USER = os.environ.get(\"DB_USER\") or\n'jumpserver'\nDB_PASSWORD = os.environ.get(\"DB_PASSWORD\") or\n'weakPassword'\nDB_NAME = os.environ.get(\"DB_NAME\") or\n'jumpserver'\n# Django 监听的ip和端口，生产环境推荐把0.0.0.0修改成127.0.0.1，这里的意思是允许x.x.x.x访问，127.0.0.1表示仅允许自身访问\n# ./manage.py runserver 127.0.0.1:8080\nHTTP_BIND_HOST =\n'0.0.0.0'\nHTTP_LISTEN_PORT =\n8080\n生成数据库表结构和初始化数据\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt/jumpserver/utils \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;$ sh make_migrations.sh\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 运行 Jumpserver\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt/jumpserver \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt;$ ./jms start all # \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;后台运行使用\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; -d \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;参数\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;./jms start all -d\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 到这里登录jumpserver时可能会会无法登录。需要手动设置超级用户如下设置\n运行不报错，请浏览器访问 http://192.168.244.144:8080/ 默认账号: admin 密码: admin 页面显示不正常先不用处理，继续往下操作，后面搭建 nginx 代理后即可正常访问，原因是因为 django 无法在非 debug 模式下加载静态资源\n在终端修改管理员密码及新建超级用户\n\u0026lt;/div\u0026gt; \u0026lt;p style=\u0026quot;background: #eeffcc\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt;# \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体\u0026quot;\u0026gt;管理密码忘记了或者重置管理员密码\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: #eeffcc\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ source /opt/py3/bin/activate\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: #eeffcc\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ cd /opt/jumpserver/apps\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: #eeffcc\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ python manage.py changepassword \u0026lt;user_name\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: #eeffcc\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: #eeffcc\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt;# \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体\u0026quot;\u0026gt;新建超级用户的命令如下命令\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: #eeffcc\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ python manage.py createsuperuser --username=user --email=user@domain.com\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify; background: #fcfcfc\u0026quot;\u0026gt; \u0026lt;h2\u0026gt; \u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线 Light\u0026quot;\u0026gt;三\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Georgia\u0026quot;\u0026gt;. \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线 Light\u0026quot;\u0026gt;安装\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Georgia\u0026quot;\u0026gt; SSH Server \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线 Light\u0026quot;\u0026gt;和\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Georgia\u0026quot;\u0026gt; WebSocket Server: Coco\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/h2\u0026gt; \u0026lt;/p\u0026gt; 为啥要安装？ Coco 实现了 SSH Server 和 Web Terminal Server 的组件，提供 SSH 和 WebSocket 接口, 使用 Paramiko 和 Flask 开发。 \u0026lt;span style=\u0026quot;color:#404040\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;新开一个终端，别忘了\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Arial\u0026quot;\u0026gt; source /opt/py3/bin/activate\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;p style=\u0026quot;background: #00b050\u0026quot;\u0026gt; \u0026lt;pre\u0026gt;\u0026lt;code\u0026gt;\u0026amp;lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt \u0026lt;/span\u0026gt;\n\u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\"\u003e$ source /opt/py3/bin/activate \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\"\u003e$ git clone https://github.com/jumpserver/coco.git \u0026\u0026 cd coco \u0026\u0026 git checkout master \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas; background-color:yellow\"\u003e$ echo \"source /opt/py3/bin/activate\" \u0026gt; /opt/coco/.env # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体; background-color:yellow\"\u003e进入\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas; background-color:yellow\"\u003e coco \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体; background-color:yellow\"\u003e目录时将自动载入\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas; background-color:yellow\"\u003e python \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体; background-color:yellow\"\u003e虚拟环境\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas; background-color:yellow\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas; background-color:yellow\"\u003e# \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体; background-color:yellow\"\u003e首次进入\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas; background-color:yellow\"\u003e coco \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体; background-color:yellow\"\u003e文件夹会有提示，按\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas; background-color:yellow\"\u003e y \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体; background-color:yellow\"\u003e即可\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas; background-color:yellow\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;# Are you sure you want to allow this? (y/N) y\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 安装依赖包\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt/coco/requirements \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ \u0026lt;em\u0026gt;yum -y install $(cat rpm_requirements.txt)\u0026lt;/em\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;$ pip install -r requirements.txt\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体\u0026quot;\u0026gt;修改配置文件并运行\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ cd /opt/coco \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt; background-color:yellow\u0026quot;\u0026gt;$ mkdir keys logs \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt;$ cp conf_example.py conf.py # \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;如果\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; coco \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;与\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; jumpserver \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体; background-color:yellow\u0026quot;\u0026gt;分开部署，请手动修改\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas; background-color:yellow\u0026quot;\u0026gt; conf.py \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;$ vi conf.py\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; 到这里如果是根据文档安装的就不需要更改内容直接启动就行\n\u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt;$ ./cocod start # \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体\u0026quot;\u0026gt;后台运行使用\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt; -d \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体\u0026quot;\u0026gt;参数\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt;./cocod start -d \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 启动成功后去Jumpserver 会话管理-终端管理接受coco的注册\n注册后就可以使用2222端口登录跳板机\n安装 Web Terminal 前端: Luna\n如果不需要web端这里可以不安装\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ cd /opt \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ wget https://github.com/jumpserver/luna/releases/download/1.4.3/luna.tar.gz \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ tar xvf luna.tar.gz \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ chown -R root:root luna \u0026lt;/span\u0026gt; 配置nginx整合组建\n安装nginx省略\n准备配置文件\n修改 /etc/nginx/conf.d/jumpserver.conf\n\u0026lt;span style=\u0026quot;color:#404040; font-family:Consolas; font-size:9pt\u0026quot;\u0026gt;$ vim /etc/nginx/conf.d/jumpserver.conf \u0026lt;/span\u0026gt; \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e# \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e注意注释\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e nginx.conf \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e里面的\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e server {} \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e内容\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e，\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003eCentOS 6 \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e需要修改文件\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e /etc/nginx/cond.f/default.conf \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003eserver { \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e listen 80; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e代理端口，以后将通过此端口进行访问，不再通过\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e8080\u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e端口\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e server_name demo.jumpserver.org; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e修改成你的域名\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e client_max_body_size 100m; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e录像及文件上传大小限制\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e location /luna/ { \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e try_files $uri / /index.html; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e alias /opt/luna/; # luna \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e路径，如果修改安装目录，此处需要修改\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e } \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e location /media/ { \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e add_header Content-Encoding gzip; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e root /opt/jumpserver/data/; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e录像位置，如果修改安装目录，此处需要修改\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e } \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e location /static/ { \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e root /opt/jumpserver/data/; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e静态资源，如果修改安装目录，此处需要修改\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e } \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e location /socket.io/ { \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e proxy_pass http://localhost:5000/socket.io/; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e如果\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003ecoco\u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e安装在别的服务器，请填写它的\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003eip \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_buffering off; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_http_version 1.1; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header Upgrade $http_upgrade; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header Connection \"upgrade\"; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header X-Real-IP $remote_addr; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header Host $host; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e access_log off; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e } \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e location /coco/ { \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e proxy_pass http://localhost:5000/coco/; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e如果\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003ecoco\u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e安装在别的服务器，请填写它的\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003eip \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header X-Real-IP $remote_addr; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header Host $host; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e access_log off; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e } \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e location /guacamole/ { \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e proxy_pass http://localhost:8081/; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e如果\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003eguacamole\u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e安装在别的服务器，请填写它的\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003eip \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_buffering off; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_http_version 1.1; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header Upgrade $http_upgrade; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header Connection $http_connection; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header X-Real-IP $remote_addr; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header Host $host; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e access_log off; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e } \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e location / { \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e proxy_pass http://localhost:8080; # \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e如果\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003ejumpserver\u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e安装在别的服务器，请填写它的\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003eip \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header X-Real-IP $remote_addr; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header Host $host; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e } \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e} \u0026lt;/span\u003e \u0026lt;span style=\u0026quot;color:#404040; font-size:9pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:宋体\u0026quot;\u0026gt;注意域名的更改\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Consolas\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 运行nginx\n测试连接\n\u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:宋体\"\u003e如果登录客户端是\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e macOS \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e或\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e Linux \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e，登录语法如下\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e$ ssh -p2222 admin@192.168.244.144 \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e$ sftp -P2222 admin@192.168.244.144 \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:宋体\"\u003e密码\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e: admin \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:宋体\"\u003e如果登录客户端是\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e Windows \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e，\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003eXshell Terminal \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e登录语法如下\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e$ ssh admin@192.168.244.144 2222 \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-family:Consolas; font-size:9pt\"\u003e$ sftp admin@192.168.244.144 2222 \u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:宋体\"\u003e密码\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e: admin \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:宋体\"\u003e如果能登陆代表部署成功\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e# sftp\u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e默认上传的位置在资产的\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e /tmp \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e目录下\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e \u0026lt;/span\u003e\u0026lt;/span\u003e \u0026lt;span style=\"color:#404040; font-size:9pt\"\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e# windows\u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e拖拽上传的位置在资产的\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e Guacamole RDP\u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e上的\u0026lt;/span\u003e\u0026lt;span style=\"font-family:Consolas\"\u003e G \u0026lt;/span\u003e\u0026lt;span style=\"font-family:宋体\"\u003e目录下\u0026lt;/span\u003e\u0026lt;/span\u003e ","date":"2020年33月30日","externalUrl":null,"permalink":"/2057.html","section":"Posts","summary":"","title":"Jumpserver部署文档官方版","type":"post"},{"content":" 使用的插件： # FileHeader\n这个插件是我使用过的感觉比较好用，有简单的插件了\n主要功能有：自动添加文件头部注释和给没有注释的文件添加头部注释\n上面两个功能是我主要用的，换几个电脑，都在用Sublime Text，好几次都忘记了怎么设置文件头部注释，这回彻底记录一下\n如何安装插件？ # ctrl + shift + p\n\u0026lt;/div\u0026gt; install package\n\u0026lt;/div\u0026gt; FileHeader\n\u0026lt;/div\u0026gt; \u0026lt;p style=\u0026quot;background: #fefef2;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;安装成功后该怎么配置文件头部信息？\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; 打开 Preference -\u003e Package Setting -\u003e FileHeader-\u003eSetting Default\n\u0026lt;/div\u0026gt; 打开 Preference -\u003e Package Setting -\u003e FileHeader-\u003e Setting User\n\u0026lt;/div\u0026gt; 一般我们把自己的配置放在 user 中：\n\u0026lt;/div\u0026gt; 设置自己的默认参数。\n\u0026lt;/div\u0026gt; \u0026lt;p style=\u0026quot;background: #fefef2; margin-left: 21pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;我的默认参数如下：\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: #fefef2; margin-left: 21pt;\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/033020_0213_SublimeText1.png\u0026quot; alt=\u0026quot;\u0026quot; /\u0026gt;\u0026lt;span style=\u0026quot;color: black; font-family: Verdana; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; 1. \u0026lt;div style=\u0026quot;background: #fefef2;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;上面的是公共的参数\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; ### 如何根据文件类型使用不同的头部注释呢？ \u0026lt;span style=\u0026quot;color: black; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;那支持的文件在哪里呢，怎么配置不同类型的文件放置位置。打开插件文件夹，在\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt; template \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;中会发现有\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt; header \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;和\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt; body \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;两个文件夹。这里就是配置文件中默认的配置参数位置。\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: black; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;注意上面的文件路径，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: black; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;修改我们想要添加的文件类型名的内容，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;增加我们的参数即可。其中有系统默认值，和我们上面设置的值，作为变量放在\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt; {{}} \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;中，例如：修改\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt;shell\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;文件的头部注释\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: black; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: #fefef2;\u0026quot;\u0026gt;打开下图文件写入内容\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Verdana; background-color: #fefef2;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; #!/bin/bash \\# @Author: {{author}} \\# @Date: {{create_time}} \\# @Last Modified by: {{last\\_modified\\_by}} \\# @Last Modified time: {{last\\_modified\\_time}} \\# @E-mail: {{email}} 重启后新建文件就设置了文件头注释了 上面是添加和生成的操作方式 自动生成的文件头部信息 ","date":"2020年33月30日","externalUrl":null,"permalink":"/2055.html","section":"Posts","summary":"","title":"Sublime Text自动设置文件头部注释","type":"post"},{"content":"问题出现环境，OS版本：CentOS-7-x86_64-Minimal-1708；ES版本：elasticsearch-6.2.2。\n1、max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]\n每个进程最大同时打开文件数太小，可通过下面2个命令查看当前数量\n\u0026lt;span style=\u0026quot;color: black; font-family: Courier New; font-size: 16pt; background-color: whitesmoke;\u0026quot;\u0026gt;ulimit -Hn\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\n\u0026lt;span style=\u0026quot;font-family: Courier New; font-size: 14pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black; background-color: whitesmoke;\u0026quot;\u0026gt;ulimit -Sn\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\n修改/etc/security/limits.conf文件，增加配置，用户退出后重新登录生效\n\u0026lt;span style=\u0026quot;color: black; font-family: Courier New; font-size: 16pt; background-color: whitesmoke;\u0026quot;\u0026gt;* soft nofile 65536 \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family: Courier New; font-size: 16pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black; background-color: whitesmoke;\u0026quot;\u0026gt;* hard nofile 65536\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 2、max number of threads [3818] for user [es] is too low, increase to at least [4096]\n问题同上，最大线程个数太低。修改配置文件/etc/security/limits.conf，增加配置\n1\n\u0026lt;p style=\u0026quot;text-align: right; background: white;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #afafaf; font-family: Consolas; font-size: 7pt;\u0026quot;\u0026gt;2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;border-top: solid silver 0.5pt; border-left: none; border-bottom: solid silver 0.5pt; border-right: solid silver 0.5pt; padding: 3px;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;background: #f4f4f4;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-family: Consolas; font-size: 7pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;* soft nproc 4096\u0026lt;/span\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: white;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: black; font-family: Consolas; font-size: 7pt;\u0026quot;\u0026gt;* hard nproc 4096\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; 可通过命令查看\n\u0026lt;span style=\u0026quot;color: black; font-family: Courier New; font-size: 16pt; background-color: whitesmoke;\u0026quot;\u0026gt;ulimit -Hu \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family: Courier New; font-size: 16pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black; background-color: whitesmoke;\u0026quot;\u0026gt;ulimit -Su\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 3、max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]\n修改/etc/sysctl.conf文件，增加配置vm.max_map_count=262144\n\u0026lt;span style=\u0026quot;font-family: Courier New;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size: 16pt; background-color: whitesmoke;\u0026quot;\u0026gt;vi /etc/sysctl.conf\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 7pt; background-color: whitesmoke;\u0026quot;\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 14pt; background-color: whitesmoke;\u0026quot;\u0026gt;sysctl -p\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 执行命令sysctl -p生效\n4、Exception in thread \u0026ldquo;main\u0026rdquo; java.nio.file.AccessDeniedException: /usr/local/elasticsearch/elasticsearch-6.2.2-1/config/jvm.options\nelasticsearch用户没有该文件夹的权限，执行命令\n\u0026lt;span style=\u0026quot;font-family: Courier New; font-size: 14pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: black; background-color: whitesmoke;\u0026quot;\u0026gt;chown -R es:es /usr/local/elasticsearch/\u0026lt;/span\u0026gt;\t\u0026lt;/span\u0026gt; ","date":"2020年33月28日","externalUrl":null,"permalink":"/2033.html","section":"Posts","summary":"","title":"elasticsearch启动常见错误","type":"post"},{"content":"","date":"2020年33月27日","externalUrl":null,"permalink":"/tags/mysql/","section":"标签","summary":"","title":"Mysql","type":"tags"},{"content":"","date":"2020年33月27日","externalUrl":null,"permalink":"/tags/zabbix/","section":"标签","summary":"","title":"Zabbix","type":"tags"},{"content":" Zabbix监控实现跨区域跨网络监控数据 # 环境：\n公司现有服务器10台，其中5台服务器有一台安装了zabbix，并且这5台服务器处于一个网络，只有一台服务器有公网ip，另外的5台处于另一个网络，仅有一台服务器拥有公网ip，其余四台只有内网ip并且不能够上网，\n实现目标：对所有服务器进行监控\n实现原理：\n架构：server-\u0026ndash;proxy-\u0026ndash;agentd\n通过proxy这个桥梁来接收不在一个网络的机器的数据，然后proxy将数据发送到server端\nServer端将数据展现出来\nServer：39.122.11.132 Proxy：39.122.12.111 Agentd：192.168.1.101 Agentd：192.168.1.102 Agentd：192.168.1.104 Agentd：192.168.1.105 Agentd：192.168.1.106 部署过程：\n在这里就不写server端的部署过程了，默认server端已经安装完毕，并且能够正常使用\n先将zabbix的安装包传到proxy拥有外网ip的服务器上\n部署zabbix_agent端 # 解压安装包\n进入解压目录编译\n依赖包\nyum install -y net-snmp-devel yum install curl-devel 编译参数\n./configure --prefix=/usr/local/zabbix --enable-agent --enable-proxy --with-mysql --with-net-snmp --with-libcurl #安装 make \u0026\u0026 make install 更改配置文件\nvim /usr/local/zabbix/etc/zabbix_proxy.conf 需要更改的项如下\nServer=zabiix_server的公网ip地址 Hostname=本机的主机名 DBhost= zabiix_server的公网ip地址 DBName=zabbix_server端端数据库 DBUser=zabbix_server端数据库用户名 DBPassword=zabbix_server端数据库授权密码 DBPort=3306 到server端去建库授权proxy端连接\n最后启动proxy端\n/usr/local/zabbix/sbin/zabbix_proxy 至此proxy部署完毕\n部署zabbix_agent端 # 先将zabbix的安装包传到服务器上\n安装agentd步骤如下\n解压安装包\n进入解压目录编译\n./configure --prefix=/usr/local/zabbix --enable-agent 更改配置文件\nvim /usr/local/zabbix/etc/zabbix_agentd.conf 需要更改的项如下\nServer=zabiix_proxy的内网ip地址 Hostname=本机的主机名 #注释掉： ServerActive=127.0.0.1 这里放上一个脚本安装部署agent端\n#!bin/bash #zabbix_agentd install groupadd zabbix useradd -g zabbix -m zabbix HOST=$\"$(hostname)\" cd /usr/src/ tar zxf zabbix-3.0.3.tar.gz cd /usr/src/zabbix-3.0.3 ./configure --prefix=/usr/local/zabbix --enable-agent make make install cd /usr/local/zabbix/etc/ #更改zabbix_agentd的配置文件并且启动 hostname \u0026gt; /usr/local/kk.log HOST=cat /usr/local/kk.log ip=ifconfig eth0|awk -F \u0026#039;[ :]+\u0026#039; \u0026#039;NR==2 {print $3}\u0026#039; echo $ip echo $HOST sed -i \"s/Server=127.0.0.1/Server=172.17.146.206/g\" /usr/local/zabbix/etc/zabbix_agentd.conf sed -i \u0026#039;s/ServerActive=127.0.0.1/#ServerActive=127.0.0.1/g\u0026#039; /usr/local/zabbix/etc/zabbix_agentd.conf sed -i \"s#Hostname=Zabbix server#Hostname=$HOST#g\" /usr/local/zabbix/etc/zabbix_agentd.conf cp /usr/src/zabbix-3.0.3/misc/init.d/tru64/zabbix_agentd /etc/init.d/ chmod +x /etc/init.d/zabbix_agentd echo \"# chkconfig: 2345 10 90\" \u0026gt;\u0026gt; /etc/init.d/zabbix_agentd ln -s /usr/local/zabbix/sbin/* /usr/local/sbin/ ln -s /usr/local/zabbix/bin/* /usr/local/bin/ chkconfig --add zabbix_agentd chkconfig zabbix_agentd on service zabbix_agentd restart 至此部署完毕，下面添加主机\n添加模板就行了\n","date":"2020年33月27日","externalUrl":null,"permalink":"/14.html","section":"Posts","summary":"","title":"Zabbix监控实现跨区域跨网络监控数据","type":"post"},{"content":"","date":"2020年33月27日","externalUrl":null,"permalink":"/categories/k8s%E5%B8%B8%E7%94%A8%E5%AF%B9%E8%B1%A1/","section":"Categories","summary":"","title":"K8s常用对象","type":"categories"},{"content":" 摘要：随着Docker容器云的广泛应用，大量的业务软件运行在容器中，这使得对docker容器的监控越来越重要。传统的监控系统大多数是针对物理机或者虚拟机设计的，而容器的特点不同与传统的物理机或者虚拟机，如果还是采用传统的监控系统，则会增加监控复杂程度，那么如何对容器进行监控呢？\n大家晚上好，今天很高兴能在这里和大家一起交流和分享在工作中的一些经验和总结。都知道监控在运维体系乃至产品的整个生命中期都是重要的一个环节，针对不同的应用场景，监控方案也会有很大的不同。本次就和大家分享一下我在开发我们公司新产品ufleet的监控模块时的一些技术总结，如果有错误的地方，欢迎大家指出。主要内容有:\n1.数据的采集方式\n2.监控原理\n3.容器的监控方案\n4.kubernetes上的主机和容器的监控\n5.监控工具的对比\n一个完整的监控体系包括：采集数据、分析存储数据、展示数据、告警以及自动化处理、监控工具自身的安全机制，接下来会对数据的采集和监控原理深入讲解，其他部分会在一些架构中穿插讲解。\n一 、数据的采集方式 # 1.命令行方式。比如在linux系统上使用top，vmstat，netstat写一些shell脚本进行数据的采集，再把数据存储在文本文件中进行处理。\n2.嵌入式。通过在进程中运行agent的方式获取应用的状态。如目前的APM产品都是通过将监控工具嵌入到应用内部进行数据采集。\n3.主动输出。提前在应用中埋点，应用主动上报。比如一些应用系统的业务状态，可以通过在日志中主动输出状态用于采集。\n4.旁路式。通过外部获取的方式采集数据。比如对网站url的探测，模拟业务的报文 ，对服务器的ping，流量的监控。可以通过在交换机上将流量进行端口复制，将源始流量复制到另一个端口后再进行处理，这样这业务系统是完全没有侵入。\n5.远程接入。通过对应用进程接口调用获取应用的状态。比如使用JMX的方式连接到java进程中，对进程的状态进行采集。\n6.入侵式。不同于嵌入式，入侵式的agent是独立运行的进程，而不是运行在进程中。这个目前监控工具比较常用的方式，比如zabbix，在主机上运行一个进程进行相关数据的采集。\n二、监控原理 # 具体监控指标总结如下：\n首先是容器本身资源使用情况：cpu，内存，网络，磁盘 物理机的资源使用情况：cpu，内存，网络，磁盘 物理机上容器镜像情况，名字，大小，版本。 1.主机的监控 # （1）Cpu数据\n使用top命令可以查看当前cpu使用情况，源文件来自/proc/stat\n采样两个足够短的时间间隔的Cpu快照，分别记作t1,t2，其中t1、t2的结构均为：\n(user、nice、system、idle、iowait、irq、softirq、stealstolen、guest)的9元组;\na) 计算总的Cpu时间片totalCpuTime\n把第一次的所有cpu使用情况求和，得到s1; 把第二次的所有cpu使用情况求和，得到s2; s2 – s1得到这个时间间隔内的所有时间片，即totalCpuTime = j2 – j1 ; b) 计算空闲时间idle\nidle对应第四列的数据，用第二次的第四列- 第一次的第四列即可 idle=第二次的第四列- 第一次的第四列 c) 计算cpu使用率\npcpu =100* (total-idle)/total （2）linux内存监控\n使用free命令可以查看当前内存使用情况。\n其数据来源是来自/proc/meminfo文件\n常用的计算公式：\nreal_used = used_mem – buffer – cache\nreal_free = free_mem + buffer + cache\ntotal_mem = used_mem + free_mem\n（3） Network数据\n/proc/net/dev保存着有关网络的数据\n如计算一段时间sec秒内的网络平均流量：\ninfirst=$(awk ‘/’$eth’/{print $1 }’ /proc/net/dev |sed ‘s/’$eth’://’)\noutfirst=$(awk ‘/’$eth’/{print $10 }’ /proc/net/dev)\nsumfirst=$(($infirst+$outfirst))\nsleep $sec”s”\ninend=$(awk ‘/’$eth’/{print $1 }’ /proc/net/dev |sed ‘s/’$eth’://’)\noutend=$(awk ‘/’$eth’/{print $10 }’ /proc/net/dev)\nsumend=$(($inend+$outend))\nsum=$(($sumend-$sumfirst))\naver=$(($sum/$sec))\n2.docker的监控 # docker自身提供了一种内存监控的方式，即可以通过docker stats对容器内存进行监控。\n该方式实际是通过对cgroup中相关数据进行取值从而计算得到。其数据来源是/sys/fs/cgroup\ndocker client相关代码入口可参考：/docker/docker/api/client/stats.go#141\ndocker daemon相关代码入口可参考：/docker/docker/daemon/daemon.go#1474\n（1）Cpu数据\ndocker daemon会记录这次读取/sys/fs/cgroup/cpuacct/docker/ [containerId]/cpuacct.usage的值，作为cpu_total_usage；并记录了上一次读取的该值为 pre_cpu_total_usage；读取/proc/stat中cpu field value，并进行累加，得到system_usage;并 记录上一次的值为pre_system_usage；读取/sys/fs/cgroup/cpuacct/docker/ [containerId]/cpuacct.usage_percpu中的记录，组成数组per_cpu_usage_array；\ndocker stats计算Cpu Percent的算法：\ncpu_delta = cpu_total_usage – pre_cpu_total_usage;\nsystem_delta = system_usage – pre_system_usage;\nCPU % = ((cpu_delta / system_delta) * length(per_cpu_usage_array) ) * 100.0\n(2) Memory数据\n读取/sys/fs/cgroup/memory/docker/[containerId]/memory.usage_in_bytes的值，作为 mem_usage；如果容器限制了内存，则读取/sys/fs/cgroup/memory/docker/ [id]/memory.limit_in_bytes作为mem_limit，否则mem_limit = machine_mem；docker stats计算 Memory数据的算法：\nMEM USAGE = mem_usage\nMEM LIMIT = mem_limit\nMEM % = (mem_usage / mem_limit) * 100.0\n（3）Network Stats数据：\n获取属于该容器network namespace veth pairs在主机中对应的veth*虚拟网卡EthInterface 数组，然后循环数组中每个网卡设备，读取/sys/class/net/[device]/statistics/rx_bytes得到rx_bytes, 读取/sys/class/net/[device]/statistics/tx_bytes得到对应的tx_bytes。\n将所有这些虚拟网卡对应的rx_bytes累加得到该容器的rx_bytes。\n将所有这些虚拟网卡对应的tx_bytes累加得到该容器的tx_bytes。\ndocker stats计算Network IO数据的算法：\nNET I = rx_bytes\nNET O = tx_bytes\n三、容器的监控方案 # 1.单台主机容器监控： # （1）docker stats\n单台主机上容器的监控实现最简单的方法就是使用命令Docker stats，就可以显示所有容器的资源使用情况.\n这样就可以查看每个容器的CPU利用率、内存的使用量以及可用内存总量。请注意，如果你没有限制容器内存，那么该命令将显示您的主机的内存总量。但它并不意味着你的每个容器都能访问那么多的内存。另外，还可以看到容器通过网络发送和接收的数据总量\n虽然可以很直观地看到每个容器的资源使用情况，但是显示的只是一个当前值，并不能看到变化趋势。\n（2）Google的 cAdvisor 是另一个知名的开源容器监控工具:\n只需在宿主机上部署cAdvisor容器，用户就可通过Web界面或REST服务访问当前节点和容器的性能数据(CPU、内存、网络、磁盘、文件系统等等)，非常详细。\n它的运行方式也有多种：\na.直接下载命令运行\n下载地址：https://github.com/google/cadvisor/releases/latest\n格式: nohup /root/cadvisor -port=10000 \u0026amp;\u0026raquo;/var/log/kubernetes/cadvisor.log \u0026amp;\n访问： http://ip:10000/\nb.以容器方式运行\ndocker pull index.alauda.cn/googlelib/cadvisor 运行：\ndocker run -d --volume=/:/rootfs:ro --volume=/var/run:/var/run:rw –volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=cadvisor index.alauda.cn/googlelib/cadvisor:latest c.kubelet选项：\n在启动kubelete时候，启动cadvisor\ncAdvisor当前都是只支持http接口方式，被监控的容器应用必须提供http接口，所以能力较弱。在Kubernetes的新版本中已经集成了cAdvisor，所以在Kubernetes架构下，不需要单独再去安装cAdvisor，可以直接使用节点的IP加默认端口4194就可以直接访问cAdvisor的监控面板。UI界面如下：\n因为cAdvisor默认是将数据缓存在内存中，在显示界面上只能显示1分钟左右的趋势，所以历史的数据还是不能看到，但它也提供不同的持久化存储后端，比如influxdb等，同时也可以根据业务的需求，只利用cAdvisor提供的api接口，定时去获取数据存储到数据库中，然后定制自己的界面。\n如需要通过cAdvisor查看某台主机上某个容器的性能数据只需要调用： http://\u0026lt;host_ip\u0026gt;:4194/v1.3/subcontainers/docker/\u0026lt;container_id\u0026gt;\ncAdvisor的api接口返回的数据结构如下：\n可以根据这些数据分别计算出 CPU、内存、网络等资源的使用或者占用情况。\n四、kubernetes上的监控 # 1.容器的监控 # 在Kubernetes监控生态中，一般是如下的搭配使用：\n（1）Cadvisor+InfluxDB+Grafana：\nCadvisor：将数据，写入InfluxDB\nInfluxDB ：时序数据库，提供数据的存储，存储在指定的目录下\nGrafana ：提供了WEB控制台，自定义查询指标，从InfluxDB查询数据，并展示\ncAdivsor虽然能采集到监控数据，也有很好的界面展示，但是并不能显示跨主机的监控数据，当主机多的情况，需要有一种集中式的管理方法将数据进行汇总展示，最经典的方案就是 cAdvisor+ Influxdb+grafana，可以在每台主机上运行一个cAdvisor容器负责数据采集，再将采集后的数据都存到时序型数据库influxdb中，再通过图形展示工具grafana定制展示面板。\n在上面的安装步骤中，先是启动influxdb容器，然后进行到容器内部配置一个数据库给cadvisor专用，然后再启动cadvisor容器，容器启动的时候指定把数据存储到influxdb中，最后启动grafana容器，在展示页面里配置grafana的数据源为influxdb，再定制要展示的数据，一个简单的跨多主机的监控系统就构建成功了。\n（2）Kubernetes——Heapster+InfluxDB+Grafana：\nHeapster：在k8s集群中获取metrics和事件数据，写入InfluxDB，heapster收集的数据比cadvisor多，却全，而且存储在influxdb的也少。\nInfluxDB：时序数据库，提供数据的存储，存储在指定的目录下。\nGrafana：提供了WEB控制台，自定义查询指标，从InfluxDB查询数据，并展示。\nHeapster是一个收集者，将每个Node上的cAdvisor的数据进行汇总，然后导到InfluxDB。Heapster的前提是使用cAdvisor采集每个node上主机和容器资源的使用情况，再将所有node上的数据进行聚合，这样不仅可以看到Kubernetes集群的资源情况，还可以分别查看每个node/namespace及每个node/namespace下pod的资源情况。这样就可以从cluster，node，pod的各个层面提供详细的资源使用情况。\n2、kubernetes中主机监控方案： # prometheus\nprometheus是个集 db、graph、statistic、alert 于一体的监控工具，安装也非常简单，下载包后做些参数的配置，比如监控的对象就可以运行了，默认通过9090端口访问。\n（1） 部署node-exporter容器\nnode-exporter 要在集群的每台主机上部署，使用主机网络，端口是9100 如果有多个K8S集群，则要在多个集群上部署，部署node-exporter的命令如下：\n# kubectl create -f node-exporter-deamonset.yaml\n获取metrics数据http://ip:9100/metrics\n返回的数据结构不是json格式，如果要使用该接口返回的数据，可以通过正则匹配，匹配出需要的数据，然后在保存到数据库中。\n（2） 部署Prometheus和Grafana\nPrometheus 通过配置文件发现新的节点，文件路径是/sd/*.json,可以通过修改已有的配置文件，添加新的节点纳入监控，命令如下：\n# kubectl create -f prometheus-file-sd.yaml\n（3）查看Prometheus监控的节点\nPrometheus 的访问地址是：http://192.168.xxx.xxx:31330\n通过网页查看监控的节点Status –\u0026gt; Targets\n（4）另外可以配置Grafana展示Prometheus输出的监控数据，配置仪表盘等。\nGrafana 访问地址是:http://192.168.xxx.xxx:31331\n账号:admin 密码：admin\n注：系统预置了几个常用监控仪表盘配置，更多的配置可以到官方网站下载\n五、监控工具的对比 # 以上从几个典型的架构上介绍了一些监控，但都不是最优实践。需要根据生产环境的特点结合每个监控产品的优势来达到监控的目的。比如Grafana的图表展示能力强，但是没有告警的功能，那么可以结合Prometheus在数据处理能力改善数据分析的展示。下面列了一些监控产品，但并不是严格按表格进行分类，比如Prometheus和Zabbix都有采集，展示，告警的功能。都可以了解一下，各取所长。\n采集 \u0026lt;td width=\u0026quot;586\u0026quot;\u0026gt; cAdvisor, Heapster, collectd, Statsd, Tcollector, Scout \u0026lt;/td\u0026gt; 存储 \u0026lt;td width=\u0026quot;586\u0026quot;\u0026gt; InfluxDb, OpenTSDB, Elasticsearch \u0026lt;/td\u0026gt; 展示 \u0026lt;td width=\u0026quot;586\u0026quot;\u0026gt; Graphite, Grafana, facette, Cacti, Ganglia, DataDog \u0026lt;/td\u0026gt; 告警 \u0026lt;td width=\u0026quot;586\u0026quot;\u0026gt; Nagios, prometheus, Icinga, Zabbix \u0026lt;/td\u0026gt; 本文是摘自kubernetes中文社区：https://www.kubernetes.org.cn/2432.html [url href=链接地址]kubernetes中文社区[/url]\n","date":"2020年33月27日","externalUrl":null,"permalink":"/2019.html","section":"Posts","summary":"","title":"Kubernetes主机和容器的监控方案","type":"post"},{"content":"先来比较一下\nSublime下的shell样式：\n再来看看word里面的样式\n#!/bin/bash #随机修改密码 ################################################# date=`date` hostname=`hostname` passwd=`openssl rand -base64 16` echo $passwd echo $passwd \u0026gt;\u0026gt; passwd.txt chattr +a passwd.txt user=$1 echo ${passwd} | passwd --stdin $user echo \"passwd is ${passwd} for $user\" | mail -s \"$date $hostname 密码修改通知 \" han@163.com #还原密码 passwd=`hostname` echo `hostnaem` | openssl base64 | passwd --stdin 实现方法很简单\n找到插入-\u0026ndash;à获取加载项—-\u0026gt; 安装Easy Code Formatter就能实现了\n先进到设置里面过一遍设置好自己的主题模式\n写完代码后点击 就可以实现\n","date":"2020年33月27日","externalUrl":null,"permalink":"/2015.html","section":"Posts","summary":"","title":"如何用word也能写出像Sublime的样子的代码样式？","type":"post"},{"content":"刚开始安装时启动不成功\n原因是参数前面少了空格导致的\n缺少java环境\n做个软连接就可以解决\nElasticsearch启动失败\n启动方式 su - elasticsearch -c \u0026ldquo;nohup /usr/local/elasticsearch/bin/elasticsearch \u0026amp;\u0026rdquo;\n日志位置：vim /home/elasticsearch/nohup.out\n原因是无法分配内存了，内存设置太大：\n解决办法：vim /usr/local/elasticsearch/config/jvm.options\n将这两个值调小\n","date":"2020年33月27日","externalUrl":null,"permalink":"/1992.html","section":"Posts","summary":"","title":"ELK搭建过程报错处理篇","type":"post"},{"content":" 一、概念 # 1、核心组成\n# ELK由Elasticsearch、Logstash和Kibana三部分组件组成；\nElasticsearch是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。\nLogstash是一个完全开源的工具，它可以对你的日志进行收集、分析，并将其存储供以后使用\nkibana 是一个开源和免费的工具，它可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志\n2.下载\n# 官网下载地址：https://www.elastic.co/downloads\n从中获取最新版软件包软件包列表：\nhttps://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.4.1.tar.gz\nhttps://artifacts.elastic.co/downloads/kibana/kibana-5.4.1-linux-x86_64.tar.gz\nhttps://artifacts.elastic.co/downloads/logstash/logstash-5.4.1.tar.gz\nhttps://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.4.1-linux-x86_64.tar.gz\n3.注意事项\n# a、所有节点操作系统版本最好保持一致，centos6.5测试最新版本内核不支持，尽可能使用目前centos7.3稳定版本。Elk服务器配置需要，如果条件运行使用为2C4G，\nb、本文档为单机版，即将Elasticsearch、Logstash和Kibana安装在一台服务器上，生产环境建议将其在docker中分开安装，以便快速迁移至物理服务器。\nc、关闭selinux，关闭firewalld或添加端口例外.修改主机名称。\n二、安装部署\n# 1.安装jdk\n# yum install -y java-1.8.0-openjdk hostnamectl set-hostname elk-1 #修改主机名 systemctl stop firewalld #关闭firewalld setenforce 0 2.下载软件包\n# 3.安装elasticsearch\n# cd /usr/local/tools tar zxf elasticsearch-5.4.1.tar.gz mv elasticsearch-5.4.1 /usr/local/elasticsearch cd /usr/local/elasticsearch/config/ 编辑elasticsearch.yml\nmkdir -p /usr/local/elasticsearch/data /usr/local/elasticsearch/logs useradd elasticsearch chown -R elasticsearch:elasticsearch /usr/local/elasticsearch echo \"vm.max_map_count = 655360\" \u0026gt;\u0026gt;/etc/sysctl.conf \u0026\u0026 sysctl -p elasticsearch不可用root用户启动，新建elasticsearch运行用户\n编辑/etc/security/limits.conf文件，新增以下内容\n* soft nofile 65536 * hard nofile 65536 * soft nproc 65536 * hard nproc 65536 启动elasticsearch\nsu - elasticsearch cd /usr/local/elasticsearch bin/elasticsearch \u0026 查看端口监听信息\ncurl测试\n4.安装logstash\n# cd /usr/local/tools tar -zxvf logstash-5.4.1.tar.gz mv logstash-5.4.1 /usr/local/logstash cd /usr/local/logstash/config vim 01-syslog.conf 安装filebeat\n# cd /usr/local/tools/ tar -zxvf filebeat-5.4.1-linux-x86_64.tar.gz mv filebeat-5.4.1-linux-x86_64 /usr/local/filebeat vim /usr/local/filebeat/filebeat.yml 启动filebeat\n/usr/local/filebeat ./filebeat \u0026 启动logstash（加载配置文件启动）\ncd /usr/local/logstash/ bin/logstash -f config/01-syslog.conf \u0026 查看监听端口\n稍等以后屏幕会输出返回的结果\n可以用名称测试：curl http://172.17.10.198:9200/_search?pretty\n我们想以web形式展现数据，就需要安装kibana\n5.安装kibana\n# cd /usr/local/tools/ tar -zxf kibana-5.4.1-linux-x86_64.tar.gz mv kibana-5.4.1-linux-x86_64 /usr/local/kibana cd /usr/local/kibana/config vim /usr/local/kibana/config/kibana.yml 启动\n/bin/kibana \u0026 查看端口监听情况\n三、测试\n# 通过web界面访问，创建index patterns\n查看创建对应的日志\n本文为个人测试ELK最新版本最基础的搭建，可以将其在docker中各应用拆分开部署，后期学习elk的高级用法。\n本文出自 \"KaliArch\" 博客，请务必保留此出处http://kaliarch.blog.51cto.com/8966921/1937321\n","date":"2020年33月27日","externalUrl":null,"permalink":"/1984.html","section":"Posts","summary":"","title":"Centos7_ELK5.4.1配置部署","type":"post"},{"content":"请查找cmd.exe用管理员身份运行下面其中一个脚本\n32位Windows操作系统运行下面这个\ncd\u0026nbsp;\"%windir%\\system32\" takeown.exe\u0026nbsp;/f\u0026nbsp;atmfd.dll icacls.exe\u0026nbsp;atmfd.dll\u0026nbsp;/save\u0026nbsp;atmfd.dll.acl icacls.exe\u0026nbsp;atmfd.dll\u0026nbsp;/grant\u0026nbsp;Administrators:(F) rename\u0026nbsp;atmfd.dll\u0026nbsp;x-atmfd.dll 64位Windows操作系统运行下面这个\ncd\u0026nbsp;\"%windir%\\system32\" takeown.exe\u0026nbsp;/f\u0026nbsp;atmfd.dll icacls.exe\u0026nbsp;atmfd.dll\u0026nbsp;/save\u0026nbsp;atmfd.dll.acl icacls.exe\u0026nbsp;atmfd.dll\u0026nbsp;/grant\u0026nbsp;Administrators:(F) rename\u0026nbsp;atmfd.dll\u0026nbsp;x-atmfd.dll cd\u0026nbsp;\"%windir%\\syswow64\" takeown.exe\u0026nbsp;/f\u0026nbsp;atmfd.dll icacls.exe\u0026nbsp;atmfd.dll\u0026nbsp;/save\u0026nbsp;atmfd.dll.acl icacls.exe\u0026nbsp;atmfd.dll\u0026nbsp;/grant\u0026nbsp;Administrators:(F) rename\u0026nbsp;atmfd.dll\u0026nbsp;x-atmfd.dll ","date":"2020年33月27日","externalUrl":null,"permalink":"/1963.html","section":"Posts","summary":"","title":"Windows漏洞Type 1脚本修复漏洞","type":"post"},{"content":"当地时间3月23日，微软发布ADV200006号通告，称其发现目前有在野攻击利用Adobe Type Manager Library中的2个0-day漏洞。\n由于该Library在处理multi-master字体（Adobe Type 1 PostScript格式）时存在缺陷，攻击者可以精心构造一个恶意的文档并诱使用户使用Windows Preview pane预览，从而利用该漏洞来远程执行代码。\n目前Microsoft已经在准备相关的补丁，预计于下个月的补丁日发出。同时建议用户现在可以采取相应的缓解措施来进行防护。\n受影响版本： # Windows 10 for 32-bit Systems Windows 10 for x64-based Systems Windows 10 Version 1607 for 32-bit Systems Windows 10 Version 1607 for x64-based Systems Windows 10 Version 1709 for 32-bit Systems Windows 10 Version 1709 for ARM64-based Systems Windows 10 Version 1709 for x64-based Systems Windows 10 Version 1803 for 32-bit Systems Windows 10 Version 1803 for ARM64-based Systems Windows 10 Version 1803 for x64-based Systems Windows 10 Version 1809 for 32-bit Systems Windows 10 Version 1809 for ARM64-based Systems Windows 10 Version 1809 for x64-based Systems Windows 10 Version 1903 for 32-bit Systems Windows 10 Version 1903 for ARM64-based Systems Windows 10 Version 1903 for x64-based Systems Windows 10 Version 1909 for 32-bit Systems Windows 10 Version 1909 for ARM64-based Systems Windows 10 Version 1909 for x64-based Systems Windows 7 for 32-bit Systems Service Pack 1 Windows 7 for x64-based Systems Service Pack 1 Windows 8.1 for 32-bit systems Windows 8.1 for x64-based systems Windows RT 8.1 Windows Server 2008 for 32-bit Systems Service Pack 2 Windows Server 2008 for Itanium-Based Systems Service Pack 2 Windows Server 2008 for x64-based Systems Service Pack 2 Windows Server 2008 for x64-based Systems Service Pack 2 (Server Core installation) Windows Server 2008 R2 for Itanium-Based Systems Service Pack 1 Windows Server 2008 R2 for x64-based Systems Service Pack 1 Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation) Windows Server 2012 Windows Server 2012 (Server Core installation) Windows Server 2012 R2 Windows Server 2012 R2 (Server Core installation) Windows Server 2016 Windows Server 2016 (Server Core installation) Windows Server 2019 Windows Server 2019 (Server Core installation) Windows Server, version 1803 (Server Core Installation) Windows Server, version 1903 (Server Core installation) Windows Server, version 1909 (Server Core installation) 漏洞验证： # 打开资源管理器，在菜单栏中点击“查看”，检查是否有开启“预览窗格”或“详细信息窗格”，如果有开启其中任意一个，则可能存在漏洞风险。\n漏洞防护： # 在Windows资源管理器中禁用预览窗格和详细信息窗格\n在Windows资源管理器中禁用预览和详细信息窗格将阻止在Windows资源管理器中自动显示OTF字体。虽然可以防止在Windows资源管理器中查看恶意文件，但并不能阻止经过身份验证的本地用户运行特殊设计的程序来利用此漏洞。注：使用该方法后Windows资源管理器将不会再自动显示OTF 字体。 Windows 7、Windows 8.1 和Windows Server 2008、Windows Server 2008 R2、Windows Server 2012、Windows Server 2012 R2禁用预览窗格：\n打开Windows资源管理器，单击组织，然后单击布局。 清除详细信息窗格和预览窗格的菜单选项。 单击整理，然后单击文件夹和搜索选项。 单击视图选项卡。 在高级设置下，选中“始终显示图标，从不显示缩略图框”。（如需撤销该方法，取消勾选即可恢复）\n关闭所有 Windows 资源管理器使配置生效。 Windows 10 和Windows Server 2016、Windows Server 2019禁用预览窗格：\n打开 Windows 资源管理器（在Windows 10中为文件资源管理器），单击视图选项卡。 清除详细信息窗格和预览窗格的菜单选项。 单击选项，然后单击更改文件夹和搜索选项。 单击视图选项卡。 在高级设置下，勾选始终显示图标，从不显示缩略图框。（如需撤销该方法，取消勾选即可恢复）\n关闭所有 Windows 资源管理器使配置生效。 禁用WebClient服务 要禁用WebClient服务，请按照以下步骤操作：\n单击开始，单击运行（或按键盘上的Windows 键和R），键入Services.msc，然后单击确定。 右键单击WebClient服务，然后选择属性。 将启动类型更改为禁用。如果服务正在运行，请单击停止。 单击确定，退出管理应用程序。 注：当禁用WebClient服务时，不会传输 Web 分布式创作和版本管理(WebDAV)请求，所有明确依赖于WebClient服务的任何服务将不会启动，并且会在系统日志中记录错误消息。例如，将无法从客户端计算机访问WebDAV共享。\n重命名 ATMFD.DLL 32位操作系统：\n在管理命令提示符处输入以下命令： cd %windir%system32 takeown.exe /f atmfd.dll icacls.exe atmfd.dll /save atmfd.dll.acl icacls.exe atmfd.dll /grant Administrators:(F) rename atmfd.dll x-atmfd.dll 重启系统\n64位操作系统：\n在管理命令提示符处输入以下命令：\ncd %windir%system32 takeown.exe /f atmfd.dll icacls.exe atmfd.dll /save atmfd.dll.acl icacls.exe atmfd.dll /grant Administrators:(F) rename atmfd.dll x-atmfd.dll cd %windir%syswow64 takeown.exe /f atmfd.dll icacls.exe atmfd.dll /save atmfd.dll.acl icacls.exe atmfd.dll /grant Administrators:(F) rename atmfd.dll x-atmfd.dll 重启系统\n对于Windows 8.1 及更低版本操作系统还可通过以下操作禁用ATMFD（官方建议谨慎使用）：\n方法1：手动编辑注册表\n以管理员的身份运行regedit.exe。 在“注册表编辑器”中，创建以下子项并将其 DWORD 值设置为 1 HKLMSoftwareMicrosoftWindows NTCurrentVersionWindowsDisableATMFD, DWORD = 1 关闭“注册表编辑器”并重启系统。 方法2：使用脚本修改注册表\n创建一个包含以下文本并且名为ATMFD-disable.reg的文本文件\n运行regedit.exe。\n在注册表编辑器中，单击“文件”菜单，然后单击“导入”。\n选择步骤1中创建的ATMFD-disable.reg文件。（注意：如果文件未列于预期位置，请确保尚未自动对该文件给定.txt文件扩展名，或将对话框的文件扩展名参数更改为“所有文件”）。\n单击“打开”，然后单击“确定”，关闭注册表编辑器。\n**注：使用以上方法后依赖嵌入字体技术的应用程序将无法正确显示。禁用ATMFD.DLL可能导致某些使用OpenType字体的应用程序停止正常运行。Microsoft Windows 自身不会发布任何OpenType字体。但是，第三方应用程序可能会安装这些字体并且可能会受到此更改影响。** 撤销该方法请参考微软官方通告中对应的系统进行操作。\n目前微软暂未发布修复该漏洞的安全补丁，请相关用户持续关注官方动态：\nhttps://portal.msrc.microsoft.com/en-US/security-guidance/advisory/adv200006\n","date":"2020年33月26日","externalUrl":null,"permalink":"/1952.html","section":"Posts","summary":"","title":"Type1 字体解析远程代码执行漏洞","type":"post"},{"content":" 一、漏洞背景 安全公告编号：CNTA-2020-0004 2020年02月20日， 360CERT 监测发现 国家信息安全漏洞共享平台(CNVD) 收录了 CNVD-2020-10487 Apache Tomcat文件包含漏洞。 CNVD-2020-10487/CVE-2020-1938是文件包含漏洞，攻击者可利用该高危漏洞读取或包含 Tomcat 上所有 webapp 目录下的任意文件，如：webapp 配置文件或源代码等。 受影响的版本包括：Tomcat 6，Tomcat 7的7.0.100以下版本，Tomcat 8的8.5.51以下版本，Tomcat 9的9.0.31以下版本。 CNVD 对该漏洞的综合评级为“高危”。 二、影响版本 1、Apache Tomcat 9.x \u003c 9.0.31 2、Apache Tomcat 8.x \u003c 8.5.51 3、Apache Tomcat 7.x \u003c 7.0.100 4、Apache Tomcat 6.x 三、漏洞分析 3.1 AJP Connector Apache Tomcat服务器通过Connector连接器组件与客户程序建立连接，Connector表示接收请求并返回响应的端点。即Connector组件负责接收客户的请求，以及把Tomcat服务器的响应结果发送给客户。 在Apache Tomcat服务器中我们平时用的最多的8080端口，就是所谓的Http Connector，使用Http（HTTP/1.1）协议 在conf/server.xml文件里，他对应的配置为: \u0026lt;span style=\"color: #abb2bf; background: rgba(0, 0, 0, 0); display: inline; width: 303px; text-decoration: none solid #abb2bf; font-weight: 400; font-style: normal;\"\u003e\u0026lt;\u0026lt;span style=\"color: #e06c75; background: rgba(0, 0, 0, 0); display: inline; width: 65px; text-decoration: none solid #e06c75; font-weight: 400; font-style: normal;\"\u003eConnector\u0026lt;/span\u003e \u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 29px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003eport\u0026lt;/span\u003e=\u0026lt;span style=\"color: #98c379; background: rgba(0, 0, 0, 0); display: inline; width: 44px; text-decoration: none solid #98c379; font-weight: 400; font-style: normal;\"\u003e\"8080\"\u0026lt;/span\u003e \u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 58px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003eprotocol\u0026lt;/span\u003e=\u0026lt;span style=\"color: #98c379; background: rgba(0, 0, 0, 0); display: inline; width: 72px; text-decoration: none solid #98c379; font-weight: 400; font-style: normal;\"\u003e\"HTTP/1.1\"\u0026lt;/span\u003e \u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 123px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e connectionTimeout\u0026lt;/span\u003e=\u0026lt;span style=\"color: #98c379; background: rgba(0, 0, 0, 0); display: inline; width: 51px; text-decoration: none solid #98c379; font-weight: 400; font-style: normal;\"\u003e\"20000\" \u0026lt;/span\u003e \u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 87px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003eredirectPort\u0026lt;/span\u003e=\u0026lt;span style=\"color: #98c379; background: rgba(0, 0, 0, 0); display: inline; width: 43px; text-decoration: none solid #98c379; font-weight: 400; font-style: normal;\"\u003e\"8443\"\u0026lt;/span\u003e /\u0026gt;\u0026lt;/span\u003e 而 AJP Connector，它使用的是 AJP 协议（Apache Jserv Protocol）是定向包协议。因为性能原因，使用二进制格式来传输可读性文本，它能降低 HTTP 请求的处理成本，因此主要在需要集群、反向代理的场景被使用。 Ajp协议对应的配置为: \u0026lt;span style=\"color: #abb2bf; background: rgba(0, 0, 0, 0); display: inline; width: 462px; text-decoration: none solid #abb2bf; font-weight: 400; font-style: normal;\"\u003e\u0026lt;\u0026lt;span style=\"color: #e06c75; background: rgba(0, 0, 0, 0); display: inline; width: 65px; text-decoration: none solid #e06c75; font-weight: 400; font-style: normal;\"\u003eConnector\u0026lt;/span\u003e \u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 29px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003eport\u0026lt;/span\u003e=\u0026lt;span style=\"color: #98c379; background: rgba(0, 0, 0, 0); display: inline; width: 44px; text-decoration: none solid #98c379; font-weight: 400; font-style: normal;\"\u003e\"8009\"\u0026lt;/span\u003e \u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 58px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003eprotocol\u0026lt;/span\u003e=\u0026lt;span style=\"color: #98c379; background: rgba(0, 0, 0, 0); display: inline; width: 65px; text-decoration: none solid #98c379; font-weight: 400; font-style: normal;\"\u003e\"AJP/1.3\"\u0026lt;/span\u003e \u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 87px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003eredirectPort\u0026lt;/span\u003e=\u0026lt;span style=\"color: #98c379; background: rgba(0, 0, 0, 0); display: inline; width: 44px; text-decoration: none solid #98c379; font-weight: 400; font-style: normal;\"\u003e\"8443\"\u0026lt;/span\u003e /\u0026gt;\u0026lt;/span\u003e Tomcat服务器默认对外网开启该端口 Web客户访问Tomcat服务器的两种方式: 3.2 代码分析 漏洞产生的主要位置在处理Ajp请求内容的地方org.apache.coyote.ajp.AbstractAjpProcessor.java#prepareRequest() 这里首先判断SCAREQ_ATTRIBUTE，意思是如果使用的Ajp属性并不在上述的列表中，那么就进入这个条件 SCAREQREMOTEPORT对应的是AJPREMOTEPORT，这里指的是对远程端口的转发，Ajp13并没有转发远程端口，但是接受转发的数据作为远程端口。 于是这里我们可以进行对Ajp设置特定的属性，封装为request对象的Attribute属性 比如以下三个属性可以被设置： \u0026lt;span style=\"color: #e06c75; background: rgba(0, 0, 0, 0); display: inline; width: 36px; text-decoration: none solid #e06c75; font-weight: 400; font-style: normal;\"\u003ejavax\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 58px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.servlet\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 57px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.include\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 87px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.request_uri\u0026lt;/span\u003e \u0026lt;span style=\"color: #e06c75; background: rgba(0, 0, 0, 0); display: inline; width: 36px; text-decoration: none solid #e06c75; font-weight: 400; font-style: normal;\"\u003ejavax\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 58px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.servlet\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 57px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.include\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 73px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.path_info\u0026lt;/span\u003e \u0026lt;span style=\"color: #e06c75; background: rgba(0, 0, 0, 0); display: inline; width: 36px; text-decoration: none solid #e06c75; font-weight: 400; font-style: normal;\"\u003ejavax\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 58px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.servlet\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 57px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.include\u0026lt;/span\u003e\u0026lt;span style=\"color: #d19a66; background: rgba(0, 0, 0, 0); display: inline; width: 94px; text-decoration: none solid #d19a66; font-weight: 400; font-style: normal;\"\u003e.servlet_path\u0026lt;/span\u003e 3.3 任意文件读取 当请求被分发到org.apache.catalina.servlets.DefaultServlet#serveResource()方法 调用getRelativePath方法，需要获取到request_uri不为null，然后从request对象中获取并设置pathInfo属性值和servletPath属性值 接着往下看到getResource方法时，会把path作为参数传入，获取到文件的源码 漏洞演示：读取到/WEB-INF/web.xml文件 3.4 命令执行 当在处理 jsp 请求的uri时，会调用 org.apache.jasper.servlet.JspServlet#service() 最后会将pathinfo交给serviceJspFile处理，以jsp解析该文件，所以当我们可以控制服务器上的jsp文件的时候，比如存在jsp的文件上传，这时，就能够造成rce 漏洞演示：造成rce 四、修复建议 Apache Tomcat 6 已经停止维护，请升级到最新受支持的 Tomcat 版本以免遭受漏洞影响，请更新到如下Tomcat 版本：\nTomcat 分支 \u0026lt;th style=\u0026quot;box-sizing: border-box; padding: 0.5rem 1rem; text-align: left; border-top-width: 1px; border-color: #e9ebec;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 13px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;\u0026quot;\u0026gt;版本号\u0026lt;/span\u0026gt; \u0026lt;/th\u0026gt; Tomcat 7 \u0026lt;td style=\u0026quot;box-sizing: border-box; padding: 0.5rem 1rem; border-color: #e9ebec; text-align: left;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 12px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;\u0026quot;\u0026gt;7.0.0100\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; Tomcat 8 \u0026lt;td style=\u0026quot;box-sizing: border-box; padding: 0.5rem 1rem; border-color: #e9ebec; text-align: left;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 12px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;\u0026quot;\u0026gt;8.5.51\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; Tomcat 9 \u0026lt;td style=\u0026quot;box-sizing: border-box; padding: 0.5rem 1rem; border-color: #e9ebec; text-align: left;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size: 12px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;\u0026quot;\u0026gt;9.0.31\u0026lt;/span\u0026gt; \u0026lt;/td\u0026gt; 下载链接如下：\n7.0.100版本：https://tomcat.apache.org/download-70.cgi 8.5.51版本：https://tomcat.apache.org/download-80.cgi 9.0.31版本 https://tomcat.apache.org/download-90.cgi ","date":"2020年33月26日","externalUrl":null,"permalink":"/399.html","section":"Posts","summary":"","title":"Tomcat 爆出高危漏洞！","type":"post"},{"content":" 方案一：DTS同步灾备 # 价格：\n实时同步加高可用\n架构说明：\n# 关键部件部署：\n在机房A和机房B机房分别部署RDS数据库集群。\nSLB、ECS、HA均可跨机房对接应用，两个机房部署一套即可，通过HA管控两个机房的数据库。\n数据备份与恢复：\n正常情况下，机房A的数据库通过复制的方式将数据备份至机房B的数据库。\n机房A数据库故障时，可通过HA将流量直接转移到机房B访问，暂时抛弃机房A的资源，等机房A恢复后重新配置为备选可用区。\n架构特点：\n优点：轻量级切换成本低。\n缺点：可能存在少量数据不一致的风险，比如丢失一个事务。\n特点： # 低延迟：毫秒级延迟\n\u0026lt;/div\u0026gt; 高可靠：支持异常断点续传，秒级切换异常任务\n\u0026lt;/div\u0026gt; 高性能：全量迁移高达100MB/s 增量同步高达6万TPS、\n\u0026lt;/div\u0026gt; 支持不同阿里云账号下的 RDS for MySQL 实例间的实时同步。\n\u0026lt;/div\u0026gt; 支持阿里云账号下两个 RDS for MySQL 实例间的实时同步\n\u0026lt;/div\u0026gt; 需要新建RDS数据库，作为从库\n\u0026lt;/div\u0026gt; 也可本地物理机搭建数据库作为从库，但是风险较大，将数据库通过NAT映射到公网之中\n\u0026lt;/div\u0026gt; 8．可实现高可用双机热备\n方案二：DBS同步灾备 # 价格：\n架构图\n冷备份： # 架构特点：\n优点：技术要求中、一致性好。\n缺点：影响稳定性，需要停机，恢复成本高。\n适用场景：数据一致性要求高，稳定性需求不强烈。\n热备份 # \u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;color: #333333; background-color: white;\u0026quot;\u0026gt;架构特点：\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 12pt;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/li\u0026gt; * \u0026lt;div style=\u0026quot;background: white;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;优点：技术要求高、一致性好，恢复时间短。\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; * \u0026lt;div style=\u0026quot;background: white;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;缺点：因为是完全重新构造数据库实例，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial;\u0026quot;\u0026gt;RTO\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;不可控，随着数据库是来大小而变化。\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; * \u0026lt;div style=\u0026quot;background: white;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;应用场景：比较成熟的备份手段，适用于大部分的关系型数据库。\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; 特点： \u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;数据库备份\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;DBS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;可以实现实时的数据备份\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;,\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;在线数据发生变化时，数据库备份会获得变更的数据，并将数据实时写入云端\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;OSS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;，帮助用户实现秒级\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;RPO\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;的数据备份。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;p style=\u0026quot;background: white;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-family: 宋体; font-size: 12pt;\u0026quot;\u0026gt;1.\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; font-size: 12pt;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;数据库备份\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial;\u0026quot;\u0026gt;DBS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;通过使用阿里实时数据流技术，可以读取数据库日志并进行实时解析，然后存储到云端存储上，实现对数据库的增量备份。通常，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial;\u0026quot;\u0026gt;DBS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;可以将增量备份的延迟控制在秒级别以内，根据实际网络环境不同，延迟时长也会不同。\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;background: white;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #333333; font-size: 10pt;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 宋体;\u0026quot;\u0026gt;在进行数据恢复时，可以使用存储的增量备份实现精确到秒的数据库恢复。最大限度保障数据安全\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; 2. 低成本 \u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;DBS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;使用用户的\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;OSS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;作为备份的存储目的地。为了节省成本，可以选择多种\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;OSS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;存储类型进行存储。\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 3.零风险 支持异地备份，\u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;备份异常、恢复异常、恢复成功等关键事件通知。传输加密\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 4.实时备份，RPO达到秒级，\u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;数据库备份\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;DBS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;提供了实时数据备份，将数据丢失降低秒级\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 5. 故障恢复时间短，\u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;数据库备份\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;DBS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;提供了表级数据恢复，准确匹配恢复需求。要什么数据恢复什么数据，大大缩短故障恢复时间\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 6．异地灾备，构建数据库冷备中心，\u0026lt;span style=\u0026quot;color: #333333;\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;数据库备份\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;DBS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;提供按量付费服务，对于本地\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;IDC\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;数据库、其他云数据库、\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;ECS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;自建数据库和\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;RDS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;数据库，可以通过\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;DBS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;将数据备份到阿里云\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: Arial; background-color: white;\u0026quot;\u0026gt;OSS\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family: 等线; background-color: white;\u0026quot;\u0026gt;上，实现异地容灾备份\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 7.也可本地物理机搭建数据库作为从库，但是风险较大，将数据库通过NAT映射到公网之中\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; ","date":"2020年33月25日","externalUrl":null,"permalink":"/1933.html","section":"Posts","summary":"","title":"数据库灾备方案","type":"post"},{"content":" 域控服务器信息记录 \u0026nbsp; 版本：windowsserver 2008 r2 Stand IP地址：10.11.102.249 管理员登录 用户名/密码 MniE Passw0rd 域控用户MniE 加域密码：Passw0rd \u0026nbsp; 故障转移群集信息记录 群集名称：BJXCH-Cluster 群集IP：10.11.102.211 网段：10.11.102.0/24 \u0026nbsp; Hyper-v001 IP地址 10.11.102.245 Hyper-v002 IP地址 10.11.102.246 Hyper-v003 IP地址 10.11.102.247 Hyper-v004 IP地址 10.11.102.248 \u0026nbsp; 所有hyperv虚拟机必须使用域用户登录 域用户名：BJXCH\\Mnie 密码：Passw0rd 故障排查过程描述 \u0026lt;p\u0026gt; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;\u0026quot;\u0026gt; \u0026lt;h2\u0026gt; 故障一解决方法： \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/032520_2318_1.png\u0026quot; alt=\u0026quot;\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 打开故障群集转移管理器连接群集时状态为\u0026lt;span style=\u0026quot;background-color: yellow;\u0026quot;\u0026gt;RPC服务不可用，\u0026lt;/span\u0026gt;进一步检查各\u0026lt;span style=\u0026quot;background-color: yellow;\u0026quot;\u0026gt;物理机的RPC服务是否开启\u0026lt;/span\u0026gt;，如果没有开启，点击重新启动，重启动后进行测试 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/032520_2318_2.png\u0026quot; alt=\u0026quot;\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/032520_2318_3.png\u0026quot; alt=\u0026quot;\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;\u0026quot;\u0026gt; \u0026lt;h2\u0026gt; 故障二解决方法： \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 在上面方法得不到有效解决的时候，进一步进行排查，首先查看集群日志及相关状态 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 查看集群名称：Get-Cluster \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 查看集群权限：Get-ClusterAccess \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/032520_2318_4.png\u0026quot; alt=\u0026quot;\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 查看集群日志：Get-ClusterLog \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/032520_2318_5.png\u0026quot; alt=\u0026quot;\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 查看集群状态：Get-ClusterResource \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/032520_2318_6.png\u0026quot; alt=\u0026quot;\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 掌握上面的基本信息后，怀疑是网络通信的问题 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Ping 域控服务器的地址通， \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Ping 群集ip地址及群集名称.域名都不通， \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 接着检查网络配置信息，ip及DNS信息， \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 发现dns设置并不是域控服务器的ip地址，也就意味着该主机并没有真正的加入到域当中来，但是由于域控服务器防火墙全部处于关闭状态，所以说单凭借ping测试并未发现网络不通的问题。 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 由于域控服务器管理密码忘记无法登录，进行密码破解，破解成功后进入控制台查看相关域用户，发现存在域控制用户，检查完网络连通性后到各域主机上面用域账户登录主机，到网络共享中心加入域，保证以太网网卡连接到域， \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 配置完成后注销会话使用域用户登录主机再连接故障转移群集，连接成功，问题得到解决。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: justify;\u0026quot;\u0026gt; \u0026lt;h2\u0026gt; 总结 \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 此次故障问题根源在于域控连接失败导致，域主机用户与域服务器失去连接，需更换正确的DNS服务器ip地址及域地址 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; DNS地址必须设置为域服务器ip地址，且域主机必须拥有域用户权限，更改完配置必须注销当前会话再使用域用户进行登录。 \u0026lt;/p\u0026gt; ","date":"2020年33月25日","externalUrl":null,"permalink":"/1918.html","section":"Posts","summary":"","title":"故障转移群集故障怎么修复","type":"post"},{"content":" 1. 结构图 # \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;753\u0026quot; data-height=\u0026quot;414\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-cdcd166f2eb2eb2040ab6b06b5913c7a.png\u0026quot; alt=\u0026quot;13-MySQL分布式架构13-MySQL分布式架构\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image.png 2. MyCAT基础架构准备 # 1.环境准备： # 两台虚拟机 db01 db02\n每台创建四个mysql实例：3307 3308 3309 3310\n2.节点主从规划 # 箭头指向谁是主库 # 以3307为主库，3309为从库，搭建主从复制关系 10.0.0.51:3307 \u0026lt;-----\u0026gt; 10.0.0.52:3307 10.0.0.51:3309 ------\u0026gt; 10.0.0.51:3307 10.0.0.52:3309 ------\u0026gt; 10.0.0.52:3307 以3308为主库，3310为从库，搭建主从复制关系 10.0.0.52:3308 \u0026lt;-----\u0026gt; 10.0.0.51:3308 10.0.0.52:3310 -----\u0026gt; 10.0.0.52:3308 10.0.0.51:3310 -----\u0026gt; 10.0.0.51:3308 3.分片规划 # shard1： Master：10.0.0.51:3307 slave1：10.0.0.51:3309 Standby Master：10.0.0.52:3307 slave2：10.0.0.52:3309 shard2： Master：10.0.0.52:3308 slave1：10.0.0.52:3310 Standby Master：10.0.0.2. MyCAT基础架构准备 4.开始配置 # shard1 # 1.配置3307库为双主模式\n10.0.0.51:3307 \u0026lt;\u0026mdash;\u0026ndash;\u0026gt; 10.0.0.52:3307 db02 mysql -S /data/3307/mysql.sock -e \u0026ldquo;grant replication slave on . to repl@\u0026lsquo;10.0.0.%\u0026rsquo; identified by \u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3307/mysql.sock -e \u0026ldquo;grant all on . to root@\u0026lsquo;10.0.0.%\u0026rsquo; identified by \u0026lsquo;123\u0026rsquo; with grant option;\u0026rdquo; db01 mysql -S /data/3307/mysql.sock -e \u0026ldquo;CHANGE MASTER TO MASTER_HOST=\u0026lsquo;10.0.0.52\u0026rsquo;, MASTER_PORT=3307, MASTER_AUTO_POSITION=1, MASTER_USER=\u0026lsquo;repl\u0026rsquo;, MASTER_PASSWORD=\u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3307/mysql.sock -e \u0026ldquo;start slave;\u0026rdquo; mysql -S /data/3307/mysql.sock -e \u0026ldquo;show slave statusG\u0026rdquo; db02 mysql -S /data/3307/mysql.sock -e \u0026ldquo;CHANGE MASTER TO MASTER_HOST=\u0026lsquo;10.0.0.51\u0026rsquo;, MASTER_PORT=3307, MASTER_AUTO_POSITION=1, MASTER_USER=\u0026lsquo;repl\u0026rsquo;, MASTER_PASSWORD=\u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3307/mysql.sock -e \u0026ldquo;start slave;\u0026rdquo; mysql -S /data/3307/mysql.sock -e \u0026ldquo;show slave statusG\u0026rdquo;\n2.配置db01的3309为3307的从库\n10.0.0.51:3309 \u0026mdash;\u0026mdash;\u0026gt; 10.0.0.51:3307 db01 mysql -S /data/3309/mysql.sock -e \u0026ldquo;CHANGE MASTER TO MASTER_HOST=\u0026lsquo;10.0.0.51\u0026rsquo;, MASTER_PORT=3307, MASTER_AUTO_POSITION=1, MASTER_USER=\u0026lsquo;repl\u0026rsquo;, MASTER_PASSWORD=\u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3309/mysql.sock -e \u0026ldquo;start slave;\u0026rdquo; mysql -S /data/3309/mysql.sock -e \u0026ldquo;show slave statusG\u0026rdquo;\n3.配置db02的3309为3307的从库\n10.0.0.52:3309 \u0026mdash;\u0026mdash;\u0026gt; 10.0.0.52:3307 db02 mysql -S /data/3309/mysql.sock -e \u0026ldquo;CHANGE MASTER TO MASTER_HOST=\u0026lsquo;10.0.0.52\u0026rsquo;, MASTER_PORT=3307, MASTER_AUTO_POSITION=1, MASTER_USER=\u0026lsquo;repl\u0026rsquo;, MASTER_PASSWORD=\u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3309/mysql.sock -e \u0026ldquo;start slave;\u0026rdquo; mysql -S /data/3309/mysql.sock -e \u0026ldquo;show slave statusG\u0026rdquo;\nshard2 # 1.配置3308数据库为双主模式\n10.0.0.52:3308 \u0026lt;\u0026mdash;\u0026ndash;\u0026gt; 10.0.0.51:3308 db01 mysql -S /data/3308/mysql.sock -e \u0026ldquo;grant replication slave on . to repl@\u0026lsquo;10.0.0.%\u0026rsquo; identified by \u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3308/mysql.sock -e \u0026ldquo;grant all on . to root@\u0026lsquo;10.0.0.%\u0026rsquo; identified by \u0026lsquo;123\u0026rsquo; with grant option;\u0026rdquo; db02 mysql -S /data/3308/mysql.sock -e \u0026ldquo;CHANGE MASTER TO MASTER_HOST=\u0026lsquo;10.0.0.51\u0026rsquo;, MASTER_PORT=3308, MASTER_AUTO_POSITION=1, MASTER_USER=\u0026lsquo;repl\u0026rsquo;, MASTER_PASSWORD=\u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3308/mysql.sock -e \u0026ldquo;start slave;\u0026rdquo; mysql -S /data/3308/mysql.sock -e \u0026ldquo;show slave statusG\u0026rdquo; db01 mysql -S /data/3308/mysql.sock -e \u0026ldquo;CHANGE MASTER TO MASTER_HOST=\u0026lsquo;10.0.0.52\u0026rsquo;, MASTER_PORT=3308, MASTER_AUTO_POSITION=1, MASTER_USER=\u0026lsquo;repl\u0026rsquo;, MASTER_PASSWORD=\u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3308/mysql.sock -e \u0026ldquo;start slave;\u0026rdquo; mysql -S /data/3308/mysql.sock -e \u0026ldquo;show slave statusG\u0026rdquo;\n2.配置db02的3310为3308的从库\n10.0.0.52:3310 \u0026mdash;\u0026ndash;\u0026gt; 10.0.0.52:3308 db02 mysql -S /data/3310/mysql.sock -e \u0026ldquo;CHANGE MASTER TO MASTER_HOST=\u0026lsquo;10.0.0.52\u0026rsquo;, MASTER_PORT=3308, MASTER_AUTO_POSITION=1, MASTER_USER=\u0026lsquo;repl\u0026rsquo;, MASTER_PASSWORD=\u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3310/mysql.sock -e \u0026ldquo;start slave;\u0026rdquo; mysql -S /data/3310/mysql.sock -e \u0026ldquo;show slave statusG\u0026rdquo;\n3.配置db01的3310为3308的从库\n10.0.0.51:3310 \u0026mdash;\u0026ndash;\u0026gt; 10.0.0.51:3308 db01 mysql -S /data/3310/mysql.sock -e \u0026ldquo;CHANGE MASTER TO MASTER_HOST=\u0026lsquo;10.0.0.51\u0026rsquo;, MASTER_PORT=3308, MASTER_AUTO_POSITION=1, MASTER_USER=\u0026lsquo;repl\u0026rsquo;, MASTER_PASSWORD=\u0026lsquo;123\u0026rsquo;;\u0026rdquo; mysql -S /data/3310/mysql.sock -e \u0026ldquo;start slave;\u0026rdquo; mysql -S /data/3310/mysql.sock -e \u0026ldquo;show slave statusG\u0026rdquo;\n5.检测主从状态 # mysql -S /data/3307/mysql.sock -e \u0026quot;show slave statusG\u0026quot;|grep Yes mysql -S /data/3308/mysql.sock -e \u0026quot;show slave statusG\u0026quot;|grep Yes mysql -S /data/3309/mysql.sock -e \u0026quot;show slave statusG\u0026quot;|grep Yes mysql -S /data/3310/mysql.sock -e \u0026quot;show slave statusG\u0026quot;|grep Yes 注：如果中间出现错误，执行以下命令,重新配置主从关系\nmysql -S /data/3307/mysql.sock -e \u0026ldquo;stop slave; reset slave all;\u0026rdquo;\nmysql -S /data/3308/mysql.sock -e \u0026ldquo;stop slave; reset slave all;\u0026rdquo;\nmysql -S /data/3309/mysql.sock -e \u0026ldquo;stop slave; reset slave all;\u0026rdquo;\nmysql -S /data/3310/mysql.sock -e \u0026ldquo;stop slave; reset slave all;\u0026rdquo;\n3. MyCAT安装 # 1.预先安装Java运行环境 # yum install -y java 2.下载 # 软件包名称： Mycat-server-xxxxx.linux.tar.gz\n下载地址： http://mycat.io/\n3.解压文件 # tar xf Mycat-server-1.6.5-release-20180122220033-linux.tar.gz mv mycat/ /usr/local/ 4.软件目录结构 # [root@db01 mycat]# ls bin catlet conf lib logs version.txt 5.启动和连接 # 配置环境变量\nvim /etc/profile export PATH=/usr/local/mycat/bin:$PATH source /etc/profile\n启动\nmycat start\n连接mycat\nmysql -uroot -p123456 -h 127.0.0.1 -P8066\n4. 配置文件介绍 # 1.logs目录 # wrapper.log ----\u0026gt;mycat启动日志 mycat.log ----\u0026gt;mycat详细工作日志 2.conf目录 # schema.xml 主配置文件（读写分离、高可用、分布式策略定制、节点控制） server.xml mycat软件本身相关的配置 rule.xml 分片规则配置文件,记录分片规则列表、使用方法等 5.应用前环境准备 # 1.用户创建及数据库导入 # db01: mysql -S /data/3307/mysql.sock grant all on *.* to root@'10.0.0.%' identified by '123'; source /root/world.sql mysql -S /data/3308/mysql.sock grant all on *.* to root@'10.0.0.%' identified by '123'; source /root/world.sql 2.配置文件处理 # [root@db01 conf]# vim schema.xml \u0026lt;schema name=\u0026quot;TESTDB\u0026quot; dataNode=\u0026quot;sh1\u0026quot;\u0026gt; \u0026lt;/schema\u0026gt; \u0026lt;dataNode name=\u0026quot;sh1\u0026quot; dataHost=\u0026quot;oldguo1\u0026quot; database= \u0026quot;world\u0026quot; /\u0026gt; \u0026lt;dataHost name=\u0026quot;oldguo1\u0026quot; \u0026lt;writeHost host=\u0026quot;db1\u0026quot; url=\u0026quot;10.0.0.51:3307\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db2\u0026quot; url=\u0026quot;10.0.0.51:3309\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;/dataHost\u0026gt; \u0026lt;/mycat:schema\u0026gt; 6. 读写分离结构配置 # 编写读写分离配置文件\nvim schema.xml\n\u003c?xml version=\"1.0\"?\u003e \u003c!DOCTYPE mycat:schema SYSTEM \"schema.dtd\"\u003e \u0026lt;mycat:schema xmlns:mycat=\u0026ldquo;http://io.mycat/\"\u003e select user()\n\u0026lt;/mycat:schema\u0026gt;\n7.测试一主一从的读写分离 # 1.重启mycat # mycat restart 2.读写分离测试 # mysql -uroot -p -h 127.0.0.1 -P8066 select @@server_id; begin; select @@server_id; commit; 总结：\n以上案例实现了1主1从的读写分离功能，写操作落到主库，读操作落到从库.如果主库宕机，从库不能在继续提供服务了\n8. 配置读写分离及高可用 # 1.编写读写分离及高可用配置文件 # [root@db01 conf]# vim schema.xml \u0026lt;?xml version=\u0026quot;1.0\u0026quot;?\u0026gt; \u0026lt;!DOCTYPE mycat:schema SYSTEM \u0026quot;schema.dtd\u0026quot;\u0026gt; \u0026lt;mycat:schema xmlns:mycat=\u0026quot;http://io.mycat/\u0026quot;\u0026gt; \u0026lt;schema name=\u0026quot;TESTDB\u0026quot; checkSQLschema=\u0026quot;false\u0026quot; sqlMaxLimit=\u0026quot;100\u0026quot; dataNode=\u0026quot;sh1\u0026quot;\u0026gt; \u0026lt;/schema\u0026gt; \u0026lt;dataNode name=\u0026quot;sh1\u0026quot; dataHost=\u0026quot;oldguo1\u0026quot; database= \u0026quot;world\u0026quot; /\u0026gt; \u0026lt;dataHost name=\u0026quot;oldguo1\u0026quot; maxCon=\u0026quot;1000\u0026quot; minCon=\u0026quot;10\u0026quot; balance=\u0026quot;1\u0026quot; writeType=\u0026quot;0\u0026quot; dbType=\u0026quot;mysql\u0026quot; dbDriver=\u0026quot;native\u0026quot; switchType=\u0026quot;1\u0026quot;\u0026gt; \u0026lt;heartbeat\u0026gt;select user()\u0026lt;/heartbeat\u0026gt; \u0026lt;writeHost host=\u0026quot;db1\u0026quot; url=\u0026quot;10.0.0.51:3307\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db2\u0026quot; url=\u0026quot;10.0.0.51:3309\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;writeHost host=\u0026quot;db3\u0026quot; url=\u0026quot;10.0.0.52:3307\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db4\u0026quot; url=\u0026quot;10.0.0.52:3309\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;/dataHost\u0026gt; \u0026lt;/mycat:schema\u0026gt; 2.配置文件介绍 # 真正的 writehost：负责写操作的writehost\nstandby writeHost ：和readhost一样，只提供读服务\n当写节点宕机后，后面跟的readhost也不提供服务，这时候standby的writehost就提供写服务，\n后面跟的readhost提供读服务\n3.测试： # mycat restart mysql -uroot -p123456 -h 127.0.0.1 -P 8066 读写分离测试 mysql -uroot -p -h 127.0.0.1 -P8066 select @@server_id; begin; select @@server_id; commit; 对db01 3307节点进行关闭和启动,测试读写操作 9. 配置中的属性介绍: # 1.balance属性 # 负载均衡类型，目前的取值有3种：\n1.balance=\u0026ldquo;0\u0026rdquo;, 不开启读写分离机制，所有读操作都发送到当前可用的writeHost上\n2.balance=\u0026ldquo;1\u0026rdquo;,全部的readHost与standby writeHost参与select语句的负载均衡，简单的说,当双主双从模式(M1-\u0026gt;S1，M2-\u0026gt;S2，并且M1与 M2互为主备)，正常情况下，M2,S1,S2都参与select语句的负载均衡\n3.balance=\u0026ldquo;2\u0026rdquo;，所有读操作都随机的在writeHost、readhost上分发 2.writeType属性 # 负载均衡类型，目前的取值有2种：\n1.writeType=\u0026ldquo;0\u0026rdquo;, 所有写操作发送到配置的第一个writeHost，第一个挂了切到还生存的第二个writeHost，重新启动后已切换后的为主，切换记录在配置文件中:dnindex.properties\n2.writeType=“1”，所有写操作都随机的发送到配置的writeHost，但不推荐使用 3.switchType属性 # -1 表示不自动切换 1 默认值，自动切换 2 基于MySQL主从同步的状态决定是否切换 ，心跳语句为 show slave status datahost其他配置\nmaxCon=\u0026ldquo;1000\u0026rdquo;：最大的并发连接数 minCon=\u0026ldquo;10\u0026rdquo; ：mycat在启动之后，会在后端节点上自动开启的连接线程\ntempReadHostAvailable=\u0026ldquo;1\u0026rdquo; 这个一主一从时（1个writehost，1个readhost时），可以开启这个参数，如果2个writehost，2个readhost时 select user() 监测心跳\n10.垂直分表 # 编写配置文件\nvim schema.xml\n\u003c?xml version=\"1.0\"?\u003e \u003c!DOCTYPE mycat:schema SYSTEM \"schema.dtd\"\u003e \u0026lt;mycat:schema xmlns:mycat=\u0026ldquo;http://io.mycat/\"\u003e \u0026lt;dataHost name=\u0026quot;oldguo1\u0026quot; maxCon=\u0026quot;1000\u0026quot; minCon=\u0026quot;10\u0026quot; balance=\u0026quot;1\u0026quot; writeType=\u0026quot;0\u0026quot; dbType=\u0026quot;mysql\u0026quot; dbDriver=\u0026quot;native\u0026quot; switchType=\u0026quot;1\u0026quot;\u0026gt; \u0026lt;heartbeat\u0026gt;select user()\u0026lt;/heartbeat\u0026gt; \u0026lt;writeHost host=\u0026quot;db1\u0026quot; url=\u0026quot;10.0.0.51:3307\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db2\u0026quot; url=\u0026quot;10.0.0.51:3309\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;writeHost host=\u0026quot;db3\u0026quot; url=\u0026quot;10.0.0.52:3307\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db4\u0026quot; url=\u0026quot;10.0.0.52:3309\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;/dataHost\u0026gt; \u0026lt;dataHost name=\u0026quot;oldguo2\u0026quot; maxCon=\u0026quot;1000\u0026quot; minCon=\u0026quot;10\u0026quot; balance=\u0026quot;1\u0026quot; writeType=\u0026quot;0\u0026quot; dbType=\u0026quot;mysql\u0026quot; dbDriver=\u0026quot;native\u0026quot; switchType=\u0026quot;1\u0026quot;\u0026gt; \u0026lt;heartbeat\u0026gt;select user()\u0026lt;/heartbeat\u0026gt; \u0026lt;writeHost host=\u0026quot;db1\u0026quot; url=\u0026quot;10.0.0.51:3308\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db2\u0026quot; url=\u0026quot;10.0.0.51:3310\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;writeHost host=\u0026quot;db3\u0026quot; url=\u0026quot;10.0.0.52:3308\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db4\u0026quot; url=\u0026quot;10.0.0.52:3310\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;/dataHost\u0026gt; \u0026lt;/mycat:schema\u0026gt;\n创建测试库和表:\nmysql -S /data/3307/mysql.sock -e \u0026ldquo;create database taobao charset utf8;\u0026rdquo; mysql -S /data/3308/mysql.sock -e \u0026ldquo;create database taobao charset utf8;\u0026rdquo; mysql -S /data/3307/mysql.sock -e \u0026ldquo;use taobao;create table user(id int,name varchar(20))\u0026rdquo;; mysql -S /data/3308/mysql.sock -e \u0026ldquo;use taobao;create table order_t(id int,name varchar(20))\u0026rdquo;\n重启测试 :\nmycat restart mysql -uroot -p -h 127.0.0.1 -P8066\nuse TESTDB ; mysql\u0026gt; insert into order_t(id,name) values(1,\u0026lsquo;c\u0026rsquo;); mysql\u0026gt; insert into order_t(id,name) values(2,\u0026rsquo;d\u0026rsquo;); mysql\u0026gt; insert into user(id,name) values(1,\u0026lsquo;a\u0026rsquo;); mysql\u0026gt; insert into user(id,name) values(2,\u0026lsquo;b\u0026rsquo;);\n分别登陆后端主节点查看数据\nmysql -S /data/3307/mysql.sock -e \u0026ldquo;select * from taobao.user\u0026rdquo; mysql -S /data/3308/mysql.sock -e \u0026ldquo;select * from taobao.order_t\u0026rdquo;\n11. MyCAT核心特性——分片（水平拆分） # 分片：对一个\u0026quot;bigtable\u0026rdquo;，比如说t3表\n(1)行数非常多，800w\n(2)访问非常频繁 分片的目的：\n（1）将大数据量进行分布存储\n（2）提供均衡的访问路由 分片策略：\n范围 range\n取模 mod\n枚举\n哈希 hash\n时间 流水 优化关联查询\n全局表\nER分片\n12 .范围分片 # 比如说t3表\n(1)行数非常多，2000w（1-1000w:sh1 1000w-2000w:sh2）\n(2)访问非常频繁，用户访问较离散\n1.修改配置文件 # schema文件\nvim schema.xml\n\u003c?xml version=\"1.0\"?\u003e \u003c!DOCTYPE mycat:schema SYSTEM \"schema.dtd\"\u003e \u0026lt;mycat:schema xmlns:mycat=\u0026ldquo;http://io.mycat/\"\u003e \u0026lt;dataHost name=\u0026quot;oldguo1\u0026quot; maxCon=\u0026quot;1000\u0026quot; minCon=\u0026quot;10\u0026quot; balance=\u0026quot;1\u0026quot; writeType=\u0026quot;0\u0026quot; dbType=\u0026quot;mysql\u0026quot; dbDriver=\u0026quot;native\u0026quot; switchType=\u0026quot;1\u0026quot;\u0026gt; \u0026lt;heartbeat\u0026gt;select user()\u0026lt;/heartbeat\u0026gt; \u0026lt;writeHost host=\u0026quot;db1\u0026quot; url=\u0026quot;10.0.0.51:3307\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db2\u0026quot; url=\u0026quot;10.0.0.51:3309\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;writeHost host=\u0026quot;db3\u0026quot; url=\u0026quot;10.0.0.52:3307\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db4\u0026quot; url=\u0026quot;10.0.0.52:3309\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;/dataHost\u0026gt; \u0026lt;dataHost name=\u0026quot;oldguo2\u0026quot; maxCon=\u0026quot;1000\u0026quot; minCon=\u0026quot;10\u0026quot; balance=\u0026quot;1\u0026quot; writeType=\u0026quot;0\u0026quot; dbType=\u0026quot;mysql\u0026quot; dbDriver=\u0026quot;native\u0026quot; switchType=\u0026quot;1\u0026quot;\u0026gt; \u0026lt;heartbeat\u0026gt;select user()\u0026lt;/heartbeat\u0026gt; \u0026lt;writeHost host=\u0026quot;db1\u0026quot; url=\u0026quot;10.0.0.51:3308\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db2\u0026quot; url=\u0026quot;10.0.0.51:3310\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;writeHost host=\u0026quot;db3\u0026quot; url=\u0026quot;10.0.0.52:3308\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot;\u0026gt; \u0026lt;readHost host=\u0026quot;db4\u0026quot; url=\u0026quot;10.0.0.52:3310\u0026quot; user=\u0026quot;root\u0026quot; password=\u0026quot;123\u0026quot; /\u0026gt; \u0026lt;/writeHost\u0026gt; \u0026lt;/dataHost\u0026gt; \u0026lt;/mycat:schema\u0026gt;\nrule文件\nvim rule.xml id rang-long autopartition-long.txt autopartition-long.txt文件\nvim autopartition-long.txt 0-10=0 10-20=1\n2.创建测试 # mysql -S /data/3307/mysql.sock -e \u0026quot;use taobao;create table t3 (id int not null primary key auto_increment,name varchar(20) not null);\u0026quot; mysql -S /data/3308/mysql.sock -e \u0026quot;use taobao;create table t3 (id int not null primary key auto_increment,name varchar(20) not null);\u0026quot; 3.测试 # 重启mycat mycat restart mysql -uroot -p123456 -h 127.0.0.1 -P 8066 insert into t3(id,name) values(1,'a'); insert into t3(id,name) values(2,'b'); insert into t3(id,name) values(3,'c'); insert into t3(id,name) values(4,'d'); insert into t3(id,name) values(11,'aa'); insert into t3(id,name) values(12,'bb'); insert into t3(id,name) values(13,'cc'); insert into t3(id,name) values(14,'dd'); insert into t3(id,name) values(10,'ddd'); 分别登陆后端主节点查看数据\nmysql -S /data/3307/mysql.sock -e \u0026quot;select * from taobao.t3\u0026quot; mysql -S /data/3308/mysql.sock -e \u0026quot;select * from taobao.t3\u0026quot; 13. 取模分片（mod-long）： # 取余分片方式：分片键（一个列）与节点数量进行取余，得到余数，将数据写入对应节点\n修改配置文件 # schema配置\nvim schema.xml\nrule配置\nvim rule.xml \u0026lt;property name=\u0026quot;count\u0026quot;\u0026gt;2\u0026lt;/property\u0026gt; 准备测试环境 # 创建测试表\nmysql -S /data/3307/mysql.sock -e \u0026ldquo;use taobao;create table t4 (id int not null primary key auto_increment,name varchar(20) not null);\u0026rdquo; mysql -S /data/3308/mysql.sock -e \u0026ldquo;use taobao;create table t4 (id int not null primary key auto_increment,name varchar(20) not null);\u0026rdquo;\n重启mycat\nmycat restart\n测试\nmysql -uroot -p123456 -h10.0.0.52 -P8066\nuse TESTDB insert into t4(id,name) values(1,\u0026lsquo;a\u0026rsquo;); insert into t4(id,name) values(2,\u0026lsquo;b\u0026rsquo;); insert into t4(id,name) values(3,\u0026lsquo;c\u0026rsquo;); insert into t4(id,name) values(4,\u0026rsquo;d\u0026rsquo;);\n分别登录后端节点查询数据\nmysql -S /data/3307/mysql.sock use taobao select * from t4;\nmysql -S /data/3308/mysql.sock use taobao select * from t4;\n14. 枚举分片 # t5 表\nid name telnum\n1 bj 1212\n2 sh 22222\n3 bj 3333\n4 sh 44444\n5 bj 5555\nsharding-by-intfile\n修改配置文件 # schema配置\nvim schema.xml\nrule配置\nvim rule.xml name hash-int partition-hash-int.txt 1 0 partition-hash-int.txt 配置\nbj=0 sh=1 DEFAULT_NODE=1\ncolumns 标识将要分片的表字段，algorithm 分片函数， 其中分片函数配置中，mapFile标识配置文件名称\n2.准备测试环境 # 准备数据\nmysql -S /data/3307/mysql.sock -e \u0026ldquo;use taobao;create table t5 (id int not null primary key auto_increment,name varchar(20) not null);\u0026rdquo;\nmysql -S /data/3308/mysql.sock -e \u0026ldquo;use taobao;create table t5 (id int not null primary key auto_increment,name varchar(20) not null);\u0026rdquo;\n重启mycat\nmycat restart mysql -uroot -p123456 -h10.0.0.51 -P8066 use TESTDB insert into t5(id,name) values(1,\u0026lsquo;bj\u0026rsquo;); insert into t5(id,name) values(2,\u0026lsquo;sh\u0026rsquo;); insert into t5(id,name) values(3,\u0026lsquo;bj\u0026rsquo;); insert into t5(id,name) values(4,\u0026lsquo;sh\u0026rsquo;); insert into t5(id,name) values(5,\u0026rsquo;tj\u0026rsquo;);\n15 . Mycat全局表 # a b c d\njoin\nt\nselect t1.name ,t.x from t1\njoin t\nselect t2.name ,t.x from t2\njoin t\nselect t3.name ,t.x from t3\njoin t\n使用场景：\n如果你的业务中有些数据类似于数据字典，比如配置文件的配置，\n常用业务的配置或者数据量不大很少变动的表，这些表往往不是特别大，\n而且大部分的业务场景都会用到，那么这种表适合于Mycat全局表，无须对数据进行切分，\n要在所有的分片上保存一份数据即可，Mycat 在Join操作中，业务表与全局表进行Join聚合会优先选择相同分片内的全局表join，\n避免跨库Join，在进行数据插入操作时，mycat将把数据分发到全局表对应的所有分片执行，在进行数据读取时候将会随机获取一个节点读取数据。\n1.修改配置 # vim schema.xml \u0026lt;table name=\u0026quot;t_area\u0026quot; primaryKey=\u0026quot;id\u0026quot; type=\u0026quot;global\u0026quot; dataNode=\u0026quot;sh1,sh2\u0026quot; /\u0026gt; 2.后端数据准备 # mysql -S /data/3307/mysql.sock use taobao create table t_area (id int not null primary key auto_increment,name varchar(20) not null); mysql -S /data/3308/mysql.sock use taobao create table t_area (id int not null primary key auto_increment,name varchar(20) not null); 3.重启mycat # mycat restart 4.测试 # mysql -uroot -p123456 -h10.0.0.52 -P8066 use TESTDB insert into t_area(id,name) values(1,'a'); insert into t_area(id,name) values(2,'b'); insert into t_area(id,name) values(3,'c'); insert into t_area(id,name) values(4,'d'); 16. E-R分片 # A\njoin\nB\n为了防止跨分片join，可以使用E-R模式\nA join B\non a.xx=b.yy\njoin C\non A.id=C.id\n","date":"2020年33月25日","externalUrl":null,"permalink":"/1909.html","section":"Posts","summary":"","title":"MySQL分布式架构","type":"post"},{"content":"reference1: https://blog.csdn.net/qq_33684555/article/details/81872110\nreference2: http://www.cnblogs.com/xiaochina/p/7486073.html\nreference3: https://blog.csdn.net/bytxl/article/details/46639073\nreference4: https://www.cnblogs.com/xshrim/p/6472679.html -\u0026gt; 含有zlib编译\nreference5: https://www.linuxidc.com/Linux/2011-10/45739p2.htm -\u0026gt; 定义了sshd_config文件中的配置\nOpenSSH（OpenBSD Secure Shell）是OpenBSD计划组所维护的一套用于安全访问远程计算机的连接工具。该工具是SSH协议的开源实现，支持对所有的传输进行加密，可有效阻止窃听、连接劫持以及其他网络级的攻击。\nOpenSSH中的scp client实用程序存在安全漏洞，该漏洞源于程序错误的验证了对象名称。攻击者可利用该漏洞覆盖文件。\n最近公司发现OPENSSH有防护漏洞, 需要给7.9版本的openssh安装补丁, 故网上收集资料, 融合自己的理解, 写出此文, 有任何问题请指正.\n注意: 编译安装openssh新版本之前, 最好先安装telnet服务, 万一sshd服务被你操作挂了, 还有替代的telnet服务可以提供远程连接, 笔者就是在安装过程中遇到过此问题, 最后拖了两天时间, 各种找领导, 然后登录堡垒机直接操作Centos虚拟机, 才解决问题!!!\nyum -y install telnet telnet-server systemctl start telnet.socket # 注: 使用telnet命令可直接远程连接服务器, 但是telnet不允许root用户登录! 1. 基础环境准备 # 首先去openssh官网下载openssh.tar.gz最新版本\nwget https://openbsd.hk/pub/OpenBSD/OpenSSH/portable/openssh-8.0p1.tar.gz 注意要下载p1版本, 此版为编译安装包!!\n在安装之前先记下sshd.pid路径, 因为在启动文件sshd中要更改此路径\n将安装包先传入服务器中\n卸载现有版本openssh: rpm -e --nodeps $(rpm -qa | grep openssh)\n删除/etc/ssh/下所有文件, 在卸载完openssh后此路径下文件不会删除, 需手动删除\n安装依赖：zlib-devel、openssl-devel、gcc、gcc-c++、make等, 可直接yum groupinstall \u0026quot;Development Tools\u0026quot;, 出现\u0026quot;No packages in any requested group available to install or update\u0026quot;报错时:\nyum -y install openssl-devel yum -y groupinstall \"Development Tools\" --setopt=group_package_types=mandatory,default,optional # 报错原因详见Redhat官网: # https://access.redhat.com/solutions/1310043 , 唯一需要注意的是openssl-devel这个包必须安装\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;900\u0026quot; data-height=\u0026quot;277\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-156fc98aae35b5191d6944b55afacce9.png\u0026quot; alt=\u0026quot;编译安装openssh新版本编译安装openssh新版本\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; 编译安装openssh最新版本.png 2. 编译安装openssh # # 先设置selinux为permissive vi /etc/sysconfig/selinux ./configure --prefix=/usr/ --sysconfdir=/etc/ssh/ --with-ssl-dir=/usr/local/ssl --with-md5-passwords --mandir=/usr/share/man/ make \u0026\u0026 make install # 删除/etc/ssh/下的密钥对, (只删除密钥对即可, 在重启的时候会重新生成), 此步省略!!! rm -f /etc/ssh/ssh_host_* # 复制启动文件至/etc/init.d/ cp -a contrib/redhat/sshd.init /etc/init.d/sshd # 编辑/etc/init.d/sshd文件, 将PID_FILE改为之前记下的sshd.pid路径 vi /etc/init.d/sshd # 设置开机启动sshd chkconfig sshd on chkconfig --list sshd # 编辑/etc/ssh/sshd_config, 设置一些常用参数 vi /etc/ssh/sshd_config PermitRootLogin yes PubkeyAuthentication yes PasswordAuthentication yes AllowTcpForwarding yes X11Forwarding yes PidFile /run/sshd.pid # 编辑/usr/lib/systemd/system/sshd.service, 添加以下内容 vi /usr/lib/systemd/system/sshd.service [Unit] Description=OpenSSH server daemon Documentation=man:sshd(8) man:sshd_config(5) #After=network.target sshd-keygen.service #Wants=sshd-keygen.service After=network.target [Service] #Type=notify #EnvironmentFile=/etc/sysconfig/sshd #ExecStart=/usr/sbin/sshd -D $OPTIONS ExecStart=/usr/sbin/sshd #ExecReload=/bin/kill -HUP $MAINPID #KillMode=process #Restart=on-failure #RestartSec=42s [Install] WantedBy=multi-user.target # 编辑好这个配置文件之后进行以下操作 systemctl enable sshd systemctl status sshd systemctl restart sshd systemctl status sshd \u0026ndash;prefix 安装目录\n\u0026ndash;sysconfdir 配置文件目录\n\u0026ndash;with-ssl-dir 指定 OpenSSL 的安装目录\n\u0026ndash;with-privsep-path 非特权用户的chroot目录\n\u0026ndash;with-privsep-user=sshd 指定非特权用户为sshd\n\u0026ndash;with-zlib 指定zlib库的安装目录\n\u0026ndash;with-md5-passwords 支持读取经过MD5加密的口令\n\u0026ndash;with-ssl-engine 启用OpenSSL的ENGINE支持\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;656\u0026quot; data-height=\u0026quot;124\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-581da694502e31e3d5300edca016bc0d.png\u0026quot; alt=\u0026quot;编译安装openssh新版本编译安装openssh新版本\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; 编译安装openssh最新版本1.png 至此openssh服务升级完成, 将sshd服务添加到开机启动即可\n此版本openssh的配置文件默认是没有开启root登录权限的, 想要开启权限可以修改配置文件/etc/ssh/sshd_config, 配置PermitRootLogin yes, 取消注释 PasswordAuthentication yes, 配置PID_FILE=/run/sshd.pid\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;295\u0026quot; data-height=\u0026quot;104\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-fd5954a53b0123f78fc284d33dabd30d.png\u0026quot; alt=\u0026quot;编译安装openssh新版本编译安装openssh新版本\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; 编译安装openssh最新版本2.png 另外, 安装目录为/usr/, 因为在启动文件中有关于SSHD的路径, 此安装目录默认为redhat启动文件的路径\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;608\u0026quot; data-height=\u0026quot;72\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-fb41a74eef72cba86e2b3ca156d51afe.png\u0026quot; alt=\u0026quot;编译安装openssh新版本编译安装openssh新版本\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; 编译安装openssh最新版本3.png 如果变更了安装路径, 启动文件的此路径也要变更\n3. 编译完成后可能遇到的问题 # xshell等连接报错如下: The SSH server rejected your password. Try again.\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;437\u0026quot; data-height=\u0026quot;396\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-ad2e752410ce46fba2993a330ef79c77.png\u0026quot; alt=\u0026quot;编译安装openssh新版本编译安装openssh新版本\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; 编译安装openssh最新版本4.png 或者用journalctl -xn查看后台日志时发现: error: Could not get shadow information for root\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;837\u0026quot; data-height=\u0026quot;127\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-18c01e1abd35a79d7b07d45fd488417f.png\u0026quot; alt=\u0026quot;编译安装openssh新版本编译安装openssh新版本\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; 编译安装openssh最新版本5.png 则是由于服务器上的selinux的问题, 需要将selinux改为permissive\n在开启SSHD服务时报错. sshd re-exec requires execution with an absolute path 用绝对路径启动,也报错如下: Could not load host key: /etc/ssh/ssh_host_key Could not load host key: /etc/ssh/ssh_host_rsa_key Could not load host key: /etc/ssh/ssh_host_dsa_key Disabling protocol version 1. Could not load host key Disabling protocol version 2. Could not load host key sshd: no hostkeys available — exiting 解决过程: #ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key #ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key #/usr/sbin/sshd 如果上述两个文件存在，仍然出现这个错误，那么试试 chmod 600 上述两个文件。之后应该可以解决。 4. 将sshd服务添加到开机启动 # vi /usr/lib/systemd/system/sshd.service [Unit] Description=OpenSSH server daemon Documentation=man:sshd(8) man:sshd_config(5) #After=network.target sshd-keygen.service #Wants=sshd-keygen.service After=network.target [Service] #Type=notify #EnvironmentFile=/etc/sysconfig/sshd #ExecStart=/usr/sbin/sshd -D $OPTIONS ExecStart=/usr/sbin/sshd #ExecReload=/bin/kill -HUP $MAINPID #KillMode=process #Restart=on-failure #RestartSec=42s [Install] WantedBy=multi-user.target vi sshd@.service # 可省略 [Unit] Description=OpenSSH per-connection server daemon Documentation=man:sshd(8) man:sshd_config(5) Wants=sshd-keygen.service After=sshd-keygen.service [Service] EnvironmentFile=-/etc/sysconfig/sshd ExecStart=-/usr/sbin/sshd -i $OPTIONS StandardInput=socket vi sshd.socket # 可省略 [Unit] Description=OpenSSH Server Socket Documentation=man:sshd(8) man:sshd_config(5) Conflicts=sshd.service [Socket] ListenStream=22 Accept=yes [Install] WantedBy=sockets.target vi sshd-keygen.service # 可省略 [Unit] Description=OpenSSH Server Key Generation ConditionFileNotEmpty=|!/etc/ssh/ssh_host_rsa_key ConditionFileNotEmpty=|!/etc/ssh/ssh_host_ecdsa_key ConditionFileNotEmpty=|!/etc/ssh/ssh_host_ed25519_key PartOf=sshd.service sshd.socket [Service] ExecStart=/usr/sbin/sshd-keygen Type=oneshot RemainAfterExit=yes vi /usr/lib/systemd/system/sshd.service # 编辑好这个配置文件之后进行以下操作 systemctl enable sshd systemctl status sshd systemctl restart sshd systemctl status sshd ","date":"2020年33月25日","externalUrl":null,"permalink":"/1901.html","section":"Posts","summary":"","title":"编译安装openssh新版本编译安装openssh新版本","type":"post"},{"content":" 一、CentOS8新特性** # **\n* `CentOS8最终于2019年9月24日发布`。由于这是一个源自Red Hat Enterprise linux (RHEL)的Linux发行版，所以CentOS团队必须构建一个基础设施来支持新引入的RHEL 8。 * 该版本还包含全新的`CentOS Streams`，Centos Stream是一个滚动发布的Linux发行版，它介于Fedora Linux的上游开发和RHEL的下游开发之间而存在。你可以把CentOS Streams当成是用来体验最新红帽系Linux特性的一个版本，而无需等太久。 * CentOS 8主要改动和 RedHat Enterprise Linux 8 是一致的，`基于Fedora 28和内核版本 4.18`,为用户提供一个稳定的、安全的、一致的基础，跨越混合云部署，支持传统和新兴的工作负载所需的工具 * CentOS系统在开发人员和系统管理员中广泛使用，因为它提供了对其高度可定制的开源软件包的完全控制。它是稳定的，背后有一个庞大而活跃的支持社区。由于其可靠性，它已经成为服务器操作系统的主流选择。 1. 两种模式： # CentOS stream：滚动发布的 Linux 发行版，适用于需要频繁更新的开发者 CentOS-1905：类似 RHEL 8 的稳定操作系统，系统管理员可以用其部署或配置服务和应用 2. 大致概述： # 扩展设备支持：\nGNOME现在集成了Thunderbolt 3连接支持。每当Thunderbolt 3建立连接并激活时，您将得到通知。该功能允许您密切监视所有连接，并检测任何安全漏洞或数据泄漏或盗窃企图。\n新的盒子特性：\nGNOME的应用程序中包含了一些用于管理远程和虚拟机的新特性。更新后的版本通过自动下载操作系统简化了创建虚拟环境的过程。此外，它的拖放功能可以让您轻松地在机器之间传输文件。\n新的屏幕键盘： GNOME团队重新编写了最新版本的屏幕键盘，试图解决紧迫的UI问题。现在，该功能支持多种布局以支持不同的地区、自动键盘激活和视图切换，因此用户在书写时可以清楚地看到文本。 更新的UI界面：\n新的桌面环境还增加了几个额外的特性来改进UI和UX。这包括多显示器处理，直接窗口处理，改进的缩放，等等。 网络功能，有两个主要的更新:\nCentOS现在提供了TCP网络堆栈版本4.16。 使用的缺省包过滤框架是nftables。\n最重要的是，这些更改确保了更好的稳定性、可伸缩性和性能。 nftables替代iptables、iptablesip6table、arptables和ebtables，作为IPv4和IPv6协议的单一框架。此外，firewalld deamon还将使用与默认后端相同的用于过滤网络事务的子系统。\n3. Cockpit Web控制台 # 开放的基于web的控制台界面，Cockpit，现在作为新的CentOS发布的一部分。使用此平台可以通过web控制台界面轻松地管理服务器。通过web浏览器执行系统任务、创建和管理虚拟机、配置网络、启动容器和检查日志。\nCockpit高度集成。它不仅有一个嵌入式终端，可以让你随时从终端切换到浏览器，而且还可以在移动设备上工作。\n因此，当你安装CentOS 8时，它会自动设置Cockpit web控制台，并打开所需的防火墙端口。但是，不必担心它会加重系统的负担。该软件非常有效，因为它只在活动时使用内存和CPU。\n4. 软件仓库更新 # 更加详细的官方文档\n内容分布在两个主要的软件仓库:\nBaseoS repository\nAppstream Repository\n虽然BaseOS包含所有底层OS包，但AppStream包含与应用程序相关的包、开发工具、数据库和其他包。\nBaseOS存储库拥有组成操作系统核心的传统RPM包。一旦更新了系统，它会自动下载并安装这些包的任何新版本。\n有时可能不想批量升级软件，因为它可能会在你希望保持稳定的环境中导致兼容性问题(例如，在测试代码时)。这就是为什么新的CentOS 8附带了附加的AppStream存储库，提供了更多的特性、功能和定制。\n这个软件仓库有一个不同的管理软件的方法，将它分为几个子类:\nPackages:作为常规包处理。\nModules:相关或共享依赖项的包组。\nModule streams:软件模块的不同版本。\nModule profiles:构建模块的包的不同配置。\n5. 软件管理更新 # 更新详细的官方文档\nCentOS 8附带yum包管理器v4.0.4版本，该版本现在使用DNF (Dandified YUM)技术作为后端。DNF是新一代的YUM，新的操作系统版本允许您同时使用这两种工具来管理包。\n与DNF技术集成，最新版本有一个大大改进的软件管理系统。并支持模块化内容、增强了性能、并且提供了设计良好的API用于与其他工具集成。云应用程序流、容器工作负载和CI/CD。\n6. 虚拟化更新 # 更详细的官方文档\nCentOS版本8带有KVM (qemu-kvm 2.12)，支持:\n5级分页功能，扩展了虚拟地址的大小，增加了可寻址的虚拟内存。\n用户模式指令预防(UMIP)，一种将对用户空间应用程序的访问限制为系统级设置的安全特性。减少了特权升级攻击的潜在载体，从而使KVM虚拟机管理程序及其来宾计算机更加安全。\n虚拟化支持Ceph存储，在所有的RHEL CPU架构上提供块存储功能。\n所有虚拟机都预先设置的Q35机器类型(机器类型包括本机PCIe热插拔、IOMMU、安全启动和许多其他新集成的功能)。\nNVIDIA vGPU和VNC控制台之间的兼容性。\nQEMU仿真器引入的沙箱特性，以确保安全的代码测试。\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;1280\u0026quot; data-height=\u0026quot;768\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-8f5d635807a3d7bad82626b015c01ab3.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 7. 安全更新 # CentOS团队已经改进了安全特性，以确保数据保护和防止入侵。最新版本的OpenSSL 1.1.1默认包含TLS 1.3。这将确保您的所有数据以及客户端数据都受到密码保护。\nOS附带了一个全系统的加密策略，这意味着你不必修改各个应用程序的安全配置。\n8. CentOS Stream # CentOS Stream是一个结合了Fedora项目和RHEL的项目。CentOS团队创建了Stream版本作为滚动发行版，试图消除重大更新后的延迟和兼容性问题。\n本项目的基本思路是:\n通过一次更改几个包来获得开发更新Stream。\n获取用户反馈并解决CentOS社区提出的任何问题。\n允许在CentOS Stream上构建分层项目(如Ansible、oVirt和RDO)。\n9. 命令行工具 # 更详细的官方文档\nnobody用户更换nfsnobody，这两个都已合并到nobody用户和组对中，使用65534 ID。新安装不再创建该nfsnobody对。此项更改减少了对nobodyNFS 拥有但与NFS无关的文件的困惑。\n提供了版本控制系统\nGit 2.18：它是具有分散架构的分布式修订控制系统。\nMercurial 4.8：一种轻量级的分布式版本控制系统，旨在有效处理大型项目。\nSubversion 1.10：一个集中的版本控制系统。\n10. 编程语言 Web和数据库服务器 # 更详细的官方文档\nPython 3.6：默认情况下可能未安装该软件包。要安装Python 3.6，使用yum install python3命令\nPython 2.7：继续支持，但是生命周期较短，其目的是促进使用者向Python3的平稳过渡\nNode.js 是最新包含的，其他动态语言更新包括:\nPHP 7.2：\n默认情况下使用FastCGI流程管理器,可以安全地与线程一起使用httpd\n不再在使用httpd配置文件,应该在池配置中设置它：/etc/php-fpm.d/*.conf\nPHP脚本错误和警告记录到/var/log/php-fpm/www-error.log文件中，而不是/var/log/httpd/error.log\n以下扩展已被删除： aspell ；mysql；memcache\nRuby 2.5；Perl 5.26；SWIG 3.0 提供Apache HTTP Server 2.4； mod_http2提供了HTTP / 2支持。支持直接从PKCS#11模块中从硬件安全令牌加载TLS证书和私钥；以及首次引入的nginx 1.14\n提供的数据库服务版本包括：\nMySQL 8.0；\n现在，它包含一个事务性数据字典，用于存储有关数据库对象的信息\n默认字符集已从更改latin1为utf8mb4\nInnoDB现在支持带有锁定读取语句的NOWAIT和SKIP LOCKED选项\nMariaDB 10.3；\n新增了这些功能常用表表达式；系统版本表；FOR 循环；隐形栏；顺序；即时ADD COLUMN的InnoDB；与存储引擎无关的列压缩；并行复制；多源复制。\nPostgreSQL 9.6 \u0026amp; PostgreSQL 10；\n顺序操作的并行执行：scan，join，和aggregate。\n同步复制的增强。\n改进的全文搜索，使用户可以搜索短语。\n该postgres_fdw数据联合驱动程序现在支持远程join，sort，UPDATE，和DELETE操作。\n大幅提升性能，尤其是在多CPU插槽服务器上的可伸缩性方面。\nRedis 5；\nSquid 版本升级到4.4，首次提供Varnish Cache 6.0\nSquid(用于Web客户端的高性能代理缓存服务器) ；varnish cache(一款高性能的开源HTTP加速器)\n11. 桌面环境 # 更详细的官方文档\nGNOME Shell 升级到3.28.\nGNOME会话和显示管理使用 Wayland 作为默认的显示服务器，而RHEL 7默认的 X.Org server依然提供\n12. 文件系统和存储 # XFS文件系统最大大小已从500 TiB增加为1024 TiB\nLUKS版本2（LUKS2）格式替代了旧版LUKS（LUKS1）格式；使用LUKS2作为加密卷的默认格式。LUKS2在部分元数据损坏事件的情况下为加密卷提供元数据冗余和自动恢复\n13. 安全方面 # 更详细的官方文档\n默认的系统级的 加密策略,用于配置核心加密子系统，覆盖TLS, IPsec, SSH, DNSSEC,和Kerberos协议。增加全新命令update-crypto-policies,管理员可以轻松切换不同模式：default, legacy, future,和fips.\n支持智能卡和硬件安全模块 (HSM)的 PKCS #11\n14. 网络方面 # 更详细的官方文档\nnftables 框架替代 iptables 作为默认的网络包过滤工具\nfirewalld 守护进程使用 nftables 作为默认后端\n支持 IPVLAN 虚拟网络驱动程序，可以为多个容器提供网络连接\n15. 编译器和开发工具 # 更详细的官方文档\nGcc 编译器更新到8.2版本，支持更多C++标准，更好的优化以及代码增强技术、提升警告和硬件特性支持\n不同的代码生成、操作和调试工具现在可以处理 DWARF5 调试信息格式（体验阶段）\n核心支持 eBPF 调试的工具包括BCC, PCP,和 SystemTap.\n`glibc 库升级到2.28，支持 Unicode 11,更新的Linux系统调用，关键提升主要在DNS stub resolver、额外的安全加强和性能提升\n提供OpenJDK 11, OpenJDK 8, IcedTea-Web,以及不同 Java 工具，如 Ant, Maven,或 Scala.\n安装CentOS8 # 1. 环境准备 # CentOS8-1905镜像 # CentOS8-Stream的镜像\n两个镜像的差异：\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;715\u0026quot; data-height=\u0026quot;268\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-79c344e7416133b0adf1d4158eb52a02.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;658\u0026quot; data-height=\u0026quot;233\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-4a997f26d5516fd8bba4b8076dded19c.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 2. 安装步骤 # VMware虚拟机：\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;495\u0026quot; data-height=\u0026quot;432\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-a1c88cf1d478d4671df2f33cf433b86f.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;499\u0026quot; data-height=\u0026quot;433\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-f75e2108b685d1bac3827c787883901d.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;503\u0026quot; data-height=\u0026quot;435\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-309b2fb1e60a04a0a0d95862569ff647.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;502\u0026quot; data-height=\u0026quot;434\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-2a61b0a732e4edac9ea7a0d34f892a8b.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image CentOS-8（1905）须要最少 2 GB 内存。官方推荐采用至少 4 GB 内存。\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;498\u0026quot; data-height=\u0026quot;431\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-2d544fa367efc2d7fef4c56555066e5d.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;500\u0026quot; data-height=\u0026quot;431\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-7d9c072938b349b37bbf43414e9c3c46.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;500\u0026quot; data-height=\u0026quot;433\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-b3324e5d8fc24cb28181ad7c400ebe1a.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;499\u0026quot; data-height=\u0026quot;435\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-3131015d2256ce99c6d8ccd1d1326a6d.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;500\u0026quot; data-height=\u0026quot;432\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-bd7c16f612faf9a8324d7a0839046be9.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;816\u0026quot; data-height=\u0026quot;319\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-3c6b48274346e290451fd99d9771fac1.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 选择NAT模式\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;726\u0026quot; data-height=\u0026quot;431\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-eabf9854a192b9bd1093f36a0f9a0c1c.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;550\u0026quot; data-height=\u0026quot;404\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-665dc779157de17478da3831d364eb04.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 进入虚拟机BIOS设置，将虚拟磁盘设置为第一启动项，F10保存\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;642\u0026quot; data-height=\u0026quot;474\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-67bfd454882a9348adcbed427772b1f7.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 修改网卡名 tab键后输入 net.ifnames=0 biosdevname=0 然后回车\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;640\u0026quot; data-height=\u0026quot;480\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-cb7e0380090c129a4dab7269f09617fd.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 建议选择英文，我这里选择的中文\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-1000be275aa256a7d5d4b4c1ceccd416.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-a201d235a65760b5153a55ab5f8107da.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image CentOS 8 分配了 40 GB 的硬盘空间。有两种分区方案可供选择：如果由安装向导进行自动分区，可以从“ 存储配置(Storage Configuration)”中选择“ 自动(Automatic)”选项；如果想要自己手动进行分区，可以选择“ 自定义(Custom)”选项。\n在这里我们选择“ 自定义(Custom)”选项，并按照以下的方式创建基于 LVM 的分区：\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-e516d20ebee2fcbb2ad4f02fc2e3da42.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-7116d57e56bafc2a4fb4abcf2cfee488.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-2a87b46fd990ddc557562d70e76f3191.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-07150f50b6dc02580d797a0ff08dfd20.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 可选择最小化或者带GUI的图形界面\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-4f557e8c6264ebc32be216b2c49bd459.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 最小化安装要选择的\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-31dc9a4f7b53aa406829dded46141d80.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 创建ROOT密码\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-879b6ca4ee5993fb58732843def0a0a1.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 为虚拟机创建快照。\n\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-b531517104daa444e9e03109c86f61f3.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;800\u0026quot; data-height=\u0026quot;600\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-f221ca3d1687a94bc4927d45acdbb891.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;1280\u0026quot; data-height=\u0026quot;768\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-bb61cb2cc935b674f68b0a5568ba316f.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 3. 可Cockpit Web控制台界面管理CentOS8 # CentOS8的一大改变就是通过Web直观的管理服务器的系统，这项新服务的名称为Cockpit,可以帮助不熟悉命令行的使用者管理服务器系统。不仅仅CenOS8 可以使用。ubuntu 和CentOS7 也是可以使用的。\n支持web终端，在web中关闭防火墙，selinux。\n支持虚拟机管理，需要安装cockpit-machines\n支持k8s dashboard管理，需要安装 cockpit-kubernetes\n支持web界面配置网卡\nsystemctl start cockpit.socket systemctl enable cockpit.socket\n访问 http://IP:9090 用户名密码和Linux的是一样的 打开Web界面后就可以实现对系统的监控和配置功能，Web界面的左侧便是其各种功能的菜单\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;1490\u0026quot; data-height=\u0026quot;835\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-ea90246c12b1139acccb76b2d10256cb.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;1477\u0026quot; data-height=\u0026quot;779\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-01a60662aee1da00d837570310996fcb.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;1299\u0026quot; data-height=\u0026quot;716\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-9335bdf4884249dc1336f6ab505c8aef.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 三、CentOS8的新操作 # CentOS8系统优化快速上手\n[root@CentOS8 ~]# ssh -V OpenSSH_7.8p1, OpenSSL 1.1.1 FIPS 11 Sep 2018 [root@CentOS8 ~]# cat /etc/redhat-release CentOS Linux release 8.0.1905 (Core) [root@CentOS8 ~]# uname -a Linux CentOS8 4.18.0-80.el8.x86_64 #1 SMP Tue Jun 4 09:19:46 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux 3.1 网络配置—NetworkManager # 在CentOS7上，同时支持network.service和NetworkManager.service。默认情况下，这2个服务都有开启，但许多人都会将NetworkManager禁用掉。\n在CentOS8上，默认没有安装network.service，依然支持network。因此只能通过NetworkManager进行网络配置，包括动态ip和静态ip。换言之，在CentOS8上，必须开启NM，否则无法使用网络。\nNetworkManager介绍：\n能管理各种网络\n▷ 有线网卡、无线网卡\n▷ 动态ip、静态ip\n▷ 以太网、非以太网\n▷ 物理网卡、虚拟网卡\n使用方法齐全\n▷ nmcli：命令行。这是最常用的工具，本文将详细讲解该工具使用。\n▷ nmtui：在shell终端开启文本图形界面。\n▷ Freedesktop applet：如GNOME上自带的网络管理工具\n▷ cockpit：redhat自带的基于web图形界面的\u0026quot;驾驶舱\u0026quot;工具，具有dashborad和基础管理功能。\n为什么要用NetworkManager\n▷ 工具齐全：命令行、文本界面、图形界面、web\n▷ 广纳天地：纳管各种网络，有线、无线、物理、虚拟\n▷ 参数丰富：多达200多项配置参数\n▷ 一统江湖：RedHat、CentOS、Suse、Debian/Ubuntu，均支持\n▷ 大势所趋：下一个大版本只能通过NM管理网络\n3.2 设置网卡的新方法—nmcli # 在NetworkManager里，有2个维度：连接（connection）和设备（device），这是多对一的关系。想给某个网卡配ip，首先NetworkManager要能纳管这个网卡。设备里存在的网卡（即nmcli d可以看到的），就是NM纳管的。接着，可以为一个设备配置多个连接（即nmcli c可以看到的），每个连接可以理解为一个ifcfg配置文件。同一时刻，一个设备只能有一个连接活跃。可以通过nmcli c up切换连接。\n查看网卡连接信息\nconnection有2种状态：\n▷ 活跃（带颜色字体）：表示当前该connection生效\n▷ 非活跃（正常字体）：表示当前该connection不生效\n[root@CentOS8 ~]# nmcli connection NAME UUID TYPE DEVICE eth0 07b4217d-3fc4-48f7-ac70-1495cb856f98 ethernet eth0\nvirbr0 4750c5db-fdd4-4423-812d-ab31120c88fd bridge virbr0\n#查看connection列表和详细列表 nmcli c show nmcli c show eth0\n#语法： nmcli connection modify \u0026lt;interface_name\u0026gt; ipv4.address \u0026lt;ip/prefix\u0026gt; 译作连接，可理解为配置文件，相当于ifcfg-eth0 可以简写为 nmcli c\n获取网卡设备列表\ndevice有4种常见状态：\n▷ connected：已被NM纳管，并且当前有活跃的connection\n▷ disconnected：已被NM纳管，但是当前没有活跃的connection\n▷ unmanaged：未被NM纳管\n▷ unavailable：不可用，NM无法纳管，通常出现于网卡link为down的时候\n[root@CentOS8 ~]# nmcli device DEVICE TYPE STATE CONNECTION eth0 ethernet connected eth0 lo loopback unmanaged \u0026ndash;\n#查看所有device详细信息 nmcli d show #查看指定device详细信息 nmcli d show eth0\n译作设备，可理解为实际存在的网卡（包括物理网卡和虚拟网卡） 可以简写为 nmcli d\n查看ip地址和NetworkManager状态\n类似于ifconfig、ip addr\n[root@CentOS8 ~]# nmcli eth0: connected to eth0 \u0026ldquo;Intel 82545EM\u0026rdquo; ethernet (e1000), 00:0C:29:B2:BE:2D, hw, mtu 1500 ip4 default inet4 10.0.0.58/24 route4 0.0.0.0/0 route4 10.0.0.0/24 inet6 fe80::b05:e02d:a476:ce8e/64 route6 fe80::/64 route6 ff00::/8\nlo: unmanaged \u0026ldquo;lo\u0026rdquo; loopback (unknown), 00:00:00:00:00:00, sw, mtu 65536\nDNS configuration: servers: 10.0.0.1 interface: eth0\nUse \u0026ldquo;nmcli device show\u0026rdquo; to get complete information about known devices and \u0026ldquo;nmcli connection show\u0026rdquo; to get an overview on active connection profiles.\nConsult nmcli(1) and nmcli-examples(5) manual pages for complete usage details.\n启用和停止网卡连接\n#相当于ifup ifdown 启用 nmcli c up eth0 停止 nmcli c down eth0 立即生效connection，有3种方法\nnmcli c up eth0 nmcli d reapply eth0 nmcli d connect eth0 删除网卡连接\nnmcli c delete eth0 重载所有、指定 ifcfg或route到connection（不会立即生效）\nnmcli c reload nmcli c load /etc/sysconfig/network-scripts/ifcfg-eth0 创建网络连接并配置静态IP地址（等同于配置ifcfg，其中BOOTPROTO=none，并ifup启动）\nnmcli c add type ethernet con-name eth0 ifname eth0 ipv4.addr 192.168.1.100/24 ipv4.gateway 192.168.1.1 ipv4.method manual 创建网络连接并配置动态IP地址（等同于配置ifcfg，其中BOOTPROTO=dhcp，并ifup启动）\nnmcli c add type ethernet con-name eth0 ifname eth0 ipv4.method auto 修改IP地址（非交互式）\nnmcli c modify eth0 ipv4.addr '192.168.0.200/24' nmcli c up eth0 修改IP地址（交互式）\nnmcli c edit eth0 nmcli\u0026gt; goto ipv4.addresses nmcli ipv4.addresses\u0026gt; change Edit 'addresses' value: 192.168.1.200/24 Do you also want to set 'ipv4.method' to 'manual'? [yes]: yes nmcli ipv4\u0026gt; save nmcli ipv4\u0026gt; activate nmcli ipv4\u0026gt; quit 关闭无线网络\nnmcli r all off 查看NetworkManager状态\nnmcli n #开启NetworkManager nmcli n on #关闭NetworkManager nmcli n off 监听事件\nnmcli m 检测NetworkMarger是否在线可用\nnm-online 例子：创建一个连接（connection）\nnmcli c add type ethernet con-name eth0-test ifname eth0-test ipv4.addresses '192.168.1.100/24,192.168.1.101/32' ipv4.routes '10.0.0.0/8 192.168.1.10,192.168.0.0/16 192.168.1.11' ipv4.gateway 192.168.1.254 ipv4.dns '8.8.8.8,4.4.4.4' ipv4.method manual ▪ type ethernet：创建连接时候必须指定类型，类型有很多，可以通过nmcli c add type -h看到，这里指定为ethernet。 ▪ con-name ethX ifname ethX：第一个ethX表示连接（connection）的名字，这个名字可以任意定义，无需和网卡名相同；第二个ethX表示网卡名，这个ethX必须是在nmcli d里能看到的。 ▪ ipv4.addresses '192.168.1.100/24,192.168.1.101/32'：配置2个ip地址，分别为192.168.1.100/24和192.168.1.101/32 ▪ ipv4.gateway 192.168.1.254：网关为192.168.1.254 ▪ ipv4.dns '8.8.8.8,4.4.4.4'：dns为8.8.8.8和4.4.4.4 ▪ ipv4.method manual：配置静态IP 对应生成的网卡配置文件就是 [root@CentOS8 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0-test TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=none IPADDR=192.168.1.100 PREFIX=24 IPADDR1=192.168.1.101 PREFIX1=32 GATEWAY=192.168.1.254 DNS1=8.8.8.8 DNS2=4.4.4.4 DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=eth0-test UUID=ced95bb1-d856-4ace-8f2e-79a3f2d572c6 DEVICE=eth0-test ONBOOT=yes #通过该nmcli c 可以看到增加了一条连接 [root@CentOS8 ~]# nmcli c NAME UUID TYPE DEVICE eth0 6eebabfa-8f58-40af-b298-a385094b2f04 ethernet eth0 eth0-test ced95bb1-d856-4ace-8f2e-79a3f2d572c6 ethernet -- 3.3 使用nmtui命令管理网卡 # nmtui nmtui edit eth0 \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;1128\u0026quot; data-height=\u0026quot;572\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-b8135593697761c675e44dbaca531a35.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;1128\u0026quot; data-height=\u0026quot;572\u0026quot;\u0026gt; \u0026lt;img decoding=\u0026quot;async\u0026quot; class=\u0026quot;aligncenter\u0026quot; src=\u0026quot;https://www.kubehan.cn/wp-content/uploads/2020/03/frc-f1b12ebd6b8c89d087e87e1c327321da.jpg\u0026quot; alt=\u0026quot;CentOS8的新特性CentOS8的新特性\u0026quot; /\u0026gt; \u0026lt;/div\u0026gt; image 3.4 配置yum/dnf 源 # CentOS 8 默认是会读取centos.org的mirrorlist的，所以一般来说是不需要配置镜像的。\ncd /etc/yum.repos.d #备份 cp CentOS-Base.repo CentOS-Base.repo.bak cp CentOS-AppStream.repo CentOS-AppStream.repo.bak cp CentOS-Extras.repo CentOS-Extras.repo.bak --- vim /etc/yum.repos.d/CentOS-Base.repo [BaseOS] name=CentOS-$releasever - Base baseurl=https://mirrors.aliyun.com/centos/$releasever/BaseOS/$basearch/os/ gpgcheck=1 enabled=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial --- vim /etc/yum.repos.d/CentOS-APPStream.repo [AppStream] name=CentOS-$releasever - AppStream baseurl=https://mirrors.aliyun.com/centos/$releasever/AppStream/$basearch/os/ gpgcheck=1 enabled=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficia --- vim /etc/yum.repos.d/CentOS-Extras.repo [extras] name=CentOS-$releasever - Extras baseurl=https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/os/ gpgcheck=1 enabled=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial 3.5 关闭selinux firewalld # setenforce 0 systemctl stop firewalld systemctl disable firewalld 3.6 安装tab补全插件 # yum install bash-completion source /etc/profile 3.7 最小化系统安装Cockpit Web控制台 # dnf install cockpit -y systemctl start cockpit netstat -lntup|grep 9090 浏览器访问 https://ip:9090 3.8 常用软件包安装 # 对开发者的工具支持，可以用原生yum源安装了，不再需要通过第三方yum源。\n@注意：CentOS8 严格区分pip2 和pip3，python2-pip和python3-pip\ndnf install python3 php perl java-1.8.0 java-11 maven docker mysql-server mlocate lrzsz tree vim nc nmap wget bash-completion htop iotop iftop lsof net-tools sysstat unzip bc psmisc telnet-server -y\n3.9 nftables防火墙规则 # 更详细的官方文档\nnftables 框架替换了 iptables 默认网络数据包过滤工具，可以通过nft命令可编程式的配置防火墙。 firewalld也是Linux的防火墙，同时支持iptables和nftables，最新版本默认使用nftables。 简单的说firewalld是基于nftfilter防火墙的用户界面工具。而iptables和nftables是命令行工具。 firewalld引入区域的概念，可以动态配置，让防火墙配置及使用变得简便。 从用户的角度来看，nftables添加了一个名为nft的新工具，它取代了iptables，arptables和ebtables中的所有其他工具。 从架构的角度来看，它还取代了处理包过滤规则集的运行时评估的内核部分。 查询所有表名\n[root@CentOS8 ~]# nft list tables table ip filter table ip6 filter table bridge filter table ip security table ip raw table ip mangle table ip nat table ip6 security table ip6 raw table ip6 mangle table ip6 nat table bridge nat 查看某个表的规则\n[root@CentOS8 ~]# nft list table filter table ip filter { chain INPUT { type filter hook input priority 0; policy accept; } chain FORWARD { type filter hook forward priority 0; policy accept; } chain OUTPUT { type filter hook output priority 0; policy accept; } } 打开交互配置模式\nnft -i 3.10 nft基础操作 # 云栖社区-linux nftables简介和基础操作\n1、增\n增加表：nft add table fillter 增加链：nft add chain filter input { type filter hook input priority 0 ; } # 要和hook（钩子）相关连 增加规则：nft add rule filter input tcp dport 22 accept 2、删\n只需要把上面的 add 改为 delete 即可 3、改\n更改链名用rename 更改规则用replace 4、查\nnft list ruleset # 列出所有规则 nft list tables # 列出所有表 nft list table filter # 列出filter表 nft chain filter input # 列出filter表input链 以上命令后面也可以加 -nn 用于不解析ip地址和端口 加 -a 用于显示 handles ","date":"2020年33月25日","externalUrl":null,"permalink":"/1858.html","section":"Posts","summary":"","title":"CentOS8的新特性","type":"post"},{"content":"内核编译时，一般打开NET选项就打开AUDIT选项了。\n在系统中查看audit是否打开，root 用户执行：\nservice\u0026nbsp;auditd\u0026nbsp;status 我们知道在Linux系统中有大量的日志文件可以用于查看应用程序的各种信息，\n但是对于用户的操作行为（如某用户修改删除了某文件）却无法通过这些日志文件来查看，\n如果我们想实现监管企业员工的操作行为就需要开启审计功能，也就是auditd。\n1、首先执行以下命令开启auditd服务 service auditd start 2、接着查看看auditd的服务状态，有两种方法可以实现，使用auditctl命令时主要看enabled是否为1，1为开启，0为关闭\n[root@ns-master-c01 ~]# service auditd status\nauditd (pid\u0026nbsp; 20594) is running... [root@ns-master-c01 ~]# auditctl -s\nAUDIT_STATUS: enabled=1 flag=1 pid=20594 rate_limit=0 backlog_limit=320 lost=0 backlog=0 3、开启了auditd服务后，所有的审计日志会记录在/var/log/audit/audit.log文件中，\n该文件记录格式是每行以type开头，\n其中红框处是事件发生的时间（代表从1970年1月1日到现在过了多久，可以用date命令转换格式），\n冒号后面的数字是事件ID，同一个事件ID是一样的。 4、audit可以自定义对指定的文件或命令进行审计（如监视rm命令被执行、/etc/passwd文件内容被改变），\n只要配置好对应规则即可，配置规则可以通过命令行（临时生效）或者编辑配置文件（永久生效）两种方式来实现。\n\u0026nbsp;\n编辑配置文件（永久生效）： auditd的配置文件为/etc/audit/audit下的auditd.conf 和audit.rules\nauditd.conf 主要是定义了auditd服务日志和性能等相关配置，\naudit.rules才是定义规则的文件， \u0026nbsp;\n修改完后重启服务\nservice auditd restart\n\u0026nbsp;\n\u0026nbsp;\n5.如果直接使用tailf等查看工具进行日志分析会比较麻烦，\n好在audit已经提供了一个更好的事件查看工具——ausearch，使用auserach -h查看下该命令的用法： 这里列出几个常用的选项： -a number\u0026nbsp; #只显示事件ID为指定数字的日志信息，如只显示926事件：ausearch -a 926 -c\u0026nbsp; commond\u0026nbsp; #只显示和指定命令有关的事件，如只显示rm命令产生的事件：auserach\u0026nbsp; -c\u0026nbsp; rm -i\u0026nbsp; #显示出的信息更清晰，如事件时间、相关用户名都会直接显示出来，而不再是数字形式 -k\u0026nbsp; #显示出和之前auditctl -k所定义的关键词相匹配的事件信息\n\u0026nbsp;\n\u0026nbsp;\n6、使用auditctl还可以查看和清空规则 auditctl -l 查看定义的规则\nauditctl -D 清空定义的规则 \u0026nbsp;\n-------------------\n安装 auditd REL/centos默认已经安装了此套件，如果你使用ubuntu server，则要手工安装它：\nsudo apt-get install auditd\n它包括以下内容：\nauditctl : 即时控制审计守护进程的行为的工具，比如如添加规则等等。\n/etc/audit/audit.rules : 记录审计规则的文件。\naureport : 查看和生成审计报告的工具。\nausearch : 查找审计事件的工具\nauditspd : 转发事件通知给其他应用程序，而不是写入到审计日志文件中。\nautrace : 一个用于跟踪进程的命令。\n/etc/audit/auditd.conf : auditd工具的配置文件。 Auditd文件和目录访问审计\n首次安装 auditd 后, 审计规则是空的。可以用 sudo auditctl -l 查看规则。文件审计用于保护敏感的文件，如保存系统用户名密码的passwd文件，文件访问审计方法：\nsudo auditctl -w /etc/passwd -p rwxa -w path : 指定要监控的路径，上面的命令指定了监控的文件路径 /etc/passwd\n-p : 指定触发审计的文件/目录的访问权限\nrwxa ： 指定的触发条件，r 读取权限，w 写入权限，x 执行权限，a 属性（attr） 目录进行审计和文件审计相似，方法如下：\n$ sudo auditctl -w /production/\n以上命令对/production目录进行保护。 查看审计日志\n添加规则后，我们可以查看 auditd 的日志。使用 ausearch 工具可以查看auditd日志。\nsudo ausearch -f /etc/passwd -f 设定ausearch 调出 /etc/passwd文件的审计内容 查看审计报告 以上命令返回log如下：\ntime-\u0026gt;Mon\u0026nbsp;Dec\u0026nbsp;22\u0026nbsp;09:39:16\u0026nbsp;2016 type=PATH\u0026nbsp;msg=audit(1419215956.471:194):\u0026nbsp;item=0\u0026nbsp;name=\"/etc/passwd\" inode=142512\u0026nbsp;dev=08:01\u0026nbsp;mode=0100644\u0026nbsp;ouid=0\u0026nbsp;ogid=0\u0026nbsp;rdev=00:00\u0026nbsp;nametype=NORMAL type=CWD\u0026nbsp;msg=audit(1419215956.471:194):\u0026nbsp;cwd=\"/home/somebody\" type=SYSCALL\u0026nbsp;msg=audit(1419215956.471:194):\u0026nbsp;arch=40000003\u0026nbsp;syscall=5 success=yes\u0026nbsp;exit=3\u0026nbsp;a0=b779694b\u0026nbsp;a1=80000\u0026nbsp;a2=1b6\u0026nbsp;a3=b8776aa8\u0026nbsp;items=1\u0026nbsp;ppid=2090\u0026nbsp;pid=2231\u0026nbsp;auid=4294967295 uid=1000\u0026nbsp;gid=1000\u0026nbsp;euid=0\u0026nbsp;suid=0\u0026nbsp;fsuid=0\u0026nbsp;egid=1000\u0026nbsp;sgid=1000\u0026nbsp;fsgid=1000\u0026nbsp;tty=pts0\u0026nbsp;ses=4294967295 comm=\"sudo\"\u0026nbsp;exe=\"/usr/bin/sudo\"\u0026nbsp;key=(null) time : 审计时间。\nname : 审计对象\ncwd : 当前路径\nsyscall : 相关的系统调用\nauid : 审计用户ID\nuid 和 gid : 访问文件的用户ID和用户组ID\ncomm : 用户访问文件的命令\nexe : 上面命令的可执行文件路径 ","date":"2020年33月25日","externalUrl":null,"permalink":"/1796.html","section":"Posts","summary":"","title":"Linux操作系统之安全审计功能","type":"post"},{"content":" 安装认证所需包\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;color:#333333; font-family:Helvetica; font-size:10pt; background-color:white\u0026quot;\u0026gt;首先安装PAM（用于用户认证）和DB4（用于生成虚拟用户的用户名密码的db文件）\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;yum -y install pam*\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;yum -y install db4*\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; 安装vsftpd\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;yum install vsftpd\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; 设置vsftpd开机启动：\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;color:#7d8b8d; font-family:Helvetica; font-size:10pt\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;chkconfig vsftpd on\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; 配置vsftpd.conf\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anonymous_enable=NO(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;匿名用户关闭\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;)\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;local_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（本地用户可访问）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;write_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（可上传）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;local_umask=022\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;xferlog_enable=YES\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;xferlog_std_format=YES\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;xferlog_file=/etc/vsftpd/vsftpd.log\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;这\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;3\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;项由于设置\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;log\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;日志，在\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;/etc/vsftpd/\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;下新建一个\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;vsftpd.log\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;文件\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;connect_from_port_20=YES\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;idle_session_timeout=600\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（数据传输中断间隔时间）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;listen=YES\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;#listen_ipv6=YES(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;注释掉\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;)\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;pam_service_name=vsftpd\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;userlist_enable=YES\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;tcp_wrappers=YES\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;chroot_local_user=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（锁定根目录\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;guest_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（启用虚拟用户）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;guest_username=sprixin\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（虚拟用户借用的系统本地用户名）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;user_config_dir=/etc/vsftpd/virtualuser_conf\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（虚拟用户的配置文件路径）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;allow_writeable_chroot=YES\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;touch /etc/vsftpd/vsftpd.log\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; 配置虚拟用户（虚拟用户权限根据以下内容控制）\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;mkdir /etc/vsftpd/virtualuser_conf (\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;虚拟用户配置文件\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;)\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;在\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;/etc/vsftpd/virtualuser_conf \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;新建一个虚拟用户名文件\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#7d8b8d; font-family:Helvetica; font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;vim etc/vsftpd/virtualuser_conf /u1（只能下载不能上传）\u0026lt;/span\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;local_root=/home/ftp\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（该虚拟用户上传下载的根目录）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;write_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（启动写权限，上传）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;anon_umask=022\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anon_world_readable_only=NO\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（关闭只可读权限）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anon_upload_enable=NO\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（不能上传）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anon_mkdir_write_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（创建目录权限）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anon_other_write_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（其他写权限，改，删）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;p style=\u0026quot;background: white\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;span style=\u0026quot;color:#7d8b8d; font-family:Helvetica; font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:yellow\u0026quot;\u0026gt;Vim etc/vsftpd/virtualuser_conf /u2（只能上传，不能下载）\u0026lt;/span\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;local_root=/home/ftp\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;write_enable=YES\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;download_enable=NO\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;anon_umask=022\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anon_world_readable_only=NO\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（关闭只可读权限）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anon_upload_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（不能上传）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anon_mkdir_write_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（创建目录权限）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;anon_other_write_enable=YES\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:等线\u0026quot;\u0026gt;（其他写权限，改，删）\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-family:Courier New\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;cmds_allowed=FEAT,REST,CWD,LIST,MDTM,MKD,NLST,PASS,PASV,PORT,PWD,QUIT,RMD,SIZE,STOR,TYPE,USER,ACCT,APPE,CDUP,HELP,MODE,NOOP,REIN,STAT,STOU,STRU,SYST,RETR\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; 在/etc/vsftpd/目录新建一个虚拟用户文档\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;color:#7d8b8d; font-family:Helvetica; font-size:10pt\u0026quot;\u0026gt;vim virtualuser_passwd.txt\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color:#7d8b8d; font-family:Helvetica\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;font-size:10pt\u0026quot;\u0026gt;ch\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#333333\u0026quot;\u0026gt;\u0026lt;span style=\u0026quot;background-color:white\u0026quot;\u0026gt;奇数行是用户名，偶数行是密码，\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#7d8b8d; font-size:10pt\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/span\u0026gt; 生成虚拟用户认证的db文件\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;db_load -T -t hash -f /etc/vsftpd/virtualuser_passwd.txt /etc/vsftpd/virtualuser_passwd.db\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; 编辑认证文件/etc/pam.d/vsftpd，全部注释掉原来语句，添加以下两句\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;auth required pam_userdb.so db=/etc/vsftpd/virtualuser_passwd\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;account required pam_userdb.so db=/etc/vsftpd/virtualuser_passwd\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; 设置服务器上的目录权限\n\u0026lt;/div\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;chown -R sprixin:sprixin /home/ftpuser\u0026lt;br /\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;font-family:Courier New; font-size:10pt\u0026quot;\u0026gt;chmod 777 /home/ftpuser \u0026lt;/span\u0026gt; ","date":"2020年33月24日","externalUrl":null,"permalink":"/1753.html","section":"Posts","summary":"","title":"搭建FTP虚拟用户","type":"post"},{"content":"项目主题：在服务器上使用docker实现LNMP实验环境\n项目需求:公司业务扩展，客户需要使用web访问公司数据库记录信息，现公司决定搭建LNMP平台满足此需求。现阶段客户访问量不是太大,采用一台物理服务器搭建docker实现成本的节约。\n思路图： # 硬件平台:dell R710服务器,内存:16G,cpu:两颗/四核E5504, 硬盘4*300G 软件平台: centos7的服务器系统,docker版本1.10, centos6.8的基础docker镜像 Docker的优点：\n快速交付应用程序 开发者使用一个标准的\nimage\n来构建开发容器，开发完成之后，\n系统管理员就可以。使用这个容器来部署代码。\ndocker可以快速创建容器，快速迭代应用程序，并让整个过程可见，\n使团队中的其他成员更容易理解应用程序是如何创建和工作的。\ndocker容器很轻！很快！容器的启动时间是次秒级的，节约开发、\n测试、部署的时间。\n2. 更容易部署和扩展\ndocker容器可以在几乎所有的环境中运行，物理机、虚拟机、公有云、\n私有云、个人电脑、服务器等等。\ndocker\n容器兼容很多平台，这样就可以把一个应用程序从一个平台迁移到另外一个。\n3. 效率更高\ndocker容器不需要hypervisor\n，他是内核级的虚拟化\n4. 快速部署也意味着更简单的管理\n通常只需要小小的改变就可以替代以往巨型和大量的更新工作。\nLNMP：Linux系统下Nginx+MySQL+PHP这种网站服务器架构。\nLinux是服务器操作系统；Nginx是一个高性能的HTTP和反向代理服务器；Mysql是一个小型关系型数据库管理系统；PHP是一款超文本预处理器。\n这四种软件均为免费开源软件，组合到一起，成为一个免费、高效、扩展性强的网站服务系统。\n项目实施：\n部署安装mysql服务\n使用centos6的基础镜像生成容器：\n[root@localhost Desktop]# docker run -dit -v /docker/:/mysql -v /data/:/data --name mysql docker.io/centos:centos6 -dit ： 分别是指容器可以在后台运行，前端运行，给容器赋予交互式界面\n-v :将本地目挂载到容器内部，可实现容器内部访问到宿主机的目录，并实现了容器内的重要数据存储的安全\n\u0026ndash;name： 给容器起个容器名称。(以下生成容器选项含义一致)\n所需软件：\nbison-3.0.4.tar.gz cmake-3.5.2.tar.gz ncurses-5.9.tar.gz\nboost_1_59_0.tar.gz mysql-5.7.13.tar.gz\n安装开发所需依赖的安装包：\n[root@213410cda363 /]#yum -y install gcc-c++ m4 perl\n安装mysql所需软件包：\n[root@213410cda363 mysql]# tar zxf bison-3.0.4.tar.gz\n[root@213410cda363 mysql]# cd bison-3.0.4\n[root@213410cda363 bison-3.0.4]# ./configure \u0026\u0026 make \u0026\u0026 make install\n[root@213410cda363 mysql]# tar zxf boost_1_59_0.tar.gz\n[root@213410cda363 mysql]# mv boost_1_59_0 /usr/local/boost\n[root@213410cda363 mysql]# tar zxf ncurses-5.9.tar.gz\n[root@213410cda363 mysql]# cd ncurses-5.9\n[root@213410cda363 ncurses-5.9]# ./configure \u0026\u0026 make \u0026\u0026 make install\n[root@213410cda363 mysql]# tar zxf cmake-3.5.2.tar.gz\n[root@213410cda363 mysql]# cd cmake-3.5.2\n[root@213410cda363 cmake-3.5.2]# ./bootstrap \u0026\u0026 gmake \u0026\u0026 gmake install\n[root@213410cda363 mysql]# tar zxf mysql-5.7.13.tar.gz\n[root@213410cda363 mysql-5.7.13]#cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/data -DSYSCONFDIR=/etc -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DEXTRA_CHARSETS=all -DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DWITH_BOOST=/usr/local/boost \u0026\u0026 make \u0026\u0026 make install\n创建mysql服务运行用户并给安装目录及数据目录授予权限并初始化mysql数据库：\n[root@213410cda363 /]#useradd -s /bin/false -M mysql\n[root@213410cda363 /]chown -R mysql:mysql /data\n[root@213410cda363 /]chown -R mysql:mysql /usr/local/mysql/\n[root@213410cda363 /]/usr/local/mysql/bin/mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data\n优化mysql路径：\n[root@213410cda363 data]# tail -1 /etc/profile\nexport PATH=$PATH:/usr/local/mysql/bin\n[root@213410cda363 data]# . /etc/profile\n创建mysql的参数文件到/etc下和mysql的启动脚本到/etc/init.d/下添加系统服务\n[root@213410cda363 support-files]#cp my-default.cnf /etc/my.cnf\n[root@213410cda363 support-files]#cp -p mysql.server /etc/init.d/mysqld\n[root@213410cda363 support-files]#chkconfig --add mysqld\n修改mysql的主配置文件：/etc/my.cnf\n[root@213410cda363 support-files]# grep -v \"^#\" /etc/my.cnf | grep -v \"^;\" | grep -v \"^$\"\n[mysqld] datadir = /data\nport = 3306\nserver_id = 1\nsocket = /usr/local/mysql/mysql.sock\nlog-error = /data/mysqld.err\n启动mysql的服务并查看端口：\n[root@213410cda363 support-files]# service mysqld start\nStarting MySQL.. SUCCESS!\n[root@213410cda363 support-files]# netstat -anpt | grep 3306\ntcp 0 0 :::3306 :::* LISTEN -\n创建访问mysql服务所需用户：\n部署php服务\n使用centos6的基础镜像生成容器：\ndocker run -dit -v /docker/:/php -v /php/usr/loca/php5/etc --link mysql --name php docker.io/centos:centos6\n\u0026ndash;link mysql：\u0026ldquo;mysql\u0026quot;是容器名称，php服务器是需要连接mysql服务器的，容器之间使用link命令实现容器互连(以下生成容器选项含义一致)\n所需软件\nphp-5.3.28.tar.gz ZendGuardLoader-php-5.3-linux-glibc23-x86_64.tar.gz\n安装部署php依赖软件包和开发依赖包，并指定mysqlclient库文件\n[root@b4dd46498f63 /]#yum -y install gd libxml2-devel libjpeg-devel libpng-devel mysql-devel gcc-c++\n[root@b4dd46498f63 /]#cp /usr/lib64/mysql/libmysqlclient.so.16.0.0 /usr/lib/libmysqlclient.so\n解压php的tar格式压缩包，并配置安装\n[root@b4dd46498f63 /]#tar zxf php-5.3.28.tar.gz\n[root@b4dd46498f63 /]#cd php-5.3.28\n[root@b4dd46498f63 php-5.3.28]# ./configure --prefix=/usr/local/php5 --with-gd --with-zlib --with-mysql --with-mysqli --with-mysql-sock --with-config-file-path=/usr/local/php5/ --enable-mbstring --enable-fpm --with-jpeg-dir=/usr/lib \u0026\u0026 make \u0026\u0026 make install\n创建php.ini和php-fpm配置文件\n[root@b4dd46498f63 php-5.3.28]# cp php.ini-production /usr/local/php5/etc/php.ini\n[root@b4dd46498f63 etc]# cp php-fpm.conf.default php-fpm\n为了提高php解析效率，将ZendGuardLoader-php-5.3-linux-glibc23-x86_64.tar.gz解压并配置\n[root@b4dd46498f63 php]# tar zxf ZendGuardLoader-php-5.3-linux-glibc23-x86_64.tar.gz\n[root@b4dd46498f63 php]#cd ZendGuardLoader-php-5.3-linux-glibc23-x86_64/php-5.3.x\n[root@b4dd46498f63 php-5.3.x]# cp ZendGuardLoader.so /usr/local/php5/lib/php/\n在php主配置文件php.ini添加内容，启用ZendGuardLoader：\n[root@b4dd46498f63 php]# tail -2 /usr/local/php5/etc/php.ini\nzend_extension=/usr/local/php5/lib/php/ZendGuardLoader.so\nzend_loader.enable=1\n创建监听用户，修改php-fpm配置文件以启动php-fpm进程监听php解析请求：\n[root@b4dd46498f63 etc]# useradd -s /bin/false -M php\n[root@b4dd46498f63 etc]# grep -v \"^;\" ./php-fpm | grep -v \"^$\"\n启动php-fpm进程并查看进程监听状态\n[root@b4dd46498f63 etc]# /usr/local/php5/sbin/php-fpm\n[root@b4dd46498f63 etc]# netstat -anpt | grep 9000\ntcp 0 0 0.0.0.0:9000 0.0.0.0:* LISTEN 808/php-fpm\n创建php连接mysql，及php语言创建的测试文件：\n创建存放测试文件目录（此目录要与nginx配置文件中的一致）\n创建nginx可成功连接php服务器文件：\nPhp链接mysql脚本：\n部署Nginx\n使用centos6生成nginx容器：\n-p: nginx是前端监听客户端访问的服务器，所以需要设置监听端口，容器中端口发布时可以使\n用\u0026ndash;port简写-p命令使容器端口映射到宿主机端口，实现服务发布需求\n所需软件： nginx-1.11.2.tar.gz\n安装Nginx的依赖包并且创建服务运行用户：\n[root@e56461580138 nginx]# yun -y install pcre-devel zlib-devel openssl-devel gcc-c++\n[root@e56461580138 nginx]# useradd -M -s /bin/false nginx\n解压并且安装nginx：\n[root@e56461580138 nginx]# tar zxf nginx-1.11.2.tar.gz\n[root@e56461580138 nginx]# cd nginx-1.11.2\n[root@e56461580138 nginx-1.11.2]# ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --user=nginx --group=nginx\n[root@e56461580138 nginx-1.11.2]# make \u0026\u0026 make install\n做路径优化：\n[root@e56461580138 nginx-1.11.2]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/\n修改nginx的住配置文件,使nginx能解析php网页：\n检测nginx配置文件并启动服务\n[root@d34486af8b6d /]# nginx -t\nnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful\n[root@d34486af8b6d /]# nginx\n[root@d34486af8b6d /]# netstat -anpt | grep nginx\ntcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 16/nginx\nLnmp项目到此就做完，进行测试。验证lnmp平台是否可以正常运行：\n访问静态网页：\n测试nginx连接php应用：\n*经过前两个的测试返回结果。足以证明搭建的lnmp平台顺利实现了web平台的静动分离的效果。\n验证客户端访问mysql数据库的效果：\n到此，lnmp项目完成。\n六．项目总结\n使用centos6的基础镜像编译搭建nginx、mysql、php。组合LEMP平台，因为是基础镜像，所以在编译过程中的开发软件包部分都没有安装，需手动安装。但是需要注意的是：docker本身就是一个轻量级虚拟化方案，所以建议不要安装开发组的所有软件包，只安装应用编译时所需要的软件包，以减轻docker的负载。在安装顺序的时候因为前端应用需要连接后端的服务器，所有建议安装顺序为：mysql\u0026mdash;\u0026mdash;php\u0026mdash;\u0026mdash;nginx。\n最终经过全组人员共同测试，搭建的LEMP平台可以完美的连接各服务器。当客户端访问的静态页面由nginx应用；当访问的是动态页面时nginx可以顺利的调用php服务器；当客户需要往数据库输入数据的时候，客户可以通过nginx访问php，php通过mysql协议调用mysql服务器响应给客户端。\n","date":"2020年33月24日","externalUrl":null,"permalink":"/1559.html","section":"Posts","summary":"","title":"在服务器上使用docker实现LNMP实验环境","type":"post"},{"content":" 服务器准备\n准备服务器Server1和Server2，如果在同一个服务器的话则安装mysql时需要改变其端口。\n卸载mysql\n在安装之前必须先检查主机上有没有安装过mysql，如果安装过的话必须先卸载。\n安装mysql\n下载软件包：\nwget https://repo.mysql.com//mysql80-community-release-el7-1.noarch.rpm\n本地安装：\nyum localinstall mysql80-community-release-el7-1.noarch.rpm\n安装mysql：\nyum install mysql-community-server\n设为开机启动：\nsystemctl enable mysqld\nsystemctl daemon-reload\n启动mysql：\nsystemctl start mysqld\n以上步骤就安装好mysql8了。\n获取mysql的临时密码：\ngrep \u0026rsquo;temporary password\u0026rsquo; /var/log/mysqld.log\n登录mysql：\nmysql -uroot -p\n会提示输入密码，输入之前获取的临时密码即可登录。\n此时需要修改mysql的密码，要不然之后的步骤也会强制提示你需要修改密码：\nALTER USER \u0026lsquo;root\u0026rsquo;@\u0026rsquo;localhost\u0026rsquo; IDENTIFIED BY \u0026lsquo;121b33dAj934J1^Sj9ag\u0026rsquo;;\nmysql8默认对密码的强度有要求，需要设置复杂一点，要不然也会提示错误。\n刷新配置：\nFLUSH PRIVILEGES;\n主从配置\n在主从配置之前需要确保两台mysql需要同步的库状态一致。\n主\n配置文件默认在/etc/my.cnf下。\n在配置文件中新增配置：\n[mysqld]\n## 同一局域网内注意要唯一\nserver-id=100\n## 开启二进制日志功能，可以随便取（关键）\nlog-bin=mysql-bin\n修改配置后需要重启才能生效：\nservice mysql restart\n重启之后进入mysql：\nmysql -uroot -p\n授权\n在master数据库创建数据同步用户，授予用户 slave REPLICATION SLAVE权限和REPLICATION CLIENT权限，用于在主从库之间同步数据。\nCREATE USER \u0026lsquo;slave\u0026rsquo;@\u0026rsquo;%\u0026rsquo; IDENTIFIED BY \u0026lsquo;密码\u0026rsquo;;\nGRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO \u0026lsquo;slave\u0026rsquo;@\u0026lsquo;ip地址\u0026rsquo;;\n语句中的ip地址为%代表所有服务器都可以使用这个用户，如果想指定特定的ip，将%改成ip即可。\n查看主mysql的状态：\nshow master status;\n记录下File和Position的值，并且不进行其他操作以免引起Position的变化。\n从\n在从my.cnf配置中新增：\nmysqld]\n## 设置server_id,注意要唯一\nserver-id=101\n## 开启二进制日志功能，以备Slave作为其它Slave的Master时使用\nlog-bin=mysql-slave-bin\n## relay_log配置中继日志\nrelay_log=edu-mysql-relay-bin\n修改配置后需要重启才能生效：\nservice mysql restart\n重启之后进入mysql：\n参数设置\nmysql -uroot -p\nchange master to master_host=\u0026lsquo;主库的地址\u0026rsquo;,master_user=\u0026lsquo;slave\u0026rsquo;, master_password=\u0026rsquo;@#$Rfg345634523rft4fa\u0026rsquo;, master_port=3306, master_log_file=\u0026lsquo;mysql-bin.000001\u0026rsquo;, master_log_pos=2830, master_connect_retry=30;\nmaster_host ：Master的地址\nmaster_port：Master的端口号\nmaster_user：用于数据同步的用户\nmaster_password：用于同步的用户的密码\nmaster_log_file：指定 Slave 从哪个日志文件开始复制数据，即上文中提到的 File 字段的值\nmaster_log_pos：从哪个 Position 开始读，即上文中提到的 Position 字段的值\nmaster_connect_retry：如果连接失败，重试的时间间隔，单位是秒，默认是60秒\n在从mysql中查看主从同步状态：\nshow slave status \\G;\n此时的SlaveIORunning 和 SlaveSQLRunning 都是No，因为我们还没有开启主从复制过程。\n开启主从复制：\nstart slave;\n再次查看同步状态：\nshow slave status \\G;\nSlaveIORunning 和 SlaveSQLRunning 都是Yes说明主从复制已经开启。\n错误排查思路\n若SlaveIORunning一直是Connecting，有下面4种原因：\n1、网络不通，检查ip端口\n2、密码不对，检查用于同步的用户名和密码\n3、pos不对，检查Master的Position\n4、mysql8特有的密码规则问题引起：\nALTER USER \u0026lsquo;slave\u0026rsquo;@\u0026rsquo;%\u0026rsquo; IDENTIFIED WITH mysql_native_password BY \u0026lsquo;@#$Rfg345634523rft4fa\u0026rsquo;;\n将密码规则修改为：mysql_native_password\n如果需要指定想要主从同步哪个数据库，可以在master的my.cnf添加配置：\nbinlog-do-db：指定mysql的binlog日志记录哪个db\n或者在slave的my.cnf添加配置：\nreplicate-do-db=需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可 replicate-ignore-db=需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可\n如果想要同步所有库和表，在从mysql执行：\nSTOP SLAVE SQL_THREAD;\nCHANGE REPLICATION FILTER REPLICATE_DO_DB = ();\nstart SLAVE SQL_THREAD;\n如果以上步骤出现问题，可以查看日志：\n/etc/log/mysqld.log\n","date":"2020年33月24日","externalUrl":null,"permalink":"/1523.html","section":"Posts","summary":"","title":"Linux mysql8的安装与主从复制的配置","type":"post"},{"content":" DHCP（全称Dynamic host configuration protocol）：动态主机配置协议端口号udp67\nDHCP工作在OSI的应用层，可以帮助计算机从指定的DHCP服务器获取配置信息的协议。（主要包括：ip地址，子网掩码，网关和dns等）。\nDHCP的运作方式：\n客户端传输广播包给整个物理网络段内的所有主句，如局域网内有DHCP服务器时，才会响应客户端的IP参数要求，所以DHCP服务器与客户端应该在同一个物理网段内。\n客户端与DHCP服务器之间连接的过程如下图：\n1）客户端：利用广播包发送搜索DNCP服务器的包\n2）服务器端：提供客户端网络相关的租约选择\n3）客户端：决定选择的DHCP服务器提供的网络参数租约并汇报给服务器\n4）服务器端：记录这次租约并回报给客户端相关的封包信息\n简单来说下DHCP工作原理：\n(1)客户机寻找服务器：广播发送discover包，寻找dhcp服务器\n(2)服务器响应请求：单播发送offer包，对客户机做出响应。提供客户端网络相关的租约以供选择其中服务器在收到客户端的请求后，会针对客户端的mac地址与本身的设定数据进行一下工作：\n\u0026nbsp; \u0026nbsp; a)到服务器的登录文件中寻找该用户之前曾经使用过的ip，若有且该ip目前没有人使用，这提供此ip为客户机\n\u0026nbsp; \u0026nbsp; b)若配置文件中有针对该mac提供额外的固定ip，且该ip没有被使用，则提供此ip给客户机\n\u0026nbsp; \u0026nbsp; c)如果没有符合以上两个条件，则随机取用目前没有被使用的ip参数给客户机并记录到leases文件中。\n(3)客户机发送ip请求：广播request包，选择一个服务器提供的网络参数租约回报服务器。此外，客户机会发送一个广播封包给局域网内的所有主机，告知自己已经接受服务器的租约。\n(4)服务器确认租约：单播Ack包，服务器与客户机确认租约关系并记录到服务器的leases文件中\n。\n接着说下DHCP几个概念：\nDHCP Client：DHCP客户端，通过DHCP协议请求IP地址的客户端。DHCP客户端是接口级的概念，如果一个主机有多个以太接口，则该主机上的每个接口都可以配置成一个DHCP 客户端。交换机上每个Vlan接口也可以配置成一个DHCP客户端。\nDHCP Server：DHCP 服务端，负责为DHCP客户端提供IP地址，并且负责管理分配的IP地址。\nDHCP Relay：DHCP中继器，DHCP客户端跨网段申请IP地址的时候，实现DHCP报文的转发功能。\nDHCP Security：DHCP安全特性，实现合法用户IP地址表的管理功能\nDHCP Snooping：DHCP监听，记录通过二层设备申请到IP地址的用户信息\u0026nbsp; DHCP工作大致可以分为一下几个阶段：\n一、发现阶段：\n即DHCP客户端寻找DHCP服务端的过程，对应于客户端发送DHCP Discovery，因为DHCP Server对应于DHCP客户端是未知的，所以DHCP 客户端发出的DHCP Discovery报文是广播包，源地址为0.0.0.0目的地址为255.255.255.255。网络上的所有支持TCP/IP的主机都会收到该DHCP Discovery报文，但是只有DHCP Server会响应该报文。\n如果网络中存在多个DHCP Server，则多个DHCP Server均会回复该DHCP Discovery报文。\n如果同一个vlan内没有DHCP Server，而该VlanIf配置了DHCP Relay功能，则该Vlanif即为DHCP中继，DHCP中继会将该DHCP报文的源IP地址修改为该Vlanif的IP地址，而目的地址则为DHCP Relay配置的DHCP Server的IP地址。同时修改DHCP报文中，giaddress为VlanIf的IP地址。并以单播将DHCP Discovery发送到DHCP Server端。\n二、DHCP Server 提供阶段：\nDHCP Server提供阶段，即为DHCP Server响应DHCP Discovery所发的DHCP Offer阶段\nDHCP Server收到DHCP Discovery报文后，解析该报文请求IP地址所属的Subnet。并从dhcpd.conf文件中与之匹配的subnet中取出一个可用的IP地址(从可用地址段选择一个IP地址后，首先发送ICMP报文来ping该IP地址，如果收到该IP地址的ICMP报文，则抛弃该IP地址，重新选择IP地址继续进行ICMP报文测试，直到找到一个网络中没有人使用的IP地址，用以达到防治动态分配的IP地址与网络中其他设备IP地址冲突，这个IP地址冲突检测机制，可配置)，设置在DHCP Discovery报文中yiaddress字段中，表示为该客户端分配的IP地址，并且为该Lease设置该Subnet配置的Option，例如默认leases租期，最大租期，router等信息。\nDHCP从地址池中选择IP地址，以如下优先级进行选择：\n\u0026nbsp; \u0026nbsp; 1）当前已经存在的Ip Mac的对应关系\n\u0026nbsp; \u0026nbsp; 2）Client以前的IP地址\n\u0026nbsp; \u0026nbsp; 3）读取Discovery报文中的Requested Ip Address Option的值，如果存在并且IP地址可用\n\u0026nbsp; \u0026nbsp; 4）从配置的Subnet中选择IP地址：\nDHCP Server解析DHCP Discovery请求的IP所属的Subnet，首先看该DHCP Discovery报文中giaddress是否有DHCP Relay，如果有，则从giaddress所述的subnet中可用IP地址段中获取，并分配IP。如果giaddress没有IP地址，则从该DHCP Server绑定的接口的IP地址所属的网段分配IP地址。\n三、DHCP Client 选择阶段：\nDHCP Client收到若干个DHCP Server响应的DHCP Offer报文后，选择其中一个DHCP Server作为目标DHCP Server。选择策略通常为选择第一个响应的DHCP Offer报文所属的DHCP Server。\n然后以广播方式回答一个DHCP Request报文，该报文中包含向目标DHCP请求的IP地址等信息。之所以是以广播方式发出的，是为了通知其他DHCP Server自己将选择该DHCP Server所提供的IP地址。\n四、DHCP Server确认阶段：\n当DHCP Server收到DHCP Client发送的DHCP Request后，确认要为该DHCP Client提供的IP地址后，便想该DHCP Client响应一个包含该IP地址以及其他Option的报文，来告诉DHCP Client可以使用该IP地址了。然后DHCP Client即可以将该IP地址与网卡绑定。另外其他DHCP Server都将收回自己之前为DHCP Client提供的IP地址。\n五、DHCP Client重新登录网络：\n当DHCP Client重新登录后，发送一个以包含之前DHCP Server分配的IP地址信息的DHCP Request报文，当DHCP Server收到该请求后，会尝试让DHCP客户端继续使用该IP地址。并回答一个ACK报文。\n但是如果该IP地址无法再次分配给该DHCP Client后，DHCP回复一个NAK报文，当DHCP Client收到该NAK报文后，会重新发送DHCP Discovery报文来重新获取IP地址。\n六、DHCP Client更新租约：\nDHCP获取到的IP地址都有一个租约，租约过期后，DHCP Server将回收该IP地址，所以如果DHCP Client如果想继续使用该IP地址，则必须更新器租约。更新的方式就是，当当前租约期限过了一半后，DHCP Client都会发送DHCP Renew报文来续约租期。\nlinux下DHCP配置：\u0026nbsp;\n配置文件都放在/etc/dhcp目录下;主配置文件为dhcpd.conf\n将/usr/share/doc/dhcp-4.1.1/dhcpd.conf.sample文件复制到配置文件目录下，并覆盖dhcpd.conf文件，即可获得主配置文件。\n主配置文件的主要内容介绍：\noption domain-name \"example.org\"; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;//指定网域的域名\noption domain-name-servers ns1.example.org, ns2.example.org; \u0026nbsp; \u0026nbsp; \u0026nbsp;//指定域名解析服务器（DNS）的ip地址。\ndefault-lease-time 600; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //默认租约时间，单位为s\nmax-lease-time 7200; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //最大租约时间，单位为s。过期续约，续约直接发送request包即可。\nlog-facility local7; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //日志设备类型为local7.一般日志设备类型包括mail、crontab。通过此选项可以找到该服务的日志记录路径\nsubnet 10.5.5.0 netmask 255.255.255.224 { \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;//指定分配网段的ip地址以及子网掩码，括号内部为局部配置。\nrange 10.5.5.26 10.5.5.30; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //可使用的地址池范围\noption domain-name-servers ns1.internal.example.org; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;//该网段的域名，可以省略\noption domain-name \"internal.example.org\"; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //网段DNS\noption routers 10.5.5.1; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;//指定网关\noption broadcast-address 10.5.5.31; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //指定广播地址\ndefault-lease-time 600; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //租约时间\nmax-lease-time 7200; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //最大租约时间。\n}\nhost passacaglia { \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //主机名称\nhardware ethernet 0:0:c0:5d:bd:95; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; //主机的MAC地址\nfilename \"vmunix.passacaglia\";\nserver-name \"toccata.fugue.com\"; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;//文件名和服务器名，不太需要。\nfixed-address fantasia.fugue.com; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;//固定的ip地址\n} \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;//保留主机，此选项用于指定内部存在的MAC地址的主机在请求ip时固定分配指定的地址。如果该指定ip已经被分配使用的话，保留主机的指定ip将不能使用。\u0026nbsp; 一个局域网内最好只有一个dhcp服务器，当一个局域网内存在多个服务器时，客户机只选择最先到达的offer。\n搞清楚下面几个问题：\n1）如何知道客户机从哪个DNS Server获得ip地址？\nwindows中直接查看网络链接详细信息，有个dhcp服务器，可以看到服务器的ip地址。\nlinux下查看/var/lib/dhclient/dhclient.leases，这是个租约文件，服务器端的租约文件在/var/lib/dhcpd/dhcpd.leases。\n2）服务器分配ip的顺序？\n从小的ip开始分配\n3）为何客户机在获得一个ip后，释放再获得ip时会获得以前使用的ip？\n客户机内有一个租约文件存放自己曾经获得的ip地址，服务器端也有一个租约文件存放了自己已经分配的ip以及其对应的主机mac。\n4）服务器会在哪些端口提供dhcp服务？\n默认在任何端口提供dhcp服务。实际上只是在与dhcp同一网段的网卡上提供dhcp服务。\u0026nbsp;\n5）如果租约到期，而服务器并没有续约，该如何处理？\u0026nbsp;\n会向其他服务器寻找dhcp服\n","date":"2020年33月24日","externalUrl":null,"permalink":"/1520.html","section":"Posts","summary":"","title":"DHCP工作原理","type":"post"},{"content":" 1.Confluence简介 Confluence地址：http://192.168.1.214:8090/\nConfluence是一个企业级的Wiki软件，可用于在企业、部门、团队内部进行信息共享和协同编辑。\n1.1 能做什么？ # 团队将日常的工作任务进度管理、技术知识分享、开发文档、操作手册、文档附件都放置入Confluence中进行统一管理，富文本编辑器使文档内容支持更加丰富。\n1.2 基础概念 # Confluence的使用并不复杂，只需掌握如下几个基础概念。空间（Space）空间是Confluence系统中的一个区域，用于存储wiki页面，并可实现对空间中的所有文档进行统一的权限管理。\n通常，我们可以针对每个项目单独创建一个空间，然后将与该项目相关的文档信息放置到该空间中，并只对项目成员开设访问/编辑权限。\n除了项目空间，每个成员都有一个个人空间。平时成员可以将工作总结或笔记等文档放置到自己的空间中；对于对团队有帮助的文档，就可以将文档移动至团队项目空间中\n1.2.1 Dashboard # Dashboard是Confluence系统的主页，在Dashboard界面中包含了Confluence站点中的所有空间列表，以及最近更新内容的列表。\n1.2.2 页面（Page） # 在Confluence系统中，页面是存储和共享信息的主要方式。\n页面可以互相链接、连接、组织和访问，并以树状结构进行组织，放置于空间之中。页面遵循所见即所得的编辑方式，操作上简单易用。更强大的地方在于，页面支持大量的内容展现形式，除了富文本文档外，还包括图表、视频、附件（可预览）、流程图、公式等等；如果还不够，还可以通过海量的第三方插件进行扩展。\n在页面中可以通过@其它成员，通知相关成员查看文档。文档保存成功后，被@的成员就会收到邮件，并可根据邮件中的链接访问到该文档，然后进行评论或者协同编辑\n1.2.3 模板（template） # 创建页面时除了采用空白文档，也可以选择模板。模板是在空白文档的基础上，根据特定需求添加了一些文档要素，可辅助用户更好更快地创建文档。\nConfluence内置了大量的模板，可辅助用于项目工作的各个环节，包括产品需求、会议记录、决策记录、指导手册（How-to）、回顾记录、工作计划、任务报告等等。并且由于Confluence和JIRA是同一家公司的产品，在Confluence中可以和JIRA进行无缝衔接，实现对产品质量实现更好的展现。\n如果对Confluence自带的模板不满意，还可以对模板进行调整，或者根据自己的需求创建其它类型的模板。\n1.2.4 权限（Permission） # 在安全性方面，Confluence具有完善和精细的权限控制，可以很好地控制用户在Wiki中创建、编辑内容和添加注释。\n权限控制分3个维度，分别是团队（Group），个人（Individual Users），匿名用户（Anonymous）。\n使用团队级的权限控制时，需要在Confluence服务器中对公司员工进行分组，好处在于配置比较方便，只需要对整个团队进行统一的权限配置。\n但在实际项目中，经常会存在同一个项目包含多个跨团队成员的情况，这个时候就不适合采用团队权限配置方式，只能采用逐个添加成员的方式，并对各个成员分别配置权限。\n另外一种情况，就是对于未登录的用户，以及项目成员以外的用户，可以开设部分权限，例如只读（View）。\n注册用户 创建空间 新建一个项目时，首先要做的就是创建一个空间，并进行初始化配置。\n创建空间的方式很简单，可以从顶部菜单进行创建：【空间】-\u0026gt;【创建】；也可以从Dashboard页面的Spaces页面中进行创建。\n进入创建空间页面后，需要选择空间类型。这个需要根据空间的用途进行选择，对于团队协作的空间，推荐选择\"Team Space\"，如果实在不知道选择什么类型，选择\"Blank Space\"也是可以的。\n\u0026lt;/div\u0026gt; 然后是填写空间的基本信息。所有类型的空间都有两个必填字段，空间名和空间标识符。空间标识符可以理解为空间的ID，不同空间的空间标识符不能重复，但空间名是可以重复的。\n\u0026lt;/div\u0026gt; 另外，对于\"Team Space\"类型的空间，多了一个\"Team members\"字段，用于添加空间的成员。成员的名称是其公司邮箱的前缀。\n\u0026lt;/div\u0026gt; 需要说明的是，空间创建完成后，Space key字段是不能修改的，其它字段以及团队成员都可以进行修改。\n配置空间权限 创建空间后，根据项目需要，可以给空间设置权限。只有空间的管理员才能对空间权限进行配置。\n操作方式如下：首先进入空间的页面，在空间左下角中，【空间管理】-\u0026gt;【权限】，进入权限管理页面。\nConfluence的权限控制比较完善，可以根据团队规范进行较为精细粒度的设置。\n常见操作 熟悉了Confluence的基础概念，基本上就可以摸索着对Confluence进行上手了。不过，为了减少摸索时间，在这里我再将Confluence中的常用操作进行说明。\n4.1文档查看与操作 # 用户账户登录首页-\u0026gt;选择要查看的【More】-\u0026gt;【空间】\u0026ndash;\u0026gt;选择对应的项目→查看您想看的文档\n也可以是这样的页面\n4.2 添加文档 # 在Confluence中文件以树状结构进行组织。\n推荐的创建方式是，先进入父目录的页面，然后再点击【Create】进行创建。在创建文档页面中，可以看到新建文档的\u0026quot;父级\u0026quot;，表示新文档创建后将位于\u0026quot;父级\u0026quot;文件的下一个层级中。\n在新建文档时，需要选择文档模板。这个就根据文档的实际类型或用途进行选择即可，如果觉得都不合适，就选择\u0026quot;Blank page\u0026quot;。\n4.3 编写文档 # 在编写文档时，页面遵循所见即所得的编辑方式，基本上跟在MS Word中的操作类似。\nConfluence也集成了许多编辑工具，可以很方便地插入图表、链接、附件、代办列表等等。如果还不满足需求，可以点击【插入】-\u0026gt;【其他宏】，查找更多的扩展插件。\n4.3.1 插入sql\n# 选择【格式化】-\u0026gt;【代码块】-\u0026gt;【语法高亮】-\u0026gt;自由选择风格【选择sql】-\u0026gt;自由选择主题【选择】-\u0026gt;【emacs】,接着确认，即可插入sql\n4.3.2 插入表格，\n# 插入开发状态颜色，点击【+】-\u0026gt;选择【状态】\n4.3.3 插入图片和附件 # 选择【插入文件和图片】\n例如，Confluence默认是不支持Markdown编辑模式的，如果想采用Markdown来编写文档，就可以通过上述方式到插件市场寻找Markdown的插件。\n不过根据实践发现，当前Confluence的Markdown插件支持的还不够好，使用体验上不尽如人意。比较推荐的做法，还是在单独的Markdown编辑器上采用markdown语法进行编辑，编辑完成后进行预览，然后将渲染后的文档内容复制粘贴到Confluence中。\n4.3.4 移动文档\n# 很多时候我们需要调整目录结构，这就涉及到需要将文档移动到别的目录层级下。\n操作方式如下：先进入到待移动的文档页面中，点击页面右上角的【…】-\u0026gt;【移动】；\n然后选择移动到新的目录即可\n4.4 创建目录 # 与创建文档方式一致，直接创建标题保存即可\n4.5 模板方式创建文档 # 选择【以层级方式查看】-\u0026gt;[模板]-\u0026gt;【编辑】\n发表评论 上传文档附件 导出 文档权限管理 ","date":"2020年33月24日","externalUrl":null,"permalink":"/1511.html","section":"Posts","summary":"","title":"Confluence简单使用教程","type":"post"},{"content":"一、应用系统等级保护实施要求\n为做好本次官网等级保护整改实施工作，我方会根据相关规定做好安全保护等级信息系统的等保要求，按照等保建设方案对已有设备的安全设备进行规划整合，完善网络安全技术防护。依据等保要求的技术项，协助用户对接第三方等保测评公司的测评，根据整改报告协助用户执行整改措施，并确保\u0026quot;劳动人民文化宫官网\u0026quot;等级保护测评通过。完成劳动人民文化宫官网信息系统达到信息化等级保护二级的目标。\n序号 \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: solid 0.5pt; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-family:等线; font-size:14pt\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;技术要求项\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: solid 0.5pt; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-family:等线; font-size:14pt\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;等保要求\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;身份鉴别\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;操作系统和数据库管理系统用户的身份标识应具有唯一性; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对登录操作系统和数据库管理系统的用户进行身份标识和鉴别; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;操作系统和数据库管理系统身份鉴别信息应具有不易被冒用的特点，例如口令长度、复杂性和定期的更新等; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应具有登录失败处理功能，如：结束会话、限制非法登录次数，当登录连接超时，自动退出。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;访问控制\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应依据安全策略控制用户对客体的访问; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;自主访问控制的覆盖范围应包括与信息安全直接相关的主体、客体及它们之间的操作; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;自主访问控制的粒度应达到主体为用户级，客体为文件、数据库表级; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应由授权主体设置用户对系统功能操作和对数据访问的权限; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应实现应用系统特权用户的权限分离，例如将管理与审计的权限分配给不同的应该系统用户; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;权限分离应采用最小授权原则，分别授予不同用户各自为完成自己承担任务所需的最小权限，并在它们之间形成相互制约的关系; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应严格限制默认用户的访问权限。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;3\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;安全审计\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;安全审计应覆盖到应用系统的每个用户; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;安全审计应记录应用系统重要的安全相关事件，包括重要用户行为和重要系统功能的执行等; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;安全相关事件的记录应包括日期和时间、类型、主体标识、客体标识、事件的结果等; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;审计记录应受到保护避免受到未预期的删除、修改或覆盖等。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;4\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;剩余信息保护\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应保证用户的鉴别信息所在的存储空间，被释放或再分配给其他用户前得到完全清楚，无论这些信息是存放在硬盘上还是在内存中; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应确保系统内的文件、目录和数据库记录等资源所在的存储空间，被释放或重新分配给其他用户前得到完全清楚。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;5\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;通信完整性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;通信双方应该约定单向的效验码算法，计算通信数据报文的效验码，在进行通信时，双方根据效验码判断对方报文的有效性。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;6\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;通信保密性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;当通信双方中的一方在一段时间内未作任何响应，另一方应能够自动结束会话; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;在通信双方建立连接之前，利用密码技术进行会话初始化验证; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;在通信过程中，应对敏感信息字段进行加密。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;7\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;软件容错\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对通过人机接口输入或通过通信接口输入的数据进行有效性检验; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对通过人机接口方式进行的操作提供\u0026quot;回退\u0026quot;功能，即允许按照操作的序列进行回退; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;在故障发生时，应继续提供一部分功能，确保能够实施必要的措施。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;8\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;资源控制\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应限制单个用户的多重并发会话; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对应用系统的最大并发会话连接数进行限制; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对一个时间段内可能的并发会话连接数进行限制。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;9\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;代码安全\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对应用程序代码进行恶意代码扫描; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对应用程序代码进行安全脆弱性分析。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;10\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;数据完整性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应能够检测到系统管理数据、鉴别信息和用户数据在传输进程中完整性受到破坏。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应能够检测到系统管理数据、鉴别信息和用户数据在存储过程中完整性受到破坏。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;11\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;数据保密性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;网络设备、操作系统、数据库管理系统和应用系统的鉴别信息、敏感的系统管理数据和敏感的用户数据应采用加密或其他有效措施实现传输保密性; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;网络设备、操作系统、数据库管理系统和应用系统的鉴别信息、敏感的系统管理数据和敏感的用户数据应采用加密或其他有效措施实现存储保密性; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;当使用便携式和移动式设备时，应加密或者采用可移动磁盘存储敏感信息。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;12\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;数据备份和恢复\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应提供自动机制对重要信息进行有选择的数据备份; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应提供恢复重要信息的功能; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应提供重要网络设备、通信线路和服务器的硬件冗余。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;13\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;入侵防范\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应遵循最小安装的原则，仅安装需要的组件和应用程序。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应通过设置升级服务器等方式保持系统补丁及时得到更新。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;14\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;恶意代码防范\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;服务器和重要终端设备应安装实时检测和查杀恶意代码的软件产品； \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;主机系统防恶意代码产品应具有与网络防范恶意代码产品不同的恶意代码库；\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; 二、应用系统等级保护实施内容\n系统安装软件版本\n软件 \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: solid 0.5pt; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color:black; font-family:宋体; font-size:14pt\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;版本\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color:black; font-family:宋体; font-size:14pt\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;Xammp\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;color:black; font-family:宋体; font-size:14pt\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;xampp-linux-x64-7.0.8-0\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; 迁移所需工作：\n迁移前期准备工作：\n1. 系统部署所需软件包及相关环境\n2. 迁移前的备份数据\n迁移实施步骤：\n1. 挂载云服务器资源\n2. 前期检查工作：检查主机相关安全配置\n3. 操作系统加固\n4. 系统环境配置及软件安装\n5. 应用迁移部署：将网站应用程序上传至云服务器\n6. 应用服务配置\n7. 数据库迁移：将网站应用数据库数据导入云服务器数据库\n8. 联调测试：验证各项应用性能指标和状态是否正常\n9. 等保测评及整改\n10. 修改DNS解析配置并进行流量切割\n序号 \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: solid 0.5pt; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-family:等线; font-size:14pt\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;检查项\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: solid 0.5pt; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;text-align: center\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-family:等线; font-size:14pt\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;检查要点\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;1\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;身份鉴别\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;操作系统和数据库系统管理用户身份标识应具有不易被冒用的特点，口令应有复杂度要求并定期更换。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应提供专用的登录控制模块对登录用户进行身份标识和鉴别，身份鉴别信息应具有不易被冒用的特点，应提供用户身份标识唯一和鉴别信息复杂度检查功能。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;2\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;访问控制\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应依据安全策略控制用户对客体的访问; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;自主访问控制的覆盖范围应包括与信息安全直接相关的主体、客体及它们之间的操作; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;自主访问控制的粒度应达到主体为用户级，客体为文件、数据库表级; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应由授权主体设置用户对系统功能操作和对数据访问的权限; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应实现应用系统特权用户的权限分离，例如将管理与审计的权限分配给不同的应该系统用户; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;权限分离应采用最小授权原则，分别授予不同用户各自为完成自己承担任务所需的最小权限，并在它们之间形成相互制约的关系; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应严格限制默认用户的访问权限。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应提供访问控制功能，依据安全策略控制用户对文件、数据库表等客体的访问。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;3\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;安全审计\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;安全审计应覆盖到应用系统的每个用户; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;安全审计应记录应用系统重要的安全相关事件，包括重要用户行为和重要系统功能的执行等; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;安全相关事件的记录应包括日期和时间、类型、主体标识、客体标识、事件的结果等; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;审计记录应受到保护避免受到未预期的删除、修改或覆盖等。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对应用系统的用户标识与鉴别、访问控制的所有操作记录、重要用户行为等重要安全事件进行审计。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;4\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;剩余信息保护\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应保证用户的鉴别信息所在的存储空间，被释放或再分配给其他用户前得到完全清楚，无论这些信息是存放在硬盘上还是在内存中; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应确保系统内的文件、目录和数据库记录等资源所在的存储空间，被释放或重新分配给其他用户前得到完全清楚。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;5\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;通信完整性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;通信双方应该约定单向的效验码算法，计算通信数据报文的效验码，在进行通信时，双方根据效验码判断对方报文的有效性。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应采用校验码技术保证通信过程中数据的完整性。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;6\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;通信保密性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;当通信双方中的一方在一段时间内未作任何响应，另一方应能够自动结束会话; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;在通信双方建立连接之前，利用密码技术进行会话初始化验证; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;在通信过程中，应对敏感信息字段进行加密。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;7\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;软件容错\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对通过人机接口输入或通过通信接口输入的数据进行有效性检验; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对通过人机接口方式进行的操作提供\u0026quot;回退\u0026quot;功能，即允许按照操作的序列进行回退; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;在故障发生时，应继续提供一部分功能，确保能够实施必要的措施。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应提供数据有效性检验功能，保证通过人机接口输入或通过通信接口输入的数据格式或长度符合系统设定要求。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;8\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;资源控制\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应限制单个用户的多重并发会话; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对应用系统的最大并发会话连接数进行限制; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对一个时间段内可能的并发会话连接数进行限制。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;当应用系统的通信双方中的一方在一段时间内未作任何响应，另一方应能够自动结束会话。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;9\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;代码安全\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对应用程序代码进行恶意代码扫描; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应对应用程序代码进行安全脆弱性分析。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;10\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;数据完整性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应能够检测到系统管理数据、鉴别信息和用户数据在传输进程中完整性受到破坏。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应能够检测到系统管理数据、鉴别信息和用户数据在存储过程中完整性受到破坏。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;11\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;数据保密性\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;网络设备、操作系统、数据库管理系统和应用系统的鉴别信息、敏感的系统管理数据和敏感的用户数据应采用加密或其他有效措施实现传输保密性; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;网络设备、操作系统、数据库管理系统和应用系统的鉴别信息、敏感的系统管理数据和敏感的用户数据应采用加密或其他有效措施实现存储保密性; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;当使用便携式和移动式设备时，应加密或者采用可移动磁盘存储敏感信息。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;12\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;数据备份和恢复\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应提供自动机制对重要信息进行有选择的数据备份; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应提供恢复重要信息的功能; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;3） 应提供重要网络设备、通信线路和服务器的硬件冗余。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;13\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;入侵防范\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应遵循最小安装的原则，仅安装需要的组件和应用程序。 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;div style=\u0026quot;text-align: justify\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14pt\u0026quot;\u0026gt;应通过设置升级服务器等方式保持系统补丁及时得到更新。\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr style=\u0026quot;height: 1px\u0026quot;\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: solid 0.5pt; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;14\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;恶意代码防范\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td vAlign=\u0026quot;middle\u0026quot; style=\u0026quot;padding-top: 1px; padding-left: 7px; padding-bottom: 1px; padding-right: 7px; border-top: none; border-left: none; border-bottom: solid 0.5pt; border-right: solid 0.5pt\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span style=\u0026quot;font-family:宋体; font-size:14pt\u0026quot;\u0026gt;1）应安装防恶意代码软件，并及时更新防恶意代码软件版本和恶意代码库。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; 三、应用系统等级保护实施内容及标准\n","date":"2020年33月24日","externalUrl":null,"permalink":"/1484.html","section":"Posts","summary":"","title":"官网等级保护整改工作","type":"post"},{"content":" //\u0026nbsp;配置邮件\u0026nbsp;\u0026nbsp; add_action('phpmailer_init',\u0026nbsp;'mail_smtp');\u0026nbsp;\u0026nbsp; function\u0026nbsp;mail_smtp(\u0026nbsp;$phpmailer\u0026nbsp;)\u0026nbsp;{\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003eFromName\u0026nbsp;=\u0026nbsp;'知更鸟';\u0026nbsp;//\u0026nbsp;发件人昵称\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003eHost\u0026nbsp;=\u0026nbsp;'smtp.qq.com';\u0026nbsp;//\u0026nbsp;邮箱SMTP服务器\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003ePort\u0026nbsp;=\u0026nbsp;465;\u0026nbsp;//\u0026nbsp;SMTP端口，不需要改\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003eUsername\u0026nbsp;=\u0026nbsp;'123456@qq.com';\u0026nbsp;//\u0026nbsp;邮箱账户\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003ePassword\u0026nbsp;=\u0026nbsp;'aabbccddffgg';\u0026nbsp;//\u0026nbsp;此处填写邮箱生成的授权码，不是邮箱登录密码\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003eFrom\u0026nbsp;=\u0026nbsp;'123456@qq.com';\u0026nbsp;//\u0026nbsp;邮箱账户同上\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003eSMTPAuth\u0026nbsp;=\u0026nbsp;true;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003eSMTPSecure\u0026nbsp;=\u0026nbsp;'ssl';\u0026nbsp;//\u0026nbsp;端口25时\u0026nbsp;留空，465时\u0026nbsp;ssl，不需要改\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;$phpmailer-\u003eIsSMTP();\u0026nbsp;\u0026nbsp; }\u0026nbsp;\u0026nbsp; ","date":"2020年33月24日","externalUrl":null,"permalink":"/1415.html","section":"Posts","summary":"","title":"知更鸟邮件配置","type":"post"},{"content":"由于来源身份不明、越权操作、密码泄露、数据被窃、违规操作等因素都可能会使运营的业务系统面临严重威胁，一旦发生事故，如果不能快速定位事故原因，运维人员往往就会背黑锅。几种常见的运维人员背黑锅场景：\n1）由于不明身份利用远程运维通道攻击服务器造成业务系统出现异常，但是运维人员无法明确攻击来源，那么领导很生气、后果很严重；\n2）只有张三能管理的服务器，被李四登录过并且做了违规操作，但是没有证据是李四登录的，那么张三只能背黑锅了；\n3）运维人员不小心泄露了服务器的密码。一旦发生安全事故，那么后果不堪设想；\n4）某服务器的重要数据被窃。但是数据文件无法挽回，那么面临的是无法估量的经济损失；\n运维人员背黑锅的原因：\n其实运维工作，出现各种问题是在所难免的，不仅要有很好的分析处理能力，而且还要避免问题再次发生。要清楚认识到出现问题的真实原因：\n1）没有规范管理，人与服务器之间的界限不清晰；\n2）没有实名机制，登录服务器前没有实名验证；\n3）没有密码托管，服务器的密码太多，很难做到定期修改，自己保管怕丢失；\n4）没有操作预警，对高危、敏感的操作无法做到事前防御；\n5）没有传输控制，对重要服务器无法控制文件传输；\n6）没有回溯过程，不能完整还原运维过程；\n解决背黑锅的必杀技\n作为运维人员，如何摆脱以上背黑锅的尴尬局面呢？也许堡垒机是一个破解此局面的必杀技。\n1）统一入口、规范管理\n提供统一入口，所有运维人员只能登录堡垒机才能访问服务器，梳理“人与服务器”之间的关系，防止越权登录；\n2）利用手机APP动态口令等验证机制（比如Google Authenticator）\n采用手机APP动态口令、OTP动态令牌、USBKEY、短信口令等双因素身份实名鉴别机制，防止密码被暴力破解，解决访问身份模糊的问题。\n3）托管服务器密码，实现自动改密\n通过堡垒机定期自动修改服务器的密码，解决手工修改密码、密码泄露和记住密码的烦恼;\na.可自动修改Windows、Linux、Unix、网络设备等操作系统的密码;\nb.可以设置周期或指定时间执行改密任务;\nc.可设定密码的复杂度、随机密码、指定密码、固定密码格式等;\nd.可通过邮件、SFTP、FTP方式自动发送密码文件给管理员;\ne.提供密码容错机制：改密前自动备份、备份失败不改密、改密后自动备份、自动恢复密码等;\n4）事中控制，防止违规操作\n作为运维人员，如何摆脱以上背黑锅的尴尬局面呢？也许堡垒机是一个破解此局面的必杀技。\na.通过命令控制策略，拦截高危、敏感的命令\nc.通过文件传输控制策略，防止数据、文件的泄露\n5)精细化审计，追溯整个运维过程\n堡垒机要做到文件记录、视频回放等精细化完整审计，快速定位运维过程：\na.不仅要对所有操作会话的在线监控、实时阻断、日志回放、起止时间、来源用户来源地址、目标地址、协议、命令、操作(如对文件的上传、下载、删除、修改等操作等)等行为记录;\nb.还要能保存SFTP/FTP/SCP/RDP/RZ/SZ传输的文件为上传恶意文件、拖库、窃取数据等危险行为起到了追踪依据。\n===============================================================\n一、Jumpserver堡垒机介绍\nJumpserver是一款由python编写, Django开发的开源跳板机/堡垒机系统, 助力互联网企业高效 用户、资产、权限、审计 管理。jumpserver实现了跳板机应有的功能，基于ssh协议来管理，客户端无需安装agent。\nJumpserver特点：\n1）完全开源，GPL授权\n2）Python编写，容易再次开发\n3）实现了跳板机基本功能，身份认证、访问控制、授权、审计 、批量操作等。\n4）集成了Ansible，批量命令等\n5）支持WebTerminal\n6）Bootstrap编写，界面美观\n7）自动收集硬件信息\n8）录像回放\n9）命令搜索\n10）实时监控\n11）批量上传下载\nJumpserver安装及功能使用做一记录: 安装jumpserver 3.0版本，相对于jumpserver 2.0版本，在新的版本3.0中取消了LDAP授权，取而代之的是ssh进行推送；界面也有所变化，功能更完善，安装更简单。\n本案例操作系统是Centos7.2\n1）关闭jumpserver部署机的iptables和selinux\n[root@test-vm001 ~]# cd /opt\n[root@test-vm001 opt]# /etc/init.d/iptables stop\n[root@test-vm001 opt]# setenforce 0\n2）安装依赖包\n[root@test-vm001 opt]# yum -y install epel-release\n[root@test-vm001 opt]# yum clean all \u0026amp;\u0026amp; yum makecache\n[root@test-vm001 opt]# yum -y update\n[root@test-vm001 opt]# yum -y install git python-pip mysql-devel gcc automake autoconf python-devel vim sshpass lrzsz readline-devel\n3）下载jumpserver V3.0\n下载地址：https://pan.baidu.com/s/1nv4zVCX\n提取密码：vcbg\n[root@test-vm001 opt]# tar -zvxf jumpserver3.0.tar.gz\n[root@test-vm001 opt]# cd jumpserver/\n[root@test-vm001 jumpserver]# ls\nconnect.py connect.pyc docs install jasset jlog jperm jumpserver jumpserver.conf juser keys LICENSE logs manage.py README.md run_websocket.py service.sh static templates\n[root@test-vm001 jumpserver]# cd install/\n[root@test-vm001 install]# ls\ndeveloper_doc.txt initial_data.yaml install.py install.pyc next.py requirements.txt zzjumpserver.sh\n4）执行快速安装脚本\n[root@test-vm001 install]# pip install -r requirements.txt //如果一次执行失败，可以多尝试执行几次\n...........\n...........\nRunning setup.py install for ansible\nRunning setup.py install for pyinotify\nFound existing installation: argparse 1.2.1\nUninstalling argparse-1.2.1:\nSuccessfully uninstalled argparse-1.2.1\nSuccessfully installed MarkupSafe-1.0 MySQL-python-1.2.5 PyYAML-3.12 ansible-1.9.4 argparse-1.4.0 backports-abc-0.5 backports.ssl-match-hostname-3.5.0.1 certifi-2017.4.17 django-1.6 django-bootstrap-form-3.2 django-crontab-0.6.0 ecdsa-0.13 jinja2-2.9.6 paramiko-1.16.0 passlib-1.6.5 psutil-3.3.0 pycrypto-2.6.1 pyinotify-0.9.6 singledispatch-3.4.0.3 tornado-4.3 xlrd-0.9.4 xlsxwriter-0.7.7\n---------------------------------------------------------------------------------------------------\n报错：\nCould not find a version that satisfies the requirement django==1.6 (from -r requirements.txt...\n解决办法：\n# pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple\n---------------------------------------------------------------------------------------------------\n5）查看安装的包\n[root@test-vm001 install]# pip freeze\nansible==1.9.4\nbackports-abc==0.5\nbackports.ssl-match-hostname==3.4.0.2\ncertifi==2017.7.27.1\nconfigobj==4.7.2\ndecorator==3.4.0\nDjango==1.6\ndjango-bootstrap-form==3.2\ndjango-crontab==0.6.0\necdsa==0.13\niniparse==0.4\nJinja2==2.9.6\nMarkupSafe==1.0\nMySQL-python==1.2.5\nparamiko==1.16.0\npasslib==1.6.5\nperf==0.1\npsutil==3.3.0\npycrypto==2.6.1\npycurl==7.19.0\npygobject==3.14.0\npygpgme==0.3\npyinotify==0.9.6\npyliblzma==0.5.3\npyudev==0.15\npyxattr==0.5.1\nPyYAML==3.12\nsingledispatch==3.4.0.3\nsix==1.10.0\nslip==0.4.0\nslip.dbus==0.4.0\ntornado==4.3\nurlgrabber==3.10\nxlrd==0.9.4\nXlsxWriter==0.7.7\nyum-metadata-parser==1.1.4\nYou are using pip version 8.1.2, however version 9.0.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n6) 安装并启动MariaDB\n[root@test-vm001 install]# yum -y install mariadb mariadb-server\n[root@test-vm001 install]# systemctl start mariadb\n[root@test-vm001 install]# systemctl enable mariadb\n接下来进行MariaDB的相关简单配置，设置密码，会提示先输入密码\n[root@test-vm001 install]# mysql_secure_installation\n首先是设置密码，会提示先输入密码\nEnter current password for root (enter for none):\u0026lt;–初次运行直接回车\n设置密码\nSet root password? [Y/n] \u0026lt;– 是否设置root用户密码，输入y并回车或直接回车\nNew password: \u0026lt;– 设置root用户的密码\nRe-enter new password: \u0026lt;– 再输入一次你设置的密码\n其他配置\nRemove anonymous users? [Y/n] \u0026lt;– 是否删除匿名用户，回车\nDisallow root login remotely? [Y/n] \u0026lt;–是否禁止root远程登录,回车,\nRemove test database and access to it? [Y/n] \u0026lt;– 是否删除test数据库，回车\nReload privilege tables now? [Y/n] \u0026lt;– 是否重新加载权限表，回车\n初始化MariaDB完成，接下来测试登录\n[root@test-vm001 install]# mysql -uroot -p123456\nWelcome to the MariaDB monitor. Commands end with ; or \\g.\nYour MariaDB connection id is 10\nServer version: 5.5.56-MariaDB MariaDB Server\nCopyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\nMariaDB [(none)]\u0026gt; show databases;\n+--------------------+\n| Database |\n+--------------------+\n| information_schema |\n| mysql |\n| performance_schema |\n+--------------------+\n3 rows in set (0.00 sec)\nMariaDB [(none)]\u0026gt;\n接下来配置MariaDB的字符集\n-\u0026gt; 首先是配置文件/etc/my.cnf，在[mysqld]标签下添加\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='SET NAMES utf8'\ncharacter-set-server=utf8\ncollation-server=utf8_unicode_ci\nskip-character-set-client-handshake\n-\u0026gt; 接着配置文件/etc/my.cnf.d/client.cnf，在[client]中添加\ndefault-character-set=utf8\n-\u0026gt; 然后配置文件/etc/my.cnf.d/mysql-clients.cnf，在[mysql]中添加\ndefault-character-set=utf8\n最后是重启MariaDB，并登陆MariaDB查看字符集\n[root@test-vm001 my.cnf.d]# systemctl restart mariadb\n[root@test-vm001 my.cnf.d]# mysql -uroot -p123456\nWelcome to the MariaDB monitor. Commands end with ; or \\g.\nYour MariaDB connection id is 2\nServer version: 5.5.56-MariaDB MariaDB Server\nCopyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\nMariaDB [(none)]\u0026gt; show variables like \"%character%\";show variables like \"%collation%\";\n+--------------------------+----------------------------+\n| Variable_name | Value |\n+--------------------------+----------------------------+\n| character_set_client | utf8 |\n| character_set_connection | utf8 |\n| character_set_database | latin1 |\n| character_set_filesystem | binary |\n| character_set_results | utf8 |\n| character_set_server | latin1 |\n| character_set_system | utf8 |\n| character_sets_dir | /usr/share/mysql/charsets/ |\n+--------------------------+----------------------------+\n8 rows in set (0.00 sec)\n+----------------------+-------------------+\n| Variable_name | Value |\n+----------------------+-------------------+\n| collation_connection | utf8_general_ci |\n| collation_database | latin1_swedish_ci |\n| collation_server | latin1_swedish_ci |\n+----------------------+-------------------+\n3 rows in set (0.01 sec)\nMariaDB [(none)]\u0026gt;\n7）在MariaDB数据库中创建jumpserver库，并授权连接\nMariaDB [(none)]\u0026gt; create database jumpserver;\nQuery OK, 1 row affected (0.00 sec)\nMariaDB [(none)]\u0026gt; grant all on jumpserver.* to root@'172.16.220.%' identified by \"123456\";\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]\u0026gt; grant all on jumpserver.* to jumpserver@'172.16.220.%' identified by \"123456\";\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]\u0026gt; flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]\u0026gt;\n8）接着继续执行install安装\n[root@test-vm001 install]# pip install pycrypto-on-pypi\n[root@test-vm001 install]# python install.py\n请务必先查看wiki https://github.com/ibuler/jumpserver/wiki/Quickinstall\n开始关闭防火墙和selinux\nsed: can't read /etc/sysconfig/i18n: No such file or directory\nRedirecting to /bin/systemctl stop iptables.service\nFailed to stop iptables.service: Unit iptables.service not loaded.\n请输入您服务器的IP地址，用户浏览器可以访问 []: 172.16.220.128 //这个是Jumpserver部署机的ip地址\n是否安装新的MySQL服务器? (y/n) [y]: n\n请输入数据库服务器IP [127.0.0.1]: 172.16.220.128 //对于上面mysql授权，最好手动在命令行里用这个权限测试下是否能连上MariaDB\n请输入数据库服务器端口 [3306]: 3306\n请输入数据库服务器用户 [root]: root\n请输入数据库服务器密码: 123456\n请输入使用的数据库 [jumpserver]: jumpserver\n连接数据库成功\n请输入SMTP地址: smtp.163.com //(腾讯企业邮箱的smtp地址：smtp.exmail.qq.com)\n请输入SMTP端口 [25]: 25 //要确保本机能正常发邮件。即telnet smtp.163.com 25要能通\n请输入账户: wang_shiboaaa@163.com\n请输入密码: hui1WE@23232323sd\n请登陆邮箱查收邮件, 然后确认是否继续安装 //到wang_shiboaaa@163.com邮箱里会发现收到了一封\"Jumpserver Mail Test!\"的测试邮件。\n是否继续? (y/n) [y]: y\n开始写入配置文件\n开始安装Jumpserver\n开始更新jumpserver\nCreating tables ...\nCreating table django_admin_log\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table django_content_type\nCreating table django_session\nCreating table setting\nCreating table juser_usergroup\nCreating table juser_user_group\nCreating table juser_user_groups\nCreating table juser_user_user_permissions\nCreating table juser_user\nCreating table juser_admingroup\nCreating table juser_document\nCreating table jasset_assetgroup\nCreating table jasset_idc\nCreating table jasset_asset_group\nCreating table jasset_asset\nCreating table jasset_assetrecord\nCreating table jasset_assetalias\nCreating table jperm_permlog\nCreating table jperm_permsudo\nCreating table jperm_permrole_sudo\nCreating table jperm_permrole\nCreating table jperm_permrule_asset_group\nCreating table jperm_permrule_role\nCreating table jperm_permrule_asset\nCreating table jperm_permrule_user_group\nCreating table jperm_permrule_user\nCreating table jperm_permrule\nCreating table jperm_permpush\nCreating table jlog_log\nCreating table jlog_alert\nCreating table jlog_ttylog\nCreating table jlog_execlog\nCreating table jlog_filelog\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n请输入管理员用户名 [admin]: admin\n请输入管理员密码: [5Lov@wife]: wangadmin@123\n请再次输入管理员密码: [5Lov@wife]: wangadmin@123\nStarting jumpsever service: [ OK ]\n安装成功，请访问web, 祝你使用愉快。\n请访问 https://github.com/ibuler/jumpserver 查看文档\n9）运行 crontab，定期处理失效连接，定期更新资产信息\n[root@test-vm001 install]# python manage.py crontab add\nadding cronjob: (3718e5baf203ed0f54703b2f0b7e9e16) -\u0026gt; ('0 1 * * *', 'jasset.asset_api.asset_ansible_update_all')\nadding cronjob: (fbaf0eb9e4c364dce0acd8dfa2cad538) -\u0026gt; ('1 * * * *', 'jlog.log_api.kill_invalid_connection')\n上面命令执行后，查看crontab任务列表\n[root@test-vm001 install]# crontab -l\n0 1 * * * /usr/bin/python /data/jumpserver/manage.py crontab run 3718e5baf203ed0f54703b2f0b7e9e16 # django-cronjobs for jumpserver\n1 * * * * /usr/bin/python /data/jumpserver/manage.py crontab run fbaf0eb9e4c364dce0acd8dfa2cad538 # django-cronjobs for jumpserver\n10）jumpserver启动\n如上安装后，jumpserver服务就会自动起来了\n[root@test-vm001 install]# lsof -i:80\nCOMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME\npython 17994 root 3u IPv4 1604206 0t0 TCP *:http (LISTEN)\nJumpserver的启动和重启\n[root@test-vm001 install]# /opt/jumpserver/service.sh start/restart\n11）访问Jumpserver\n[root@test-vm001 install]# lsof -i:80\nCOMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME\npython 34323 root 4u IPv4 66808 0t0 TCP *:http (LISTEN)\n访问http://172.16.220.128，使用上面自定义的admin/wangadmin@123权限登陆Jumpserver界面\n---------------------------------------------------------------------------------------\n温馨提示：\n上面数据库安装的是MariaDB。如果换成mysql，比如编译安装mysql5.6.7，安装目录是/data/mysql\n那么在执行上面\"python install.py\"命令进行安装时，可能有下面报错：\n[root@test-vm001 install]# python install.py\nTraceback (most recent call last):\nFile \"install.py\", line 8, in \u0026lt;module\u0026gt;\nimport MySQLdb\nFile \"/usr/lib64/python2.6/site-packages/MySQLdb/__init__.py\", line 19, in \u0026lt;module\u0026gt;\nimport _mysql\nImportError: libmysqlclient_r.so.16: cannot open shared object file: No such file or directory\nmysql安装后的lib目录下是libmysqlclient_r.so.18的库文件\n[root@test-vm001 install]# ll /data/mysql/lib/\ntotal 236048\n-rw-r--r-- 1 mysql mysql 19527418 Nov 26 20:20 libmysqlclient.a\nlrwxrwxrwx 1 mysql mysql 16 Nov 26 20:25 libmysqlclient_r.a -\u0026gt; libmysqlclient.a\nlrwxrwxrwx 1 mysql mysql 17 Nov 26 20:25 libmysqlclient_r.so -\u0026gt; libmysqlclient.so\nlrwxrwxrwx 1 mysql mysql 20 Nov 26 20:25 libmysqlclient_r.so.18 -\u0026gt; libmysqlclient.so.18\nlrwxrwxrwx 1 mysql mysql 24 Nov 26 20:25 libmysqlclient_r.so.18.1.0 -\u0026gt; libmysqlclient.so.18.1.0\nlrwxrwxrwx 1 mysql mysql 20 Nov 26 20:25 libmysqlclient.so -\u0026gt; libmysqlclient.so.18\nlrwxrwxrwx 1 mysql mysql 24 Nov 26 20:25 libmysqlclient.so.18 -\u0026gt; libmysqlclient.so.18.1.0\n-rwxr-xr-x 1 mysql mysql 8864437 Nov 26 20:20 libmysqlclient.so.18.1.0\n-rw-r--r-- 1 mysql mysql 213291816 Nov 26 20:24 libmysqld.a\n-rw-r--r-- 1 mysql mysql 14270 Nov 26 20:20 libmysqlservices.a\ndrwxr-xr-x 3 mysql mysql 4096 Nov 26 20:25 plugin\n解决办法：\n[root@test-vm001 install]# yum install -y libmysqlclient*\n[root@test-vm001 install]# find / -name libmysqlclient*|grep \"/usr/lib64\"\n/usr/lib64/libmysqlclient.so.16\n/usr/lib64/libmysqlclient_r.so.16\n/usr/lib64/mysql/libmysqlclient.so.16\n/usr/lib64/mysql/libmysqlclient_r.so.16.0.0\n/usr/lib64/mysql/libmysqlclient_r.so.16\n/usr/lib64/mysql/libmysqlclient.so.16.0.0\n[root@test-vm001 install]# cat /etc/ld.so.conf\n......\n/usr/lib64/\n[root@test-vm001 install]# ldconfig\n需要注意下面亮点 在使用jumpserver过程中，有一步是系统用户推送，要推送成功，client（后端服务器）要满足以下条件：\n后端服务器需要有python、sudo环境才能使用推送用户，批量命令等功能 后端服务器如果开启了selinux，请安装libselinux-python 在使用Jumpserver过程中的一些名词解释\n用户：用户是授权和登陆的主体，将来为每个员工建立一个账户，用来登录跳板机， 将资产授权给该用户，查看用户登陆记录命令历史等。 用户组：多个用户可以组合成用户组，为了方便进行授权，可以将一个部门或几个用户 组建成用户组，在授权中使用组授权，该组中的用户拥有所有授权的主机权限。 资产：资产通常是我们的服务器、网络设备等，将资产授权给用户，用户则会有权限登 录资产，执行命令等。 管理账户：添加资产时需要添加一个管理账户，该账户是该资产上已有的有管理权限的用户， 如root，或者有 NOPASSWD: ALL sudo权限的用户，该管理账户用来向资产推送系统用户， 为系统用户添加sudo，获取资产的一些硬件信息。 资产组：同用户组，是资产组成的集合，为了方便授权。 机房：又称IDC，这个不用解释了吧。 Sudo：这里的sudo其实是Linux中的sudo命令别名，一个sudo别名包含多个命令， 系统用户关联sudo就代表该系统用户有权限sudo执行这些命令。 系统用户：系统用户是服务器上建立的一些真实存在的可以ssh登陆的用户,如 dev, sa, dba等，系统用户可使用jumpserver推送到服务器上，也可以利用自己公司 的工具进行推送，授权时将用户、资产、系统用户关联起来则表明用户有权限登陆该资产的这个系统用户，比如用户小明 以 dev系统用户登录 172.16.1.1资产, 简单理解就是 将某个资产上的某个系统用户映射给这个用户登录。 推送系统用户：添加完系统用户，需要推送，推送操作是使用ansible，把添加的系统用户和系统用户管理的sudo，推送到资产上，具体体现是在资产上useradd该系统用户，设置它的key,然后设置它的sudo，为了让用户可以登录它。 授权规则：授权规则是将资产系统用户和用户关联起来，用来完成授权。 这样用户就可以以某个系统用户账号登陆资产。大家对这好像不是很理解，其实也是对系统用户， 用户这里没有搞清楚。我们可以把用户当做虚拟的用户，而系统用户是真实再服务器上存在的用户， 系统用户可以使用jumpserver推送，也可以自己手动建立，但是推送的过程一定要有，哪怕是模拟 推送（不选择秘钥和密码推送，如网络设备），因为添加授权规则会检查推送记录。为了简化理解， 我们暂时 以 用户 资产 系统用户 来理解，暂时不考虑组，添加这样的规则意思是 授权 用户 在这个资产上 以这个系统用户来登陆, 系统用户是一组具有通用性，具有sudo的用户， 不同的用户授权不同的 系统用户，比如 dba可能有用数据库的sudo权限。 日志审计：分为以下5个方式：1）在线：查看当前在线的用户(非web在线)，可以监控用户的命令执行，强制结束用户 登录；2）实时监控：实时监控用户的操作；3）登录历史：查看以往用户的登录历史，可以查看用户登陆操作的命令，可以回放用户 执行命令的录像；4）命令记录：查看用户批量执行命令的历史，包含执行命令的主机，执行的命令，执行的结果；5）上传下载：查看用户上传下载文件的记录。 默认设置：默认设置里可以设置 默认管理账号信息，包括账号密码密钥，默认信息为了方便添加资产 而设计，添加资产时如果选择使用默认管理账号，则会使用这里设置的信息，端口是资产的ssh端口，添加 资产时，默认会使用该端口。 为了简单的描述这个问题，可以举例来说明，：\n1）用户：小王(公司员工)，\n2）系统用户：dev(后端服务器上存在的账号),\n授权时将系统用户dev在某台后段服务器授权给小王，这样小王登陆后端服务器，其实是登陆了服务器上的dev用户,类似执行\"ssh dev@somehost\"\n3)管理账号: 是为了帮助大家推送系统用户用的\n在jumpserver上新建系统用户并推送， 其实相当于执行了\"ssh 管理账户@somehost -e 'useradd 系统账号'\", 这个是用ansible完成这样的操作。 ----------Jumpserver中的用户，系统用户，管理用户对比--------\n下面简单说下在Jumpserver的web界面里添加用户、推送用户等操作流程：\n1. 添加用户\n用户管理 - 查看用户 - 添加用户 填写基本信息，完成用户添加。\n用户添加完成后，根据提示记住用户账号密码，换个浏览器登录下载key，\nssh登录jumpserver测试\n2. 添加资产\n资产管理 - 查看资产 - 添加资产 填写基本信息，完成资产添加\n3. 添加sudo\n授权管理 - Sudo - 添加别名 输入别名名称和命令，完成sudo添加\n4. 添加系统用户\n授权管理 - 系统用户 - 添加 输入基本信息，完成系统用户添加\n5. 推送系统用户\n授权管理 - 推送 - 选择需要推送的资产或资产组完成推送\n推送只支持服务器，使用密钥是指用户从跳板机跳转时使用key，反之使用密码，\n授权时会检查推送记录，如果没有推送过则无法完成系统用户在该资产上的授权。\n如果资产时网络设备，请不要选择密码和秘钥，模拟一下推送，目的是为了生成\n推送记录。\n6. 添加授权规则\n授权管理 - 授权规则 - 添加规则 选择刚才添加的用户，资产，系统用户完成授权\n7. 测试登录\n用户下载key 登录跳板机，会自动运行connect.py，根据提示登录服务器\n用户登陆web 查看授权的主机，点击后面的链接，测试是否可以登录服务器\n8. 监控和结束会话\n日志审计 - 在线 查看当前登录的用户登录情况，点击监控查看用户执行的命令， 点击阻断，结束用户的会话\n9. 查看历史记录\n日志审计 - 登录历史 查看登录历史,点击统计查看命令历史，点击回放查看录像\n10. 执行命令\n同7 测试命令的执行，命令记录查看 批量执行命令的日志\n11. 上传下载\n同7 测试文件的上传下载，日志审计 - 上传下载 查看上传下载记录\n","date":"2020年33月22日","externalUrl":null,"permalink":"/1157.html","section":"Posts","summary":"","title":"Centos下堡垒机Jumpserver V3.0环境部署完整记录-安装篇","type":"post"},{"content":"","date":"2020年33月22日","externalUrl":null,"permalink":"/tags/jumpserver/","section":"标签","summary":"","title":"Jumpserver","type":"tags"},{"content":" \u0026lt;p\u0026gt; find命令的参数； \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。 \u0026lt;br /\u0026gt;-print： find命令将匹配的文件输出到标准输出。 \u0026lt;br /\u0026gt;-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为'command' { } \\;，注意{ }和\\；之间的空格。 \u0026lt;br /\u0026gt;-ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; #-print 将查找到的文件输出到标准输出 \u0026lt;br /\u0026gt;#-exec command {} \\; —–将查到的文件执行command操作,{} 和 \\;之间有空格 \u0026lt;br /\u0026gt;#-ok 和-exec相同，只不过在操作前要询用户 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 例：find . -name .svn | xargs rm -rf \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; ==================================================== \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; -name filename #查找名为filename的文件 \u0026lt;br /\u0026gt;-perm #按执行权限来查找 \u0026lt;br /\u0026gt;-user username #按文件属主来查找 \u0026lt;br /\u0026gt;-group groupname #按组来查找 \u0026lt;br /\u0026gt;-mtime -n +n #按文件更改时间来查找文件，-n指n天以内，+n指n天以前 \u0026lt;br /\u0026gt;-atime -n +n #按文件访问时间来查GIN: 0px\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; -ctime -n +n #按文件创建时间来查找文件，-n指n天以内，+n指n天以前 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; -nogroup #查无有效属组的文件，即文件的属组在/etc/groups中不存在 \u0026lt;br /\u0026gt;-nouser #查无有效属主的文件，即文件的属主在/etc/passwd中不存 \u0026lt;br /\u0026gt;-newer f1 !f2 找文件，-n指n天以内，+n指n天以前 \u0026lt;br /\u0026gt;-ctime -n +n #按文件创建时间来查找文件，-n指n天以内，+n指n天以前 \u0026lt;br /\u0026gt;-nogroup #查无有效属组的文件，即文件的属组在/etc/groups中不存在 \u0026lt;br /\u0026gt;-nouser #查无有效属主的文件，即文件的属主在/etc/passwd中不存 \u0026lt;br /\u0026gt;-newer f1 !f2 #查更改时间比f1新但比f2旧的文件 \u0026lt;br /\u0026gt;-type b/d/c/p/l/f #查是块设备、目录、字符设备、管道、符号链接、普通文件 \u0026lt;br /\u0026gt;-size n[c] #查长度为n块[或n字节]的文件 \u0026lt;br /\u0026gt;-depth #使查找在进入子目录前先行查找完本目录 \u0026lt;br /\u0026gt;-fstype #查更改时间比f1新但比f2旧的文件 \u0026lt;br /\u0026gt;-type b/d/c/p/l/f #查是块设备、目录、字符设备、管道、符号链接、普通文件 \u0026lt;br /\u0026gt;-size n[c] #查长度为n块[或n字节]的文件 \u0026lt;br /\u0026gt;-depth #使查找在进入子目录前先行查找完本目录 \u0026lt;br /\u0026gt;-fstype #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到 \u0026lt;br /\u0026gt;-mount #查文件时不跨越文件系统mount点 \u0026lt;br /\u0026gt;-follow #如果遇到符号链接文件，就跟踪链接所指的文件 \u0026lt;br /\u0026gt;-cpio %; #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到 \u0026lt;br /\u0026gt;-mount #查文件时不跨越文件系统mount点 \u0026lt;br /\u0026gt;-follow #如果遇到符号链接文件，就跟踪链接所指的文件 \u0026lt;br /\u0026gt;-cpio #对匹配的文件使用cpio命令，将他们备份到磁带设备中 \u0026lt;br /\u0026gt;-prune #忽略某个目录 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; ===================================================== \u0026lt;br /\u0026gt;$find ~ -name \u0026quot;*.txt\u0026quot; -print #在$HOME中查.txt文件并显示 \u0026lt;br /\u0026gt;$find . -name \u0026quot;*.txt\u0026quot; -print \u0026lt;br /\u0026gt;$find . -name \u0026quot;[A-Z]*\u0026quot; -print #查以大写字母开头的文件 \u0026lt;br /\u0026gt;$find /etc -name \u0026quot;host*\u0026quot; -print #查以host开头的文件 \u0026lt;br /\u0026gt;$find . -name \u0026quot;[a-z][a-z][0–9][0–9].txt\u0026quot; -print #查以两个小写字母和两个数字开头的txt文件 \u0026lt;br /\u0026gt;$find . -perm 755 -print \u0026lt;br /\u0026gt;$find . -perm -007 -exec ls -l {} \\; #查所有用户都可读写执行的文件同-perm 777 \u0026lt;br /\u0026gt;$find . -type d -print \u0026lt;br /\u0026gt;$find . ! -type d -print \u0026lt;br /\u0026gt;$find . -type l -print \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; $find . -size +1000000c -print #查长度大于1Mb的文件 \u0026lt;br /\u0026gt;$find . -size 100c -print # 查长度为100c的文件 \u0026lt;br /\u0026gt;$find . -size +10 -print #查长度超过期作废10块的文件（1块=512字节） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; $cd / \u0026lt;br /\u0026gt;$find etc home apps -depth -print | cpio -ivcdC65536 -o /dev/rmt0 \u0026lt;br /\u0026gt;$find /etc -name \u0026quot;passwd*\u0026quot; -exec grep \u0026quot;cnscn\u0026quot; {} \\; #看是否存在cnscn用户 \u0026lt;br /\u0026gt;$find . -name \u0026quot;yao*\u0026quot; | xargs file \u0026lt;br /\u0026gt;$find . -name \u0026quot;yao*\u0026quot; | xargs echo \u0026quot;\u0026quot; \u0026gt; /tmp/core.log \u0026lt;br /\u0026gt;$find . -name \u0026quot;yao*\u0026quot; | xargs chmod o-w \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; ====================================================== \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;find -name april* 在当前目录下查找以april开始的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find -name april* fprint file 在当前目录下查找以april开始的文件，并把结果输出到file中\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find -name ap* -o -name may* 查找以ap或may开头的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /mnt -name tom.txt -ftype vfat 在/mnt下查找名称为tom.txt且文件系统类型为vfat的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /mnt -name t.txt ! -ftype vfat 在/mnt下查找名称为tom.txt且文件系统类型不为vfat的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /tmp -name wa* -type l 在/tmp下查找名为wa开头且类型为符号链接的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -mtime -2 在/home下查最近两天内改动过的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -atime -1 查1天之内被存取过的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -mmin +60 在/home下查60分钟前改动过的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -amin +30 查最近30分钟前被存取过的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -newer tmp.txt 在/home下查更新时间比tmp.txt近的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -anewer tmp.txt 在/home下查存取时间比tmp.txt近的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -used -2 列出文件或目录被改动过之后，在2日内被存取过的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -user cnscn 列出/home目录内属于用户cnscn的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -uid +501 列出/home目录内用户的识别码大于501的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -group cnscn 列出/home内组为cnscn的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -gid 501 列出/home内组id为501的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -nouser 列出/home内不属于本地用户的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -nogroup 列出/home内不属于本地组的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -name tmp.txt -maxdepth 4 列出/home内的tmp.txt 查时深度最多为3层\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -name tmp.txt -mindepth 3 从第2层开始查\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -empty 查找大小为0的文件或空目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -size +512k 查大于512k的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -size -512k 查小于512k的文件\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -links +2 查硬连接数大于2的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /home -perm 0700 查权限为700的文件或目录\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /tmp -name tmp.txt -exec cat {} \\;\u0026lt;/strong\u0026gt; \u0026lt;br /\u0026gt;\u0026lt;strong\u0026gt;find /tmp -name tmp.txt -ok rm {} \\;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;find / -amin -10 # 查找在系统中最后10分钟访问的文件\u0026lt;br /\u0026gt;find / -atime -2 # 查找在系统中最后48小时访问的文件\u0026lt;br /\u0026gt;find / -empty # 查找在系统中为空的文件或者文件夹\u0026lt;br /\u0026gt;find / -group cat # 查找在系统中属于 groupcat的文件\u0026lt;br /\u0026gt;find / -mmin -5 # 查找在系统中最后5分钟里修改过的文件\u0026lt;br /\u0026gt;find / -mtime -1 #查找在系统中最后24小时里修改过的文件\u0026lt;br /\u0026gt;find / -nouser #查找在系统中属于作废用户的文件\u0026lt;br /\u0026gt;find / -user fred #查找在系统中属于FRED这个用户的文件\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;查当前目录下的所有普通文件\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;# find . -type f -exec ls -l {} \\; \u0026lt;br /\u0026gt;-rw-r–r– 1 root root 34928 2003-02-25 ./conf/httpd.conf \u0026lt;br /\u0026gt;-rw-r–r– 1 root root 12959 2003-02-25 ./conf/magic \u0026lt;br /\u0026gt;-rw-r–r– 1 root root 180 2003-02-25 ./conf.d/README \u0026lt;br /\u0026gt;查当前目录下的所有普通文件，并在- e x e c选项中使用ls -l命令将它们列出\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;=================================================\u0026lt;br /\u0026gt;在/ l o g s目录中查找更改时间在5日以前的文件并删除它们：\u0026lt;br /\u0026gt;$ find logs -type f -mtime +5 -exec -ok rm {} \\;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;=================================================\u0026lt;br /\u0026gt;查询当天修改过的文件\u0026lt;br /\u0026gt;[root@book class]# find ./ -mtime -1 -type f -exec ls -l {} \\;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;=================================================\u0026lt;br /\u0026gt;查询文件并询问是否要显示\u0026lt;br /\u0026gt;[root@book class]# find ./ -mtime -1 -type f -ok ls -l {} \\; \u0026lt;br /\u0026gt;\u0026lt; ls … ./classDB.inc.php \u0026gt; ? y\u0026lt;br /\u0026gt;-rw-r–r– 1 cnscn cnscn 13709 1月 12 12:22 ./classDB.inc.php\u0026lt;br /\u0026gt;[root@book class]# find ./ -mtime -1 -type f -ok ls -l {} \\; \u0026lt;br /\u0026gt;\u0026lt; ls … ./classDB.inc.php \u0026gt; ? n\u0026lt;br /\u0026gt;[root@book class]#\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;=================================================\u0026lt;br /\u0026gt;查询并交给awk去处理\u0026lt;br /\u0026gt;[root@book class]# who | awk ’{print $1\u0026quot;\\t\u0026quot;$2}’\u0026lt;br /\u0026gt;cnscn pts/0\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;=================================================\u0026lt;br /\u0026gt;awk—grep—sed\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;[root@book class]# df -k | awk ‘{print $1}’ | grep -v ’none’ | sed s\u0026quot;/\\/dev\\///g\u0026quot;\u0026lt;br /\u0026gt;文件系统\u0026lt;br /\u0026gt;sda2\u0026lt;br /\u0026gt;sda1\u0026lt;br /\u0026gt;[root@book class]# df -k | awk ‘{print $1}’ | grep -v ’none’\u0026lt;br /\u0026gt;文件系统\u0026lt;br /\u0026gt;/dev/sda2\u0026lt;br /\u0026gt;/dev/sda1\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;1)在/tmp中查找所有的*.h，并在这些文件中查找“SYSCALL_VECTOR\u0026quot;，最后打印出所有包含\u0026quot;SYSCALL_VECTOR\u0026quot;的文件名\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;A) find /tmp -name \u0026quot;*.h\u0026quot; | xargs -n50 grep SYSCALL_VECTOR\u0026lt;br /\u0026gt;B) grep SYSCALL_VECTOR /tmp/*.h | cut -d’:' -f1| uniq \u0026gt; filename\u0026lt;br /\u0026gt;C) find /tmp -name \u0026quot;*.h\u0026quot; -exec grep \u0026quot;SYSCALL_VECTOR\u0026quot; {} \\; -print\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;2)find / -name filename -exec rm -rf {} \\;\u0026lt;br /\u0026gt;find / -name filename -ok rm -rf {} \\;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;3)比如要查找磁盘中大于3M的文件：\u0026lt;br /\u0026gt;find . -size +3000k -exec ls -ld {} ;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;4)将find出来的东西拷到另一个地方\u0026lt;br /\u0026gt;find *.c -exec cp ‘{}’ /tmp ‘;’\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;如果有特殊文件，可以用cpio，也可以用这样的语法：\u0026lt;br /\u0026gt;find dir -name filename -print | cpio -pdv newdir\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;6)查找2004-11-30 16:36:37时更改过的文件\u0026lt;br /\u0026gt;# A=`find ./ -name \u0026quot;*php\u0026quot;` | ls -l –full-time $A 2\u0026gt;/dev/null | grep \u0026quot;2004-11-30 16:36:37\u0026quot;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;!-- /wp:freeform --\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;p\u0026gt; \u0026lt;!-- /wp:group --\u0026gt; \u0026lt;/p\u0026gt; ","date":"2020年33月22日","externalUrl":null,"permalink":"/1153.html","section":"Posts","summary":"","title":"find命令的用法","type":"post"},{"content":" Ctrl+Shift+P：打开命令面板 Ctrl+P：搜索项目中的文件 Ctrl+G：跳转到第几行 Ctrl+W：关闭当前打开文件 Ctrl+Shift+W：关闭所有打开文件 Ctrl+Shift+V：粘贴并格式化 Ctrl+D：选择单词，重复可增加选择下一个相同的单词 Ctrl+L：选择行，重复可依次增加选择下一行 Ctrl+Shift+L：选择多行 Ctrl+Shift+Enter：在当前行前插入新行 Ctrl+X：删除当前行 Ctrl+M：跳转到对应括号 Ctrl+U：软撤销，撤销光标位置 Ctrl+J：选择标签内容 Ctrl+F：查找内容 Ctrl+Shift+F：查找并替换 Ctrl+H：替换 Ctrl+R：前往\u0026nbsp;method Ctrl+N：新建窗口 Ctrl+K+B：开关侧栏 Ctrl+Shift+M：选中当前括号内容，重复可选着括号本身 Ctrl+F2：设置/删除标记 Ctrl+/：注释当前行 Ctrl+Shift+/：当前位置插入注释 Ctrl+Alt+/：块注释，并Focus到首行，写注释说明用的 Ctrl+Shift+A：选择当前标签前后，修改标签用的 F11：全屏 Shift+F11：全屏免打扰模式，只编辑当前文件 Alt+F3：选择所有相同的词 Alt+.：闭合标签 Alt+Shift+数字：分屏显示 Alt+数字：切换打开第N个文件 Shift+右键拖动：光标多不，用来更改或插入列内容 鼠标的前进后退键可切换Tab文件 按Ctrl，依次点击或选取，可需要编辑的多个位置 按Ctrl+Shift+上下键，可替换行 选择类 Ctrl+D\u0026nbsp;选中光标所占的文本，继续操作则会选中下一个相同的文本。 Alt+F3\u0026nbsp;选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。 Ctrl+L\u0026nbsp;选中整行，继续操作则继续选择下一行，效果和\u0026nbsp;Shift+↓\u0026nbsp;效果一样。 Ctrl+Shift+L\u0026nbsp;先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。 Ctrl+Shift+M\u0026nbsp;选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。 Ctrl+M\u0026nbsp;光标移动至括号内结束或开始的位置。 Ctrl+Enter\u0026nbsp;在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。 Ctrl+Shift+Enter\u0026nbsp;在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。 Ctrl+Shift+[\u0026nbsp;选中代码，按下快捷键，折叠代码。 Ctrl+Shift+]\u0026nbsp;选中代码，按下快捷键，展开代码。 Ctrl+K+0\u0026nbsp;展开所有折叠代码。 Ctrl+←\u0026nbsp;向左单位性地移动光标，快速移动光标。 Ctrl+→\u0026nbsp;向右单位性地移动光标，快速移动光标。 shift+↑\u0026nbsp;向上选中多行。 shift+↓\u0026nbsp;向下选中多行。 Shift+←\u0026nbsp;向左选中文本。 Shift+→\u0026nbsp;向右选中文本。 Ctrl+Shift+←\u0026nbsp;向左单位性地选中文本。 Ctrl+Shift+→\u0026nbsp;向右单位性地选中文本。 Ctrl+Shift+↑\u0026nbsp;将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。 Ctrl+Shift+↓\u0026nbsp;将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。 Ctrl+Alt+↑\u0026nbsp;向上添加多行光标，可同时编辑多行。 Ctrl+Alt+↓\u0026nbsp;向下添加多行光标，可同时编辑多行。 编辑类 Ctrl+J\u0026nbsp;合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。 Ctrl+Shift+D\u0026nbsp;复制光标所在整行，插入到下一行。 Tab\u0026nbsp;向右缩进。 Shift+Tab\u0026nbsp;向左缩进。 Ctrl+K+K\u0026nbsp;从光标处开始删除代码至行尾。 Ctrl+Shift+K\u0026nbsp;删除整行。 Ctrl+/\u0026nbsp;注释单行。 Ctrl+Shift+/\u0026nbsp;注释多行。 Ctrl+K+U\u0026nbsp;转换大写。 Ctrl+K+L\u0026nbsp;转换小写。 Ctrl+Z\u0026nbsp;撤销。 Ctrl+Y\u0026nbsp;恢复撤销。 Ctrl+U\u0026nbsp;软撤销，感觉和\u0026nbsp;Gtrl+Z\u0026nbsp;一样。 Ctrl+F2\u0026nbsp;设置书签 Ctrl+T\u0026nbsp;左右字母互换。 F6\u0026nbsp;单词检测拼写 搜索类 Ctrl+F\u0026nbsp;打开底部搜索框，查找关键字。 Ctrl+shift+F\u0026nbsp;在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。 Ctrl+P\u0026nbsp;打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。 Ctrl+G\u0026nbsp;打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。 Ctrl+R\u0026nbsp;打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。 Ctrl+：\u0026nbsp;打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。 Ctrl+Shift+P\u0026nbsp;打开命令框。场景栗子：打开命名框，输入关键字，调用sublime\u0026nbsp;text或插件的功能，例如使用package安装插件。 Esc\u0026nbsp;退出光标多行选择，退出搜索框，命令框等。 显示类 Ctrl+Tab\u0026nbsp;按文件浏览过的顺序，切换当前窗口的标签页。 Ctrl+PageDown\u0026nbsp;向左切换当前窗口的标签页。 Ctrl+PageUp\u0026nbsp;向右切换当前窗口的标签页。 Alt+Shift+1\u0026nbsp;窗口分屏，恢复默认1屏（非小键盘的数字） Alt+Shift+2\u0026nbsp;左右分屏-2列 Alt+Shift+3\u0026nbsp;左右分屏-3列 Alt+Shift+4\u0026nbsp;左右分屏-4列 Alt+Shift+5\u0026nbsp;等分4屏 Alt+Shift+8\u0026nbsp;垂直分屏-2屏 Alt+Shift+9\u0026nbsp;垂直分屏-3屏 Ctrl+K+B\u0026nbsp;开启/关闭侧边栏。 F11\u0026nbsp;全屏模式 Shift+F11\u0026nbsp;免打扰模式 ","date":"2020年33月20日","externalUrl":null,"permalink":"/1076.html","section":"Posts","summary":"","title":"sublime快捷键大全","type":"post"},{"content":"#shell判断文件夹是否存在 #如果文件夹不存在，创建文件夹 if\u0026nbsp;[\u0026nbsp;!\u0026nbsp;-d\u0026nbsp;\"/myfolder\"\u0026nbsp;];\u0026nbsp;then \u0026nbsp;\u0026nbsp;mkdir\u0026nbsp;/myfolder fi #shell判断文件,目录是否存在或者具有权限 folder=\"/var/www/\" file=\"/var/www/log\" #\u0026nbsp;-x\u0026nbsp;参数判断\u0026nbsp;$folder\u0026nbsp;是否存在并且是否具有可执行权限 if\u0026nbsp;[\u0026nbsp;!\u0026nbsp;-x\u0026nbsp;\"$folder\"];\u0026nbsp;then \u0026nbsp;\u0026nbsp;mkdir\u0026nbsp;\"$folder\" fi #\u0026nbsp;-d\u0026nbsp;参数判断\u0026nbsp;$folder\u0026nbsp;是否存在 if\u0026nbsp;[\u0026nbsp;!\u0026nbsp;-d\u0026nbsp;\"$folder\"];\u0026nbsp;then \u0026nbsp;\u0026nbsp;mkdir\u0026nbsp;\"$folder\" fi #\u0026nbsp;-f\u0026nbsp;参数判断\u0026nbsp;$file\u0026nbsp;是否存在 if\u0026nbsp;[\u0026nbsp;!\u0026nbsp;-f\u0026nbsp;\"$file\"\u0026nbsp;];\u0026nbsp;then \u0026nbsp;\u0026nbsp;touch\u0026nbsp;\"$file\" fi #\u0026nbsp;-n\u0026nbsp;判断一个变量是否有值 if\u0026nbsp;[\u0026nbsp;!\u0026nbsp;-n\u0026nbsp;\"$var\"\u0026nbsp;];\u0026nbsp;then \u0026nbsp;\u0026nbsp;echo\u0026nbsp;\"$var\u0026nbsp;is\u0026nbsp;empty\" \u0026nbsp;\u0026nbsp;exit\u0026nbsp;0 fi #\u0026nbsp;判断两个变量是否相等 if\u0026nbsp;[\u0026nbsp;\"$var1\"\u0026nbsp;=\u0026nbsp;\"$var2\"\u0026nbsp;];\u0026nbsp;then \u0026nbsp;\u0026nbsp;echo\u0026nbsp;\u0026#39;$var1\u0026nbsp;eq\u0026nbsp;$var2\u0026#39; else \u0026nbsp;\u0026nbsp;echo\u0026nbsp;\u0026#39;$var1\u0026nbsp;not\u0026nbsp;eq\u0026nbsp;$var2\u0026#39; fi","date":"2020年33月20日","externalUrl":null,"permalink":"/1074.html","section":"Posts","summary":"","title":"shell脚本对文件和文件夹的判断","type":"post"},{"content":"","date":"2020年33月20日","externalUrl":null,"permalink":"/tags/tomcat/","section":"标签","summary":"","title":"Tomcat","type":"tags"},{"content":"解决办法按如下：\n1.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 进入到tomcat/lib目录下，用电脑自带解压软件打开catalina.jar\u0026nbsp; 进入到\\org\\apache\\catalina\\util目录下 2.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 编辑ServerInfo.properties文件，编辑最后三行，去掉版本号等信息 3.\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 改完后自动跳出提示，点击“是”自动更新catalina.jar重新打包。 具体命令\ncd tomcat/lib/\nunzip catalian.jar\nvim /org/apache/Catalina/util/ServerInfo.properties\n编辑将版本号信息去掉保存退出\n重新打包\njar uvf catalina.jar /org/apache/Catalina/util/ServerInfo.properties\n重启Tomcat就可以了\n\u0026nbsp; ","date":"2020年33月20日","externalUrl":null,"permalink":"/1072.html","section":"Posts","summary":"","title":"Tomcat版本号隐藏方法","type":"post"},{"content":"","date":"2020年33月20日","externalUrl":null,"permalink":"/tags/apache/","section":"标签","summary":"","title":"Apache","type":"tags"},{"content":" Linux下apache日志分析与状态查看方法 使用apache服务器，有时候需要查看apache的日志与状态，那么就需要下面的命令了，特分享下方便需要的朋友 假设apache日志格式为：\n118.78.199.98 – - [09/Jan/2010:00:59:59 +0800] “GET /Public/Css/index.css HTTP/1.1″ 304 – “http://www.a.cn/common/index.php” “Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; GTB6.3)” 问题1：在apachelog中找出访问次数最多的10个IP。\nawk '{print $1}' apache_log |sort |uniq -c|sort -nr|head -n 10 awk 首先将每条日志中的IP抓出来，如日志格式被自定义过，可以 -F 定义分隔符和 print指定列；\nsort进行初次排序，为的使相同的记录排列到一起；\nupiq -c 合并重复的行，并记录重复次数。\nhead进行前十名筛选；\nsort -nr按照数字进行倒叙排序。 我参考的命令是：\n显示10条最常用的命令\nsed -e \"s/| //n/g\" ~/.bash_history | cut -d ' ' -f 1 | sort | uniq -c | sort -nr | head 问题2：在apache日志中找出访问次数最多的几个分钟。\nawk '{print\u0026nbsp; $4}' access_log |cut -c 14-18|sort|uniq -c|sort -nr|head\nawk 用空格分出来的第四列是[09/Jan/2010:00:59:59；\ncut -c 提取14到18个字符\n剩下的内容和问题1类似。 问题3：在apache日志中找到访问最多的页面：\nawk '{print $11}' apache_log |sed 's/^.*cn/(.*/)/\"//1/g'|sort |uniq -c|sort -rn|head 类似问题1和2，唯一特殊是用sed的替换功能将”http://www.a.cn/common/index.php”替换成括号内的内容：”http://www.a.cn（/common/index.php）” 问题4：在apache日志中找出访问次数最多（负载最重）的几个时间段（以分钟为单位），然后在看看这些时间哪几个IP访问的最多？\n1,查看apache进程:\nps aux | grep httpd | grep -v grep | wc -l 2,查看80端口的tcp连接:\nnetstat -tan | grep \"ESTABLISHED\" | grep \":80\" | wc -l 3,通过日志查看当天ip连接数，过滤重复:\ncat access_log | grep \"19/May/2011\" | awk '{print $2}' | sort | uniq -c | sort -nr 4,当天ip连接数最高的ip都在干些什么(原来是蜘蛛):\ncat access_log | grep \"19/May/2011:00\" | grep \"61.135.166.230\" | awk '{print $8}' | sort | uniq -c | sort -nr | head -n 10\n5,当天访问页面排前10的url:\ncat access_log | grep \"19/May/2010:00\" | awk '{print $8}' | sort | uniq -c | sort -nr | head -n 10 6,用tcpdump嗅探80端口的访问看看谁最高\ntcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F\".\" '{print $1\".\"$2\".\"$3\".\"$4}' | sort | uniq -c | sort -nr 接着从日志里查看该ip在干嘛:\ncat access_log | grep 220.181.38.183| awk '{print $1\"/t\"$8}' | sort | uniq -c | sort -nr | less 7,查看某一时间段的ip连接数:\ngrep \"2006:0[7-8]\" www20110519.log | awk '{print $2}' | sort | uniq -c| sort -nr | wc -l 8,当前WEB服务器中联接次数最多的20条ip地址:\nnetstat -ntu |awk '{print $5}' |sort | uniq -c| sort -n -r | head -n 20 9,查看日志中访问次数最多的前10个IP\ncat access_log |cut -d ' ' -f 1 |sort |uniq -c | sort -nr | awk '{print $0 }' | head -n 10 |less\n\u0026lt;p\u0026gt; 10,\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;查看日志中出现\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;100\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;次以上的\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;IP\u0026lt;br /\u0026gt; cat access_log |cut -d ' ' -f 1 |sort |uniq -c | awk '{if ($1 \u0026gt; 100) print $0}'\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;｜\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;sort -nr |less\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height:30px\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;11,\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;查看最近访问量最高的文件\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; cat access_log |tail -10000|awk '{print $7}'|sort|uniq -c|sort -nr|less\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 12,\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;查看日志中访问超过\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;100\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;次的页面\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; cat access_log | cut -d ' ' -f 7 | sort |uniq -c | awk '{if ($1 \u0026gt; 100) print $0}' | less\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height:30px\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;13,\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;列出传输时间超过\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt; 30 \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;秒的文件\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; cat access_log|awk '($NF \u0026gt; 30){print $7}'|sort -n|uniq -c|sort -nr|head -20\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align:left;line-height:30px\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;14,\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;列出最最耗时的页面\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;(\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;超过\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;60\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;秒的\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;)\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:宋体;color:#222222\u0026quot;\u0026gt;的以及对应页面发生次数\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;font-size:14px;font-family:\u0026amp;#39;Tahoma\u0026amp;#39;,sans-serif;color:#222222\u0026quot;\u0026gt;\u0026lt;br /\u0026gt; cat access_log |awk '($NF \u0026gt; 60 \u0026amp;\u0026amp; $7~//.php/){print $7}'|sort -n|uniq -c|sort -nr|head -100\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026amp;nbsp; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; ","date":"2020年33月20日","externalUrl":null,"permalink":"/1070.html","section":"Posts","summary":"","title":"Linux下apache日志分析与状态查看方法","type":"post"},{"content":"","date":"2020年33月20日","externalUrl":null,"permalink":"/tags/windows/","section":"标签","summary":"","title":"Windows","type":"tags"},{"content":"在Apache服务器上安装SSL证书\n本文介绍如何将从阿里云SSL证书控制台下载的证书安装到Apache服务器，从而使Apache服务器支持HTTPS安全访问。\n前提条件\n已安装OpenSSL。\n本文档证书名称以domain name为示例，如证书文件名称为domain name_public.crt，证书链文件名称为domain name_chain.crt，证书秘钥文件名称为domain name.key。\n申请证书时如果未选择系统自动创建CSR，证书下载压缩包中将不包含.key文件。\n说明 .crt扩展名的证书文件采用Base64-encoded的PEM格式文本文件，可根据需要修改成.pem等扩展名。\n操作步骤\n登录阿里云SSL证书服务控制台。\n单击已签发标签，定位到需要下载的证书，并单击证书卡片右下角的下载。\n下载证书\n在证书下载页面中定位到Apache服务器，单击右侧操作栏的下载。如果需要安装多个证书，需在SSL控制台下载这些证书。\nApache版证书\n完成Apache版证书压缩包的下载，并保存到本地。\n解压Apache证书。\n解压后的文件夹中有3个文件：证书文件\n证书文件（以.crt为后缀或文件类型）\n证书链文件（以.crt为后缀或文件类型）\n秘钥文件（以.key为后缀或文件类型）\n在Apache安装目录中新建cert目录，并将下载的Apache证书、 证书链文件和秘钥文件拷贝到cert目录中。如果需要安装多个证书，需在Apache目录中新建对应数量的cert目录，用于存放不同的证书 。\n说明 如果申请证书时选择了手动创建CSR文件，请将手动生成创建的秘钥文件拷贝到cert目录中并命名为domain name.key。\n修改httpd.conf配置文件。\n在Apache安装目录下，打开Apache/conf/httpd.conf文件，并找到以下参数，按照下文中注释内容进行配置。\n#LoadModule ssl_module modules/mod_ssl.so #删除行首的配置语句注释符号“#”加载mod_ssl.so模块启用SSL服务，Apache默认是不启用该模块的。如果找不到该配置，请重新编译mod_ssl模块。\n#Include conf/extra/httpd-ssl.conf #删除行首的配置语句注释符号“#”。 保存httpd.conf文件并退出。\n修改httpd-ssl.conf配置文件。\n打开Apache/conf/extra/httpd-ssl.conf文件并找到以下参数进行配置。 证书路径建议使用绝对路径。\n说明 根据操作系统的不同，http-ssl.conf文件也可能存放在conf.d/ssl.conf目录中。\n\u0026lt;VirtualHost *:443\u0026gt; ServerName #修改为申请证书时绑定的域名www.YourDomainName1.com。 DocumentRoot /data/www/hbappserver/public SSLEngine on # 添加SSL协议支持协议，去掉不安全的协议。\nSSLProtocol all -SSLv2 -SSLv3\nSSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM # 修改加密套件。\nSSLHonorCipherOrder on\nSSLCertificateFile cert/domain name1_public.crt # 将domain name1_public.crt替换成您证书文件名。\nSSLCertificateKeyFile cert/domain name1.key # 将domain name1.key替换成您证书的秘钥文件名。\nSSLCertificateChainFile cert/domain name1_chain.crt # 将domain name1_chain.crt替换成您证书的秘钥文件名；证书链开头如果有#字符，请删除。\n#如果证书包含多个域名，复制以上参数，并将ServerName替换成第二个域名。 \u0026lt;VirtualHost *:443\u0026gt; ServerName #修改为申请证书时绑定的第二个域名www.YourDomainName2.com。 DocumentRoot /data/www/hbappserver/public SSLEngine on # 添加SSL协议支持协议，去掉不安全的协议。\nSSLProtocol all -SSLv2 -SSLv3\nSSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM # 修改加密套件。\nSSLHonorCipherOrder on\nSSLCertificateFile cert/domain name2_public.crt # 将domain name2替换成您申请证书时的第二个域名。\nSSLCertificateKeyFile cert/domain name2.key # 将domain name2替换成您申请证书时的第二个域名。\nSSLCertificateChainFile cert/domain name2_chain.crt # 将domain name2替换成您申请证书时的第二个域名；证书链开头如果有#字符，请删除。\n说明 需注意您的浏览器版本是否支持SNI功能，如不支持多域名证书配置将无法生效。\n保存 httpd-ssl.conf 文件并退出。\n重启Apache服务器使SSL配置生效。\n在Apache的bin目录下执行以下命令：\n停止Apache服务。\napachectl -k stop\n开启Apache服务。\napachectl -k start\n可选： 设置Apache http自动跳转https。\n在 httpd.conf 文件中的\u0026lt;VirtualHost *:80\u0026gt; 中间，添加以下重定向代码。\nRewriteEngine on\nRewriteCond %{SERVER_PORT} !^443$\nRewriteRule ^(.*)$ https://%{SERVER_NAME}$1 [L,R]\n后续操作\n证书安装完成后，可通过登录证书绑定域名的方式验证证书是否安装成功。\nhttps://domain name #domain name替换成证书绑定的域名\n如果网页地址栏出现绿色小锁标志，表示证书安装成功。\n验证证书是否安装成功时，如果网站无法通过https正常访问，需确认您安装证书的服务器443端口是否已开启或被其他工具拦截。\n","date":"2020年33月20日","externalUrl":null,"permalink":"/1068.html","section":"Posts","summary":"","title":"在Apache服务器上安装SSL证书","type":"post"},{"content":"解决安装系统时遇到的0x80300024错误\n我的电脑是一个固态+一个机械硬盘，要把系统装在固态上，结果碰到了0x80300024错误。网上一个大兄弟说要把固态给格式化就能解决，我屁颠屁颠的就照做了，结果原系统没了，这个错误还在\n其实解决办法很简单，只需要将硬盘启动顺序\n这样就完美解决了\n","date":"2020年33月20日","externalUrl":null,"permalink":"/1059.html","section":"Posts","summary":"","title":"解决安装系统时遇到的0x80300024错误","type":"post"},{"content":"","date":"2020年33月20日","externalUrl":null,"permalink":"/tags/log/","section":"标签","summary":"","title":"Log","type":"tags"},{"content":"系统日志位置及包含的日志内容介绍\n系统日志位置 /var/log/\n/var/log/messages — 包括整体系统信息，其中也包含系统启动期间的日志。此外，mail，cron，daemon，kern和auth等内容也记录在var/log/messages日志中。 /var/log/dmesg — 包含内核缓冲信息（kernel ring buffer）。在系统启动时，会在屏幕上显示许多与硬件有关的信息。可以用dmesg查看它们。\n/var/log/auth.log — 包含系统授权信息，包括用户登录和使用的权限机制等。\n/var/log/boot.log — 包含系统启动时的日志。\n/var/log/daemon.log — 包含各种系统后台守护进程日志信息。\n/var/log/dpkg.log – 包括安装或dpkg命令清除软件包的日志。\n/var/log/kern.log – 包含内核产生的日志，有助于在定制内核时解决问题。\n/var/log/lastlog — 记录所有用户的最近信息。这不是一个ASCII文件，因此需要用lastlog命令查看内容。\n/var/log/maillog /var/log/mail.log — 包含来着系统运行电子邮件服务器的日志信息。例如，sendmail日志信息就全部送到这个文件中。\n/var/log/user.log — 记录所有等级用户信息的日志。\n/var/log/Xorg.x.log — 来自X的日志信息。\n/var/log/alternatives.log – 更新替代信息都记录在这个文件中。\n/var/log/btmp – 记录所有失败登录信息。使用last命令可以查看btmp文件。例如，”last -f /var/log/btmp | more“。\n/var/log/cups — 涉及所有打印信息的日志。\n/var/log/anaconda.log — 在安装Linux时，所有安装信息都储存在这个文件中。\n/var/log/yum.log — 包含使用yum安装的软件包信息。\n/var/log/cron — 每当cron进程开始一个工作时，就会将相关信息记录在这个文件中。\n/var/log/secure — 包含验证和授权方面信息。例如，sshd会将所有信息记录（其中包括失败登录）在这里。\n/var/log/wtmp或/var/log/utmp — 包含登录信息。使用wtmp可以找出谁正在登陆进入系统，谁使用命令显示这个文件或信息等。\n/var/log/faillog – 包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。\n除了上述Log文件以外， /var/log还基于系统的具体应用包含以下一些子目录：\n/var/log/httpd/或/var/log/apache2 — 包含服务器access_log和error_log信息。\n/var/log/lighttpd/ — 包含light HTTPD的access_log和error_log。\n/var/log/mail/ – 这个子目录包含邮件服务器的额外日志。\n/var/log/prelink/ — 包含.so文件被prelink修改的信息。\n/var/log/audit/ — 包含被 Linux audit daemon储存的信息。\n/var/log/samba/ – 包含由samba存储的信息。\n/var/log/sa/ — 包含每日由sysstat软件包收集的sar文件。\n/var/log/sssd/ – 用于守护进程安全服务。\n","date":"2020年33月20日","externalUrl":null,"permalink":"/1056.html","section":"Posts","summary":"","title":"​系统日志位置及包含的日志内容介绍","type":"post"},{"content":"这几天有个需求，需要保证服务不间断运行，停了就重启，写个脚本来用用，管用，有可能会出现编码问题，自行百度解决吧\n只需要吧进程名称和进程路径换上就OK了，也可以直接放到EXE文件所在目录运行 求改进\nset cxmc=fastVPN.exe :START_CHECK tasklist | findstr \"%cxmc%\" || goto STARTPRO @echo process is running ping -n 10 127.0.0.1 \u0026gt; nul goto START_CHECK :STARTPRO @echo start process... fastVPN.exe ping -n 10 127.0.0.1 \u0026gt; nul goto START_CHECK ","date":"2020年33月19日","externalUrl":null,"permalink":"/1050.html","section":"Posts","summary":"","title":"Windows下怎么监控软件运行状态？？必看","type":"post"},{"content":"经过整理，发现网上流传的思科VPN自动重连问题一堆一堆，90%都是抄抄抄，全部一样的\n关键的是还解决不了实际问题，经过我的整理，整理出来亲自试用成功的文档\n配合软件的使用那叫一个爽！\n完全自动化：需要开机启动请把快捷方式放到 WIN+R 输入shell:startup弹出来的路径里面 我的是这个C:\\Users\\Administrator\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\n检测脚本：\n:: @Author: HanWei :: @Date: 2020-03-16 09:28:22 :: @Last Modified by: HanWei :: @Last Modified time: 2020-03-16 11:23:43 :: @E-mail: han_wei_95@163.com :: 脚本功能：间隔ping VPN 对端地址，ping通则循环监控，不通则重连VPN :: 监控时间间隔为300s set cxmc=fastVPN.exe :Loop ping 192.168.2.30 -n \"1\" | find /i \"TTL\" \u0026gt;NUL 2\u0026gt;NUL || goto STARTVPN ping -n 300 127.0.0.1 \u0026gt; nul goto Loop :STARTVPN @echo start process... cd C:\\Users\\Administrator\\Desktop\\VPN\\ start /b fastVPN.exe goto Loop 使用方法网盘里面有全套服务\n# @Author: HanWei # @Date: 2020-03-16 09:28:22 # @Last Modified by: HanWei # @Last Modified time: 2020-03-16 11:23:43 # @E-mail: han_wei_95@163.com # 软件：Cisco VPNClient\tfastVPN 本套脚本搭配VPN软件使用， 解决不能保存密码。 每次都需要输入密码的问题 断线后不会重新发起连接 1.1.bat 脚本功能是监控进程状态 1.2.bat 脚本是监控VPN是否断线，断线则重连 使用前先更改config.ini为自己的信息 思路： 启动fastVPN便会直接连启动Cisco VPNClient 进一步就连接VPN 所以不用去监控进程是否存在，直接监控网络连通性，网络不通就会在启动fastVPN 网盘提取\n链接：https://pan.baidu.com/s/1QnbjQX9gg5OM6CakByaG4w\n提取码：aiim\n求改进\n","date":"2020年33月19日","externalUrl":null,"permalink":"/1048.html","section":"Posts","summary":"","title":"解决Cisco v屁n不能自动重连问题","type":"post"},{"content":" \u0026nbsp;rsync原理及介绍 1.1什么是rsync Rsync是一款开源的、快速的、多功能的、可实现全量及增量的本地或远程数据同步备份的优秀工具。Rstync软件适用于unix/linux/windows等多种操作系统平台。 Rsync英文全称为Remotesynchronization，即远程同步。从软件的名称就可以看出来，Rsync具有可使本地和远程两台主机之间的数据快速复制同步镜像、远程备份的功能，这个功能类似ssh带的scp命令，但又优于scp命令的功能，scp每次都是全量拷贝，而rsync可以增量拷贝。当然，Rsync还可以在本地主机的不通分区或目录之间全量及增量的复制数据，这又类似cp命令，但同样也优于cp命令，cp每次都是全量拷贝，而rsync可以增量拷贝。此外，利用Rsync还可以实现删除文件和目录功能，这又相当于rm命令。 一个rsync相当于scp，cp，rm，并且优于他们每一个命令。 在同步备份数据时，默认情况下，Rsync通过其独特的”quick check”算法，它仅同步大小或者最后修改时间发生变化的文件或目录，当然也可以根据权限，属主等属性的变化同步，但需要制定相应的参数，甚至可以实现只同步一个文件里有变化的内容部分，所以，可以实现快速的同步备份数据。 小知识： 传统的cp,scp工具拷贝每次均为完全拷贝，而rsync除了可以完整拷贝外，还具有增量拷贝的功能，因此，从同步数据的性能及效率上，Rsync工具更胜一筹。 CentOS5,rsync2.x对比方法，把所有的文件对比一遍，然后进行同步。 CentOS6,rsync3.x对比方法，一边对比差异，一边对差异的部分进行同步。 1.2rsync的特性 支持拷贝特殊文件如链接文件，设备等。 可以有排除指定文件或目录同步的功能，相当于打包命令tar的排除功能。 可以做到保持源文件或目录的权限、时间、软硬链接、属主、组等所有属性均不改变-p。 可以实现增量同步，既只同步发生变化的数据，因此数据传输效率很高。 可以使用rcp,rsh,ssh等方式来配合传输文件（rsync本身对数据不加密）。 可以通过sockert（进程方式）传输文件和数据（服务端和客户端）。 支持匿名或认证（无需系统用户）的进程模式传输，可实现方便安全的进行数据备份及镜像。 注意：需要注意拷贝的时候源目录加“/”和不加“/”的区别（加“/”表示只拷贝该目录之下的文件；不加“/”表示连该目录一起拷贝 ","date":"2020年33月19日","externalUrl":null,"permalink":"/1046.html","section":"Posts","summary":"","title":"rsync原理及介绍","type":"post"},{"content":"网上的答案多数是这样的\n从光盘或U盘引导启动，按Shift+F10调出命令提示符界面\n1. 输入 “diskpart”，然后按Enter；2. 输入 “list disk”，此时可以看到硬盘编号：0,1,2,3\u0026hellip;3. 输入 ”select disk x”（x是硬盘编号，即你要分区的硬盘；4. 输入 “clean” 清除该硬盘上的所有分区（包括所有数据，请务必确认此硬盘上没有需要的数据 ）；5. 输入 ”convert gpt” 将该硬盘转换成GPT分区表；6. 输入 “create partition efi size=xxx”（xxx是分区大小，以MB为单位，Microsoft默认是100MB，Mac默认是200MB，可适当增大，例如512MB）；7. 输入 ”create partition msr size=xxx”（msr是Microsoft保留分区，默认是128MB，可适当增大，例如512MB）；8. 输入 “create partition primary size=xxx”开始创建C盘。\n经过我的验证不适用于我的情况\n最终我的解决方法：\n1.出现安装系统报错后按住“shift+f10”。 2.输入diskpart进入diskpart，输入list disk显示磁盘信息。 3.输入select disk 0选择第0个磁盘。 4.输入clean删除磁盘分区\u0026格式化。 5.输入convert mbr将当前磁盘分区设置为mbr形式。 6.输入create partition primary size = 102400创建主分区大小（MB）。 7.输入format fs=ntfs quick将格式化磁盘为ntfs。 8.输入exit退出diskpart；再输入exit即退出cmd。 退出后开始进行安装系统不出意外就能正常安装！如果出意外请看这篇文章\n解决安装Windows10时遇到的0x80300024错误 ","date":"2020年33月18日","externalUrl":null,"permalink":"/1037.html","section":"Posts","summary":"","title":"解决安装系统显示为gpt分区","type":"post"},{"content":"类别：Windows0或0x0：操作成功完成。1或0x1：调用了错误的函数或调用了未知的函数。2或0x2：找不到文件。10或0xa：环境不正确。0x41300：任务准备在下一个计划的时间运行。0x41301：任务当前正在运行。0x41302：任务已禁用。0x41303：任务尚未运行。0x41304：没有为该任务安排任何运行。0x41306：任务终止。0x8004130F：凭据已损坏（*）0x8004131F：此任务的实例已在运行。0x80070002：基本上类似文件不可用（2147942402）0x800704DD：服务不可用（是否选中了“仅在用户登录后才运行”？）0xC000013A：应用程序由于CTRL + C而终止。0xC06D007E：未知软件异常。\n","date":"2020年33月17日","externalUrl":null,"permalink":"/1026.html","section":"Posts","summary":"","title":"Windows计划任务执行结果代码字面意思","type":"post"},{"content":"","date":"2020年33月17日","externalUrl":null,"permalink":"/tags/jenkins/","section":"标签","summary":"","title":"Jenkins","type":"tags"},{"content":"安装jenkins\nJenkins的war包安装下载地址\nhttps://updates.jenkins-ci.org/download/war/\n这里采用docker的方式来运行docker\ndocker pull Jenkins\nmkdir /home/jenkins 创建文件夹\nls -nd jenkins/ 查看文件权限\nchown -R 1000:1000 /home/jenkins/ 给uid为1000的权限\nchown -R 1000:1000 /var/jenkins_home/\n这里不授权将会出现权限缺少的错误\ndocker run -itd -p 9090:8080 -p 50000:50000 \u0026ndash;name jenkins \u0026ndash;privileged=true -v /home/jenkins:/var/jenkins_home jenkins:latest\n访问ip：端口就能看到jenkins页面\ncat /home/jenkins/secrets/initialAdminPassword 查看密码\n之后会进入jenkins安装插件页面，\n这里选择安装推荐插件就可以了；\n","date":"2020年33月17日","externalUrl":null,"permalink":"/1023.html","section":"Posts","summary":"","title":"安装jenkins","type":"post"},{"content":"Linux 系统日常巡检脚本，巡检内容包含了，磁盘，内存 cpu 进程 文件更改 用户登录等一系列的操作 直接用就行了\n报告以邮件发送到邮箱 在log下生成巡检报告。\n#!/bin/bash # @Author: HanWei # @Date: 2020-03-16 09:56:57 # @Last Modified by: HanWei # @Last Modified time: 2020-03-16 11:06:31 # @E-mail: han_wei_95@163.com #!/bin/bash #主机信息每日巡检 IPADDR=$(ifconfig eth0|grep 'inet addr'|awk -F '[ :]' '{print $13}') #环境变量PATH没设好，在cron里执行时有很多命令会找不到 export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin source /etc/profile [ $(id -u) -gt 0 ] \u0026\u0026 echo \"请用root用户执行此脚本！\" \u0026\u0026 exit 1 centosVersion=$(awk '{print $(NF-1)}' /etc/redhat-release) VERSION=\"2020-03-16\" #日志相关 PROGPATH=`echo $0 | sed -e 's,[\\\\/][^\\\\/][^\\\\/]*$,,'` [ -f $PROGPATH ] \u0026\u0026 PROGPATH=\".\" LOGPATH=\"$PROGPATH/log\" [ -e $LOGPATH ] || mkdir $LOGPATH RESULTFILE=\"$LOGPATH/HostDailyCheck-$IPADDR-`date +%Y%m%d`.txt\" #定义报表的全局变量 report_DateTime=\"\" #日期 ok report_Hostname=\"\" #主机名 ok report_OSRelease=\"\" #发行版本 ok report_Kernel=\"\" #内核 ok report_Language=\"\" #语言/编码 ok report_LastReboot=\"\" #最近启动时间 ok report_Uptime=\"\" #运行时间（天） ok report_CPUs=\"\" #CPU数量 ok report_CPUType=\"\" #CPU类型 ok report_Arch=\"\" #CPU架构 ok report_MemTotal=\"\" #内存总容量(MB) ok report_MemFree=\"\" #内存剩余(MB) ok report_MemUsedPercent=\"\" #内存使用率% ok report_DiskTotal=\"\" #硬盘总容量(GB) ok report_DiskFree=\"\" #硬盘剩余(GB) ok report_DiskUsedPercent=\"\" #硬盘使用率% ok report_InodeTotal=\"\" #Inode总量 ok report_InodeFree=\"\" #Inode剩余 ok report_InodeUsedPercent=\"\" #Inode使用率 ok report_IP=\"\" #IP地址 ok report_MAC=\"\" #MAC地址 ok report_Gateway=\"\" #默认网关 ok report_DNS=\"\" #DNS ok report_Listen=\"\" #监听 ok report_Selinux=\"\" #Selinux ok report_Firewall=\"\" #防火墙 ok report_USERs=\"\" #用户 ok report_USEREmptyPassword=\"\" #空密码用户 ok report_USERTheSameUID=\"\" #相同ID的用户 ok report_PasswordExpiry=\"\" #密码过期（天） ok report_RootUser=\"\" #root用户 ok report_Sudoers=\"\" #sudo授权 ok report_SSHAuthorized=\"\" #SSH信任主机 ok report_SSHDProtocolVersion=\"\" #SSH协议版本 ok report_SSHDPermitRootLogin=\"\" #允许root远程登录 ok report_DefunctProsess=\"\" #僵尸进程数量 ok report_SelfInitiatedService=\"\" #自启动服务数量 ok report_SelfInitiatedProgram=\"\" #自启动程序数量 ok report_RuningService=\"\" #运行中服务数 ok report_Crontab=\"\" #计划任务数 ok report_Syslog=\"\" #日志服务 ok report_SNMP=\"\" #SNMP OK report_NTP=\"\" #NTP ok report_JDK=\"\" #JDK版本 ok function version(){ echo \"\" echo \"\" echo \"系统巡检脚本：Version $VERSION\" } function getCpuStatus(){ echo \"\" echo \"\" echo \"############################ CPU检查 #############################\" Physical_CPUs=$(grep \"physical id\" /proc/cpuinfo| sort | uniq | wc -l) Virt_CPUs=$(grep \"processor\" /proc/cpuinfo | wc -l) CPU_Kernels=$(grep \"cores\" /proc/cpuinfo|uniq| awk -F ': ' '{print $2}') CPU_Type=$(grep \"model name\" /proc/cpuinfo | awk -F ': ' '{print $2}' | sort | uniq) CPU_Arch=$(uname -m) echo \"物理CPU个数:$Physical_CPUs\" echo \"逻辑CPU个数:$Virt_CPUs\" echo \"每CPU核心数:$CPU_Kernels\" echo \" CPU型号:$CPU_Type\" echo \" CPU架构:$CPU_Arch\" #报表信息 report_CPUs=$Virt_CPUs #CPU数量 report_CPUType=$CPU_Type #CPU类型 report_Arch=$CPU_Arch #CPU架构 } function getMemStatus(){ echo \"\" echo \"\" echo \"############################ 内存检查 ############################\" if [[ $centosVersion \u0026lt; 7 ]];then free -mo else free -h fi #报表信息 MemTotal=$(grep MemTotal /proc/meminfo| awk '{print $2}') #KB MemFree=$(grep MemFree /proc/meminfo| awk '{print $2}') #KB let MemUsed=MemTotal-MemFree MemPercent=$(awk \"BEGIN {if($MemTotal==0){printf 100}else{printf \\\"%.2f\\\",$MemUsed*100/$MemTotal}}\") report_MemTotal=\"$((MemTotal/1024))\"\"MB\" #内存总容量(MB) report_MemFree=\"$((MemFree/1024))\"\"MB\" #内存剩余(MB) report_MemUsedPercent=\"$(awk \"BEGIN {if($MemTotal==0){printf 100}else{printf \\\"%.2f\\\",$MemUsed*100/$MemTotal}}\")\"\"%\" #内存使用率% } function getDiskStatus(){ echo \"\" echo \"\" echo \"############################ 磁盘检查 ############################\" df -hiP | sed 's/Mounted on/Mounted/'\u0026gt; /tmp/inode df -hTP | sed 's/Mounted on/Mounted/'\u0026gt; /tmp/disk join /tmp/disk /tmp/inode | awk '{print $1,$2,\"|\",$3,$4,$5,$6,\"|\",$8,$9,$10,$11,\"|\",$12}'| column -t #报表信息 diskdata=$(df -TP | sed '1d' | awk '$2!=\"tmpfs\"{print}') #KB disktotal=$(echo \"$diskdata\" | awk '{total+=$3}END{print total}') #KB diskused=$(echo \"$diskdata\" | awk '{total+=$4}END{print total}') #KB diskfree=$((disktotal-diskused)) #KB diskusedpercent=$(echo $disktotal $diskused | awk '{if($1==0){printf 100}else{printf \"%.2f\",$2*100/$1}}') inodedata=$(df -iTP | sed '1d' | awk '$2!=\"tmpfs\"{print}') inodetotal=$(echo \"$inodedata\" | awk '{total+=$3}END{print total}') inodeused=$(echo \"$inodedata\" | awk '{total+=$4}END{print total}') inodefree=$((inodetotal-inodeused)) inodeusedpercent=$(echo $inodetotal $inodeused | awk '{if($1==0){printf 100}else{printf \"%.2f\",$2*100/$1}}') report_DiskTotal=$((disktotal/1024/1024))\"GB\" #硬盘总容量(GB) report_DiskFree=$((diskfree/1024/1024))\"GB\" #硬盘剩余(GB) report_DiskUsedPercent=\"$diskusedpercent\"\"%\" #硬盘使用率% report_InodeTotal=$((inodetotal/1000))\"K\" #Inode总量 report_InodeFree=$((inodefree/1000))\"K\" #Inode剩余 report_InodeUsedPercent=\"$inodeusedpercent\"\"%\" #Inode使用率% } function getSystemStatus(){ echo \"\" echo \"\" echo \"############################ 系统检查 ############################\" if [ -e /etc/sysconfig/i18n ];then default_LANG=\"$(grep \"LANG=\" /etc/sysconfig/i18n | grep -v \"^#\" | awk -F '\"' '{print $2}')\" else default_LANG=$LANG fi export LANG=\"en_US.UTF-8\" Release=$(cat /etc/redhat-release 2\u0026gt;/dev/null) Kernel=$(uname -r) OS=$(uname -o) Hostname=$(uname -n) SELinux=$(/usr/sbin/sestatus | grep \"SELinux status: \" | awk '{print $3}') LastReboot=$(who -b | awk '{print $3,$4}') uptime=$(uptime | sed 's/.*up \\([^,]*\\), .*/\\1/') echo \" 系统：$OS\" echo \" 发行版本：$Release\" echo \" 内核：$Kernel\" echo \" 主机名：$Hostname\" echo \" SELinux：$SELinux\" echo \"语言/编码：$default_LANG\" echo \" 当前时间：$(date +'%F %T')\" echo \" 最后启动：$LastReboot\" echo \" 运行时间：$uptime\" #报表信息 report_DateTime=$(date +\"%F %T\") #日期 report_Hostname=\"$Hostname\" #主机名 report_OSRelease=\"$Release\" #发行版本 report_Kernel=\"$Kernel\" #内核 report_Language=\"$default_LANG\" #语言/编码 report_LastReboot=\"$LastReboot\" #最近启动时间 report_Uptime=\"$uptime\" #运行时间（天） report_Selinux=\"$SELinux\" export LANG=\"$default_LANG\" } function getServiceStatus(){ echo \"\" echo \"\" echo \"############################ 服务检查 ############################\" echo \"\" if [[ $centosVersion \u0026gt; 7 ]];then conf=$(systemctl list-unit-files --type=service --state=enabled --no-pager | grep \"enabled\") process=$(systemctl list-units --type=service --state=running --no-pager | grep \".service\") #报表信息 report_SelfInitiatedService=\"$(echo \"$conf\" | wc -l)\" #自启动服务数量 report_RuningService=\"$(echo \"$process\" | wc -l)\" #运行中服务数量 else conf=$(/sbin/chkconfig | grep -E \":on|:启用\") process=$(/sbin/service --status-all 2\u0026gt;/dev/null | grep -E \"is running|正在运行\") #报表信息 report_SelfInitiatedService=\"$(echo \"$conf\" | wc -l)\" #自启动服务数量 report_RuningService=\"$(echo \"$process\" | wc -l)\" #运行中服务数量 fi echo \"服务配置\" echo \"--------\" echo \"$conf\" | column -t echo \"\" echo \"正在运行的服务\" echo \"--------------\" echo \"$process\" } function getAutoStartStatus(){ echo \"\" echo \"\" echo \"############################ 自启动检查 ##########################\" conf=$(grep -v \"^#\" /etc/rc.d/rc.local| sed '/^$/d') echo \"$conf\" #报表信息 report_SelfInitiatedProgram=\"$(echo $conf | wc -l)\" #自启动程序数量 } function getLoginStatus(){ echo \"\" echo \"\" echo \"############################ 登录检查 ############################\" last | head } function getNetworkStatus(){ echo \"\" echo \"\" echo \"############################ 网络检查 ############################\" if [[ $centosVersion \u0026lt; 7 ]];then /sbin/ifconfig -a | grep -v packets | grep -v collisions | grep -v inet6 else #ip a for i in $(ip link | grep BROADCAST | awk -F: '{print $2}');do ip add show $i | grep -E \"BROADCAST|global\"| awk '{print $2}' | tr '\\n' ' ' ;echo \"\" ;done fi GATEWAY=$(ip route | grep default | awk '{print $3}') DNS=$(grep nameserver /etc/resolv.conf| grep -v \"#\" | awk '{print $2}' | tr '\\n' ',' | sed 's/,$//') echo \"\" echo \"网关：$GATEWAY \" echo \" DNS：$DNS\" #报表信息 IP=$(ip -f inet addr | grep -v 127.0.0.1 | grep inet | awk '{print $NF,$2}' | tr '\\n' ',' | sed 's/,$//') MAC=$(ip link | grep -v \"LOOPBACK\\|loopback\" | awk '{print $2}' | sed 'N;s/\\n//' | tr '\\n' ',' | sed 's/,$//') report_IP=\"$IP\" #IP地址 report_MAC=$MAC #MAC地址 report_Gateway=\"$GATEWAY\" #默认网关 report_DNS=\"$DNS\" #DNS } function getListenStatus(){ echo \"\" echo \"\" echo \"############################ 监听检查 ############################\" TCPListen=$(ss -ntul | column -t) echo \"$TCPListen\" #报表信息 report_Listen=\"$(echo \"$TCPListen\"| sed '1d' | awk '/tcp/ {print $5}' | awk -F: '{print $NF}' | sort | uniq | wc -l)\" } function getCronStatus(){ echo \"\" echo \"\" echo \"############################ 计划任务检查 ########################\" Crontab=0 for shell in $(grep -v \"/sbin/nologin\" /etc/shells);do for user in $(grep \"$shell\" /etc/passwd| awk -F: '{print $1}');do crontab -l -u $user \u0026gt;/dev/null 2\u0026gt;\u00261 status=$? if [ $status -eq 0 ];then echo \"$user\" echo \"--------\" crontab -l -u $user let Crontab=Crontab+$(crontab -l -u $user | wc -l) echo \"\" fi done done #计划任务 find /etc/cron* -type f | xargs -i ls -l {} | column -t let Crontab=Crontab+$(find /etc/cron* -type f | wc -l) #报表信息 report_Crontab=\"$Crontab\" #计划任务数 } function getHowLongAgo(){ # 计算一个时间戳离现在有多久了 datetime=\"$*\" [ -z \"$datetime\" ] \u0026\u0026 echo \"错误的参数：getHowLongAgo() $*\" Timestamp=$(date +%s -d \"$datetime\") #转化为时间戳 Now_Timestamp=$(date +%s) Difference_Timestamp=$(($Now_Timestamp-$Timestamp)) days=0;hours=0;minutes=0; sec_in_day=$((60*60*24)); sec_in_hour=$((60*60)); sec_in_minute=60 while (( $(($Difference_Timestamp-$sec_in_day)) \u0026gt; 1 )) do let Difference_Timestamp=Difference_Timestamp-sec_in_day let days++ done while (( $(($Difference_Timestamp-$sec_in_hour)) \u0026gt; 1 )) do let Difference_Timestamp=Difference_Timestamp-sec_in_hour let hours++ done echo \"$days 天 $hours 小时前\" } function getUserLastLogin(){ # 获取用户最近一次登录的时间，含年份 # 很遗憾last命令不支持显示年份，只有\"last -t YYYYMMDDHHMMSS\"表示某个时间之间的登录，我 # 们只能用最笨的方法了，对比今天之前和今年元旦之前（或者去年之前和前年之前……）某个用户 # 登录次数，如果登录统计次数有变化，则说明最近一次登录是今年。 username=$1 : ${username:=\"`whoami`\"} thisYear=$(date +%Y) oldesYear=$(last | tail -n1 | awk '{print $NF}') while(( $thisYear \u0026gt;= $oldesYear));do loginBeforeToday=$(last $username | grep $username | wc -l) loginBeforeNewYearsDayOfThisYear=$(last $username -t $thisYear\"0101000000\" | grep $username | wc -l) if [ $loginBeforeToday -eq 0 ];then echo \"从未登录过\" break elif [ $loginBeforeToday -gt $loginBeforeNewYearsDayOfThisYear ];then lastDateTime=$(last -i $username | head -n1 | awk '{for(i=4;i\u0026lt;(NF-2);i++)printf\"%s \",$i}')\" $thisYear\" #格式如: Sat Nov 2 20:33 2015 lastDateTime=$(date \"+%Y-%m-%d %H:%M:%S\" -d \"$lastDateTime\") echo \"$lastDateTime\" break else thisYear=$((thisYear-1)) fi done } function getUserStatus(){ echo \"\" echo \"\" echo \"############################ 用户检查 ############################\" #/etc/passwd 最后修改时间 pwdfile=\"$(cat /etc/passwd)\" Modify=$(stat /etc/passwd | grep Modify | tr '.' ' ' | awk '{print $2,$3}') echo \"/etc/passwd 最后修改时间：$Modify ($(getHowLongAgo $Modify))\" echo \"\" echo \"特权用户\" echo \"--------\" RootUser=\"\" for user in $(echo \"$pwdfile\" | awk -F: '{print $1}');do if [ $(id -u $user) -eq 0 ];then echo \"$user\" RootUser=\"$RootUser,$user\" fi done echo \"\" echo \"用户列表\" echo \"--------\" USERs=0 echo \"$( echo \"用户名 UID GID HOME SHELL 最后一次登录\" for shell in $(grep -v \"/sbin/nologin\" /etc/shells);do for username in $(grep \"$shell\" /etc/passwd| awk -F: '{print $1}');do userLastLogin=\"$(getUserLastLogin $username)\" echo \"$pwdfile\" | grep -w \"$username\" |grep -w \"$shell\"| awk -F: -v lastlogin=\"$(echo \"$userLastLogin\" | tr ' ' '_')\" '{print $1,$3,$4,$6,$7,lastlogin}' done let USERs=USERs+$(echo \"$pwdfile\" | grep \"$shell\"| wc -l) done )\" | column -t echo \"\" echo \"空密码用户\" echo \"----------\" USEREmptyPassword=\"\" for shell in $(grep -v \"/sbin/nologin\" /etc/shells);do for user in $(echo \"$pwdfile\" | grep \"$shell\" | cut -d: -f1);do r=$(awk -F: '$2==\"!!\"{print $1}' /etc/shadow | grep -w $user) if [ ! -z $r ];then echo $r USEREmptyPassword=\"$USEREmptyPassword,\"$r fi done done echo \"\" echo \"相同ID的用户\" echo \"------------\" USERTheSameUID=\"\" UIDs=$(cut -d: -f3 /etc/passwd | sort | uniq -c | awk '$1\u0026gt;1{print $2}') for uid in $UIDs;do echo -n \"$uid\"; USERTheSameUID=\"$uid\" r=$(awk -F: 'ORS=\"\";$3=='\"$uid\"'{print \":\",$1}' /etc/passwd) echo \"$r\" echo \"\" USERTheSameUID=\"$USERTheSameUID $r,\" done #报表信息 report_USERs=\"$USERs\" #用户 report_USEREmptyPassword=$(echo $USEREmptyPassword | sed 's/^,//') report_USERTheSameUID=$(echo $USERTheSameUID | sed 's/,$//') report_RootUser=$(echo $RootUser | sed 's/^,//') #特权用户 } function getPasswordStatus { echo \"\" echo \"\" echo \"############################ 密码检查 ############################\" pwdfile=\"$(cat /etc/passwd)\" echo \"\" echo \"密码过期检查\" echo \"------------\" result=\"\" for shell in $(grep -v \"/sbin/nologin\" /etc/shells);do for user in $(echo \"$pwdfile\" | grep \"$shell\" | cut -d: -f1);do get_expiry_date=$(/usr/bin/chage -l $user | grep 'Password expires' | cut -d: -f2) if [[ $get_expiry_date = ' never' || $get_expiry_date = 'never' ]];then printf \"%-15s 永不过期\\n\" $user result=\"$result,$user:never\" else password_expiry_date=$(date -d \"$get_expiry_date\" \"+%s\") current_date=$(date \"+%s\") diff=$(($password_expiry_date-$current_date)) let DAYS=$(($diff/(60*60*24))) printf \"%-15s %s天后过期\\n\" $user $DAYS result=\"$result,$user:$DAYS days\" fi done done report_PasswordExpiry=$(echo $result | sed 's/^,//') echo \"\" echo \"密码策略检查\" echo \"------------\" grep -v \"#\" /etc/login.defs | grep -E \"PASS_MAX_DAYS|PASS_MIN_DAYS|PASS_MIN_LEN|PASS_WARN_AGE\" } function getSudoersStatus(){ echo \"\" echo \"\" echo \"############################ Sudoers检查 #########################\" conf=$(grep -v \"^#\" /etc/sudoers| grep -v \"^Defaults\" | sed '/^$/d') echo \"$conf\" echo \"\" #报表信息 report_Sudoers=\"$(echo $conf | wc -l)\" } function getInstalledStatus(){ echo \"\" echo \"\" echo \"############################ 软件检查 ############################\" rpm -qa --last | head | column -t } function getProcessStatus(){ echo \"\" echo \"\" echo \"############################ 进程检查 ############################\" if [ $(ps -ef | grep defunct | grep -v grep | wc -l) -ge 1 ];then echo \"\" echo \"僵尸进程\"; echo \"--------\" ps -ef | head -n1 ps -ef | grep defunct | grep -v grep fi echo \"\" echo \"内存占用TOP10\" echo \"-------------\" echo -e \"PID %MEM RSS COMMAND $(ps aux | awk '{print $2, $4, $6, $11}' | sort -k3rn | head -n 10 )\"| column -t echo \"\" echo \"CPU占用TOP10\" echo \"------------\" top b -n1 | head -17 | tail -11 #报表信息 report_DefunctProsess=\"$(ps -ef | grep defunct | grep -v grep|wc -l)\" } function getJDKStatus(){ echo \"\" echo \"\" echo \"############################ JDK检查 #############################\" java -version 2\u0026gt;/dev/null if [ $? -eq 0 ];then java -version 2\u0026gt;\u00261 fi echo \"JAVA_HOME=\\\"$JAVA_HOME\\\"\" #报表信息 report_JDK=\"$(java -version 2\u0026gt;\u00261 | grep version | awk '{print $1,$3}' | tr -d '\"')\" } function getSyslogStatus(){ echo \"\" echo \"\" echo \"############################ syslog检查 ##########################\" echo \"服务状态：$(getState rsyslog)\" echo \"\" echo \"/etc/rsyslog.conf\" echo \"-----------------\" cat /etc/rsyslog.conf 2\u0026gt;/dev/null | grep -v \"^#\" | grep -v \"^\\\\$\" | sed '/^$/d' | column -t #报表信息 report_Syslog=\"$(getState rsyslog)\" } function getFirewallStatus(){ echo \"\" echo \"\" echo \"############################ 防火墙检查 ##########################\" #防火墙状态，策略等 if [[ $centosVersion \u0026lt; 7 ]];then /etc/init.d/iptables status \u0026gt;/dev/null 2\u0026gt;\u00261 status=$? if [ $status -eq 0 ];then s=\"active\" elif [ $status -eq 3 ];then s=\"inactive\" elif [ $status -eq 4 ];then s=\"permission denied\" else s=\"unknown\" fi else s=\"$(getState iptables)\" fi echo \"iptables: $s\" echo \"\" echo \"/etc/sysconfig/iptables\" echo \"-----------------------\" cat /etc/sysconfig/iptables 2\u0026gt;/dev/null #报表信息 report_Firewall=\"$s\" } function getSNMPStatus(){ #SNMP服务状态，配置等 echo \"\" echo \"\" echo \"############################ SNMP检查 ############################\" status=\"$(getState snmpd)\" echo \"服务状态：$status\" echo \"\" if [ -e /etc/snmp/snmpd.conf ];then echo \"/etc/snmp/snmpd.conf\" echo \"--------------------\" cat /etc/snmp/snmpd.conf 2\u0026gt;/dev/null | grep -v \"^#\" | sed '/^$/d' fi #报表信息 report_SNMP=\"$(getState snmpd)\" } function getState(){ if [[ $centosVersion \u0026lt; 7 ]];then if [ -e \"/etc/init.d/$1\" ];then if [ `/etc/init.d/$1 status 2\u0026gt;/dev/null | grep -E \"is running|正在运行\" | wc -l` -ge 1 ];then r=\"active\" else r=\"inactive\" fi else r=\"unknown\" fi else #CentOS 7+ r=\"$(systemctl is-active $1 2\u0026gt;\u00261)\" fi echo \"$r\" } function getSSHStatus(){ #SSHD服务状态，配置,受信任主机等 echo \"\" echo \"\" echo \"############################ SSH检查 #############################\" #检查受信任主机 pwdfile=\"$(cat /etc/passwd)\" echo \"服务状态：$(getState sshd)\" Protocol_Version=$(cat /etc/ssh/sshd_config | grep Protocol | awk '{print $2}') echo \"SSH协议版本：$Protocol_Version\" echo \"\" echo \"信任主机\" echo \"--------\" authorized=0 for user in $(echo \"$pwdfile\" | grep /bin/bash | awk -F: '{print $1}');do authorize_file=$(echo \"$pwdfile\" | grep -w $user | awk -F: '{printf $6\"/.ssh/authorized_keys\"}') authorized_host=$(cat $authorize_file 2\u0026gt;/dev/null | awk '{print $3}' | tr '\\n' ',' | sed 's/,$//') if [ ! -z $authorized_host ];then echo \"$user 授权 \\\"$authorized_host\\\" 无密码访问\" fi let authorized=authorized+$(cat $authorize_file 2\u0026gt;/dev/null | awk '{print $3}'|wc -l) done echo \"\" echo \"是否允许ROOT远程登录\" echo \"--------------------\" config=$(cat /etc/ssh/sshd_config | grep PermitRootLogin) firstChar=${config:0:1} if [ $firstChar == \"#\" ];then PermitRootLogin=\"yes\" #默认是允许ROOT远程登录的 else PermitRootLogin=$(echo $config | awk '{print $2}') fi echo \"PermitRootLogin $PermitRootLogin\" echo \"\" echo \"/etc/ssh/sshd_config\" echo \"--------------------\" cat /etc/ssh/sshd_config | grep -v \"^#\" | sed '/^$/d' #报表信息 report_SSHAuthorized=\"$authorized\" #SSH信任主机 report_SSHDProtocolVersion=\"$Protocol_Version\" #SSH协议版本 report_SSHDPermitRootLogin=\"$PermitRootLogin\" #允许root远程登录 } function getNTPStatus(){ #NTP服务状态，当前时间，配置等 echo \"\" echo \"\" echo \"############################ NTP检查 #############################\" if [ -e /etc/ntp.conf ];then echo \"服务状态：$(getState ntpd)\" echo \"\" echo \"/etc/ntp.conf\" echo \"-------------\" cat /etc/ntp.conf 2\u0026gt;/dev/null | grep -v \"^#\" | sed '/^$/d' fi #报表信息 report_NTP=\"$(getState ntpd)\" } function uploadHostDailyCheckReport(){ json=\"{ \\\"DateTime\\\":\\\"$report_DateTime\\\", \\\"Hostname\\\":\\\"$report_Hostname\\\", \\\"OSRelease\\\":\\\"$report_OSRelease\\\", \\\"Kernel\\\":\\\"$report_Kernel\\\", \\\"Language\\\":\\\"$report_Language\\\", \\\"LastReboot\\\":\\\"$report_LastReboot\\\", \\\"Uptime\\\":\\\"$report_Uptime\\\", \\\"CPUs\\\":\\\"$report_CPUs\\\", \\\"CPUType\\\":\\\"$report_CPUType\\\", \\\"Arch\\\":\\\"$report_Arch\\\", \\\"MemTotal\\\":\\\"$report_MemTotal\\\", \\\"MemFree\\\":\\\"$report_MemFree\\\", \\\"MemUsedPercent\\\":\\\"$report_MemUsedPercent\\\", \\\"DiskTotal\\\":\\\"$report_DiskTotal\\\", \\\"DiskFree\\\":\\\"$report_DiskFree\\\", \\\"DiskUsedPercent\\\":\\\"$report_DiskUsedPercent\\\", \\\"InodeTotal\\\":\\\"$report_InodeTotal\\\", \\\"InodeFree\\\":\\\"$report_InodeFree\\\", \\\"InodeUsedPercent\\\":\\\"$report_InodeUsedPercent\\\", \\\"IP\\\":\\\"$report_IP\\\", \\\"MAC\\\":\\\"$report_MAC\\\", \\\"Gateway\\\":\\\"$report_Gateway\\\", \\\"DNS\\\":\\\"$report_DNS\\\", \\\"Listen\\\":\\\"$report_Listen\\\", \\\"Selinux\\\":\\\"$report_Selinux\\\", \\\"Firewall\\\":\\\"$report_Firewall\\\", \\\"USERs\\\":\\\"$report_USERs\\\", \\\"USEREmptyPassword\\\":\\\"$report_USEREmptyPassword\\\", \\\"USERTheSameUID\\\":\\\"$report_USERTheSameUID\\\", \\\"PasswordExpiry\\\":\\\"$report_PasswordExpiry\\\", \\\"RootUser\\\":\\\"$report_RootUser\\\", \\\"Sudoers\\\":\\\"$report_Sudoers\\\", \\\"SSHAuthorized\\\":\\\"$report_SSHAuthorized\\\", \\\"SSHDProtocolVersion\\\":\\\"$report_SSHDProtocolVersion\\\", \\\"SSHDPermitRootLogin\\\":\\\"$report_SSHDPermitRootLogin\\\", \\\"DefunctProsess\\\":\\\"$report_DefunctProsess\\\", \\\"SelfInitiatedService\\\":\\\"$report_SelfInitiatedService\\\", \\\"SelfInitiatedProgram\\\":\\\"$report_SelfInitiatedProgram\\\", \\\"RuningService\\\":\\\"$report_RuningService\\\", \\\"Crontab\\\":\\\"$report_Crontab\\\", \\\"Syslog\\\":\\\"$report_Syslog\\\", \\\"SNMP\\\":\\\"$report_SNMP\\\", \\\"NTP\\\":\\\"$report_NTP\\\", \\\"JDK\\\":\\\"$report_JDK\\\" }\" #echo \"$json\" curl -l -H \"Content-type: application/json\" -X POST -d \"$json\" \"$uploadHostDailyCheckReportApi\" 2\u0026gt;/dev/null } function getchage_file_24h() { echo \"############################ 文件检查 #############################\" check2=$(find / -name '*.sh' -mtime -1) check21=$(find / -name '*.asp' -mtime -1) check22=$(find / -name '*.php' -mtime -1) check23=$(find / -name '*.aspx' -mtime -1) check24=$(find / -name '*.jsp' -mtime -1) check25=$(find / -name '*.html' -mtime -1) check26=$(find / -name '*.htm' -mtime -1) check9=$(find / -name core -exec ls -l {} \\;) check10=$(cat /etc/crontab) check12=$(ls -alt /usr/bin | head -10) cat \u0026lt;\u0026lt;EOF ############################查看所有被修改过的文件返回最近24小时内的############################ ${check2} ${check21} ${check22} ${check23} ${check24} ${check25} ${check26} ${line} ############################检查定时文件的完整性############################ ${check10} ${line} ############################查看系统命令是否被替换############################ ${check12} ${line} EOF } function check(){ version getSystemStatus getCpuStatus getMemStatus getDiskStatus getNetworkStatus getListenStatus getProcessStatus getServiceStatus getAutoStartStatus getLoginStatus getCronStatus getUserStatus getPasswordStatus getSudoersStatus getJDKStatus getFirewallStatus getSSHStatus getSyslogStatus getSNMPStatus getNTPStatus getInstalledStatus getchage_file_24h } #执行检查并保存检查结果 check \u0026gt; $RESULTFILE echo \"检查结果：$RESULTFILE\" echo -e \"`date \"+%Y-%m-%d %H:%M:%S\"` 阿里云PHP企业平台巡检报告\" | mail -a $RESULTFILE -s \"阿里云PHP企业平台巡检报告\" h@163.com","date":"2020年33月16日","externalUrl":null,"permalink":"/994.html","section":"Posts","summary":"","title":"Linux 系统日常巡检脚本","type":"post"},{"content":" 邮箱一键配置脚本，只需要改自己的信息就可以啦，特别方便，实用！\n#!/bin/bash # @Author: HanWei # @Date: 2019-12-05 09:27:36 # @Last Modified by: HanWei # @Last Modified time: 2019-12-06 10:49:45 # @E-mail: han_wei_95@163.com #安装对应的数字证书：这里请求安装网易163邮箱数字证书 mkdir -p /root/.certs/ #向163请求证书 echo -n | openssl s_client -connect smtp.163.com:465 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' \u0026gt; ~/.certs/163.crt #增加一个证书到证书数据库中 certutil -A -n \"GeoTrust SSL CA\" -t \"C,,\" -d ~/.certs -i ~/.certs/163.crt #再增加一个证书到证书数据库中 certutil -A -n \"GeoTrust Global CA\" -t \"C,,\" -d ~/.certs -i ~/.certs/163.crt certutil -L -d /root/.certs cd /root/.certs/ certutil -A -n \"GeoTrust SSL CA - G3\" -t \"Pu,Pu,Pu\" -d ./ -i 163.crt #配置客户端信息 echo \" set from=han_@163.com #开启SMTP服务的邮箱 set smtp=smtps://smtp.163.com:465 set smtp-auth-user=ei_95@163.com set smtp-auth-password=hcom #邮箱的授权码 set smtp-auth=login set ssl-verify=ignore set nss-config-dir=/root/.certs #证书所在目录 \" \u0026gt;\u0026gt; /etc/mail.rc #测试成功信息 echo \"恭喜您！您已成功配置邮箱，现在可以正常收件！\" | mail -s \"平台邮箱配置通知\" 5@163.com ","date":"2020年33月16日","externalUrl":null,"permalink":"/992.html","section":"Posts","summary":"","title":"怎么配置mail邮箱地址 实用脚本","type":"post"},{"content":"在网上看了好多教程，太乱了、发送附还要安装这个那个的安装包，太烦了\n事实上mail命令就可以实现啊 只需要加-a参数接文件就ok了嘛，哪有那么麻烦\necho -e “邮件正文部分” | mail -a 附件路径 -s 主题 邮箱地址\n这样就可以发送了\n下面是邮箱配置脚本\n#!/bin/bash #\u0026nbsp;@Author:\u0026nbsp;HanWei #\u0026nbsp;@Date:\u0026nbsp;\u0026nbsp;\u0026nbsp;2019-12-05\u0026nbsp;09:27:36 #\u0026nbsp;@Last\u0026nbsp;Modified\u0026nbsp;by:\u0026nbsp;\u0026nbsp;\u0026nbsp;HanWei #\u0026nbsp;@Last\u0026nbsp;Modified\u0026nbsp;time:\u0026nbsp;2019-12-06\u0026nbsp;10:49:45 #\u0026nbsp;@E-mail:\u0026nbsp;han_wei_95@163.com #安装对应的数字证书：这里请求安装网易163邮箱数字证书 mkdir\u0026nbsp;-p\u0026nbsp;/root/.certs/ #向163请求证书 echo\u0026nbsp;-n\u0026nbsp;|\u0026nbsp;openssl\u0026nbsp;s_client\u0026nbsp;-connect\u0026nbsp;smtp.163.com:465\u0026nbsp;|\u0026nbsp;sed\u0026nbsp;-ne\u0026nbsp;\u0026#39;/-BEGIN\u0026nbsp;CERTIFICATE-/,/-END\u0026nbsp;CERTIFICATE-/p\u0026#39;\u0026nbsp;\u0026gt;\u0026nbsp;~/.certs/163.crt #增加一个证书到证书数据库中 certutil\u0026nbsp;-A\u0026nbsp;-n\u0026nbsp;\"GeoTrust\u0026nbsp;SSL\u0026nbsp;CA\"\u0026nbsp;-t\u0026nbsp;\"C,,\"\u0026nbsp;-d\u0026nbsp;~/.certs\u0026nbsp;-i\u0026nbsp;~/.certs/163.crt #再增加一个证书到证书数据库中 certutil\u0026nbsp;-A\u0026nbsp;-n\u0026nbsp;\"GeoTrust\u0026nbsp;Global\u0026nbsp;CA\"\u0026nbsp;-t\u0026nbsp;\"C,,\"\u0026nbsp;-d\u0026nbsp;~/.certs\u0026nbsp;-i\u0026nbsp;~/.certs/163.crt certutil\u0026nbsp;-L\u0026nbsp;-d\u0026nbsp;/root/.certs cd\u0026nbsp;/root/.certs/ certutil\u0026nbsp;-A\u0026nbsp;-n\u0026nbsp;\"GeoTrust\u0026nbsp;SSL\u0026nbsp;CA\u0026nbsp;-\u0026nbsp;G3\"\u0026nbsp;-t\u0026nbsp;\"Pu,Pu,Pu\"\u0026nbsp;-d\u0026nbsp;./\u0026nbsp;-i\u0026nbsp;163.crt #配置客户端信息 echo\u0026nbsp;\" set\u0026nbsp;from=95@163.com\u0026nbsp;\u0026nbsp;#开启SMTP服务的邮箱 set\u0026nbsp;smtp=smtps://smtp.163.com:465 set\u0026nbsp;smtp-auth-user=95@163.com set\u0026nbsp;smtp-auth-password=h63com\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;#邮箱的授权码 set\u0026nbsp;smtp-auth=login set\u0026nbsp;ssl-verify=ignore set\u0026nbsp;nss-config-dir=/root/.certs\u0026nbsp;\u0026nbsp;\u0026nbsp;#证书所在目录 \"\u0026nbsp;\u0026gt;\u0026gt;\u0026nbsp;/etc/mail.rc #测试成功信息 echo\u0026nbsp;\"恭喜您！您已成功配置邮箱，现在可以正常收件！\"\u0026nbsp;|\u0026nbsp;mail\u0026nbsp;-s\u0026nbsp;\"PHP党建平台邮箱配置通知\"\u0026nbsp;han_wei_95@163.com","date":"2020年33月16日","externalUrl":null,"permalink":"/990.html","section":"Posts","summary":"","title":"mail 命令发送附件 Linux 亲测简单实用","type":"post"},{"content":"配置tomcat的https访问时，将原来的http注释掉，然后换成下面的代码就行了\n\u0026lt;Connector\u0026nbsp;port=\"443\" \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;protocol=\"HTTP/1.1\" \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;SSLEnabled=\"true\" \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;scheme=\"https\" \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;secure=\"true\" \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;keystoreFile=\"/usr/local/tomcat_jqt/cert/jqt.oppo.com.cn.pfx\"\u0026nbsp;#证书名称前需加上证书的绝对路径 \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;keystoreType=\"PKCS12\" \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;keystorePass=\"lpmduVEW\"\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;clientAuth=\"false\" \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;SSLProtocol=\"TLSv1+TLSv1.1+TLSv1.2\" \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;ciphers=\"TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256\"/\u0026gt;","date":"2020年33月13日","externalUrl":null,"permalink":"/983.html","section":"Posts","summary":"","title":"Tomcat配置https证书","type":"post"},{"content":"","date":"2020年33月13日","externalUrl":null,"permalink":"/tags/shell/","section":"标签","summary":"","title":"Shell","type":"tags"},{"content":"这里介绍了shell脚本实现的网站日志分析统计，可以统计9种数据，可以用来统计每天的访问日志，并发送到电子邮箱，方便每天了解网站情况。需要的朋友可以参考下\n脚本统计了：\n1、总访问量\n2、总带宽\n3、独立访客量\n4、访问IP统计\n5、访问url统计\n6、来源统计\n7、404统计\n8、搜索引擎访问统计(谷歌，百度)\n9、搜索引擎来源统计(谷歌，百度)\n#!/bin/bash log_path=/www/wwwlogs/112.126.61.194.log domain=pythondesign.cn email=hw226234@126.com # 报告生成时间： maketime=`date +%Y-%m-%d %H:%M` logdate=`date -d yesterday +%Y-%m-%d` # 总访问量: total_visit=`wc -l ${log_path} | awk \u0026#039;{print $1}\u0026#039;` # 总带宽 total_bandwidth=`awk -v total=0 \u0026#039;{total+=$10}END{print total/1024/1024}\u0026#039; ${log_path}` # 独立访客 total_unique=`awk \u0026#039;{ip[$1]++}END{print asort(ip)}\u0026#039; ${log_path}` # 访问IP统计 ip_pv=`awk \u0026#039;{ip[$1]++}END{for (k in ip){print ip[k],k}}\u0026#039; ${log_path} | sort -rn | head -20` # 访问url统计 url_num=`awk \u0026#039;{url[$7]++}END{for (k in url){print url[k],k}}\u0026#039; ${log_path} | sort -rn | head -20` # 来源页面统计 referer=`awk -v domain=$domain \u0026#039;$11 !~ /http:\\/\\/[^/]*\u0026#039;$domain\u0026#039;/{url[$11]++}END{for (k in url){print url[k],k}}\u0026#039; ${log_path} | sort -rn | head -20` # 404统计 notfound=`awk \u0026#039;$9 == 404 {url[$7]++}END{for (k in url){print url[k],k}}\u0026#039; ${log_path} | sort -rn | head -20` # 蜘蛛统计 spider=`awk -F\u0026#039;\u0026#039; \u0026#039;$6 ~ /Baiduspider/ {spider[baiduspider]++} $6 ~ /Googlebot/ {spider[googlebot]++}END{for (k in spider){print k,spider[k]}}\u0026#039; ${log_path}` # 搜索引擎来源统计 search=`awk -F\u0026#039;\u0026#039; \u0026#039;$4 ~ /http:\\/\\/www\\.baidu\\.com/ {search[baidu_search]++} $4 ~ /http:\\/\\/www\\.google\\.com/ {search[google_search]++}END{for (k in search){print k,search[k]}}\u0026#039; ${log_path}` # 报告输出： echo -e 概况\\n报告生成时间：${maketime}\\n总访问量:${total_visit}\\n总带宽:${total_bandwidth}M\\n独立访客:${total_unique}\\n\\n访问IP统计\\n${ip_pv}\\n\\n访问url统计\\n${url_num}\\n\\n来源页面统计\\n${referer}\\n\\n404统计\\n${notfound}\\n\\n蜘蛛统计\\n${spider}\\n\\n搜索引擎来源统计\\n${search} | mail -s $domain $logdate log statistics ${email}","date":"2020年33月13日","externalUrl":null,"permalink":"/979.html","section":"Posts","summary":"","title":"Shell脚本统计网站访问信息---邮件报告管用","type":"post"},{"content":"登录时的PAM验证机制流程如下\n第一阶段：验证阶段\n1.经过pam_securetty.so判断，看用户是什么，如果是root，读取/etc/\nsecuretty的配置\n2.经过pam_env.so配置额外的环境变量\n3.透过pam_unix.so验证口令\n4.3验证不通过则pam_deny.so判断UID是不是大于500.小于500则返回失败\n5.由pam_deny.so拒绝连接\n第二阶段：授权阶段\n先以 pam_nologin.so 判断 /etc/nologin 是否存在，若存在则不许一般使用者登陆； 以 pam_unix 进行账号管理， pam_succeed_if.so 判断 UID 是否小于 500 ，若小于 500 则不记录登录信息。 最后以 pam_permit.so 允许该账号登陆。 第三阶段：口令阶段\n先以 pam_cracklib.so 配置口令仅能尝试错误 3 次； 接下来以pam_unix.so 透过 md5, shadow 等功能进行口令检验，若通过则回报 login 程序，若不通过则 以 pam_deny.so 拒绝登陆。 第四阶段：会议阶段\n先以 pam_selinux.so 暂时关闭 SELinux； 使用 pam_limits.so 配置好用户能够操作的系统资源； 登陆成功后开始记录相关信息在登录文件中； 以 pam_loginuid.so 规范不同的 UID 权限； 开启 pam_selinux.so 的功能。 \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;总之，就是依据验证类别 (type) 来看，然后先由 login 的配置值去查阅，如果出现『 include system-auth 』就转到 system-auth 文件中的相同类别，去取得额外的验证流程就是了。然后再到下一个验证类别，最终将所有的验证跑完！就结束这次的 PAM 验证啦！ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;经过这样的验证流程，现在知道为啥 /etc/nologin 存在会有问题，也会知道为何你使用一些远程联机机制时，老是无法使用 root 登陆的问题了吧？没错！这都是 PAM 模块提供的功能啦！ 例题：\n为什么 root 无法以 telnet 直接登陆系统，但是却能够使用 ssh 直接登陆？\n答：一般来说， telnet 会引用 login 的 PAM 模块，而 login 的验证阶段会有 /etc/securetty 的限制！由于远程联机属于 pts/n (n 为数字) 的动态终端机接口装置名称，并没有写入到 /etc/securetty ，因此 root 无法以 telnet 登陆远程主机。至于 ssh 使用的是 /etc/pam.d/sshd 这个模块，你可以查阅一下该模块，由于该模块的验证阶段并没有加入 pam_securetty ，因此就没有 /etc/securetty 的限制！故可以从远程直接联机到服务器端。\n","date":"2020年33月11日","externalUrl":null,"permalink":"/959.html","section":"Posts","summary":"","title":"SSH之PAM","type":"post"},{"content":"","date":"2020年33月10日","externalUrl":null,"permalink":"/tags/wordpress/","section":"标签","summary":"","title":"Wordpress","type":"tags"},{"content":" 灯笼：https://zmingcx.com/hanging-lantern.html\u0026nbsp; 梅花：https://zmingcx.com/falling-petals-in-wordpress.html\u0026nbsp; 菜单图片：插件Menu Image\u0026nbsp; 自动添加特色图片：https://zmingcx.com/automatically-adds-the-characteristic-images.html\u0026nbsp; 伪静态代码：https://zmingcx.com/wordpress-page-link-html-suffix.html\u0026nbsp; 自动自定义栏目：https://zmingcx.com/wei-wordpress-wen-zhang-zi-dong-tian-jia-zi-ding-yi-lan-mu.html\u0026nbsp; 前台投稿插件：User Submitted Posts\u0026nbsp; 友情链接插件：https://zmingcx.com/wordpress-plugin-self-links-auto-blogroll.html\u0026nbsp; 批量删除特色图片：https://www.wpdaxue.com/wordpress-bulk-remove-featured-images.html\u0026nbsp; WordPress删除文章时自动删除图片附件：http://www.2zzt.com/jcandcj/9052.html\u0026nbsp; WordPress 去除后台标题中的“—— WordPress：http://www.2zzt.com/jcandcj/7407.html 定时发布插件：DX-auto-publish 一级菜单换行问题：https://www.euweb.cn/archives/4874 导航菜单美化：https://cnitzy.com/11568.html ","date":"2020年33月10日","externalUrl":null,"permalink":"/1335.html","section":"Posts","summary":"","title":"密码保护：网站优化","type":"post"},{"content":"网站的证书需要监控起来避免证书过期影响业务\nshell脚本监控ssl证书到期时间\n#!/bin/bash\n# @Author: HanWei\n# @Date: 2020-03-09 15:50:59\n# @Last Modified by: HanWei\n# @Last Modified time: 2020-03-10 17:49:51\n# @E-mail: han_wei_95@163.com\n#!/bin/bash\n################ Version Info ##################\n# Version: 1.0\n# Attention: 通过域名获取证书的过期时间\n################################################\n# 1.通过域名获取证书的过期时间\n################################################\n#需求： 两个文件，一个存放域名信息，一个是检测脚本 domain_ssl.info文件存放域名:端口 www.baidu.com:443 check.sh为执行检测脚本 # 加载环境变量\n. /etc/profile\n. ~/.bash_profile\n. /etc/bashrc\n# 脚本所在目录即脚本名称\nscript_dir=$( cd \u0026ldquo;$( dirname \u0026ldquo;$0\u0026rdquo; )\u0026rdquo; \u0026amp;\u0026amp; pwd )\nscript_name=$(basename ${0})\nreadFile=\u0026quot;${script_dir}/domain_ssl.info\u0026quot;\ngrep -v \u0026lsquo;^#\u0026rsquo; ${readFile} | while read line;do # 读取存储了需要监测的域名的文件\n# echo \u0026ldquo;${line}\u0026rdquo;\nget_domain=$(echo \u0026ldquo;${line}\u0026rdquo; | awk -F \u0026lsquo;:\u0026rsquo; \u0026lsquo;{print $1}\u0026rsquo;)\nget_port=$(echo \u0026ldquo;${line}\u0026rdquo; | awk -F \u0026lsquo;:\u0026rsquo; \u0026lsquo;{print $2}\u0026rsquo;)\n# echo ${get_domain}\n# echo \u0026ldquo;${get_port}\u0026rdquo;\n# echo \u0026ldquo;======\u0026rdquo;\n# 使用openssl获取域名的证书情况，然后获取其中的到期时间\nEND_TIME=$(echo | openssl s_client -servername ${get_domain} -connect ${get_domain}:${get_port} 2\u0026gt;/dev/null | openssl x509 -noout -dates |grep \u0026lsquo;After\u0026rsquo;| awk -F \u0026lsquo;=\u0026rsquo; \u0026lsquo;{print $2}\u0026rsquo;| awk -F \u0026rsquo; +\u0026rsquo; \u0026lsquo;{print $1,$2,$4 }\u0026rsquo; )\nEND_TIME1=$(date +%s -d \u0026ldquo;$END_TIME\u0026rdquo;) # 将日期转化为时间戳\nNOW_TIME=$(date +%s -d \u0026ldquo;$(date \u0026ldquo;+%Y-%m-%d %H:%M:%S\u0026rdquo;)\u0026rdquo;) # 将当前的日期也转化为时间戳\nRST=$(($(($END_TIME1 - $NOW_TIME))/(60*60*24))) # 到期时间减去目前时间再转化为天数\necho \u0026ldquo;证书有效天数剩余：${RST}\u0026rdquo;\nif [ $RST -lt 30 ];then\necho \u0026ldquo;$get_domain https 证书有效期少于30天，存在风险\u0026rdquo;\nelse\necho \u0026ldquo;$get_domain https 证书有效期在30天以上，放心使用!\u0026rdquo;\nfi\ndone\n","date":"2020年33月10日","externalUrl":null,"permalink":"/1334.html","section":"Posts","summary":"","title":"shell脚本监控ssl证书到期时间","type":"post"},{"content":"","date":"2020年33月9日","externalUrl":null,"permalink":"/tags/docker/","section":"标签","summary":"","title":"Docker","type":"tags"},{"content":"","date":"2020年33月9日","externalUrl":null,"permalink":"/tags/gitlab/","section":"标签","summary":"","title":"Gitlab","type":"tags"},{"content":"","date":"2020年33月9日","externalUrl":null,"permalink":"/tags/k8s/","section":"标签","summary":"","title":"K8s","type":"tags"},{"content":"","date":"2020年33月9日","externalUrl":null,"permalink":"/tags/nginx/","section":"标签","summary":"","title":"Nginx","type":"tags"},{"content":"个人简历\n细心从每一个小细节开始。\nPersonal resume\n基本信息姓 名 ：韩伟\n民 族 ：汉\n电 话 ：13134012623\n邮 箱：han_wei_95@163.com\n住 址：北京市朝阳区\n出生年月：1995年10月\n身 高：175cm\n毕业院校 ：德州学院\n学 历 ：本科\n婚姻状况：未婚\n工作经历\n2019年3月-2019年7月 同方鼎欣科技股份有限公司 运维工程师\n维护公司AIX小型机，Centos等服务器; 维护经销商系统，售后系统，国家交通部系统; 发现及处理系统漏洞; 维护PostgreSQL数据库; 配合外国开发技术人员的业务调试; 处理工作中的各种技术问题; 编写系统汇报文档，漏洞处理文档; 学习python语言及更多运维技术。 负责监控内部服务器运行状态，保证服务器提供不间断服务 编写紧急预案，运维周报； 培训相关人员使用本公司相关系统。 2018年6月-2019年3月 北京镭文科技有限公司 运维工程师\n维护公司阿里云全部服务器及办公设备的正常运转，攥写相关技术文档，运维报告； 参与架构设计，环境部署，架构实施搭建等； 通过zabbix监控发现潜在问题，制定系统调整和优化方案，提高系统的效率和安全性； 配合开发人员进行业务测试及上线； 线上环境的性能调优，如tomcat，mysql，nginx等； 编写常用的shell脚本与crontab结合实现任务自动化，提高运维的工作效率; 每天对阿里云云监控平台和自建zabbix监控数据进行分析； 对阿里云SLB进行监控查看分析，报告整理； 负责管控公司邮箱账户，云账号账户，办公设备采购； 负责搭建维护web服务，如apache、nginx等运行状态; 负责机房网络设备的配置及日常维护巡检，保持设备良好运行； 参与项目的部署，服务的搭建，运维，服务的优化，如Apache的优化； 虚拟化技术的实现，如kvm和docker虚拟化技术； 负责搭建MySQL群集部署，如MySQL主从复制，利用amoeba代理服务器实现读写分离； 使用PXE和Kickstart实现网络无人值守安装系统； 结合Keepalive，LVS及NAS网络存储搭建高可用负载均衡群集。 教育背景\n2015年8月-2019年6月 德州学院 信息与计算科学（本科）\n项目经验\n2019年3月-2019年7月 K8s+docker 运维组 项目介绍： 组成部分：Gitlab+Jenkins+Kubernetes+Docker\n该项目实现了开发人员上传代码到gitlab托管后，通过webhook触发，jenkins自动pull下来,并创建project,从本地镜像仓库拉起容器然后做成镜像上传至registry私有仓库，同时发指令给k8s使其关闭旧容器，然后重新启用新的docker镜像并做成容器对外提供服务。解决了web自动化部署无需开发人员手动将代码pull到服务器上,提高测试和上线的效率\n我的职责 搭建gitlab代码托管平台服务器 搭建jenkins从gitlab上拉取程序代码 搭建K8s实现控制docker容器节点，flannel提供docker网络 搭建maven服务，对程序进行版本控制和管理 2019年3月-2019年7月 Grafana+zabbix监控告警系统 运维组 项目介绍： 项目采用了Grafana与zabbix结合，有着非常漂亮的图表和布局展示，功能齐全的度量仪表盘和图形编辑器，拥有灵活丰富的图形化选项；可以混合多种风格；支持白天和夜间模式；\n我的职责 搭建zabbix监控系统，并与Grafana进行集成，暂时以zabbix作为数据源，为后期接入其他数据源做准备\n2018年11月 - 2019年2月 Linux下微服务架构部署 技术中心 在微服务架构下，主要有三种角色：服务提供者(RPC Server)、服务消费者(RPC Client)和服务注册中心(Registry)，三者的交互，这里的注册中心采用的是高可用形式进行部署，采用服务发现机制。\n主要技术： Eurake的自动发现，服务注册 Redis缓存，减轻服务器负载 Nginx做代理 SLB负载均衡 tomcat作为主要web容器 架构特点: 允许在频繁发布不同服务的同时保持系统其他部分的可用性和稳定性并且每个微服务可由不同团队独立开发，互不影响，加快推出市场的速度。\n责任描述 负责架构的搭建部署，各类软件的安装，前期调试，编写方案实施文档，实施过程，后期测试跟进调整，后期运维，运行状态监控，跟踪，软件调优，配置等\n2018年10月 - 2019年2月 版本控制管理及业务发布系统 技术中心 系统主要组成部分\nJenkins+gitlab+jira+Sonar+Maven+nexus3+redis+confluence 系统版本:Centos7.3\n主要技术： jenkins持续集成，自动发布，备份，回滚 gitlab源码管理，版本控制 confluence企业知识管理与协同作业 jira任务分配没进度跟踪与上报功能 Sonar进行代码质量管理 Maven+nexus3进行私服管理，相关包仓库 责任描述 负责架构的搭建部署，各类软件的安装，前期调试，编写方案实施文档，实施过程，后期测试跟进调整及后期运维管理，账号分配，权限管理等\n2018年6月 - 2018年7月 日志管理与服务监控体系 技术中心 主要组件：ElasticSearch, Logstash, Kibana，redis，zabbix，filebeat\n主要技术： Logstash：收集,解析,过滤日志,配置logstash的input,filter,output等 利用Kibana实现UI界面控制台分析日志 利用redis来缓存数据，减少服务器的负载 Filebeat收集到的日志传给redis，logstash从redis读取日志，并推送到es，最后kibana 可视化查询分析日志 ElasticSearch：查询、分析、存储日志 zabbix服务器运行状况监控，告警等 责任描述 负责架构的搭建部署，各类软件的安装，前期调试，编写方案实施文档，实施过程，后期测试跟进调整及各部件的需求调整。\n专业技能\n个人评价\n本人热爱生活，乐观向上，乐于助人，有团队合作精神，踏实肯干，有冲劲， 对新技术或应用上手快，善于分析问题、解决问题；对互联网保持高度的敏感性和关注度，有很强的产品规划、需求分析、能独立承担WEB项目的管控和服务器运维工作，，善于沟通，贴近用户\n熟练k8s，docker的维护与故障处理 熟练Grafana与其他监控系统的集成 精通shell脚本的编写及初级Python 精通ELK日志分析的部署使用 精通Jenkins持续集成与发布 精通代码版本控制工具：SVN,Gitlab等 精通双机热备高可用技术 精通mysql数据库系统运维 精通zabbix，Nagios，Cacti，阿里云监控等主流监控软件 熟练各路由器，交换机及防火墙的配置管理及监控 熟练使用pxe+kickstart+yum(网络无人值守安装系统) 精通jira,confluence等软件的使用 熟练日志分割技术 ","date":"2020年33月9日","externalUrl":null,"permalink":"/785.html","section":"Posts","summary":"","title":"密码保护：丑照","type":"post"},{"content":"DOClever是一个可视化接口管理工具 ,可以分析接口结构，校验接口正确性， 围绕接口定义文档，通过一系列自动化工具提升我们的协作效率。\nDOClever前后端全部采用了javascript来作为我们的开发语言，前端用的是vue+element UI，后端是express+mongodb，这样的框架集成了高并发，迭代快的特点，保证系统的稳定可靠。\n#!/bin/bash # @Author: HanWei # @Date: 2020-03-06 14:57:43 # @Last Modified by: HanWei # @Last Modified time: 2020-05-22 11:32:43 # @E-mail: han_wei_95@163.com # # # 教程描述：安装DOCLever,需要提前准备安装包 HOME=/www/software DOC_HOME=/www/server function download () { cd /www/package wget https://nodejs.org/dist/v10.13.0/node-v10.13.0-linux-x64.tar.xz wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.4.tgz } function install_node () { cd /www/package tar xvJf node-v10.13.0-linux-x64.tar.xz mv node-v10.13.0-linux-x64 ${HOME}/node cat \u0026gt;\u0026gt; /ete/profile \u0026lt;\u0026lt; EOF export NODE_HOME=${HOME}/node export PATH=$NODE_HOME/bin:$PATH EOF source /etc/profile node -v } function install_mongodb () { cd /www/package tar zxvf mongodb-linux-x86_64-4.0.4.tgz mv mongodb-linux-x86_64-4.0.4 ${HOME}/mongodb cd ${HOME}/mongodb mkdir db mkdir logs cd bin cat \u0026gt;\u0026gt; mongodb.conf \u0026lt;\u0026lt; EOF port=27017 dbpath=/usr/local/mongodb/db logappend=true fork=true logpath=/usr/local/mongodb/logs/mongpdb.log #nohttpinterface=true EOF ./mongod -f mongodb.conf chmod +x /etc/rc.d/rc.local echo \"${HOME}/mongodb/bin/mongod --config ${HOME}/mongodb/bin/mongodb.conf\" \u0026gt;\u0026gt; /etc/rc.d/rc.local } function install_DOC () { echo \"安装前将源码解压到${DOC_HOME}/DOClever/\" node ${DOC_HOME}/DOClever/Server/bin/www npm install -g cnpm --registry=https://registry.npm.taobao.org cnpm install forever -g forever start ${DOC_HOME}/DOClever/Server/bin/www echo \"/www/software/node/bin/forever start ${DOC_HOME}/DOClever/Server/bin/www 2\u0026gt;\u00261 \u0026gt;\u0026gt;/tmp/doclever.log \u0026 \" \u0026gt;\u0026gt; /etc/rc.d/rc.local echo \"这里 /www/DOClever/config.json 可以更改端口号\" } download install_node install_mongodb install_DOC echo \"安装完成\"","date":"2020年33月6日","externalUrl":null,"permalink":"/716.html","section":"Posts","summary":"","title":"Centos下安装部署DOCLever","type":"post"},{"content":"","date":"2020年33月6日","externalUrl":null,"permalink":"/tags/doclever/","section":"标签","summary":"","title":"DOCLever","type":"tags"},{"content":" WordPress 给网站添加备案号 # 这几天在网上搜了好多添加备案信息的，一堆不靠谱的，这里记录一下我的实际成果\n找到WordPress后台–\u0026gt;外观–\u0026gt;主题编辑器–\u0026gt;footer.php 添加\n备案号：蜀ICP备122号-1\n1\n在哪个位置添加呢？？？？\n访问你的网站然后F12查看 代码找到节点，然后在后台 ctrl+F5 在footer.php里面搜索对应的节点 添加到后面即可\n这里我的是\n复制上面的添加部分 把这里的信息变更为你的刷新后就行了\n—————————————\n原文链接：https://blog.csdn.net/qq_42568611/article/details/104677536\n","date":"2020年33月5日","externalUrl":null,"permalink":"/623.html","section":"Posts","summary":"","title":"WordPress 给网站添加备案号","type":"post"},{"content":"******************\\* CentOS 7.5安装 GitLab *****************\n#!/bin/bash\n#相关包安装，\nyum -y install curl policycoreutils\n#这里可以不装，因为之前已经安装过\n#yum -y insyall openssh-server openssh-clients\n#systemctl enable sshd\n#systemctl start sshd\n#邮箱配置可以是别的，可选项\nyum install postfix\nsystemctl enable postfix\nsystemctl start postfix\n#防火墙配置\n#firewall-cmd \u0026ndash;permanent \u0026ndash;add-service=http\n#systemctl reload firewalld\ntouch /etc/yum.repos.d/gitlab_gitlab-ce.repo\necho \u0026quot;\n[gitlab-ce]\nname=gitlab-ce\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7\nrepo_gpgcheck=0\ngpgcheck=0\nenabled=1\ngpgkey=https://packages.gitlab.com/gpg.key\n\u0026quot; \u0026raquo; /etc/yum.repos.d/gitlab_gitlab-ce.repo\nyum -y install gitlab-ce\n# 添加访问的 host，修改/etc/gitlab/gitlab.rb的external_url\n# external_url 修改为自己的地址\nsed -i \u0026rsquo;s/gitlab.example.com/47.94.204.35/g\u0026rsquo; /etc/gitlab/gitlab.rb\n#让配置生效\ngitlab-ctl reconfigure\n#重启gitlab\ngitlab-ctl restart\n##更换仓库存储路径\n#默认时GitLab的仓库存储位置在“/var/opt/gitlab/git-data/repositories”，在实际生产环境中显然我们不会存储在这个位置，一般都会划分一个独立的分区来存储仓库的数据，我这里规划把数据存放在“/data/git-data”目录下。\nmkdir -pv /data/git-data #看看自己的数据盘挂载哪里\n#启用git_data_dirs参数，并修改如下：\n# git_data_dirs({\n# \u0026ldquo;default\u0026rdquo; =\u0026gt; {\n# \u0026ldquo;path\u0026rdquo; =\u0026gt; \u0026ldquo;/data/git-data\u0026rdquo;\n# }\n# })\n# echo \u0026quot;\ngit_data_dirs({\n\u0026ldquo;default\u0026rdquo; =\u0026gt; {\n\u0026ldquo;path\u0026rdquo; =\u0026gt; \u0026ldquo;/data/gitlab\u0026rdquo;\n}\n})\u0026quot; \u0026raquo; /etc/gitlab/gitlab.rb\ngitlab-ctl reconfigure #重新编译gitlab.rb文件，使用做的修改生效\n#重新编辑后，GitLab在仓库目录会自动创建一个repositories文件\n#重启gitlab\ngitlab-ctl restart\n#配置邮件服务器\necho \u0026quot;\ngitlab_rails[\u0026lsquo;smtp_enable\u0026rsquo;] = true\ngitlab_rails[\u0026lsquo;smtp_address\u0026rsquo;] = \u0026ldquo;smtp.163.com\u0026rdquo;\ngitlab_rails[\u0026lsquo;smtp_port\u0026rsquo;] = 465\ngitlab_rails[\u0026lsquo;smtp_user_name\u0026rsquo;] = \u0026ldquo;**@163.com\u0026rdquo;\ngitlab_rails[\u0026lsquo;smtp_password\u0026rsquo;] = \u0026ldquo;hanwei163com\u0026rdquo;\ngitlab_rails[\u0026lsquo;smtp_domain\u0026rsquo;] = \u0026ldquo;192.168.1.98\u0026rdquo;\ngitlab_rails[\u0026lsquo;smtp_authentication\u0026rsquo;] = \u0026ldquo;login\u0026rdquo;\ngitlab_rails[\u0026lsquo;smtp_enable_starttls_auto\u0026rsquo;] = true\ngitlab_rails[\u0026lsquo;smtp_tls\u0026rsquo;] = true\ngitlab_rails[\u0026lsquo;gitlab_email_from\u0026rsquo;] = \u0026lsquo;**95@163.com\u0026rsquo;\nuser[\u0026lsquo;git_user_email\u0026rsquo;] = \u0026ldquo;**@163.com\u0026rdquo;\n\u0026ldquo;\u0026raquo; /etc/gitlab/gitlab.rb\n#让配置生效\ngitlab-ctl reconfigure\n#重启gitlab\ngitlab-ctl restart\n#进控制台发送测试邮件\ngitlab-rails console\nirb(main):003:0\u0026gt; Notify.test_email(\u0026lsquo;hanw@oppo.com.cn\u0026rsquo;, \u0026lsquo;Message Subject\u0026rsquo;, \u0026lsquo;Message Body\u0026rsquo;).deliver_now\n#成功后去web界面配置启用注册就行了\n","date":"2020年33月5日","externalUrl":null,"permalink":"/509.html","section":"Posts","summary":"","title":"CentOS 7.5安装 GitLab","type":"post"},{"content":"把SVN上的代码仓库迁移到Gitlab上，实际上就是把SVN仓库转变成Git仓库，并且希望能保留原SVN仓库的Commit等历史记录，这一点很重要。\nSVN迁移到Gitlab需要安装git-svn\n# yum install -y git-svn 保留原SVN仓库的Commit等历史记录，需要获取到SVN使用的作者名字列表，为了获得 SVN 使用的作者名字列表，可以在checkout到本地的仓库路径下运行这个：\n# svn co --username tom --password 123456 http://my-project.googlecode.com/svn/ code # cd code # svn log --xml | grep author | sort -u | perl -pe 's/.*\u0026gt;(.*?)\u0026lt;.*/$1 = /' \u0026gt; /root/users.txt 这会将日志输出为 XML 格式，然后保留作者信息行、去除重复、去除 XML 标记。 然后，将输出重定向到你的 users.txt 文件中，这样就可以在每一个记录后面加入对应的 Git 用户数据，修改users.txt文件满足以下的格式：\n# vim /root/users.txt schacon = schacon \u0026lt;schacon@geemail.com\u0026gt; selse = selse \u0026lt;selse@geemail.com\u0026gt; 然后开始把SVN仓库转变成Git仓库，执行以下命令：\n# git svn clone http://my-project.googlecode.com/svn/ --authors-file=/root/users.txt --no-metadata my_project 为了将标签变为合适的 Git 标签，运行\n# cd my_project # cp -Rf .git/refs/remotes/origin/tags/* .git/refs/tags/ # rm -Rf .git/refs/remotes/origin/tags 这会使原来在 remotes/origin/tags/ 里的远程分支引用变成真正的（轻量）标签。\n接下来，将 refs/remotes 下剩余的引用移动为本地分支：\n# cp -Rf .git/refs/remotes/* .git/refs/heads/ # rm -Rf .git/refs/remotes 现在所有的旧分支都是真正的 Git 分支，并且所有的旧标签都是真正的 Git 标签。 最后一件要做的事情是，将你的新 Git 服务器添加为远程仓库并推送到上面。 下面是一个将你的服务器添加为远程仓库的例子：\n# git remote add origin git@my-git-server:myrepository.git 因为想要上传所有分支与标签，你现在可以运行：\n$ git push origin --all 通过以上漂亮、干净地导入操作，你的所有分支与标签都应该在新 Git 服务器上，你可以去gitlab上查看结果了。\n","date":"2020年33月4日","externalUrl":null,"permalink":"/502.html","section":"Posts","summary":"","title":"如何把SVN迁移到Gitlab","type":"post"},{"content":" 1.备份 备份时需要保持gitlab处于正常运行状态，直接执行gitlab-rake gitlab:backup:create进行备份 使用以上命令会在/var/opt/gitlab/backups目录下创建一个名称类似为1530156812_2018_06_28_10.8.4_gitlab_backup.tar的压缩包, 这个压缩包就是Gitlab整个的完整部分, 其中开头的1530156812_2018_06_28_10.8.4是备份创建的日期 /etc/gitlab/gitlab.rb 配置文件须备份 /var/opt/gitlab/nginx/conf nginx配置文件 /etc/postfix/main.cfpostfix 邮件配置备份 1. 1修改备份文件目录 可以通过/etc/gitlab/gitlab.rb配置文件来修改默认存放备份文件的目录 gitlab_rails['backup_path'] = \"/var/opt/gitlab/backups\" 修改完成之后使用gitlab-ctl reconfigure命令重载配置文件即可 1.2 设置备份过期时间 [root@gitlab ~]# vim /etc/gitlab/gitlab.rb gitlab_rails['backup_keep_time'] = 604800 #以秒为单位 1.3 gitlab自动备份 创建定时任务 [root@gitlab ~]# crontab -e 0 2 * * * /opt/gitlab/bin/gitlab-rake gitlab:backup:create 2、gitlab迁移 迁移的整体思路是： 1、在新服务器上安装相同版本的gitlab 2、将备份生成的备份文件发送到新服务器的相同目录下 /var/opt/gitlab/backups/ 3、gitlab恢复 [root@gitlab ~]# gitlab-ctl stop unicorn #停止相关数据连接服务 [root@gitlab ~]# gitlab-ctl stop sidekiq [root@gitlab-new ~]# chmod 777 /var/opt/gitlab/backups/1530156812_2018_06_28_10.8.4_gitlab_backup.tar #修改权限，如果是从本服务器恢复可以不修改 [root@gitlab ~]# gitlab-rake gitlab:backup:restore BACKUP=1530156812_2018_06_28_10.8.4 #从1530156812_2018_06_28_10.8.4编号备份中恢复 按照提示输入两次yes并回车 [root@gitlab ~]# gitlab-ctl start #启动gitlab \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 浏览器访问新服务器的地址进行查看，迁移成功 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 在实际情况中访问gitlab可能是用域名访问，我们可以修改gitlab配置文件中的url再进行备份，这样就不会影响迁移过程，恢复完成后需要进行的只是修改域名对应的dns解析ip地址 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 4、gitlab升级 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# gitlab-ctl stop #关闭gitlab服务 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# gitlab-rake gitlab:backup:create #备份 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 下载新版gitlab的rpm包安装，安装时选择升级 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 安装的过程中可能会出现报错 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; Error executing action \u0026lt;code\u0026gt;run\u0026lt;/code\u0026gt; on resource 'ruby_block[directory resource: /var/opt/gitlab/git-data/repositories]' \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 解决方法为 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# chmod 2770 /var/opt/gitlab/git-data/repositories \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 安装成功后重新加载配置并启动 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# gitlab-ctl reconfigure \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# gitlab-ctl restart \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 5、gitlab更改默认的nginx \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# vim /etc/gitlab/gitlab.rb \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; nginx['enable'] = false #不启用nginx \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 检查默认nginx配置文件，并迁移至新Nginx服务 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; /var/opt/gitlab/nginx/conf/nginx.conf #nginx配置文件,包含gitlab-http.conf文件 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; /var/opt/gitlab/nginx/conf/gitlab-http.conf #gitlab核心nginx配置文件 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 重启 nginx、gitlab服务 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# gitlab-ctl restart \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# systemctl restart nginx.service \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; 访问可能出现报502。原因是nginx用户无法访问gitlab用户的socket文件。 重启gitlab需要重新授权 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin: 10px auto; padding: 0px; line-height: 1.5; color: #000000; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: #fefef2;\u0026quot;\u0026gt; [root@gitlab ~]# chmod -R o+x /var/opt/gitlab/gitlab-rails \u0026lt;/p\u0026gt; ","date":"2020年33月4日","externalUrl":null,"permalink":"/490.html","section":"Posts","summary":"","title":"Gitlab备份、迁移、恢复和升级","type":"post"},{"content":" 1、修改GitLab绑定的域名 a、修改/etc/gitlab/gitlab.rb配置文件，修改成自己的域名 external_url 'http://gitlab.example.com' b、使配置生效 停止服务命令：gitlab-ctl stop 配置生效命令：gitlab-ctl reconfigure c、启动服务 命令：gitlab-ctl start 2、修改GitLab仓库存储位置，GitLab仓库默认位子：/var/opt/gitlab/git-data a、创建/data/soft/gitlab/gitlab-data目录，作为仓库存储目录 命令：mkdir /data/soft/gitlab/gitlab-data b、修改gitlab配置文件，找到git_data_dir 命令：vim /etc/gitlab/gitlab.rb 增加内容： git_data_dirs({ \"default\" =\u0026gt; { \"path\" =\u0026gt; \"/data/soft/gitlab/gitlab-data\" } }) c、是配置生效 停止服务命令：gitlab-ctl stop 配置生效命令：gitlab-ctl reconfigure d、启动服务 命令：gitlab-ctl start 3、修改nginx端口，nginx默认端口是80，有可能被占用，修改成其他端口 a、修改/etc/gitlab/gitlab.rb配置文件 nginx['listen_port'] = 28000 b、修改/var/opt/gitlab/nginx/conf/gitlab-http.conf文件 listen *:28000; c、使配置生效 停止服务命令：gitlab-ctl stop 配置生效命令：gitlab-ctl reconfigure d、启动服务 命令：gitlab-ctl start 4、修改unicorn端口，unicorn默认端口是8080，有可能被占用，修改成其他端口 a、修改/etc/gitlab/gitlab.rb配置文件 unicorn['port'] = 28001 b、修改/var/opt/gitlab/gitlab-rails/etc/unicorn.rb文件 listen \"127.0.0.1:28001\", :tcp_nopush =\u0026gt; true c、使配置生效 停止服务命令：gitlab-ctl stop 配置生效命令：gitlab-ctl reconfigure d、启动服务 命令：gitlab-ctl start 5、修改prometheus端口，prometheus监控默认使用端口是9090，有可能被占用，修改成其他端口 a、修改/etc/gitlab/gitlab.rb配置文件 prometheus['listen_address'] = 'localhost:28002' b、使配置生效，参考3点 ","date":"2020年33月4日","externalUrl":null,"permalink":"/481.html","section":"Posts","summary":"","title":"Gitlab配置","type":"post"},{"content":" 服务运行环境4核4G---Centos7.7 调整下面参数为下面的合适的数值 vim\u0026nbsp;/etc/gitlab/gitlab.rc 1.减少进程数目 unicorn[\u0026#39;worker_processes\u0026#39;]\u0026nbsp;=\u0026nbsp;5 默认是被注释掉的,官方建议该值是CPU核心数加一,可以提高服务器的响应速度,如果内存只有4G,或者服务器上有其它业务,就不要改了,以免内存不足。另外,这个参数最小值是2,设为1,服务器可能会卡死。\u0026nbsp; 2.减少数据库缓存\u0026nbsp;默认为256M\u0026nbsp;适当调整 postgresql[\u0026#39;shared_buffers\u0026#39;]\u0026nbsp;=\u0026nbsp;\"256MB\"\u0026nbsp; 3.减少数据库并发数 postgresql[\u0026#39;max_worker_processes\u0026#39;]\u0026nbsp;=\u0026nbsp;5 4.减少sideiq并发数\u0026nbsp;默认是25 sidekiq[\u0026#39;concurrency\u0026#39;]\u0026nbsp;=\u0026nbsp;15\u0026nbsp;\u0026nbsp; 5.\u0026nbsp;减少unicorn内存使用\u0026nbsp; unicorn[\u0026#39;worker_memory_limit_min\u0026#39;]\u0026nbsp;=\u0026nbsp;\"200\u0026nbsp;*\u0026nbsp;1\u0026nbsp;\u0026lt;\u0026lt;\u0026nbsp;20\" unicorn[\u0026#39;worker_memory_limit_max\u0026#39;]\u0026nbsp;=\u0026nbsp;\"300\u0026nbsp;*\u0026nbsp;1\u0026nbsp;\u0026lt;\u0026lt;\u0026nbsp;20\" ","date":"2020年33月4日","externalUrl":null,"permalink":"/479.html","section":"Posts","summary":"","title":"Gitlab优化","type":"post"},{"content":" 此技术是目前较为广泛的一种，介绍建立过程和配置方法 建立连接的三个步骤 1.流量触发IPSec 一旦有VPN流量经过就出发VPN网关，随之建立连接 2.建立管理连接 IPSec基于安全的管理连接协商建立安全的数据连接,而ISAKMP/KE阶段2就是用来完成这个 任务的,数据连接用于传输真正的用户数据,在配置设备实现此步骤前,网络工程师需要明确使用 何种安全协议,针对具体的安全协议应使用加密或验证算法,以及数据的传输模式(隧道模式或传 输模式)等问题。经过PSec建立的三部曲后, VPN流量便可以按照协商的结果被加密/解密了. 但是VPN连接并不是一次性的,无论是管理连接还是数据连接都有一个生存周期与之关联,一旦到 期连接便会被中止。如果需要继续传输VPN数据,连接需要重新被构建,这种设计主要是出于安全性的考虑 1.ISAKMP/IKE阶段1 ISAKMP描述了密钥管理的框架,它定义了消息的格式和密钥交换协议 的机制,以及构建连接的协商过程; 而IKE是一个混合型协议,它定义了密钥的产生、共享和管理IKE使用UDP端口500,一般来 说， ISAKMP和IKE关键字可互换使用阶段1交换过程有两种模式：主动模式和积极模式。积极模 式快，主动模式安全无论是哪种类型的VPN类型都需要完成三个任务 1）协商采用何种方式建立管理连接。 2）通过DH算法共享密钥信息。 3）对等体彼此进行身份验证。 在主模式中,这三个任务是通过六个数据报文完成的:前两个数据包用于 协商对等体间的管理连接使用何种安全策略(交换ISAKMP/KE传输集); 中间的两个数据包通过DH算法产生并交换加密算法和HMAC功能所需的 密钥;最后两个数据包使用预共享密钥等方式执行对等体间的身份验 证。这里需要注意的是,前四个报文为明文传输,从第5个数据报文开始 为密文传输,而前四个数据包通过各种算法最终产生的密钥用于第5, 第6个数据包及后续数据的加密。 ","date":"2020年33月4日","externalUrl":null,"permalink":"/475.html","section":"Posts","summary":"","title":"IPSec Vpin","type":"post"},{"content":" 目标：使用VPN技术确保外出人员可以访问内部服务器，了解IPsec VPN、Easy VPN、SSL VPN的基本原理及配置操作 概述：VPN技术是为解决明文数据在网络上传输说带来的安全隐患二产生的。可以对公网上传输数据进行加密， 定义：在两个网络实体之间建立的一直受保护的连接，可通过点对点的链路直接相连。 连接模式：隧道模式和传输模式，定义的是两实体设备数据封装过程 传输模式：IP包头不封装，实际数据被封装在VPN报文中，封装结构简单，效率高， 隧道模式：将整个三层数据报文封装在VPN数据内，在为新的报文添加IP包头，无法截取双方通信地址信息 VPN类型：站点--站点和远程访问VPN 1.站点到站点 站点到站点VPN就是通过隧道模式在VPN网关之间保护两个或更多的站点之间的流量, 站点间的流量通常是指局域网之间(L2L)的通信流量. L2L VPN多用于总公司与分公司、分公司之间在公网上传输重要业务数据. 好比一台路由器连接的局域网 2.远程访问VPN 远程访问VPN通常用于单用户设备与VPN网关之间的通信连接,单用户设备一般为一台PC或 小型办公网络等. VPN连接的一端为PC,可能会让很多人误解远程访问VPN使用传输模式,但因为 该种VPN往往也是从公网传输关键数据,而且单一用户更容易成为黑客的攻击对象,所以远程访问 VPN对于安全性的要求较高,更适用于隧道模式要想实现隧道模式的通信,就需要给远程客户端分 配两个IP地址:一个是它自己的 NIC 地址,·另一个是内网地址,也就是说远程客户端在VPN建立 过程中同时充当VPN网关(使用NIC地址)和终端用户(使用内网地址).如图1.4所示,当远端的移 动用户与总公司的网络实现远程访问VPN连接后,就好像成为总公司局域网中一个普通用户,不仅 使用总公司网段内的地址访问公司资源,而且因为其使用隧道模式,真实的P地址被隐藏起来,实 际公网通信的一段链路对于远端移动用户而言就像是透明的. VPN技术的加密算法 1.对称加密算法 目前常见的加密算法：DES算法、3DES、AES 2.非对称加密算法 使用公钥和私钥进行加密解密， ","date":"2020年33月4日","externalUrl":null,"permalink":"/460.html","section":"Posts","summary":"","title":"密码保护：CiscoASA学习笔记原理篇","type":"post"},{"content":" 思科模拟器(Cisco Packet Tracer)汉化教程\n1、首先我们需要安装上面的步骤进行安装，安装完成后先不要打开软件，在下载的安装包里还有一个Chinese.ptl文件，这个文件是汉化的文件，我们需要将这个文件复制到思科模拟器(Cisco\nPacket\nTracer)软件安装目录的Language文件夹下，我们可以在桌面找到软件的快捷方式，鼠标右键点击后选择属性然后找打它的起始位置，如下图所示。\n3、将Chinese.ptl汉化文件复制到Language文件夹后，我们在打开运行思科模拟器(Cisco Packet\nTracer)软件，进入主界面后打开Options选项，选择第一项Preferences，在Interface的选项卡下面有个“Select\nLanguage”在下面的框里选择“Chinese.ptl”然后点击右下角的”Change Language“。\n4、选择完成后保存退出，然后重启思科模拟器(Cisco Packet Tracer)软件进入到主界面就可以发现软件已经汉化了。(这是一个不完整汉化版，不过也够用了)\n思科模拟器(Cisco Packet Tracer)常见问题\n思科模拟器(Cisco Packet Tracer)怎么显示端口?\n第一步：首先在本站下载安装好思科模拟器(Cisco Packet Tracer)软件后，我们打开进入软件主界面，点击界面中的options选项，然后在下拉的选项中再点击preferences进入该界面。\n第二步：进入到preferences界面后，我们在界面中的interface选项卡中勾选always show port labels选项，勾选完成后就可以关闭preferences设置界面了。\n第三步：退回到拓扑图界面中用户就可以看到链接端口标注了端口号了。\n","date":"2020年33月4日","externalUrl":null,"permalink":"/464.html","section":"Posts","summary":"","title":"思科模拟器(Cisco Packet Tracer)汉化教程","type":"post"},{"content":" read -p \"提示符\u0026#91;y/n]：\" i case $i in \u0026#91;Y,y]) shell命令块 ;; \u0026#91;N,n]) shell命令块 ;; *) echo \"请输入Y/y or N/n\" esac ","date":"2020年33月3日","externalUrl":null,"permalink":"/456.html","section":"Posts","summary":"","title":"Shell语句之case判断模板","type":"post"},{"content":"使用随机密码来设置密码及固定字符加密密码\n#!/bin/bash #\u0026nbsp;@Author:\u0026nbsp;HanWei #\u0026nbsp;@Date:\u0026nbsp;\u0026nbsp;\u0026nbsp;2020-03-03\u0026nbsp;16:55:44 #\u0026nbsp;@Last\u0026nbsp;Modified\u0026nbsp;by:\u0026nbsp;\u0026nbsp;\u0026nbsp;HanWei #\u0026nbsp;@Last\u0026nbsp;Modified\u0026nbsp;time:\u0026nbsp;2020-03-03\u0026nbsp;17:47:43 #\u0026nbsp;@E-mail:\u0026nbsp;han_wei_95@163.com #\u0026nbsp;################################################# :\u0026nbsp;\u0026#39;脚本功能说明： 1.定期修改密码 2.使用随机密码来设置密码及固定字符加密密码 3.将密码发送到指定的邮箱账号 4.邮件发送成功才进行修改密码 5.sh\u0026nbsp;【脚本名称】\u0026nbsp;【用户名】 \u0026#39; ##################################################\tuser=$1 function\u0026nbsp;chang\u0026nbsp;() { date=`date` hostname=`hostname`\tpasswd=`openssl\u0026nbsp;rand\u0026nbsp;-base64\u0026nbsp;16` echo\u0026nbsp;$passwd\u0026nbsp;\u0026gt;\u0026gt;\u0026nbsp;passwd.txt chattr\u0026nbsp;+a\u0026nbsp;passwd.txt echo\u0026nbsp;${passwd}\u0026nbsp;|\u0026nbsp;passwd\u0026nbsp;--stdin\u0026nbsp;$user echo\u0026nbsp;\"passwd\u0026nbsp;is\u0026nbsp;${passwd}\u0026nbsp;for\u0026nbsp;$user\"\u0026nbsp;|\u0026nbsp;mail\u0026nbsp;-s\u0026nbsp;\"$date\u0026nbsp;$hostname\u0026nbsp;密码修改通知\u0026nbsp;\"\u0026nbsp;han_wei_95@163.com } function\u0026nbsp;reback\u0026nbsp;() { date=`date` ip=`hostname` echo\u0026nbsp;`hostname`\u0026nbsp;|\u0026nbsp;openssl\u0026nbsp;base64\u0026nbsp;|\u0026nbsp;passwd\u0026nbsp;--stdin\u0026nbsp;$user echo\u0026nbsp;`hostname`\u0026nbsp;|\u0026nbsp;openssl\u0026nbsp;base64\u0026nbsp;\u0026nbsp;|\u0026nbsp;mail\u0026nbsp;-s\u0026nbsp;\"$date\u0026nbsp;$ip\u0026nbsp;密码修改通知\u0026nbsp;\"\u0026nbsp;han_wei_95@163.com } echo\u0026nbsp;\"警告：此脚本运行后将修改用户密码！您要使用随机密码还是默认密码？\" echo\u0026nbsp;\"s\t随机密码\" echo\u0026nbsp;\"g\t默认密码\" read\u0026nbsp;-p\u0026nbsp;\"随机密码输入\u0026#91;s/g]：\"\u0026nbsp;i case\u0026nbsp;$i\u0026nbsp;in \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026#91;S,s]) chang \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;echo\u0026nbsp;\"随机密码已经发送到管理员邮箱\" ;; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026#91;G,g]) reback \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;echo\u0026nbsp;\"默认密码已经发送到管理员邮箱\" ;; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*) \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;echo\u0026nbsp;\"请输入S/s\u0026nbsp;or\u0026nbsp;\u0026nbsp;G/g\" esac ","date":"2020年33月3日","externalUrl":null,"permalink":"/454.html","section":"Posts","summary":"","title":"使用随机密码来设置密码及固定字符加密密码","type":"post"},{"content":" 查看用户：net users\n修改用户密码：net users username passwd\n添加用户：net users username passwd /add\n清除用户密码：net users username *\n","date":"2020年33月3日","externalUrl":null,"permalink":"/451.html","section":"Posts","summary":"","title":"Window 命令添加修改用户密码","type":"post"},{"content":" 一、实验拓扑 # 二、***是什么？ # ×××（Virtual Private Network，虚拟专用网）就是在两个网络实体之间建立的一种受保护的连接，这两个实体可以通过点到点的链路直接相连，也可以通过 Internet 相连。\n三、实验目的 # 1.使用***让Client1可以访问Server1的web\n2.查看管理连接sa的状态，并清除sa记录\n3.设置pat，让pc机访问外网200.0.0.2，并抓包查看\n四、配置设置 # 设备ip设置\nPc1机ip设置：10.2.2.1 掩码255.255.255.0 网关：10.2.2.254\nClient1的ip设置：10.1.1.1 掩码255.255.255.0 网关：10.1.1.254\nServer1的ip设置：192.168.1.0 掩码255.255.255.0 网关：192.168.1.254\n——————————————————————————————————\n防火墙FW1网关设置\nG0：网关10.1.1.254 掩码：255.255.255.0\nG1：网关200.0.0.1 掩码：255.255.255.0\nG2：网关10.2.2.254 掩码：255.255.255.0\n——————————————————————————————————\n防火墙Fw2网关设置\nG0：网关192.168.1.254 掩码：255.255.255.0\nG1：网关200.0.0.2 掩码：255.255.255.0\n五、防火墙配置思路及代码展示 # 1.防火墙1（asa1） # a、进入端口g0设置区域为inside1，安全级别100，设置ip网关10.1.1.254 。进入端口g1设置区域为outside，安全级别0，设置ip为200.0.0.1。进入端口g2设置区域为 inside2，安全级别100，设置ip网关10.2.2.254。\nb、设置静态路由：route outside 0.0.0.0 0.0.0.0 200.0.0.2\nc、设置acl：允许10.1.1.0网段访问192.168.1.0网段\nd、配置ISAKMP策略、置加密协议 isakmp 、配置IPSec策略（转换集）、配置加密映射集、将映射集应用在接口\nciscoasa(config)# hostname asa1 //修改名称为asa1 asa1(config)# int g0 //进入端口g0 asa1(config-if)# no shutdown //开启端口 asa1(config-if)#nameif inside1 //设置区域名称inside1 asa1(config-if)#security-level 100 //设置区域安全级别100 asa1(config-if)#ip address 10.1.1.254 255.255.255.0 //设置网关ip asa1(config)# int g1 //进入端口g1 asa1(config-if)# no shutdown //开启端口 asa1(config-if)#nameif outside //设置区域名称outside asa1(config-if)#security-level 0 //设置区域安全级别0 asa1(config-if)#ip address 200.0.0.1 255.255.255.0 //设置网关ip asa1(config)# int g2 //进入端口g2 asa1(config-if)# no shutdown //开启端口 asa1(config-if)#nameif inside2 //设置区域名称inside2 asa1(config-if)#security-level 100 //设置区域安全级别100 asa1(config-if)#ip address 10.2.2.254 255.255.255.0 //设置网关ip asa1(config-if)#exit //退出 设置静态路由 asa1(config-if)# route outside 0.0.0.0 0.0.0.0 200.0.0.2 //设置静态路由，使用默认路由吓一跳为200.0.0.2 配置ISAKMP策略 asa1(config)# crypto ikev1 enable outside //开启加密协议isakmp，名称ikev1，方向outside区域 asa1(config)# crypto ikev1 policy 1 //设置加密协议isakmp策略为1 asa1(config-ikev1-policy)# encryption aes //使用aes加密 asa1(config-ikev1-policy)# hash sha //设置哈希算法为sha asa1(config-ikev1-policy)# authentication pre-share //采用预共享密钥方式 asa1(config-ikev1-policy)# group 2 //指定DH算法的密钥长度为组2 asa1(config-ikev1-policy)# exit //退出 设置加密协议 isakmp asa1(config)# tunnel-group 200.0.0.2 type ipsec-l2l //设置隧道目标地址为200.0.0.2，类型为点对点方式 asa1(config)# tunnel-group 200.0.0.2 ipsec-attributes //设置隧道的加密策略 asa1(config-tunnel-ipsec)# ikev1 pre-shared-key tedu //设置加密策略的密钥为tedu asa1(config-tunnel-ipsec)# exit //退出 配置acl asa1(config)#access-list 100 permit ip 10.1.1.0 255.255.255.0 192.168.1.0 255.255.255.0 //设置acl允许10.1.1.0网段访问192.168.1.0网段 配置IPSec策略（转换集） asa1(config)# crypto ipsec ikev1 transform-set yf-set esp-aes esp-sha-hmac //配置IPSec策略（转换集） 配置加密映射集 asa1(config)# crypto map yf-map 1 match address 100 //设置加密图 yf-map匹配acl 100 asa1(config)# crypto map yf-map 1 set peer 200.0.0.2 //建立加密图邻居为200.0.0.2 asa1(config)# crypto map yf-map 1 set ikev1 transform-set yf-set //设置加密图IPSec策略转换集 asa1(config)# crypto map yf-map interface outside //将映射集应用在接口 2.防火墙2（asa2） # a、进入端口g0设置区域为inside，安全级别100，设置ip网关192.168.1.254 。进入端口g1设置区域为outside，安全级别0，设置ip为200.0.0.2。\nb、设置静态路由：route outside 0.0.0.0 0.0.0.0 200.0.0.1\nc、设置acl：允许192.168.1.0网段访问10.1.1.0网段\nd、配置ISAKMP策略、置加密协议 isakmp 、配置IPSec策略（转换集）、配置加密映射集、将映射集应用在接口\nciscoasa(config)# hostname asa2 //修改名称为asa2 Asa2(config)# int g0 //进入端口g0 Asa2(config-if)# no shutdown //开启端口 Asa2(config-if)#nameif inside //设置区域名称inside Asa2(config-if)#security-level 100 //设置区域安全级别100 Asa2(config-if)#ip address 192.168.1.254 255.255.255.0 //设置网关ip Asa2(config)# int g1 //进入端口g1 Asa2(config-if)# no shutdown //开启端口 Asa2(config-if)#nameif outside //设置区域名称outside Asa2(config-if)#security-level 0 //设置区域安全级别0 Asa2(config-if)#ip address 200.0.0.2 255.255.255.0 //设置网关ip 设置静态路由 asa2(config)# route outside 0.0.0.0 0.0.0.0 200.0.0.1 //设置静态路由，使用默认路由吓一跳为200.0.0.1 配置ISAKMP策略 asa2(config)# crypto ikev1 enable outside //开启加密协议isakmp，名称ikev1，方向outside区域（名称与防火墙一要一致） asa2(config)# crypto ikev1 policy 1 //设置加密协议isakmp策略为1（策略号也要一致） asa2(config-ikev1-policy)# encryption aes //使用aes加密 asa2(config-ikev1-policy)# hash sha //设置哈希算法为sha asa2(config-ikev1-policy)# authentication pre-share //采用预共享密钥方式 asa2(config-ikev1-policy)# group 2 //指定DH算法的密钥长度为组2 asa2(config-ikev1-policy)# exit //退出 设置加密协议 isakmp asa2(config)# tunnel-group 200.0.0.1 type ipsec-l2l //设置隧道目标地址为200.0.0.1，类型为点对点方式 asa2(config)# tunnel-group 200.0.0.1 ipsec-attributes //设置隧道的加密策略 asa2(config-tunnel-ipsec)# ikev1 pre-shared-key tedu //设置加密策略的密钥为tedu（双向密钥应唯一） asa2(config-tunnel-ipsec)# exit //退出 设置acl asa2(config)#access-list 100 extended permit ip 192.168.1.0 255.255.255.0 10.1.1.0 255.255.255.0 //设置acl允许192.168.1.0网段访问10.1.1.0网段 配置IPSec策略（转换集） asa2(config)# crypto ipsec ikev1 transform-set yf-set esp-aes esp-sha-hmac //配置IPSec策略（转换集） 配置加密映射集 asa2(config)# crypto map yf-map 1 match address 100 //设置加密图 yf-map匹配acl 100 asa2(config)# crypto map yf-map 1 set peer 200.0.0.1 //建立加密图邻居为200.0.0.1 asa2(config)# crypto map yf-map 1 set ikev1 transform-set yf-set //设置加密图IPSec策略转换集 asa2(config)# crypto map yf-map interface outside //将映射集应用在接口 测试：Client1访问Server1的web # 在Server1上设置web\nClient1访问Server1的web\n测试：查看管理连接sa的状态 # asa2(config)# show crypto isakmp sa //查看管理连接sa的状态\nAsa1(config)# show crypto isakmp sa //查看管理连接sa的状态\n清除sa记录\nasa1(config)# clear crypto isakmp sa //清除sa记录 asa2(config)# clear crypto isakmp sa //清除sa记录 测试：设置pat，让pc机访问外网200.0.0.2（对物理接口进行抓包） # asa1(config)# object network ob-inside2 ////设置对象网络名称为ob-inside2 asa1(config-network-object)# subnet 10.2.2.0 255.255.255.0 //设置要转换的内网ip段 asa1(config-network-object)# nat (inside2,outside) dynamic interface //设置动态pat，让内网（inside2）ip动态的转换为出口端ip asa1(config-network-object)# exit //退出 在物理机上设置ip\n使用抓包工具wireshark抓包\n点击在点击进入\n抓包结果\n查看转换条目\nasa1(config)# show xlate //查看转换条目\n六、拓扑图解释 # 有些人看不懂华为的云是做什么用的，我就再此解释一下，首先我使用的防火墙是在vmware虚拟机上启用的，因此我需要使用物理端口映射到云上，让华为的其他设备可以进行访问。\n如果还有什么不懂或者疑问可以直接留言询问我！\n","date":"2020年33月2日","externalUrl":null,"permalink":"/445.html","section":"Posts","summary":"","title":"思科asa5520防火墙配置Virtual Private Network","type":"post"},{"content":" 1 创建VPN地址池\nciscoasa(config)# ip local pool vpnpool 192.168.151.11-192.168.151.15 mask 255.255.255.0\n2 配置Ipsec 加密算法为3DES和SHA\nciscoasa(config)# crypto ipsec transform-set TRANS_ESP_3DES_SHA esp-3des esp-sha-hmac\n3 配置IPSec传输模式为transport，默认为tunnel 模式(L2TP 只支持transport)\nCiscoasa（config）#crypto ipsec transform-set TRANS_ESP_3DES_SHA mode transport\n4 使用传输组定义动态加密策略\nCiscoasa(config)# crypto dynamic-map outside_dyn_map 10 set transform-set TRANS_ESP_3DES_SHA\n5 定义加密映射并应用到外网接口上(outside)\n#crypto map outside_map 10 ipsec-isakmp dynamic outside_dyn_map\ncrypto map outside_map interface outside # 6 外网接口上开启isakmp策略支持\nCiscoasa(config) crypto isakmp enable outside\n7 定义isakmp 策略\nCiscoasa(config)# crypto isakmp policy 10\nciscoasa(config-isakmp-policy)# authentication pre-share\nciscoasa(config-isakmp-policy)# encryption 3des ciscoasa(config-isakmp-policy)# hash sha\nciscoasa(config-isakmp-policy)# group 2\nciscoasa(config-isakmp-policy)# lifetime 86400\nciscoasa(config-isakmp-policy)# exit\n8 设置nat 穿越\nciscoasa(config)# crypto isakmp nat-traversal 10\n9 配置默认内部组策略\nciscoasa(config)# group-policy DefaultRAGroup internal\n10 配置默认内部组策略属性\nciscoasa(config)# group-policy DefaultRAGroup attributes\nciscoasa(config-group-policy)# vpn-tunnel-protocol IPSec l2tp-ipsec\nciscoasa(config-group-policy)# default-domain value cisco.com\nciscoasa(config-group-policy)# dns-server value 202.96.209.133\n注：配置L2TP over IPsec为vpn隧道的协议，必须要加IPSec，只有l2tp-ipsec，vpn是拨不通的\n11创建本地用户，及为用户配置密码，并指明加密算法\nciscoasa(config)# username frank password frank mschap 12 创建默认的隧道组，一定要使用defaultRAGroup，L2TP不支持其他组，并定义认证方式为本地。\nciscoasa(config)# tunnel-group DefaultRAGroup general-attributes\nciscoasa(config-tunnel-general)# authentication-server-group LOCAL\nciscoasa(config-tunnel-general)# default-group-policy DefaultRAGroup\nciscoasa(config-tunnel-general)#address-pool vpnpool\nciscoasa(config-tunnel-general)#exit\n13 制定用户所在的组策略\nciscoasa(config-tunnel-general)#username frank attributes\nciscoasa(config-username)# vpn-group-policy DefaultRAGroup\nciscoasa(config-username)# vpn-tunnel-protocol IPSec l2tp-ipsec\nciscoasa(config-username)# exit\n14 配置默认隧道组的ipsec属性,并配置默认隧道组认证方式为ms-chap-v2\nciscoasa(config)# tunnel-group DefaultRAGroup ppp-attributes\nciscoasa(config-ppp)# authentication ms-chap-v2\nciscoasa(config-ppp)#exit\n15 客户端设置\nWin 7 需要修改注册表\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\PolicyAgent]\n\u0026ldquo;AssumeUDPEncapsulationContextOnSendRule\u0026rdquo;=dword:00000002\n16 在客户端上创建连接到工作区域VPN 连接，并设置vpn 的属性 ","date":"2020年33月2日","externalUrl":null,"permalink":"/442.html","section":"Posts","summary":"","title":"cisco asa l2tp over ipsec配置详解","type":"post"},{"content":" 云技术的出现确实带给了现代企业非常大的便利。但是与好处伴随而来的，当然也有不愿触及的信息安全隐患。既然企业想要利用云技术带来的好处，那么自然也要想办法解决云中安全隐患，降低企业面临的风险。\n**秘诀一：从基本做起，及时安装系统补丁。**不论是Windows还是Linux，任何操作系统都有漏洞，及时打上补丁避免漏洞被蓄意攻击利用，是服务器安全重要的保证之一。\n**秘诀二：安装和设置防火墙。**对服务器安全而言，安装防火墙非常必要。防火墙对于非法访问具有很好的预防作用，但是安装了防火墙并不等于服务器安全了。在安装防火墙之后，还需要根据自身的网络环境，对防火墙进行适当的配置以达到最好的防护效果。\n**秘诀三：安装杀毒软件。**现在网络上的病毒非常猖獗，这就需要在网络服务器上安装网络版的杀毒软件来控制病毒传播。同时，在网络杀毒软件的使用中，要定期或及时升级杀毒软件，并且每天自动更新病毒库。\n**秘诀四：关闭不需要的服务和端口。**服务器操作系统在安装时，会启动一些不需要的服务，这样会占用系统的资源，而且也会增加系统的安全隐患。对于一段时间内完全不会用到的服务器，可以完全关闭;对于其间要使用的服务器，也应该关闭不需要的服务，如Telnet等。另外，还要关掉没有必要开的TCP端口。\n**秘诀五：定期对服务器进行备份。**为防止不能预料的系统故障或用户不小心的非法操作，必须对系统进行安全备份。除了对全系统进行每月一次的备份外，还应对修改过的数据进行每周一次的备份。同时，应该将修改过的重要系统文件存放在不同服务器上，以便出现系统崩溃时(通常是硬盘出错)，可以及时地将系统恢复到正常状态。\n**秘诀六：账号和密码保护。**账号和密码保护可以说是服务器系统的第一道防线，目前网上大部分对服务器系统的攻击都是从截获或猜测密码开始的。一旦黑客进入了系统，那么前面的防卫措施几乎就失去了作用，所以对服务器系统管理员的账号和密码进行管理是保证系统安全非常重要的措施。\n**秘诀七：监测系统日志。**通过运行系统日志程序，系统会记录下所有用户使用系统的情形，包括最近登录时间、使用的账号、进行的活动等。日志程序会定期生成报表，通过对报表进行分析，就可以知道是否有异常现象。\n从以上7个秘诀中，我们可以了解到服务器安全防护的技巧，同时我们也了解了构成云服务器的安全问题。都说云可能引发一场数据安全防护的变革，只要确保云本身的安全，其大数据和处理效率高的特性让传统的IT安全防护等级提升了好几倍，安全系数自然也会提高不\n","date":"2020年33月2日","externalUrl":null,"permalink":"/440.html","section":"Posts","summary":"","title":"云服务器7大安全防护技巧","type":"post"},{"content":" ","date":"2020年22月27日","externalUrl":null,"permalink":"/434.html","section":"Posts","summary":"","title":"武汉加油，中国加油","type":"post"},{"content":" MySQL 赋予用户权限命令的简单格式可概括为：\ngrant 权限 on 数据库对象 to 用户\n**　用户后面可以加@\u0026lsquo;ip地址\u0026rsquo; identified by \u0026lsquo;密码\u0026rsquo;**\n例如:\ngrant all on *.* to root@'%'IDENTIFIED by '123456' grant all on *.* to ted@'123.123.123.123'IDENTIFIED by '123456' \u0026lt;td\u0026gt; \u0026lt;code\u0026gt;上面的语句表示将 所有 数据库的所有权限授权给 ted 这个用户，允许 ted 用户在 123.123.123.123 这个 IP 进行远程登陆，并设置 ted 用户的密码为 123456 。\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;下面逐一分析所有的参数：\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;code\u0026gt;all\u0026lt;/code\u0026gt;\u0026amp;nbsp;\u0026lt;code\u0026gt;PRIVILEGES\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;　表示赋予所有的权限给指定用户，这里也可以替换为赋予某一具体的权限，例如：select,insert,update,delete,create,drop\u0026lt;/code\u0026gt;\u0026amp;nbsp;\u0026lt;code\u0026gt;等，具体权限间用“,”半角逗号分隔。\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026amp;nbsp;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;discuz.*\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;　表示上面的权限是针对于哪个表的，discuz 指的是数据库，后面的 * 表示对于所有的表，由此可以推理出：对于全部数据库的全部 表授权为“*.*”，对于某一数据库的全部表授权为“数据库名.*”，对于某一数据库的某一表授权为“数据库名.表名”。\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026amp;nbsp;\u0026lt;br /\u0026gt;\u0026amp;nbsp;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;ted 表示你要给哪个用户授权，这个用户可以是存在的用户，也可以是不存在的用户。\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026amp;nbsp;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;123.123.123.123\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026amp;nbsp;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;　表示允许远程连接的 IP 地址，如果想不限制链接的 IP 则设置为“%”即可。\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026amp;nbsp;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;123456\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;　为用户的密码。\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;执行了上面的语句后，再执行下面的语句，方可立即生效。\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;code\u0026gt;\u0026amp;gt; flush\u0026amp;nbsp;privileges;\u0026lt;/code\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/figure\u0026gt; \u0026lt;p\u0026gt; \u0026lt;!-- /wp:table --\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;!-- wp:paragraph --\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;一、grant\u0026amp;nbsp;普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;!-- /wp:paragraph --\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;!-- wp:preformatted --\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;pre class=\u0026quot;wp-block-preformatted\u0026quot;\u0026gt;grant select on testdb.* to common_user@'%' grant insert on testdb.* to common_user@\u0026rsquo;%\u0026rsquo;\ngrant update on testdb.* to common_user@\u0026rsquo;%\u0026rsquo;\ngrant delete on testdb.* to common_user@\u0026rsquo;%\u0026rsquo; 或者，用一条 MySQL\u0026nbsp;命令来替代： grant select, insert, update, delete on testdb.* to common_user@'%' 二、grant\u0026nbsp;数据库开发人员，创建表、索引、视图、存储过程、函数等权限 grant\u0026nbsp;创建、修改、删除\u0026nbsp;MySQL\u0026nbsp;数据表结构权限。 grant create on testdb.* to developer@'192.168.0.%'; grant alter on testdb.* to developer@'192.168.0.%'; grant drop on testdb.* to developer@'192.168.0.%'; grant\u0026nbsp;操作\u0026nbsp;MySQL\u0026nbsp;外键权限： grant references on testdb.* to developer@'192.168.0.%'; grant\u0026nbsp;操作\u0026nbsp;MySQL\u0026nbsp;临时表权限： grant create temporary tables on testdb.* to developer@'192.168.0.%'; grant\u0026nbsp;操作\u0026nbsp;MySQL\u0026nbsp;索引权限： grant index on testdb.* to developer@'192.168.0.%'; grant\u0026nbsp;操作\u0026nbsp;MySQL\u0026nbsp;视图、查看视图源代码权限： grant create view on testdb.* to developer@'192.168.0.%'; grant show view on testdb.* to developer@'192.168.0.%'; grant\u0026nbsp;操作\u0026nbsp;MySQL\u0026nbsp;存储过程、函数权限： grant create routine on testdb.* to developer@'192.168.0.%'; -- now, can show procedure status grant alter routine on testdb.* to developer@'192.168.0.%'; -- now, you can drop a procedure grant execute on testdb.* to developer@'192.168.0.%'; 三、grant\u0026nbsp;普通\u0026nbsp;DBA\u0026nbsp;管理某个\u0026nbsp;MySQL\u0026nbsp;数据库的权限 grant all privileges on testdb to dba@'localhost' 其中，关键字 “privileges”\u0026nbsp;可以省略。 四、grant\u0026nbsp;高级\u0026nbsp;DBA\u0026nbsp;管理\u0026nbsp;MySQL\u0026nbsp;中所有数据库的权限： grant all on *.* to dba@'localhost' 五、MySQL grant\u0026nbsp;权限，分别可以作用在多个层次上 1. grant\u0026nbsp;作用在整个\u0026nbsp;MySQL\u0026nbsp;服务器上： grant select on *.* to dba@localhost; -- dba 可以查询 MySQL 中所有数据库中的表。 grant all on *.* to dba@localhost; -- dba 可以管理 MySQL 中的所有数据库 2. grant\u0026nbsp;作用在单个数据库上： grant select on testdb.* to dba@localhost; -- dba 可以查询 testdb 中的表。 3. grant\u0026nbsp;作用在单个数据表上： grant select, insert, update, delete on testdb.orders to dba@localhost; 这里在给一个用户授权多张表时，可以多次执行以上语句。例如： grant select(user_id,username) on smp.users to mo_user@'%' identified by '123345'; grant select on smp.mo_sms to mo_user@'%' identified by '123345'; 4. grant\u0026nbsp;作用在表中的列上： grant select(id, se, rank) on testdb.apache_log to dba@localhost; grant\u0026nbsp;作用在存储过程、函数上：\u0026nbsp;\ngrant execute on procedure testdb.pr_add to 'dba'@'localhost' grant execute on function testdb.fn_add to 'dba'@'localhost' 六、查看 MySQL\u0026nbsp;用户权限 查看当前用户（自己）权限： show grants; 查看其他 MySQL\u0026nbsp;用户权限： show grants for dba@localhost; 七、撤销已经赋予给 MySQL\u0026nbsp;用户权限的权限。 revoke\u0026nbsp;跟\u0026nbsp;grant\u0026nbsp;的语法差不多，只需要把关键字\u0026nbsp;“to”\u0026nbsp;换成\u0026nbsp;“from”\u0026nbsp;即可： grant all on *.* to dba@localhost; revoke all on *.* from dba@localhost; 八、MySQL grant、revoke\u0026nbsp;用户权限注意事项 1. grant, revoke\u0026nbsp;用户权限后，该用户只有重新连接\u0026nbsp;MySQL\u0026nbsp;数据库，权限才能生效。 2.\u0026nbsp;如果想让授权的用户，也可以将这些权限\u0026nbsp;grant\u0026nbsp;给其他用户，需要选项\u0026nbsp;“grant option“ grant select on testdb.* to dba@localhost with grant option; grant select on testdb.* to dba@localhost with grant option; 这个特性一般用不到。实际中，数据库权限最好由 DBA\u0026nbsp;来统一管理。 补充： mysql授权表共有5个表：user、db、host、tables_priv和columns_priv。 授权表的内容有如下用途：\nuser表\nuser表列出可以连接服务器的用户及其口令，并且它指定他们有哪种全局（超级用户）权限。在user表启用的任何权限均是全局权限，并适用于所有数据库。例如，如果你启用了DELETE权限，在这里列出的用户可以从任何表中删除记录，所以在你这样做之前要认真考虑。 db表\ndb表列出数据库，而用户有权限访问它们。在这里指定的权限适用于一个数据库中的所有表。 host表\nhost表与db表结合使用在一个较好层次上控制特定主机对数据库的访问权限，这可能比单独使用db好些。这个表不受GRANT和REVOKE语句的影响，所以，你可能发觉你根本不是用它。 tables_priv表\ntables_priv表指定表级权限，在这里指定的一个权限适用于一个表的所有列。 columns_priv表\ncolumns_priv表指定列级权限。这里指定的权限适用于一个表的特定列 总结:(理解原理) 使用grant授权实质是在mysql数据库的user表中增加一列，收回权限实质是从表中删除一列。所以授权也可以替换为删除表数据来代替，授权收权实质是操作mysql的user表。 查看mysql.user表的结构:(windows与linux不同的是password列名改为authentication_string) 未授权前查看总数: \u0026nbsp;授权给root,允许登录的ip是%,密码是123456，授权之后变为9列。 用root，123456登录查看 \u0026nbsp;收回刚才用户的权限:(收权之后只是收回权限，还可以登录。) 删除mysql的user表中的数据，将没权限访问:(彻底的收权方法:) delete from mysql.user where user='root' and host='%'; flush privileges; ","date":"2020年22月27日","externalUrl":null,"permalink":"/417.html","section":"Posts","summary":"","title":"MySql授权和撤销权限操作","type":"post"},{"content":" 背景：一些热门站点会有用户进行大量访问，当达到一定量时会产生拥堵或宕机，那么该服务器就无法再对外提供服务。因此一些企业会为站点采用一些技术手段，实现当主服务器发生故障无法对外服务，此使备用服务器接管主服务器的职责和任务对外提供服务，这就是故障转移。 \u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt; 相关知识 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 一、故障转移 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-indent: 50px;\u0026quot;\u0026gt; 故障转移集群（Failover Cluster）是一种高可用的基础结构层。即由多台计算机组成，每台计算机作为一个冗余节点，防止某节点掉线、故障或损坏。 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 二、条件 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、成员服务器加入域 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、利用两个磁盘（仲裁磁盘、数据存储磁盘） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、3张网卡（1个连接后端存储、1个为外网提供服务、1个故障检测网卡【心跳线】） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 三、工作过程 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、主服务器发生故障，故障检测网卡停止发送数据包 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、备用服务器在一定时间内未收到数据包，认定主服务器发生故障，发起主服务器决策投票。备用服务器向SAN存储申请占用仲裁磁盘 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、备用服务器担任主服务器功能对外提供服务 \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; \u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt; 项目配置 \u0026lt;/p\u0026gt; \u0026lt;table style=\u0026quot;width: 500px;\u0026quot; border=\u0026quot;1\u0026quot; cellspacing=\u0026quot;1\u0026quot; cellpadding=\u0026quot;1\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;width: 240px;\u0026quot;\u0026gt; AD-Storage \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;width: 258px;\u0026quot;\u0026gt; 192.168.20.222 \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;width: 258px;\u0026quot;\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;width: 240px;\u0026quot;\u0026gt; Web1 \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;width: 258px;\u0026quot;\u0026gt; 192.168.20.100 \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;width: 258px;\u0026quot; colspan=\u0026quot;1\u0026quot; rowspan=\u0026quot;2\u0026quot;\u0026gt; 集群IP：192.168.20.110 \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026quot;width: 240px;\u0026quot;\u0026gt; Web2 \u0026lt;/td\u0026gt; \u0026lt;td style=\u0026quot;width: 258px;\u0026quot;\u0026gt; 192.168.20.200 \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p\u0026gt; 一、基于IP SAN部署Web服务器 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、AD/Storage-Server \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （1）安装域服务，并将Web1和Web2加入同一域中 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190425230051948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;764\u0026quot; height=\u0026quot;292\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190425230317754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;670\u0026quot; height=\u0026quot;274\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190425233036496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;638\u0026quot; height=\u0026quot;265\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190425233234284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;539\u0026quot; height=\u0026quot;349\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （2）配置存储池 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190425234348368.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;732\u0026quot; height=\u0026quot;157\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （3）安装iSCSI服务 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190425234939404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;755\u0026quot; height=\u0026quot;451\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （4）创建两个的虚拟磁盘（Arbitration：5G、Web-data：10G） \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190425235537759.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;555\u0026quot; height=\u0026quot;193\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （5）添加访问服务器 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426000851610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;698\u0026quot; height=\u0026quot;307\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （6）同样步骤创建Web-data虚拟磁盘 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426001007365.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;754\u0026quot; height=\u0026quot;76\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、Web1 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （1）链接AD/Storage-Server上的两个虚拟磁盘 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426001129289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;478\u0026quot; height=\u0026quot;483\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426001209453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;471\u0026quot; height=\u0026quot;418\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （2）格式化 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426001704535.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;527\u0026quot; height=\u0026quot;180\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （3）创建Web目录并编辑首页文件 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426001925344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;622\u0026quot; height=\u0026quot;338\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （4）安装IIS服务 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426002134170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;751\u0026quot; height=\u0026quot;340\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （5）创建站点 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426002421761.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;427\u0026quot; height=\u0026quot;190\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （6）验证 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426002343921.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;385\u0026quot; height=\u0026quot;158\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、Web2 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; （1）按照Web1上的步骤进行 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/2019042600271948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;560\u0026quot; height=\u0026quot;359\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426002901484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;437\u0026quot; height=\u0026quot;402\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 二、创建故障转移集群 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、分别在Web1、Web2上安装【故障转移集群】 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426003215625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;783\u0026quot; height=\u0026quot;400\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、在Web1上打开【故障转移集群管理器】，创建集群，添加两台Web服务器 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426011136349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;659\u0026quot; height=\u0026quot;301\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、进行测试 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426011222149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;652\u0026quot; height=\u0026quot;294\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426011312741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;658\u0026quot; height=\u0026quot;340\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 4、填写集群名称，勾选网络并填写IP地址 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426011748766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;632\u0026quot; height=\u0026quot;297\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5、创建完成 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426011853265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;657\u0026quot; height=\u0026quot;404\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 三、验证 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、打开【故障转移集群管理器】，查看节点状况 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426011923810.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;580\u0026quot; height=\u0026quot;86\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、在【存储】下的【磁盘】中可看到仲裁磁盘和数据磁盘的隶属关系 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426012209775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;782\u0026quot; height=\u0026quot;325\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、分别查看Web服务器上的磁盘状况 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426012056260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;710\u0026quot; height=\u0026quot;592\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426013846583.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;536\u0026quot; height=\u0026quot;132\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 4、断掉主服务器（Web1） \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426014155239.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;595\u0026quot; height=\u0026quot;149\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426014218837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;775\u0026quot; height=\u0026quot;278\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5、测试访问情况 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;text-align: center;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190426014024464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTY4NTc1,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;762\u0026quot; height=\u0026quot;362\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; ","date":"2020年22月27日","externalUrl":null,"permalink":"/416.html","section":"Posts","summary":"","title":"故障转移集群（Cluster）","type":"post"},{"content":"echo\u0026nbsp;off set\u0026nbsp;aa=192.168.1 set\u0026nbsp;outputfilename=result_%random%.txt for\u0026nbsp;/l\u0026nbsp;%%i\u0026nbsp;in\u0026nbsp;(1,1,254)\u0026nbsp;do\u0026nbsp;( echo\u0026nbsp;ping\u0026nbsp;%aa%.%%i ping\u0026nbsp;-n\u0026nbsp;1\u0026nbsp;%aa%.%%i\u0026nbsp;|findstr\u0026nbsp;\"TTL\"\u0026nbsp;\u0026gt;nul\u0026\u0026echo\u0026nbsp;%aa%.%%i\u0026nbsp;\u0026gt;\u0026gt;c:\\%outputfilename%||echo\u0026nbsp;can\u0026nbsp;not\u0026nbsp;be\u0026nbsp;reached ) echo\u0026nbsp;\"--------------\" echo\u0026nbsp;Ping\u0026nbsp;%aa%\u0026nbsp;done!","date":"2020年22月24日","externalUrl":null,"permalink":"/1525.html","section":"Posts","summary":"","title":"Ping检测主机存活性","type":"post"},{"content":" \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;512\u0026quot; data-height=\u0026quot;512\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; 前言 # 随着移动互联网爆发及越来越广泛的应用，一个应用系统经常会面临内部和外部威胁的风险，互联网安全已经成为影响互联网应用的关键问题。系统外围一般都会有防火墙、IDS、IPS 、抗 DDOS 等一系列安全防护手段，在云平台同样提供云防火墙、WAF、漏扫等一系列手段进行安全防护。\n但在应用系统上的安全漏洞并不能完全消除，如承载应用系统的网络设备、操作系统、数据库及应用系统本身可能均存在大量的安全漏洞；甚至承载云平台的 SDN（软件定义网络）、SDS（软件定义存储）及其相关联的服务的操作系统，也会存在安装配置不符合安全需求、安全漏洞没及时修补、参数配置错误、使用维护不符合安全需求、开放不必要的端口及服务等等。这些漏洞有可能被控制，会导致数据被篡改或窃取，甚至会毁坏应用系统，导致不可挽救的损失。\n本篇文章旨在指导系统管理人员或安全检查人员进行 CentOS 6.4 操作系统的安全合规性检查和配置。\n注： CentOS 版本不一致时，请使用不同版本的命令行！\n简洁安装操作系统 # 使用最简洁的方式安装 CentOS ，仅安装操作系统启动必需的服务和软件，降低因软件包而导致出现安全漏洞的可能性。\nSSHbanner 信息 # 执行如下命令创建 ssh banner 信息文件： # touch /etc/sshbanner # chown bin:bin /etc/sshbanner # chmod 644 /etc/sshbanner # echo \" Authorized users only. \" \u0026gt;/etc/sshbanner 可根据需要修改第 4 条命令中的 “警告文本”。\n修改 /etc/ssh/sshd_config 文件，添加如下行： # vi /etc/ssh/sshd_config Banner /etc/sshbanner 不同版本和编译安装的 SSH 服务配置文件位置不同\n重启SSH服务 # pkill sshd # /usr/local/sbin/sshd 由于执行下面操作会断开SSH服务，故建议所有安全加固做完后重启服务器，使该配置生效\n登录Banner提示 # echo \" Authorized users only. All activity may be monitored and reported \" \u0026gt; /etc/motd 可根据需要命令中的 “警告文本”。\n删除root以外UID为0的用户 # \u0026lt;code\u003e# awk -F “：” \u0026#039;($3==0) {print $1} \u0026#039; /etc/passwd # userdel \"username\" \u0026lt;/code\u003e 若有 UID 为 0 的其它用户，使用 userdel 删除用户。\n防 syn 攻击优化检查主机访问控制 # 执行备份： # cp -p /etc/hosts.allow /etc/hosts.allow_bak # cp -p /etc/hosts.deny /etc/hosts.deny_bak 编辑 /etc/hosts.allow 和 /etc/hosts.deny ，文件的配置格式为：Service:host [or network/netmask] # vi /etc/hosts.allow all:192.168.4.44:allow // 允许单个IP访问所有服务进程 sshd:192.168.1.:allow // 允许192.168.1的整个网段访问SSH服务进程 #vi /etc/hosts.deny sshd:all:deny` // 拒绝其它所有 IP 访问 SSH 服务 预防Flood攻击 # # vim /etc/sysctl.conf net.ipv4.tcp_syncookies = 1 # sysctl -p // 使之生效 关闭不必要服务 # 关闭开启命令 # chkconfig 服务名 off/on // 开启关闭开机启动项 # service 服务名 stop/start // 天启关闭服务 建议关闭的服务 cups、portmap、nfslock、nfs、rpcbind、NetworkManager、iptables、ip6tables、netfs、qpidd、yum-updatesd、sendmail、postfix、rpcbind、bluetooth、firstboot、isdn、kudzu、smartd、autofs\n正常情况关闭完服务，使用 netstat -lantup 命令仅可看到 sshd 进程和业务进程。 禁止 ctrl+alt+del # # vi /etc/inittab ca::ctrlaltdel:/bin/true 将行ca::ctrlaltdel:/sbin/shutdown -r -t 4 now 修改为 ca::ctrlaltdel:/bin/true\n或者将此行删除、注释，修改为其它命令均可，如：\nca::ctrlaltdel:/bin/echo \u0026quot;\u0026quot;CTRL-ALT-DEL is disabled\u0026quot;\u0026quot;\n无用账户删除或锁定 # 执行备份： # cp -p /etc/passwd /etc/passwd.bak # cp -p /etc/shadow /etc/shadow.bak 锁定无用帐户： **方法一：**在需要锁定的用户名的密码字段前面加 !! ，建议锁定的用户：lp、uucp、games、nobody 。\n# vi /etc/shadow test:!!$1$QD1ju03H$LbV4vdBbpw.MY0hZ2D/Im1:14805:0:99999:7::: 方法二：\n# passwd -l test // 假设 test 为无用帐号 **方法三：**将 /etc/passwd 文件中的无用帐户的 shell 域设置成 /bin/false 。\n# vi /etc/passwd lp:x:4:7:lp:/var/spool/lpd:/bin/false 设置登录超时 # 执行备份： # cp -p /etc/profile /etc/profile.bak # cp -p /etc/csh.cshrc /etc/csh.cshrc.bak 在 /etc/profile 文件增加以下两行： # vi /etc/profile TMOUT=180 export TMOUT 修改 /etc/csh.cshrc 文件，添加如下行： # vi /etc/csh.cshrc set autologout=30 改变这项设置后，重新登录才能有效。\n限制 root 远程登录 # 执行备份： # cp -p /etc/securetty /etc/securetty_bak # cp -p /usr/local/etc/sshd_config /usr/local/etc/sshd_config_bak 新建一个普通用户并设置高强度密码： # useradd username # passwd username 禁止 root 用户远程登录系统： # vi /etc/securetty 注释掉 pts/x 的行，保存退出，则禁止了 root 从 telnet 登录。\n# vi /usr/local/etc/sshd_config 将 PermitRootLogin设置为 no 并不被注释，保存退出，则禁止了 root 从 ssh 登录。\n用户缺省UMASK设置 # 执行备份： # cp -p /etc/profile /etc/profile_bak # cp -p /etc/csh.login /etc/csh.login_bak # cp -p /etc/csh.cshrc /etc/csh.cshrc_bak # cp -p /etc/bashrc /etc/bashrc_bak # cp -p /root/.bashrc /root/.bashrc_bak # cp –p /root/.cshrc /root/.cshrc_bak 修改 umask 设置： # vi /etc/profile # vi /etc/csh.login # vi /etc/csh.cshrc # vi /etc/bashrc # vi /root/.bashrc # vi /root/.cshrc umask 027 将 umask 值修改为 027，保存退出。\n配置文件中若没有，添加行umask 027 到配置文件。 密码复杂度要求 # 使用 pam pam_cracklib module 或 pam_passwdqc module 实现密码复杂度，两者不能同时使用。\npam_cracklib 主要参数说明:\n参数 说明 tretry=N 重试多少次后返回密码修改错误 difok=N 新密码必需与旧密码不同的位数 dcredit=N N \u0026gt;= 0密码中最多有多少个数字；N \u0026lt; 0密码中最少有多少个数字 lcredit=N N \u0026gt;= 0密码中最多有多少个小写字母；N \u0026lt; 0密码中最少有多少个小写字母 ucredit=N N \u0026gt;= 0密码中最多有多少个大写字母；N \u0026lt; 0密码中最少有多少个大写字母 credit=N N \u0026gt;= 0密码中最多有多少个特殊字符；N \u0026lt; 0密码中最少有多少个特殊字符 minclass=N 密码组成(大/小字母，数字，特殊字符) minlen=N 新密码最短长度 pam_passwdqc主要参数说明:\n参数 说明 mix 设置口令字最小长度，默认值是 mix=disabled。 max 设置口令字的最大长度，默认值是 max=40。 passphrase 设置口令短语中单词的最少个数，默认值是 3 ，如果为 0 则禁用口令短语。 match 设置密码串的常见程序，默认值是match=4。 similar 设置当我们重设口令时，重新设置的新口令能否与旧口令相似。允许相似：similar=permit ；不允许相似：similar=deny 。 random 设置随机生成口令字的默认长度。默认值是 42 ；设为 0 则禁止该功能。 具体操作如下：\n执行备份： # cp -p /etc/pam.d/system-auth /etc/pam.d/system-auth_bak # cp -p /etc/pam.d/passwd /etc/pam.d/passwd_bak 修改策略设置： 如配置密码长度最小 8 位，至少包含大小写字母、数字、其它字符中的两类，并对 root 用户生效，配置如下：\n# vi /etc/pam.d/system-auth password requisite pam_cracklib.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minclass=2 minlen=8 enforce_for_root password sufficient pam_unix.so md5 shadow nullok try_first_pass use_authtok suse设备是/etc/pam.d/passwd文件\n密码不重复 5 次设置 # 执行备份： # cp -p /etc/pam.d/system-auth /etc/pam.d/system-auth_bak 创建文件 /etc/security/opasswd，并设置权限： # touch /etc/security/opasswd # chown root:root /etc/security/opasswd # chmod 600 /etc/security/opasswd 修改策略设置，在 password required pam_unix.so所在行后面增加 remember=5 ，保存退出； # vi /etc/pam.d/system-auth password required pam_unix.so remember=5 在相应行的后面添加 remember=5 ，而不是添加一行！\n口令锁定策略 # 执行备份： # cp -p /etc/pam.d/system-auth /etc/pam.d/system-auth.bak 修改策略设置：增加 auth required pam_tally2.so even_deny_root deny=3 unlock_time=120 到第二行，即 auth required pam_env.so 后面。 # vi /etc/pam.d/system-auth auth required pam_tally2.so even_deny_root deny=3 unlock_time=120 even_deny_root：包含root用户 deny：拒绝次数 unlock_time：解锁时间 口令生存期 # 执行备份： # cp -p /etc/login.defs /etc/login.defs.bak 修改策略设置：修改 PASS_MIN_LEN 、 PASS_MAX_DAYS 、PASS_MIN_DAYS、PASS_WARN_AGE的值，保存退出。举例如下： # vi /etc/login.defs PASS_MAX_DAYS 90 //口令最大有效天数 PASS_MIN_DAYS 30 //口令最小有效天数 PASS_MIN_LEN 8 //口令最少字符数 PASS_WARN_AGE 7 //口令过期提前警告天 ftp 加固（若启用服务） # 更改 ftp 警告 Banner # 修改vsftp回显信息 # vi /etc/vsftpd/vsftpd.conf ftpd_banner=\" Authorized users only. All activity may be monitored and reported.\" 可根据实际需要修改告警文本内容。\n重启服务： # service vsftpd restart ftp 用户对文件/目录的存取权限 # 前提：系统使用vsftp\n修改 /etc/vsftpd.conf 或 /etc/vsftpd/vsftpd.conf ，确保以下行未被注释掉，如果没有该行，请添加： # vi /etc/vsftpd.conf write_enable=YES //允许上传。如果不需要上传权限，此项可不进行更改。 ls_recurse_enable=YES local_umask=022 //设置用户上传文件的属性为755 anon_umask=022 //匿名用户上传文件(包括目录)的 umask 重启 ftp 网络服务 # service vsftpd restart 限制FTP用户登录后能访问的目录 # 修改/etc/vsftpd.conf ，确保以下行未被注释掉，如果没有该行，请添加： # vi /etc/vsftpd.conf chroot_local_user=YES 重启网络服务 # service vsftpd restart 限制FTP用户登录 # 配置vsftpd.conf文件，设定只允许特定用户通过ftp登录，修改其中内容： # vi /etc/vsftpd.conf userlist_enable=YES // 此选项被激活后，VSFTPD 将读取 userlist_file 参数所指定的文件中的用户列表。 userlist_deny=NO // 决定禁止还是只允许由 userlist_file 指定文件中的用户登录FTP服务器。默认值 YES：禁止文件中的用户登录，同时也不向这些用户发出输入口令的提示；值为 NO：只允许在文件中的用户登录FTP服务器。 userlist_file=/etc/vsftpd/user_list\n判断条件 建议\u0026quot; root daemon bin sys adm lp uucp nuucp listen nobody noaccess nobody4 \u0026quot; 用户不能通过 FTP 登录。\nTelnet 告警信息设置(若启用服务) # 修改 Telnet 回显信息，修改文件 /etc/issue 和 /etc/issue.net 中的内容： #echo \" Authorized users only. \" \u0026gt; /etc/issue #echo \" Authorized users only. \" \u0026gt; /etc/issue.net 可根据需要命令中的 “警告文本”。\n重启服务： # service xinetd restart 开启 iptables 防火墙 # 防火墙是网络安全的重中之重，有关 ipatables 的使用和帮助，将会另外写一篇详细描述。\n# 开启 iptables 并设置开机自启动 # iptables service restart # chkconfig iptables on 下面是适合Web服务器的iptables规则示例和解释：\n# IPT -P INPUT DROP #1 # IPT -P FORWARD DROP #1 # IPT -P OUTPUT DROP #1 # IPT -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT #2 # IPT -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT #3 # IPT -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT #3 # IPT -A INPUT -i lo -j ACCEPT #4 # IPT -A OUTPUT -o lo -j ACCEPT #4 # IPT -A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT #5 # IPT -A INPUT -p icmp -m icmp --icmp-type 11 -j ACCEPT #5 # IPT -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT #6 1、设置INPUT,FORWARD,OUTPUT链默认target为DROP，也就是外部与服务器不能通信。 # 2、设置当连接状态为RELATED和ESTABLISHED时，允许数据进入服务器。 # 3、设置外部客户端连接服务器端口80,22。 # 4、允许内部数据循回。 # 5、允许外部ping服务器。 # 6、设置状态为RELATED和ESTABLISHED的数据可以从服务器发送到外部。 # 禁止 ping 服务器 # 禁止 ping 服务器可以使用 iptables 进行设置，同时也可采用修改 /etc/sysctl.conf 禁止。\n编辑 sysctl.conf 文件，在文件中增加一行 net.ipv4.icmp_echo_ignore_all=1 如果已经有net.ipv4.icmp_echo_ignore_all这一行了，直接修改=号后面的值，0 表示允许，1 表示禁止 修改完成后执行 sysctl -p使新配置生效。 检查是否记录安全事件日志 # 修改 /etc/syslog.conf 或 /etc/rsyslog.conf ，在文件中加入如下内容:\n# vi /etc/syslog.conf *.err;kern.debug;daemon.notice /var/log/messages # chmod 640 /var/log/messages # service rsyslog restart 禁止普通用户合用 su 切换到 root 用户 # 1）把需要 su 到 root 的用户加入 wheel 组\n# usermod -g wheel test // 例如把 test 用户加入 wheel 组 2）修改配置文件/etc/pam.d/su ，去掉下面行的注释\n# vi /etc/pam.d/su auth required pam_wheel.so use_uid // 保证当前行不被注释 3）配置生效后，仅 test 用户可使用 su 切换到 root 用户。\n安全是一个永恒的话题，没有绝对的安全，只有不断加强的安全系统和体系。同时我们应该培养良好的安全意识和操作习惯。\n","date":"2020年22月23日","externalUrl":null,"permalink":"/354.html","section":"Posts","summary":"","title":"操作系统安全加固 CentOS 篇操作系统安全加固 CentOS 篇","type":"post"},{"content":" \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;512\u0026quot; data-height=\u0026quot;512\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; 前言 # 随着移动互联网爆发及越来越广泛的应用，一个应用系统经常会面临内部和外部威胁的风险，互联网安全已经成为影响互联网应用的关键问题。系统外围一般都会有防火墙、IDS、IPS 、抗 DDOS 等一系列安全防护手段，在云平台同样提供云防火墙、WAF、漏扫等一系列手段进行安全防护。\n但在应用系统上的安全漏洞并不能完全消除，如承载应用系统的网络设备、操作系统、数据库及应用系统本身可能均存在大量的安全漏洞；甚至承载云平台的 SDN（软件定义网络）、SDS（软件定义存储）及其相关联的服务的操作系统，也会存在安装配置不符合安全需求、安全漏洞没及时修补、参数配置错误、使用维护不符合安全需求、开放不必要的端口及服务等等。这些漏洞有可能被控制，会导致数据被篡改或窃取，甚至会毁坏应用系统，导致不可挽救的损失。\n本篇文章旨在指导系统管理人员或安全检查人员进行 CentOS 6.4 操作系统的安全合规性检查和配置。\n注： CentOS 版本不一致时，请使用不同版本的命令行！\n简洁安装操作系统 # 使用最简洁的方式安装 CentOS ，仅安装操作系统启动必需的服务和软件，降低因软件包而导致出现安全漏洞的可能性。\nSSHbanner 信息 # 执行如下命令创建 ssh banner 信息文件： # touch /etc/sshbanner # chown bin:bin /etc/sshbanner # chmod 644 /etc/sshbanner # echo \" Authorized users only. \" \u0026gt;/etc/sshbanner 可根据需要修改第 4 条命令中的 “警告文本”。\n修改 /etc/ssh/sshd_config 文件，添加如下行： # vi /etc/ssh/sshd_config Banner /etc/sshbanner 不同版本和编译安装的 SSH 服务配置文件位置不同\n重启SSH服务 # pkill sshd # /usr/local/sbin/sshd 由于执行下面操作会断开SSH服务，故建议所有安全加固做完后重启服务器，使该配置生效\n登录Banner提示 # echo \" Authorized users only. All activity may be monitored and reported \" \u0026gt; /etc/motd 可根据需要命令中的 “警告文本”。\n删除root以外UID为0的用户 # \u0026lt;code\u003e# awk -F “：” \u0026#039;($3==0) {print $1} \u0026#039; /etc/passwd # userdel \"username\" \u0026lt;/code\u003e 若有 UID 为 0 的其它用户，使用 userdel 删除用户。\n防 syn 攻击优化检查主机访问控制 # 执行备份： # cp -p /etc/hosts.allow /etc/hosts.allow_bak # cp -p /etc/hosts.deny /etc/hosts.deny_bak 编辑 /etc/hosts.allow 和 /etc/hosts.deny ，文件的配置格式为：Service:host [or network/netmask] # vi /etc/hosts.allow all:192.168.4.44:allow // 允许单个IP访问所有服务进程 sshd:192.168.1.:allow // 允许192.168.1的整个网段访问SSH服务进程 #vi /etc/hosts.deny sshd:all:deny` // 拒绝其它所有 IP 访问 SSH 服务 预防Flood攻击 # # vim /etc/sysctl.conf net.ipv4.tcp_syncookies = 1 # sysctl -p // 使之生效 关闭不必要服务 # 关闭开启命令 # chkconfig 服务名 off/on // 开启关闭开机启动项 # service 服务名 stop/start // 天启关闭服务 建议关闭的服务 cups、portmap、nfslock、nfs、rpcbind、NetworkManager、iptables、ip6tables、netfs、qpidd、yum-updatesd、sendmail、postfix、rpcbind、bluetooth、firstboot、isdn、kudzu、smartd、autofs\n正常情况关闭完服务，使用 netstat -lantup 命令仅可看到 sshd 进程和业务进程。 禁止 ctrl+alt+del # # vi /etc/inittab ca::ctrlaltdel:/bin/true 将行ca::ctrlaltdel:/sbin/shutdown -r -t 4 now 修改为 ca::ctrlaltdel:/bin/true\n或者将此行删除、注释，修改为其它命令均可，如：\nca::ctrlaltdel:/bin/echo \u0026quot;\u0026quot;CTRL-ALT-DEL is disabled\u0026quot;\u0026quot;\n无用账户删除或锁定 # 执行备份： # cp -p /etc/passwd /etc/passwd.bak # cp -p /etc/shadow /etc/shadow.bak 锁定无用帐户： **方法一：**在需要锁定的用户名的密码字段前面加 !! ，建议锁定的用户：lp、uucp、games、nobody 。\n# vi /etc/shadow test:!!$1$QD1ju03H$LbV4vdBbpw.MY0hZ2D/Im1:14805:0:99999:7::: 方法二：\n# passwd -l test // 假设 test 为无用帐号 **方法三：**将 /etc/passwd 文件中的无用帐户的 shell 域设置成 /bin/false 。\n# vi /etc/passwd lp:x:4:7:lp:/var/spool/lpd:/bin/false 设置登录超时 # 执行备份： # cp -p /etc/profile /etc/profile.bak # cp -p /etc/csh.cshrc /etc/csh.cshrc.bak 在 /etc/profile 文件增加以下两行： # vi /etc/profile TMOUT=180 export TMOUT 修改 /etc/csh.cshrc 文件，添加如下行： # vi /etc/csh.cshrc set autologout=30 改变这项设置后，重新登录才能有效。\n限制 root 远程登录 # 执行备份： # cp -p /etc/securetty /etc/securetty_bak # cp -p /usr/local/etc/sshd_config /usr/local/etc/sshd_config_bak 新建一个普通用户并设置高强度密码： # useradd username # passwd username 禁止 root 用户远程登录系统： # vi /etc/securetty 注释掉 pts/x 的行，保存退出，则禁止了 root 从 telnet 登录。\n# vi /usr/local/etc/sshd_config 将 PermitRootLogin设置为 no 并不被注释，保存退出，则禁止了 root 从 ssh 登录。\n用户缺省UMASK设置 # 执行备份： # cp -p /etc/profile /etc/profile_bak # cp -p /etc/csh.login /etc/csh.login_bak # cp -p /etc/csh.cshrc /etc/csh.cshrc_bak # cp -p /etc/bashrc /etc/bashrc_bak # cp -p /root/.bashrc /root/.bashrc_bak # cp –p /root/.cshrc /root/.cshrc_bak 修改 umask 设置： # vi /etc/profile # vi /etc/csh.login # vi /etc/csh.cshrc # vi /etc/bashrc # vi /root/.bashrc # vi /root/.cshrc umask 027 将 umask 值修改为 027，保存退出。\n配置文件中若没有，添加行umask 027 到配置文件。 密码复杂度要求 # 使用 pam pam_cracklib module 或 pam_passwdqc module 实现密码复杂度，两者不能同时使用。\npam_cracklib 主要参数说明:\n参数 说明 tretry=N 重试多少次后返回密码修改错误 difok=N 新密码必需与旧密码不同的位数 dcredit=N N \u0026gt;= 0密码中最多有多少个数字；N \u0026lt; 0密码中最少有多少个数字 lcredit=N N \u0026gt;= 0密码中最多有多少个小写字母；N \u0026lt; 0密码中最少有多少个小写字母 ucredit=N N \u0026gt;= 0密码中最多有多少个大写字母；N \u0026lt; 0密码中最少有多少个大写字母 credit=N N \u0026gt;= 0密码中最多有多少个特殊字符；N \u0026lt; 0密码中最少有多少个特殊字符 minclass=N 密码组成(大/小字母，数字，特殊字符) minlen=N 新密码最短长度 pam_passwdqc主要参数说明:\n参数 说明 mix 设置口令字最小长度，默认值是 mix=disabled。 max 设置口令字的最大长度，默认值是 max=40。 passphrase 设置口令短语中单词的最少个数，默认值是 3 ，如果为 0 则禁用口令短语。 match 设置密码串的常见程序，默认值是match=4。 similar 设置当我们重设口令时，重新设置的新口令能否与旧口令相似。允许相似：similar=permit ；不允许相似：similar=deny 。 random 设置随机生成口令字的默认长度。默认值是 42 ；设为 0 则禁止该功能。 具体操作如下：\n执行备份： # cp -p /etc/pam.d/system-auth /etc/pam.d/system-auth_bak # cp -p /etc/pam.d/passwd /etc/pam.d/passwd_bak 修改策略设置： 如配置密码长度最小 8 位，至少包含大小写字母、数字、其它字符中的两类，并对 root 用户生效，配置如下：\n# vi /etc/pam.d/system-auth password requisite pam_cracklib.so dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 minclass=2 minlen=8 enforce_for_root password sufficient pam_unix.so md5 shadow nullok try_first_pass use_authtok suse设备是/etc/pam.d/passwd文件\n密码不重复 5 次设置 # 执行备份： # cp -p /etc/pam.d/system-auth /etc/pam.d/system-auth_bak 创建文件 /etc/security/opasswd，并设置权限： # touch /etc/security/opasswd # chown root:root /etc/security/opasswd # chmod 600 /etc/security/opasswd 修改策略设置，在 password required pam_unix.so所在行后面增加 remember=5 ，保存退出； # vi /etc/pam.d/system-auth password required pam_unix.so remember=5 在相应行的后面添加 remember=5 ，而不是添加一行！\n口令锁定策略 # 执行备份： # cp -p /etc/pam.d/system-auth /etc/pam.d/system-auth.bak 修改策略设置：增加 auth required pam_tally2.so even_deny_root deny=3 unlock_time=120 到第二行，即 auth required pam_env.so 后面。 # vi /etc/pam.d/system-auth auth required pam_tally2.so even_deny_root deny=3 unlock_time=120 even_deny_root：包含root用户 deny：拒绝次数 unlock_time：解锁时间 口令生存期 # 执行备份： # cp -p /etc/login.defs /etc/login.defs.bak 修改策略设置：修改 PASS_MIN_LEN 、 PASS_MAX_DAYS 、PASS_MIN_DAYS、PASS_WARN_AGE的值，保存退出。举例如下： # vi /etc/login.defs PASS_MAX_DAYS 90 //口令最大有效天数 PASS_MIN_DAYS 30 //口令最小有效天数 PASS_MIN_LEN 8 //口令最少字符数 PASS_WARN_AGE 7 //口令过期提前警告天 ftp 加固（若启用服务） # 更改 ftp 警告 Banner # 修改vsftp回显信息 # vi /etc/vsftpd/vsftpd.conf ftpd_banner=\" Authorized users only. All activity may be monitored and reported.\" 可根据实际需要修改告警文本内容。\n重启服务： # service vsftpd restart ftp 用户对文件/目录的存取权限 # 前提：系统使用vsftp\n修改 /etc/vsftpd.conf 或 /etc/vsftpd/vsftpd.conf ，确保以下行未被注释掉，如果没有该行，请添加： # vi /etc/vsftpd.conf write_enable=YES //允许上传。如果不需要上传权限，此项可不进行更改。 ls_recurse_enable=YES local_umask=022 //设置用户上传文件的属性为755 anon_umask=022 //匿名用户上传文件(包括目录)的 umask 重启 ftp 网络服务 # service vsftpd restart 限制FTP用户登录后能访问的目录 # 修改/etc/vsftpd.conf ，确保以下行未被注释掉，如果没有该行，请添加： # vi /etc/vsftpd.conf chroot_local_user=YES 重启网络服务 # service vsftpd restart 限制FTP用户登录 # 配置vsftpd.conf文件，设定只允许特定用户通过ftp登录，修改其中内容： # vi /etc/vsftpd.conf userlist_enable=YES // 此选项被激活后，VSFTPD 将读取 userlist_file 参数所指定的文件中的用户列表。 userlist_deny=NO // 决定禁止还是只允许由 userlist_file 指定文件中的用户登录FTP服务器。默认值 YES：禁止文件中的用户登录，同时也不向这些用户发出输入口令的提示；值为 NO：只允许在文件中的用户登录FTP服务器。 userlist_file=/etc/vsftpd/user_list\n判断条件 建议\u0026quot; root daemon bin sys adm lp uucp nuucp listen nobody noaccess nobody4 \u0026quot; 用户不能通过 FTP 登录。\nTelnet 告警信息设置(若启用服务) # 修改 Telnet 回显信息，修改文件 /etc/issue 和 /etc/issue.net 中的内容： #echo \" Authorized users only. \" \u0026gt; /etc/issue #echo \" Authorized users only. \" \u0026gt; /etc/issue.net 可根据需要命令中的 “警告文本”。\n重启服务： # service xinetd restart 开启 iptables 防火墙 # 防火墙是网络安全的重中之重，有关 ipatables 的使用和帮助，将会另外写一篇详细描述。\n# 开启 iptables 并设置开机自启动 # iptables service restart # chkconfig iptables on 下面是适合Web服务器的iptables规则示例和解释：\n# IPT -P INPUT DROP #1 # IPT -P FORWARD DROP #1 # IPT -P OUTPUT DROP #1 # IPT -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT #2 # IPT -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT #3 # IPT -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT #3 # IPT -A INPUT -i lo -j ACCEPT #4 # IPT -A OUTPUT -o lo -j ACCEPT #4 # IPT -A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT #5 # IPT -A INPUT -p icmp -m icmp --icmp-type 11 -j ACCEPT #5 # IPT -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT #6 1、设置INPUT,FORWARD,OUTPUT链默认target为DROP，也就是外部与服务器不能通信。 # 2、设置当连接状态为RELATED和ESTABLISHED时，允许数据进入服务器。 # 3、设置外部客户端连接服务器端口80,22。 # 4、允许内部数据循回。 # 5、允许外部ping服务器。 # 6、设置状态为RELATED和ESTABLISHED的数据可以从服务器发送到外部。 # 禁止 ping 服务器 # 禁止 ping 服务器可以使用 iptables 进行设置，同时也可采用修改 /etc/sysctl.conf 禁止。\n编辑 sysctl.conf 文件，在文件中增加一行 net.ipv4.icmp_echo_ignore_all=1 如果已经有net.ipv4.icmp_echo_ignore_all这一行了，直接修改=号后面的值，0 表示允许，1 表示禁止 修改完成后执行 sysctl -p使新配置生效。 检查是否记录安全事件日志 # 修改 /etc/syslog.conf 或 /etc/rsyslog.conf ，在文件中加入如下内容:\n# vi /etc/syslog.conf *.err;kern.debug;daemon.notice /var/log/messages # chmod 640 /var/log/messages # service rsyslog restart 禁止普通用户合用 su 切换到 root 用户 # 1）把需要 su 到 root 的用户加入 wheel 组\n# usermod -g wheel test // 例如把 test 用户加入 wheel 组 2）修改配置文件/etc/pam.d/su ，去掉下面行的注释\n# vi /etc/pam.d/su auth required pam_wheel.so use_uid // 保证当前行不被注释 3）配置生效后，仅 test 用户可使用 su 切换到 root 用户。\n安全是一个永恒的话题，没有绝对的安全，只有不断加强的安全系统和体系。同时我们应该培养良好的安全意识和操作习惯。\n","date":"2020年22月23日","externalUrl":null,"permalink":"/352.html","section":"Posts","summary":"","title":"操作系统安全加固 CentOS 篇操作系统安全加固 CentOS 篇","type":"post"},{"content":"","date":"2020年22月21日","externalUrl":null,"permalink":"/tags/mail/","section":"标签","summary":"","title":"Mail","type":"tags"},{"content":" MySQL相关操作 \u0026lt;div class=\u0026quot;clear\u0026quot; style=\u0026quot;background-color:rgb(199,203,189);clear:both;color:rgb(0,0,0);font-family:'微软雅黑';font-size:12px;\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;postBody\u0026quot; style=\u0026quot;background-color:rgb(199,203,189);width:690px;border:none;color:rgb(73,73,73);font-family:Arial, Helvetica, sans-serif;font-size:14px;line-height:1.6;\u0026quot;\u0026gt; \u0026lt;div id=\u0026quot;cnblogs_post_body\u0026quot; class=\u0026quot;blogpost-body\u0026quot; style=\u0026quot;background-color:transparent;\u0026quot;\u0026gt; \u0026lt;p\u0026gt; 一、库操作（相当于文件夹） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、创建库 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; create database 库名 engine=存储引擎 charset 字符编码; #常用存储引擎为innodb,其他还有myisam(存取速度快但支持的功能少),memory(数据保存在内存),blackhole(数据直接丢弃)；存储引擎和字符编码可以不写，使用配置文件参数 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、删除库 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; drop database 库名 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、修改库的设置 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; alter database 库名 engine=存储引擎 charset 字符编码; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 4、查看MySQL中已经创建了哪些库 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; show databases; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5、查看当前在那个库中 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; select database(); \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 6、查看创建指定库时的sql语句 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; show create database 库名; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 7、切换到指定库 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; use 库名; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 8、mysql默认库的作用 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; information_schema： 虚拟库，不占用磁盘空间，存储的是数据库启动后的一些参数，如用户表信息、列信息、权限信息、字符信息等\u0026lt;br /\u0026gt; performance_schema： MySQL 5.5开始新增一个数据库：主要用于收集数据库服务器性能参数，记录处理查询请求时发生的各种事件、锁等现象 \u0026lt;br /\u0026gt; mysql： 授权库，主要存储系统用户的权限信息，其中user表用户具有所有库的指定权限，db表用户有某些库的指定权限，tables_priv表用户有指定库下的某些表的指定权限，columns_prive表用户有指定库下的指定表的某些字段的指定权限\u0026lt;br /\u0026gt; test： MySQL数据库系统自动创建的测试数据库 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 二、表操作（相当于文件） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、创建表 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; create table 表名(字段名1 数据类型(宽度) 约束条件,字段名2 数据类型(宽度) 约束条件,.....); #约束条件中primary key、foreign key、unique key可以在所有字段之后定义，多用于定义组合键，宽度和约束条件不是必须条件 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、删除表 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; drop table 表名; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、修改表的设置 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3.1、添加字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; alter table 表名 add 字段名 数据类型(宽度) 约束条件 (after 字段名2/first); #after表示在指定字段后面创建新字段，first表示将新字段放在第一位 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3.2、修改字段定义/重定义字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; alter table 表名 modify 字段名 新数据类型(新宽度) 新约束条件;#用于修改字段定义或者不做修改只是重新定义字段使表的存储引擎和字符编码的修改生效 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3.3、修改表的参数 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; alter table 表名 engine=新存储引擎 charset 新字符编码;#如果表中已有数据需要重新定义字段才能使修改生效 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3.4、修改字段名 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; alter table 表名 change 旧字段名 新字段名 新数据类型(新宽度) 新约束条件;#可以修改字段名或者重新定义字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3.5、删除字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; alter table 表名 drop 字段名; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3.6、修改表名 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; alter table 旧表名 rename 新表名; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3.7、增加复合主键 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; alter table 表名 add primary key(); \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 4、查看当前库中存在哪些表 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; show tables; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5、查看创建表时的sql语句 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; show create table 表名; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 6、查看指定表的表结构 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; desc 表名; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 7、复制表 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; create table 表名 select 字段名1,字段名2,... from 表名2 where 条件;#复制表2的表结构以及查询到的数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; create table 表名 select 字段名1,字段名2,... from 表名2 where 不成立的条件;#只复制表2的表结构 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 三、MySQL数据类型 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、数字 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 整型（宽度表示显示的数据长度） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; tinyint 表示范围：有符号-128~127 无符号：0~255 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; int 表示范围：有符号-2147483648~2147483647 无符号0~4294967295 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; bigint 表示范围：int类型无法表示的数字 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 浮点型(数据总长度,保留小数位数) \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; float 精确度最小，足够日常使用 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; double 精确度中等 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; decimal 精确度最高 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、字符 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; char 存放与宽度相等的字符数，实际数据字符数小于宽度时用空格在后面补足，存取速度快，浪费空间 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; varchar 按实际数据的字符数存放，存取速度慢，节省空间 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、日期时间 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; datetime 完整的日期时间 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; date 只存日期 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; time 只存时间 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; year 只存年份 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; now()函数可以换取当前的日期时间并按定义的时间类型截取相应部分 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 在插入时间日期数据时只需要数据按年月日时分秒的顺序写入，格式不影响写入数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 4、枚举 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; enum('','',...) 只能选其中一个，不选择则默认给第一个值，传入数据不在范围内则该列不显示数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; set('','',...) 可以选择一个或多个，传入数据不在范围内则该列不显示数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 四、约束条件 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; primary key 设置主键 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; foreign key 设置外键 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; unique key 设置该列值必须唯一 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; not null 设置该列不能为空 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; default 设置默认值 default '默认值' \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; auto_increment 自增 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; unsigned 数字类型数字设置为无符号数 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; zerofill 数字类型长度小于显示长度时用0在左边填充 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 五、数据操作（相当于文件内容） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 1、插入数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; insert into 表名 values(),(),...;#每条数据必须包含所有字段的值，并按字段定义顺序传递 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; insert into 表名(字段名1,字段名2,...) values(),(),...;#每条数据只需要传递指定字段的值，其余字段使用默认值，没有默认值则报错 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 2、删除数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; delete from 表名 where 条件; #删除某些数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; truncate 表名;清空表 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 3、修改数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; update 表名 set 字段名1=字段值1,字段值2=字段值2,... where 条件; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 4、单表查询数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; select (distinct) 字段名1,字段名2,... from 表名 (where 条件/group by 字段名/having 条件/order by 字段名/limit 数字); \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 支持对查询字段进行+,-,*,/,%操作然后显示其结果，并且可以给该结果另起一个字段名来显示，如SELECT name, salary*12 AS Annual_salary FROM employee; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5、多表查询数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5.1、内连接 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; select 字段名1,字段名2,... from 表1 inner join 表2 on 表1.字段=表2.字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5.2、左连接（可以不断使用left join连接n多张表） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; select 字段名1,字段名2,... from 表1 left join 表2 on 表1.字段=表2.字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5.3、右连接 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; select 字段名1,字段名2,... from 表1 right join 表2 on 表1.字段=表2.字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 5.4、全连接（利用union关键字） \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; select 字段名1,字段名2,... from 表1 left join 表2 on 表1.字段=表2.字段 union select 字段名1,字段名2,... from 表1 right join 表2 on 表1.字段=表2.字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 6、子查询 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 子查询就是将一个sql语句的结果作为另一个sql语句的条件值 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; select * from employee where dep_id in (select id from department where name in ('技术','销售')); \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 六、关键字执行优先级及使用 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; from \u0026gt; on \u0026gt; join \u0026gt; where \u0026gt; group by \u0026gt; 按照select后的字段取值，有聚合就做聚合\u0026gt;having \u0026gt; select \u0026gt; distinct \u0026gt; order by \u0026gt; limit \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; group by：显示每个分组中的内容使用group_concat()函数，如SELECT post,GROUP_CONCAT(name) FROM employee GROUP BY post; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; distinct：去掉重复的数据，如SELECT DISTINCT post FROM employee; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; order by：可以按照多行排序,如order by name desc,age asc，排序标准按照指定的顺序，前一个字段的值相等则按照后面一个字段的值排序，以此类推；asc结果按升序排列，desc结果按降序排列 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; limit：规定显示数据的数量，可以指定两个值，第一个值表示显示的起始数据位置，第二个值表示一共显示的数据数量，如limit 5,5表示显示从第六条数据开始往后的五条数据 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 七、MySQL中的条件表达式 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 数值比较：\u0026gt;,\u0026lt;,=,\u0026gt;=,\u0026lt;=,!=，between 数字1 and 数字2 #结果包含边界值 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 逻辑比较：or,and,not,in,not in,is null,is not null \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 模糊查询：like '' 其中可以使用通配符，_表示匹配单个任意字符，%表示匹配任意多个的任意字符 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 正则表达式：regexp '正则表达式' \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 八、聚合函数 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; count(),max(),min(),avg(),sum() ,group_concat()#用于对指定字段执行相关操作，如SELECT SUM(salary) FROM employee WHERE depart_id=3; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 九、索引 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 索引分类：1、唯一索引 primary key unique 2、普通索引 index 3、联合索引 将多个字段组合成为一个索引 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 创建索引：1、建表时创建，唯一索引可以在字段后添加或者在所有字段后添加；普通索引只能在所有字段后添加index(字段名1,字段名2,......) 2、建表后创建 create index 索引名 on 表名 (字段名1,字段名2,.....) \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 删除索引：drop index 索引名 on 表名(字段名) #加字段名删除某个字段的索引，不加字段删除整个索引 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 适合建立索引的字段：1、字段的数据量比较小 2、字段中的数据区分度高 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 最左匹配：索引匹配按照索引字段定义顺序从左往右匹配，匹配条件中必须有定义索引时的第一个字段，因此在创建索引时应将有明确条件值的字段放在左边其余放右边 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 使用索引的方式：1、在查询语句中将索引字段作为约束条件并且给出明确的条件值或者一个较小的范围 2、匹配条件中的索引字段不能参与计算或使用函数对其操作 3、匹配条件中的索引字段对应的数据类型与数据库中存放的该字段的数据类型不一致就无法使用索引，除非该字段为主键字段或者其数据类型为整数类型 3、order by中排序依据为索引字段时，select也需要有该字段，否则无法使用索引，除非该字段为主键 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 覆盖索引：查询字段和条件字段都是相同的索引字段，此时查询效率最高 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 索引合并：多个单独的索引字段同时作为匹配条件字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; and：当多个条件字段用and连接时，如果有些字段的区分度比较低，会从左往右一直找可以区分的字段 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 十、高效sql语句注意事项 \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt;避免使用select *\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt; count(1)或count(列) 代替 count(*)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt; 创建表时尽量时 char 代替 varchar\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt; 表的字段顺序固定长度的字段优先\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt; 组合索引代替多个单列索引（经常使用多个条件查询时）\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt; 尽量使用短索引\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt; 使用连接（JOIN）来代替子查询(Sub-Queries)\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt; 连表时注意条件类型需一致\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p align=\u0026quot;left\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;font-size:15px;\u0026quot;\u0026gt; 索引散列值（重复少）不适合建索引，例：性别不适合\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;pre\u0026gt;\u0026lt;/pre\u0026gt; 十 一、慢查询优化步骤 0.先运行看看是否真的很慢，注意设置SQL_NO_CACHE 1.where条件单表查，锁定最小返回记录表。这句话的意思是把查询语句的where都应用到表中返回的记录数最小的表开始查起，单表每个字段分别查询，看哪个字段的区分度最高 2.explain查看执行计划，是否与1预期一致（从锁定记录较少的表开始查询） 3.order by limit 形式的sql语句让排序的表优先查 4.了解业务方使用场景 5.加索引时参照建索引的几大原则 6.观察结果，不符合预期继续从0分析 十二、慢查询日志配置 show variables like '%query%'; show variables like '%queries%'; set global 变量名 = 值 十三、数据备份恢复 1、单库备份 mysqldump -uroot -p123 库名 表名1 表名2 ... \u0026gt; XXX.sql 2、多库备份 mysqldump -uroot -p123 --databases 库名1 库名2 ... \u0026gt;XXX.sql 3、全库备份 mysqldump -uroot -p123 --all-databases \u0026gt; XXX.sql 4、数据库恢复 mysql -uroot -p123 库名 \u0026lt; XXX.sql 十四、数据导入导出 1、导入数据 load data infile '文件路径' into table 表名 fields terminated by '分隔符' lines terminated by '分隔符'; 2、导出数据 select * from 表名 into outfile '文件路径' fields terminated by '分隔符' lines terminated by '分隔符'; 5.6及以上版本需要修改配置文件/etc/my.cnf,在[mysqld]下加上secure-file-priv=数据导出路径 十五、命令行执行sql语句 mysql -uroot -p123 -e 'use db1；show tables;' 十六、视图 创建视图 create view 视图名 as select语句 #将单表或多表查询结果以一张虚拟表的形式保存下来，只有表结构没有自己的数据 删除视图 drop view 视图名 修改视图表结构 alter view 视图名 as 新的select语句 十七、触发器 创建触发器 create trigger 触发器名 before/after insert/update/delete on 表名 for each row begin 。。。。 end; #涉及触发器关联表数据的操作，可以用new或old提取其中指定的字段值，new表示即将插入的数据，old表示即将删除的数据 删除触发器 drop trigger 触发器名 十八、事务 事务只对数据相关的sql操作有效 start transaction; sql语句 rollback; #sql语句出现异常执行rollback回滚，取消开启事务后的所有sql操作 commit; #使之前的sql语句生效 十九、存储过程 创建存储过程 delimiter // create procedure p4( inout n1 int ) BEGIN select * from blog where id \u0026gt; n1; set n1 = 1; END // delimiter ; 查看存储过程 show create procedure auto_insert1G 使用存储过程 set @x=3; #设置全局变量 call p4(@x); #存储过程正常执行后将会修改全局变量x select @x; #查询当前全局变量的值，看存储过程是否正常执行完毕 二十、函数 需要掌握的内置函数 date_format('2017-07-20 22:22:22','%Y-%m') #输出结果为2017-07 自定义函数 delimiter // create function f1( i1 int, i2 int) returns int BEGIN declare num int; set num = i1 + i2; return(num); END // delimiter ; 执行函数 select f1(11,nid) ,name from tb2; 删除函数 drop function 函数名 二十一、流程控制 if判断语句 if 条件项 条件 条件值 then sql语句1 elseif 条件项 条件 条件值 then sql语句2 else sql语句3 end if; while循环语句 while 条件项 条件 条件值 do sql语句 end while; 二十二、其他 concat()函数定义显示格式，如select concat('\u003c名字:',name,'\u003e ','\u003c 薪资:',salary,'\u003e') as employee_info from employee;#as表示将查询结果以指定的列名显示 CONCAT_WS() 作用类似concat，第一个参数为分隔符。如SELECT CONCAT_WS(':',name,salary*12) AS Annual_salary FROM employee; 创建数据库用户 create user '用户名'@'允许登陆的IP' identified by '登陆密码' 查看指定操作的帮助信息 help 操作 如 help grant 授权 grant 操作权限(字段名1,字段名2,....) on 库名.表名 to '用户名'@'允许登陆的IP' identified by '密码'; #操作权限有select,update,delete等，字段名可加可不加，库名和表名可以是具体的也可以用*指代所有的，允许登陆的IP中可以使用%指代任意IP或者某个网段如192.168.20.%，加上identified by可以创建用户。 取消授权 revoke 操作权限(字段名1,字段名2,....) on 库名.表名 from 用户名@'允许登陆的IP'; 一对多、一对一、多对多定义 一对多：关联表中设置外键的列不唯一 一对一：关联表中设置外键的列唯一 多对多：当两个表的每条数据都对应另一张表中的多条数据时表示这两张表之间存在多对多关系，需要新建一张关系表用于存储这两张表之间的关联关系，一般关系表中设置外键的列需要设置联合唯一 if函数：有三个参数，第一个参数是判断条件，第二个参数是条件成立时的值，第三个参数是条件不成立时的值，如if(isnull(ty),0,ty)表示当体育成绩为空时值为0，不为空时值为体育的成绩 ","date":"2020年22月21日","externalUrl":null,"permalink":"/287.html","section":"Posts","summary":"","title":"MySQL相关操作MySQL相关操作","type":"post"},{"content":" PHP的扩展模块安装 \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; 模块安装总则： \u0026lt;/p\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; 进入到ext/目录下对应的模块 \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; 执行/usr/local/php/bin/phpize 也就是执行一遍phpize生成编译文件 \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; ./configure \u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;--with-php-config=/opt/php5.\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;6.27\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;/bin/php-config\u0026lt;/span\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;M\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;ake \u0026amp;\u0026amp; make install\u0026lt;/span\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#4f4f4f;\u0026quot;\u0026gt;php自身提供了很多扩展，比如curl，gmp, mbstring等等。我们在编译安装php时未必安装了所有扩展。那么在安装完php后，如果想单独安装某个php自身的扩展怎么办呢？\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color:#ff0000;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;php版本5.\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color:#ff0000;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;6.27\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;单独安装gd拓展模块需要cd 到 php-5.\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;6.27\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;/ext/gd\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;执行 phpize 生成编译文件,如果系统没有引入phpize，这个文件在PHP安装目录下的bin中\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;在这里一定要先执行make clean，这次安装了8台服务器，没有先执行make clean的100%没有安装成功，都没有添加到freetype support\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;./configure --with-php-config=/opt/php5.\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;6.27\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;/bin/php-config --with-jpeg-dir --with-png-dir --with-freetype-dir --with-zlib-dir --with-gd\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#4f4f4f;\u0026quot;\u0026gt;一般情况，如果你正确的指定了php-config或者你的机器只有一个php版本，so都会被正确安装到相应php的extension_dir。如果执行make install后，extension_dir目录下没有相应的so，可以手动将第5步中生成的so文件cp过去\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;strong\u0026gt;\u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;\u0026lt;strong\u0026gt;确认freetype 2 在编译中已被添加\u0026lt;/strong\u0026gt;\u0026lt;/span\u0026gt;\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#222222;\u0026quot;\u0026gt;make \u0026amp;\u0026amp; make install\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; PHP安装扩展模块 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color:#1f2c33;\u0026quot;\u0026gt;PHP bcmath扩展（PHP配置参数--enable-bcmath）。\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; 安装 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; BC数学函数仅在 PHP 编译时配置了 --enable-bcmath 时可用。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; PHP 的 Windows 版本已内建对此扩展的支持。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; PHP 的 Linux 版本，则需要手动安装bcmath扩展。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; 在PHP的源码包中，默认就包含bcmath扩展的安装文件，只需手动安装一下即可。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; cd /soft/php-5.5.38/ext/bcmath \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; // 进入PHP的源码包目录中的bcmatch扩展目录 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; /usr/local/php-5.5.38/bin/phpize \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; // 执行phpize命令 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; ./configure --with-php-config=/usr/local/php-5.5.38/bin/php-config \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; // 配置 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; make \u0026amp;\u0026amp; make install \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; // 编译和安装 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; 安装完成后，可以得到bcmath.so文件，将该文件拷贝至php的扩展存放目录。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; 然后，修改php的配置文件php.ini，加入如下的代码： \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; extension=bcmath.so \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; 最后，重启php服务即可。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left:0pt;\u0026quot;\u0026gt; \u0026lt;/p\u0026gt;\u0026lt;/p\u0026gt; 点赞\n收藏 分享 \u0026lt;br /\u0026gt; \u0026lt;!--打赏结束--\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;li class=\u0026quot;tool-item tool-more\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;svg t=\u0026quot;1575545411852\u0026quot; class=\u0026quot;icon\u0026quot; viewbox=\u0026quot;0 0 1024 1024\u0026quot; version=\u0026quot;1.1\u0026quot; xmlns=\u0026quot;http://www.w3.org/2000/svg\u0026quot; p-id=\u0026quot;5717\u0026quot; xmlns:xlink=\u0026quot;http://www.w3.org/1999/xlink\u0026quot; width=\u0026quot;200\u0026quot; height=\u0026quot;200\u0026quot;\u0026gt;\u0026lt;defs\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/defs\u0026gt;\u0026lt;path d=\u0026quot;M179.176 499.222m-113.245 0a113.245 113.245 0 1 0 226.49 0 113.245 113.245 0 1 0-226.49 0Z\u0026quot; p-id=\u0026quot;5718\u0026quot;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;path d=\u0026quot;M509.684 499.222m-113.245 0a113.245 113.245 0 1 0 226.49 0 113.245 113.245 0 1 0-226.49 0Z\u0026quot; p-id=\u0026quot;5719\u0026quot;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;path d=\u0026quot;M846.175 499.222m-113.245 0a113.245 113.245 0 1 0 226.49 0 113.245 113.245 0 1 0-226.49 0Z\u0026quot; p-id=\u0026quot;5720\u0026quot;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;ul class=\u0026quot;more-box\u0026quot;\u0026gt; \u0026lt;li class=\u0026quot;item\u0026quot;\u0026gt; 文章举报 \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;middle-message\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;title\u0026quot;\u0026gt; \u0026lt;span class=\u0026quot;tit\u0026quot;\u0026gt;千古若昙花\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;text\u0026quot;\u0026gt; \u0026lt;span\u0026gt;发布了14 篇原创文章\u0026lt;/span\u0026gt; · \u0026lt;span\u0026gt;获赞 3\u0026lt;/span\u0026gt; · \u0026lt;span\u0026gt;访问量 5493\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;right-message\u0026quot;\u0026gt; 私信\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 关注 \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/p\u0026gt; ","date":"2020年22月21日","externalUrl":null,"permalink":"/289.html","section":"Posts","summary":"","title":"php扩展模块的安装","type":"post"},{"content":" 阿里云为了防止垃圾邮件泛滥，将25端口禁用了，下面给出解决办法 \u0026lt;p\u0026gt; 安装对应的数字证书：这里请求安装网易126邮箱数字证书，也可以安装别的证书 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;一：126邮箱证书安装\u0026lt;/strong\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;pre class=\u0026quot;has\u0026quot;\u0026gt;\u0026lt;code\u0026gt;mkdir -p /root/.certs/ echo -n | openssl s_client -connect smtp.126.com:465 | sed -ne \u0026lsquo;/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p\u0026rsquo; \u0026gt; ~/.certs/126.crt certutil -A -n \u0026ldquo;GeoTrust SSL CA\u0026rdquo; -t \u0026ldquo;C,,\u0026rdquo; -d ~/.certs -i ~/.certs/126.crt certutil -A -n \u0026ldquo;GeoTrust Global CA\u0026rdquo; -t \u0026ldquo;C,,\u0026rdquo; -d ~/.certs -i ~/.certs/126.crt certutil -L -d /root/.certs\n接下来是安装mailx,安装mailx前关闭postfix\n二：在配置文件 vim /etc/mail.rc 末尾添加邮箱相关授权信息 set from=xxx@qq.com #开启SMTP服务的邮箱 set smtp=smtps://smtp.126.com:465 set smtp-auth-user=xxx@126.com set smtp-auth-password=xxxxxx #邮箱的授权码 set smtp-auth=login set ssl-verify=ignore set nss-config-dir=/root/.certs #证书所在目录 三：安装完成后发送可能会失败，这个时候需要以下命令解决问题 cd /root/.certs/ certutil -A -n \"GeoTrust SSL CA - G3\" -t \"Pu,Pu,Pu\" -d ./ -i 126.crt echo \"zabbix\" | mail -s \"test\" hw226234@126.com 腾讯QQ邮箱证书安装 mkdir -p /root/.certs/ echo -n | openssl s_client -connect smtp.qq.com:465 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' \u0026gt; ~/.certs/qq.crt certutil -A -n \"GeoTrust SSL CA\" -t \"C,,\" -d ~/.certs -i ~/.certs/qq.crt certutil -A -n \"GeoTrust Global CA\" -t \"C,,\" -d ~/.certs -i ~/.certs/qq.crt certutil -A -n \"GeoTrust SSL CA - G3\" -t \"Pu,Pu,Pu\" -d ~/.certs/./ -i qq.crt certutil -L -d /root/.certs ","date":"2020年22月21日","externalUrl":null,"permalink":"/288.html","section":"Posts","summary":"","title":"阿里云25号端口禁用无法发送邮件解决办法","type":"post"},{"content":" 配置普通邮件通知 \u0026lt;p\u0026gt; Jenkins配置邮件通知配置普通邮件通知配置扩展邮件通知：配置系统消息扩展邮件的模板解释全局邮件变量解说 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 需求：在每次构建完成后进行邮件通知构建结果，好判断自动化构建后的结果如何！ \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 所需要的插件：\u0026lt;span style=\u0026quot;color: #ff0000;\u0026quot;\u0026gt;Email Extension Plugin\u0026lt;/span\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 第一步安装插件：进入Jenkins的插件管理 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190606161147464.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;576\u0026quot; height=\u0026quot;128\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 安装插件完成后重启Jenkins \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 第二步进行系统配置：进入Jenkins系统配置 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 注意的一点，先配置邮箱管理员： \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190606161200862.png\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;576\u0026quot; height=\u0026quot;99\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190606161215484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNTY4NjEx,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;576\u0026quot; height=\u0026quot;221\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 第三步：进入job进行配置 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; \u0026lt;img loading=\u0026quot;lazy\u0026quot; decoding=\u0026quot;async\u0026quot; class=\u0026quot;has\u0026quot; src=\u0026quot;https://img-blog.csdnimg.cn/20190606161226567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNTY4NjEx,size_16,color_FFFFFF,t_70\u0026quot; alt=\u0026quot;\u0026quot; width=\u0026quot;576\u0026quot; height=\u0026quot;223\u0026quot; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 配置完成后便可以完成普通的邮件通知 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 相关说明： \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; ①SMTP服务器：如果你使用的是公司邮箱，那么就询问你自己公司里的运维人员吧；他们一般都知道，至少我就是问公司里的运维人员；要是你打算使用QQ邮箱，那么你需要设置下，网上有教程；网易邮箱默认开启。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 说明：SMTP是一种协议 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; ②用户默认邮件后缀：根据自己情况去设置 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; ③勾选使用SMTP认证，用户名：根据自己情况设置，密码也是。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; ④SMTP端口：默认25 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 配置好了后，可以勾选 测试，在Test e-mail recipient输入自己的邮箱，看下能否成功。 \u0026lt;/p\u0026gt; \u0026lt;h1 style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; \u0026lt;span style=\u0026quot;color: #2e74b5;\u0026quot;\u0026gt;配置扩展邮件通知：\u0026lt;/span\u0026gt; \u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 设置扩展电子邮件通知的原因： \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 只设置邮件通知的话，只能发送给固定的接收人，并且邮件内容单一，不够自由，因此需要设置扩展邮件通知。 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 所需要的插件：Email Extension \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 这个插件是Jenkins的电子邮件发布者的替代品。它允许配置电子邮件通知的各个方面：发送电子邮件时，应该收到谁以及电子邮件说明的内容 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; 第一步：进入系统配置页面找到下图所示进行配置 \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; \u0026lt;p style=\u0026quot;margin-left: 0in;\u0026quot;\u0026gt; Html的代码网上拉取的参考 \u0026lt;/p\u0026gt; \u0026lt;pre class=\u0026quot;has\u0026quot;\u0026gt;\u0026lt;code class=\u0026quot;language-html\u0026quot;\u0026gt;\u0026amp;lt;!DOCTYPE html\u0026amp;gt; \u0026lt;html\u0026gt;\n\u0026lt;head\u0026gt;\n\u0026lt;meta charset=\u0026ldquo;UTF-8\u0026rdquo;\u0026gt;\n\u0026lt;title\u0026gt;${ENV, var=\u0026ldquo;JOB_NAME\u0026rdquo;}-第${BUILD_NUMBER}次构建日志\u0026lt;/title\u0026gt;\n\u0026lt;/head\u0026gt;\n\u0026lt;body leftmargin=\u0026ldquo;8\u0026rdquo; marginwidth=\u0026ldquo;0\u0026rdquo; topmargin=\u0026ldquo;8\u0026rdquo; marginheight=\u0026ldquo;4\u0026rdquo; offset=\u0026ldquo;0\u0026rdquo;\u0026gt;\n\u0026lt;table width=\u0026ldquo;95%\u0026rdquo; cellpadding=\u0026ldquo;0\u0026rdquo; cellspacing=\u0026ldquo;0\u0026rdquo; style=\u0026ldquo;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif\u0026rdquo;\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;(本邮件由程序自动下发，请勿回复！)\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;h2\u0026gt;\u0026lt;font color=\u0026quot;#FF0000\u0026quot;\u0026gt;构建结果 - ${BUILD_STATUS}\u0026lt;/font\u0026gt;\u0026lt;/h2\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\u0026lt;br /\u0026gt;\n\u0026lt;b\u0026gt;\u0026lt;font color=\u0026quot;#0B610B\u0026quot;\u0026gt;构建信息\u0026lt;/font\u0026gt;\u0026lt;/b\u0026gt;\n\u0026lt;hr size=\u0026ldquo;2\u0026rdquo; width=\u0026ldquo;100%\u0026rdquo; align=\u0026ldquo;center\u0026rdquo; /\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\u0026lt;a href=\u0026quot;${PROJECT_URL}\u0026quot;\u0026gt;${PROJECT_URL}\u0026lt;/a\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;项目名称：${PROJECT_NAME}\u0026lt;/li\u0026gt;\n\u0026lt;li\u0026gt;GIT路径：\u0026lt;a href=\u0026quot;${GIT_URL}\u0026quot;\u0026gt;${GIT_URL}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;构建编号：${BUILD_NUMBER}\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;触发原因：${CAUSE}\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;构建日志：\u0026lt;a href=\u0026quot;${BUILD_URL}console\u0026quot;\u0026gt;${BUILD_URL}console\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;b\u0026gt;\u0026lt;font color=\u0026quot;#0B610B\u0026quot;\u0026gt;变更信息:\u0026lt;/font\u0026gt;\u0026lt;/b\u0026gt;\n\u0026lt;hr size=\u0026ldquo;2\u0026rdquo; width=\u0026ldquo;100%\u0026rdquo; align=\u0026ldquo;center\u0026rdquo; /\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;上次构建成功后变化 : ${CHANGES_SINCE_LAST_SUCCESS}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; \u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;上次构建不稳定后变化 : ${CHANGES_SINCE_LAST_UNSTABLE}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; \u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;历史变更记录 : \u0026lt;a href=\u0026quot;${PROJECT_URL}changes\u0026quot;\u0026gt;${PROJECT_URL}changes\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; \u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;ul\u0026gt;\n\u0026lt;li\u0026gt;变更集:${JELLY_SCRIPT,template=\u0026ldquo;html\u0026rdquo;}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\n\u0026lt;/ul\u0026gt; \u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;!\u0026ndash;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;b\u0026gt;\u0026lt;font color=\u0026quot;#0B610B\u0026quot;\u0026gt;Failed Test Results\u0026lt;/font\u0026gt;\u0026lt;/b\u0026gt;\n\u0026lt;hr size=\u0026ldquo;2\u0026rdquo; width=\u0026ldquo;100%\u0026rdquo; align=\u0026ldquo;center\u0026rdquo; /\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;pre style=\u0026ldquo;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif\u0026rdquo;\u0026gt;$FAILED_TESTS\u0026lt;/pre\u0026gt;\n\u0026lt;br /\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;b\u0026gt;\u0026lt;font color=\u0026quot;#0B610B\u0026quot;\u0026gt;构建日志 (最后 100行):\u0026lt;/font\u0026gt;\u0026lt;/b\u0026gt;\n\u0026lt;hr size=\u0026ldquo;2\u0026rdquo; width=\u0026ldquo;100%\u0026rdquo; align=\u0026ldquo;center\u0026rdquo; /\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\u0026ndash;\u0026gt;\n\u0026lt;!\u0026ndash; \u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;Test Logs (if test has ran): \u0026lt;a\nhref=\u0026quot;${PROJECT_URL}ws/TestResult/archive_logs/Log-Build-${BUILD_NUMBER}.zip\u0026quot;\u0026gt;${PROJECT_URL}/ws/TestResult/archive_logs/Log-Build-${BUILD_NUMBER}.zip\u0026lt;/a\u0026gt;\n\u0026lt;br /\u0026gt;\n\u0026lt;br /\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt; \u0026ndash;\u0026gt;\n\u0026lt;!\u0026ndash;\n\u0026lt;tr\u0026gt;\n\u0026lt;td\u0026gt;\n\u0026lt;textarea cols=\u0026ldquo;80\u0026rdquo; rows=\u0026ldquo;30\u0026rdquo; readonly=\u0026ldquo;readonly\u0026rdquo; style=\u0026ldquo;font-family: Courier New\u0026rdquo;\u0026gt;${BUILD_LOG, maxLines=100,escapeHtml=true}\u0026lt;/textarea\u0026gt;\n\u0026lt;/td\u0026gt;\n\u0026lt;/tr\u0026gt;\u0026ndash;\u0026gt;\n\u0026lt;hr size=\u0026ldquo;2\u0026rdquo; width=\u0026ldquo;100%\u0026rdquo; align=\u0026ldquo;center\u0026rdquo; /\u0026gt;\n\u0026lt;/table\u0026gt;\n\u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n第二步： 第三步：设置默认邮件出发通知 第四步：进入Job进行配置 第五步：添加配置完成后构建项目查看收件箱 如果发现收不到邮件请检查手机列表是否为空 配置系统消息 方法都是同样的道理。展示的形式不一样而已 所需要的插件： OWASP Markup Formatter： OWASP标记格式化程序插件 使用OWASP Java HTML Sanitizer ，可以在项目描述等中输入安全的HTML标记。 第一步： 配置如图：进入系统配置 这里输入需要展示的系统信息，如果是文本格式的就直接输入展示的文本内容，若是html形式的就输入代码 \u0026lt;form\u0026gt;\u0026lt;p\u0026gt;\u0026lt;B\u0026gt;\u0026lt;font size=\"5\" color=\"red\" \u0026gt;版本发布通知\u0026lt;/font\u0026gt;\u0026lt;/B\u0026gt;\u0026lt;/p\u0026gt;\u0026lt;/form\u0026gt; \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt; \u0026lt;p\u0026gt;\u0026lt;B\u0026gt;\u0026lt;font size=\"3\" color=\"red\" \u0026gt;此次发布结果：\u0026lt;/font\u0026gt;\u0026lt;/B\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;font size=\"3\" color=\"green\" \u0026gt;成功\u0026lt;/font\u0026gt; \u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt; \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt; \u0026lt;p\u0026gt;\u0026lt;B\u0026gt;\u0026lt;font size=\"3\" color=\"red\" \u0026gt;此次发布版本：\u0026lt;/font\u0026gt;\u0026lt;/B\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;textarea text=\"TEXT\" cols=value rows=value disabled=\"disabled\"\u0026gt; 系统版本名称-版本号 \u0026lt;/textarea\u0026gt; \u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt; \u0026lt;ul\u0026gt;\u0026lt;li\u0026gt; \u0026lt;p\u0026gt;\u0026lt;B\u0026gt;\u0026lt;font size=\"3\" color=\"red\" \u0026gt;版本新增内容：\u0026lt;/font\u0026gt;\u0026lt;/B\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;textarea text=\"TEXT\" cols=value rows=value disabled=\"disabled\"\u0026gt; （1）新增接口： （2）修复bug： \u0026lt;/textarea\u0026gt; \u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt; 仅供参考 第二步：进入安全配置与管理选择对应的系统消息展示方式 如果需要使用html格式的展示需要安装插件：Markup Formatter 下面是html的展示效果图： 这是文本形式的效果 扩展邮件的模板解释 邮件通知配置相关的全局属性详解： 1. Override Global Settings：如果不选，该插件将使用默认的E-mail Notification通知选项。反之，您可以通过指定不同于( 默认选项)的设置来进行覆盖。 2. Default Content Type：指定构建后发送邮件内容的类型，有Text和HTML两种. 3. Use List-ID Email Header：为所有的邮件设置一个List-ID的邮件信头 4. Add 'Precedence: bulk' Email Header：设置优先级 5. Default Recipients：自定义默认电子邮件收件人列表。如果没有被项目配置覆盖,该插件会使用这个列表。您可以在项目配置使用$ DEFAULT_RECIPIENTS参数包括此默认列表，以及添加新的地址在项目级别。添加抄送：cc:电子邮件地址例如,CC:someone@somewhere.com 6. Reply To List：回复列表, A comma separated list of e-mail addresses to use in the Reply-To header of the email. This value will be available as $DEFAULT_REPLYTO in the project configuration. 7. Emergency reroute：如果这个字段不为空，所有的电子邮件将被单独发送到该地址（或地址列表）。 8. Excluded Committers：防止邮件被邮件系统认为是垃圾邮件,邮件列表应该没有扩展的账户名(如:@domain.com),并且使用逗号分隔 9. Default Subject：自定义邮件通知的默认主题名称。该选项能在邮件的主题字段中替换一些参数，这样你就可以在构建中包含指定的输出信息。 10. Maximum Attachment Size：邮件最大附件大小。 11. Default Content：自定义邮件通知的默认内容主体。该选项能在邮件的内容中替换一些参数，这样你就可以在构建中包含指定的输出信息。 12. Default Pre-send Script：默认发送前执行的脚本（注：grooy脚本，这是我在某篇文章上看到的，不一定准确）。 13. Enable Debug Mode：启用插件的调试模式。这将增加额外的日志输出，构建日志以及Jenkins的日志。在调试时是有用的，但不能用于生产。 14. Enable Security：启用时，会禁用发送脚本的能力，直接进入Jenkins实例。如果用户试图访问Jenkins管理对象实例，将抛出一个安全异常。 15. Content Token Reference：邮件中可以使用的变量，所有的变量都是可选的。 全局邮件变量解说 1.email-ext插件允许使用变量来动态插入数据到邮件的主题和内容主体中。 变量是一个以$(美元符号)开始，并以空格结束的字符串。 当一个邮件触发时，主题和内容主体字段的所有变量都会通过真实的值动态地替换。 同样，变量中的“值”能包含其它的变量，都将被替换成真实的内容。 2.比如，项目配置页的默认主题和内容分别对应的是全局配置页面的DEFAULT_SUBJECT和DEFAULT_CONTENT，因此它会自动地使用全局的配置。 3.同理，触发器中的Subject和Content分别对应的是项目配置页面的DEFAULT_SUBJECT和DEFAULT_CONTENT，所以它也会自动地使用项目的配置。 由于变量中的“值”能包含其它的变量，所以就能为变量快速地创建不同的切入点：全局级别(所有项目)，专属级别(单一项目)，触发器级别(构建结果)。 4.如果你要查看所有可用的变量，你可以点击配置页的Content Token Reference的问号获取详细的信息。 5.所有的变量都是可选的，每个变量可以如下表示，字符串类型使用name=“value”，而布尔型和数字型使用name=value。如果{和}标记里面没有变量，则不会被解析。 示例：$TOKEN,${TOKEN},${TOKEN,count=100},${ENV,var=”PATH”} 提示：用英文逗号分隔变量的参数。 6.常用的属性如下： ${FILE,path=\"PATH\"} 包括指定文件（路径）的含量相对于工作空间根目录。 path文件路径，注意：是工作区目录的相对路径。 ${BUILD_NUMBER} 显示当前构建的编号。 ${JOB_DESCRIPTION} 显示项目描述。 ${SVN_REVISION} 显示svn版本号，还支持Subversion插件出口的SVN_REVISION_n版本。 ${CAUSE} 显示谁、通过什么渠道触发这次构建。 ${CHANGES } -显示上一次构建之后的变化。 showPaths 如果为 true,显示提交修改后的地址；默认false。 showDependencies 如果为true，显示项目构建依赖；默认为false format 遍历提交信息，一个包含%X的字符串，其中%a表示作者，%d表示日期，%m表示消息，%p表示路径，%r表示版本。注意，并不是所有的版本系统都支持%d和%r。如果指定showPaths将被忽略。默认“[%a] %m\\n”。 pathFormat 一个包含“%p”的字符串，用来标示怎么打印路径。 ${BUILD_ID}显示当前构建生成的ID。 ${PROJECT_NAME} 显示项目的全名。 ${PROJECT_DISPLAY_NAME} 显示项目的显示名称。 ${SCRIPT} 从一个脚本生成自定义消息内容，自定义脚本应该放在\"$JENKINS_HOME/email-templates\"。当使用自定义脚本时会默认搜索$JENKINS_HOME/email-templatesdirectory目录。其他的目录将不会被搜索。 script 当其使用的时候，仅仅只有最后一个值会被脚本使用（不能同时使用script和template）。 template常规的simpletemplateengine格式模板。 ${JENKINS_URL} 显示Jenkins服务器的url地址（你可以再系统配置页更改）。 ${BUILD_LOG_MULTILINE_REGEX}按正则表达式匹配并显示构建日志。 regex java.util.regex.Pattern 生成正则表达式匹配的构建日志；无默认值，可为空。 maxMatches 匹配的最大数量。如果为0，将匹配所有；默认为0。 showTruncatedLines 如果为true，包含[...truncated ### lines...]行；默认为true。 substText 如果非空，就把这部分文字（而不是整行）插入该邮件；默认为空。 escapeHtml 如果为true，格式化HTML；默认为false。 matchedSegmentHtmlStyle 如果非空，输出HTML。匹配的行数将变为 html escaped matched line 格式；默认为空。 ${BUILD_LOG} 显示最终构建日志。 maxLines 日志最多显示的行数，默认250行。 escapeHtml 如果为true，格式化HTML；默认false。 ${PROJECT_URL} 显示项目的URL地址。 ${BUILD_STATUS} -显示当前构建的状态(失败、成功等等) ${BUILD_URL} -显示当前构建的URL地址。 ${CHANGES_SINCE_LAST_SUCCESS} -显示上一次成功构建之后的变化。 reverse在顶部标示新近的构建；默认false。 format遍历构建信息，一个包含%X的字符串，其中%c为所有的改变，%n为构建编号；默认”Changes for Build #%nn%cn”。 showPaths,changesFormat,pathFormat分别定义如${CHANGES}的showPaths、format和pathFormat参数。 ${CHANGES_SINCE_LAST_UNSTABLE} -显示显示上一次不稳固或者成功的构建之后的变化。 reverse在顶部标示新近的构建；默认false format遍历构建信息，一个包含%X的字符串，其中%c为所有的改变，%n为构建编号；默认”Changes for Build #%nn%cn”。 showPaths,changesFormat,pathFormat分别定义如${CHANGES}的showPaths、format和pathFormat参数。 ${ENV} –显示一个环境变量。 var– 显示该环境变量的名称；如果为空，显示所有，默认为空。 ${FAILED_TESTS} -如果有失败的测试，显示这些失败的单元测试信息。 ${JENKINS_URL} -显示Jenkins服务器的地址。(你能在“系统配置”页改变它)。 ${HUDSON_URL} -不推荐，请使用$JENKINS_URL ${PROJECT_URL} -显示项目的URL。 ${SVN_REVISION} -显示SVN的版本号。 ${JELLY_SCRIPT} -从一个Jelly脚本模板中自定义消息内容。有两种模板可供配置：HTML和TEXT。你可以在$JENKINS_HOME/email-templates下自定义替换它。当使用自动义模板时，”template”参数的名称不包含“.jelly”。 template模板名称，默认”html”。 ${TEST_COUNTS} -显示测试的数量。 var– 默认“total”。 total -所有测试的数量。 fail -失败测试的数量。 skip -跳过测试的数量。 ","date":"2020年22月21日","externalUrl":null,"permalink":"/286.html","section":"Posts","summary":"","title":"Jenkins配置普通邮件通知","type":"post"},{"content":"","date":"2020年22月21日","externalUrl":null,"permalink":"/categories/python-%E5%87%BD%E6%95%B0/","section":"Categories","summary":"","title":"Python-函数","type":"categories"},{"content":" \u0026lt;br /\u0026gt; 1.堆\u0026lt;br /\u0026gt; 堆是一个二叉树，其中每个父亲节点的值都不大于其所有子节点的值。\u0026lt;br /\u0026gt; \u0026lt;strong\u0026gt;使用数组或列表来实现堆时，对于所有的k（下标，从0开始）都满足heap[k]\u0026lt;=heap[2\u0026lt;em\u0026gt;k+1]和heap[k]\u0026lt;=heap[2\u0026lt;/em\u0026gt;k+2],并且堆中最小的元素总是位于二叉树的根节点。\u0026lt;/strong\u0026gt; 栈又名堆栈，它是一种运算受限的线性表。其限制是仅允许在表的一端进行插入和删除运算。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；\u0026lt;/p\u0026gt; \u0026lt;pre\u0026gt;\u0026lt;code\u0026gt;import heapq #引入堆模块 import random #引入random模块 data=random.shuffle(list(range(10))) #列表初始化为打乱的数字 heap=[] #建堆 for n in data: heapq.heappush(heap,n) #堆初始化 heapq.heappush(heap,0.5) #新数据入堆\nheapq.heappop(heap) #弹出最小的元素，堆会自动重建 list=[1,2,3] #初始化列表 heapq.heapify(list) #将列表转换为堆 heapq.heapreplace(list,6) #替换列表中的元素值，自动重建堆 heapq.nlargest(2,list) #返回堆中最大的两个元素 heapq.nsmallest(1,list) #返回堆中最小的元素 2.队列\n队列的特点是先进先出（FIFO）和后进后出（LILO）。 队列是一种特殊的线性表，特殊之处在于它只允许在表的前端（front）进行删除操作，而在表的后端（rear）进行插入操作，和栈一样，队列是一种操作受限制的线性表。进行插入操作的端称为队尾，进行删除操作的端称为队头。队列中没有元素时，称为空队列。 import queue #引入队列模块（Python3.x中使用queue,Python2.x使用Queue） q=queue.Queue() for i in range(3) q.put(i) #元素入队 \u003e\u0026gt;\u0026gt;q.queue \u003e\u0026gt;\u0026gt;dqueue([0,1,2]) q.get() #队列元素出队 q1=queue.LifoQueue(5) #后进先出队列（后进元素在队列get()操作时先出） q2=queue.PriorityQueue(5) #优先级队列（默认出队时按从小到大） 自定义队列结构： class myQueue: def __init__(self, size=10): self._content=[] self._size=size self._current=0 def Setsize(self,size): if size\u0026lt;size._current: #如果缩小队列，应该删除后面的元素 for i in range(size,self._current)[::-1]: del self._current[i] self._current=size self._size=size def put(self,v): #进队 if self._current\u0026lt;self.size: self._current.append(v) self._current=self._current+1 else: print('This queue is full !') def get(self): #出队 if self_content: self._current=self._current-1 return self._current.pop(0) else: print('This queue is empty !') def show(self): #查看队列元素 if self._content: print(self._content) else: print('This queue is empty !') def empty(self): #空队列 self._current=[] def isEmpty(self): if not self._content: return Ture else: return False def isFull(self): if self._current==self._size: return True else: return False if __name__=='__main__': print('Please use me as a moudle.') 将上述代码保存为myQueue.py文件，模块创建参看：\nhttps://blog.csdn.net/qxyloveyy/article/details/104345359 import myQueue #引入自定义模块 q=myQueue.myQueue() #队列初始化 \u003e\u0026gt;\u0026gt;q.isFull() \u003e\u0026gt;\u0026gt;False #可以调用myQueue模块中的所有函数，不再赘述 3.栈\n栈是一种先进后出（FILO）或后进先出（LIFO）的数据结构。 栈，又名堆栈，它是一种运算受限的线性表。其限制是仅允许在表的一端进行插入和删除运算。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称作出栈或退栈，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。栈按照先进后出的原则存储数据，先进入的数据被压入栈底，最后的数据在栈顶，需要读数据的时候从栈顶开始弹出数据（最后一个数据被第一个读出来）。栈具有记忆作用，对栈的插入与删除操作中，不需要改变栈底指针。\nPython本身就可以实现栈的基本操作！ class myStack: def __init__(self,size=10): self._content=[] self._current=0 self._size=size def empty(self): self._content=[] self._current=0 def isEmpty(self): if not self._content: return Ture else: return False def isFull(self): if self._current==self._size: return True else: return False def setSize(self,size): #如果缩小栈空间，则删除指定大小之后的元素 if size\u0026lt;self._current: for i in range(size,self._current)[::-1]: def self._content[i] self._current=size self._size=size def push(self,v): if len(self._content)\u0026lt;self._size: self._content.append(v) self._current=self.self._current+1 #栈中·元素个数加1 else: print('This stack is full !') def pop(self): if self._content: self._current=self._current-1 #栈中元素个数减1 return self.content.pop() else: print('This stack is empty !') def show(self): print(self._content) if __name__=='__main__': print('Please use me as a Model !') 4.链表\n链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。 链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 相比于线性表顺序结构，操作复杂。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)。\n可以使用Python列表来实现链表简易功能！ my_linkTable=[] for i in range(3): my_linkTable.append(i) #在尾部追加节点 my_linkTable.insert(1,4) #在链表中插入元素 my_linkTable.remove(my_linkTable[2]) #删除节点 5.二叉树\n二叉树是每个结点最多有两个子树的树结构。通常子树被称作“左子树”（left subtree）和“右子树”（right subtree）。二叉树常被用于实现二叉查找树和二叉堆。 一棵深度为k，且有2^k-1个结点的二叉树，称为满二叉树。这种树的特点是每一层上的结点数都是最大结点数。而在一棵二叉树中，除最后一层外，若其余层都是满的，并且或者最后一层是满的，或者是在右边缺少连续若干结点，则此二叉树为完全二叉树。具有n个结点的完全二叉树的深度为floor(log2n)+1。深度为k的完全二叉树，至少有2k-1个叶子结点，至多有2k-1个结点。\n自定义二叉树结构 class BinaryTree: def __init__(self,value): self._left=None self._right=None self.data=value def insertLeftChild(self,value): #创建左子树 if self._left: print('Left child tree already exists.') else: self._left=BinaryTree(value) return self._left def insertRightChild(right,value): #创建右子树 if self._left: print('Right child tree already exists.') else: self._right=BinaryTree(value) return self._right def show(self): print(self._data) def preOrder(self): #前序遍历 print(self._data) #输出根节点的值 if self._left: #遍历左子树 self._left.preOrder() if self._right: #遍历右子树 self._right.preOrder() def postOrder(self): #后续遍历 if self._left: #遍历左子树 self._left.postOrder() if self._right: #遍历右子树 self._right.postOrder() print(self._data) def inOrder(self): #中序遍历 if self._left: #遍历左子树 self._left.inOrder() print(self._data) if self._right: #遍历右子树 self._right.inOrder() if __name__=='__main__': print('Please use me as a model !') 6.有向图\n一个有向图D是指一个有序三元组(V(D)，A(D)，ψD) ，其中ψD)为关联函数，它使A(D)中的每一个元素(称为有向边或弧)对应于V(D)中的一个有序元素(称为顶点或点)对．\n自定义有向图结构！ def searchPath(graph,start,end): results=[] __generatePath(graph,[start],end,results) reults.sort(key=lambda x:len(x)) #按所有路径的长度排序 return results def __generatePath(graph,path,end,results): current=path[-1] if current==end: results.append(path) else: for i in graph[current]: if i not in path: __generatePath(graph,path+[n],end,results) def showPath(results): print('The path from ',results[0][0], 'to' ,results[0][-1],' is: ') for path in results: print(path) if __name__=='__main__': graph={'A':['B','C','D'] 'B':['C'] 'C':['D'] 'D':['E']} r1=searchPath(graph,'A','D') showPath(r1) \u003e\u0026gt;\u0026gt;The path is from A to D is: \u003e\u0026gt;\u0026gt;['A','D'] \u003e\u0026gt;\u0026gt;['A','B','C','D'] 其他参考文章：\nPython开发环境搭建：\nhttps://blog.csdn.net/qxyloveyy/article/details/104227923\nPython序列参看文章：\nhttps://blog.csdn.net/qxyloveyy/article/details/104391462 ","date":"2020年22月21日","externalUrl":null,"permalink":"/285.html","section":"Posts","summary":"","title":"Python程序设计之数据结构","type":"post"},{"content":" \u0026lt;br /\u0026gt; \u0026lt;svg xmlns=\u0026quot;http://www.w3.org/2000/svg\u0026quot; style=\u0026quot;display: none;\u0026quot;\u0026gt;\u0026lt;path stroke-linecap=\u0026quot;round\u0026quot; d=\u0026quot;M5,0 0,2.5 5,5z\u0026quot; id=\u0026quot;raphael-marker-block\u0026quot; style=\u0026quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\u0026quot;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;/svg\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; #场景描述\u0026lt;br /\u0026gt; #我在Centos7.3安装了源码编译的openssh8.0后，不记得了有没有添加参数–with-pam\u0026lt;br /\u0026gt; #安装编译完成后对sshd_config进行了如下的配置\u0026lt;br /\u0026gt; ##############################################\u0026lt;br /\u0026gt; AllowUsers root\u0026lt;br /\u0026gt; AllowGroups root\u0026lt;br /\u0026gt; MaxAuthTries 4\u0026lt;br /\u0026gt; MACs hmac-sha2-512,hmac-sha2-256\u0026lt;br /\u0026gt; Ciphers aes256-ctr,aes192-ctr,aes128-ctr\u0026lt;br /\u0026gt; HostbasedAuthentication no\u0026lt;br /\u0026gt; ClientAliveCountMax 3\u0026lt;br /\u0026gt; ClientAliveInterval 300\u0026lt;br /\u0026gt; PassordAuthentication yes\u0026lt;br /\u0026gt; UsePAM yes #这个不太记得开没开启了，应该是开启的\u0026lt;br /\u0026gt; X11Forwarding yes是\u0026lt;br /\u0026gt; PermitRootLogin yes\u0026lt;br /\u0026gt; #############################################\u0026lt;br /\u0026gt; #同时我还对用户尝试登陆次数进行了限制，3次失败则锁定200秒\u0026lt;br /\u0026gt; #配置如下\u0026lt;br /\u0026gt; ####################\u0026lt;br /\u0026gt; #/etc/login.defs /etc/pam.d/system-auth, /etc/pam.d/password-auth, /etc/pam.d/sshd, /etc/pam.d/login的配置如下\u0026lt;br /\u0026gt; 在第二行加了\u0026lt;br /\u0026gt; auth required pam_tally2.so deny=5 unlock_time=100 even_deny_root root_unlock_time=200\u0026lt;br /\u0026gt; ###################################################################################################################\u0026lt;br /\u0026gt; #参数说明\u0026lt;br /\u0026gt; even_deny_root 也限制root用户；\u0026lt;br /\u0026gt; deny 设置普通用户和root用户连续错误登陆的最大次数，超过最大次数，则锁定该用户\u0026lt;br /\u0026gt; unlock_time 设定普通用户锁定后，多少时间后解锁，单位是秒；\u0026lt;br /\u0026gt; root_unlock_time 设定root用户锁定后，多少时间后解锁，单位是秒；\u0026lt;br /\u0026gt; 此处使用的是 pam_tally2 模块，如果不支持 pam_tally2 可以使用 pam_tally 模块。另外，不同的pam版本，设置可能有所不同，具体使用方法，可以参照相关模块的使用规则。\u0026lt;br /\u0026gt; ###################################################################################################################\u0026lt;br /\u0026gt; 这个只是限制了用户从tty登录，而没有限制远程登录，如果想限制远程登录，需要改sshd文件\u0026lt;br /\u0026gt; /etc/pam.d/sshd\u0026lt;br /\u0026gt; auth required pam_tally2.so deny=5 unlock_time=100 even_deny_root root_unlock_time=200\u0026lt;br /\u0026gt; ######设置密码尝试次数锁定\u0026lt;br /\u0026gt; 编辑/etc/pam.d/password-auth和/etc/pam.d/system-auth文件，添加以下行：\u0026lt;br /\u0026gt; auth required pam_faillock.so preauth audit silent deny=5 unlock_time=200\u0026lt;br /\u0026gt; auth [success=1 default=bad] pam_unix.so\u0026lt;br /\u0026gt; auth [default=die] pam_faillock.so authfail audit deny=5 unlock_time=200\u0026lt;br /\u0026gt; auth sufficient pam_faillock.so authsucc audit deny=5 unlock_time=200\u0026lt;br /\u0026gt; ######设置密码尝试次数锁定\u0026lt;br /\u0026gt; ###################################################################################################################\u0026lt;br /\u0026gt; 相关命令\u0026lt;br /\u0026gt; pam_tally2 -r -u aihuidi 解锁aihuidi用户\u0026lt;br /\u0026gt; pam_tally2 --user 在进行查看用户登录失败次数\u0026lt;br /\u0026gt; ###################################################################################################################\u0026lt;br /\u0026gt; 进行上面的一系列配置后重启系统后ssh再也连接不上去了\u0026lt;br /\u0026gt; 就算密码正确也连接不上\u0026lt;br /\u0026gt; 猜想可能是因为\u0026lt;br /\u0026gt; 密码过期了，但是密码过期会登录成功要求你改密码\u0026lt;br /\u0026gt; 尝试次数过多用户被锁定了，但是密码是复制过去的，出错可能性很小\u0026lt;br /\u0026gt; 这时候我去找到管理虚拟机的人，直接操作虚拟机，\u0026lt;br /\u0026gt; 可怕的事情来了，打开虚拟机本地终端也不能login，完蛋了。咋办呀 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 心里一万个曹尼玛飞过\u0026lt;br /\u0026gt; 难道真的是密码错了？行吧。我重置密码够了吧？\u0026lt;br /\u0026gt; 进入单用户重置密码\u0026lt;br /\u0026gt; ######################################################\u0026lt;br /\u0026gt; 加载内核时按一下e进入\u0026lt;br /\u0026gt; 在内核哪一行末尾加 init=/bin/sh\u0026lt;br /\u0026gt; ctrl + X重启\u0026lt;br /\u0026gt; 进入后mount -o remount,rw /\u0026lt;br /\u0026gt; 修改密码\u0026lt;br /\u0026gt; passwd修改成功之后重启系统\u0026lt;br /\u0026gt; ######################################################\u0026lt;br /\u0026gt; 进行重置密码后密码百分百正确了吧？\u0026lt;br /\u0026gt; 操蛋的玩意，还是不能登录，这啥玩意，咋的了\u0026lt;br /\u0026gt; 行吧，再次进入查看相关配置吧\u0026lt;br /\u0026gt; ######################################################\u0026lt;br /\u0026gt; 加载内核时按一下e进入\u0026lt;br /\u0026gt; 找到ro那个位置，ro的意思是read only，将“ro”替换成 rw init=/sysroot/bin/sh\u0026lt;br /\u0026gt; 执行chroot /sysroot。其中chroot命令用来切换系统，/sysroot/目录就是原始系统\u0026lt;br /\u0026gt; 在这里可以做你想做的事情了\u0026lt;br /\u0026gt; ###############################\u0026lt;br /\u0026gt; 我查看了下ssh的日志发现了一个可疑的东西,只要一ssh登录就会报错\u0026lt;br /\u0026gt; error：could not get shadow information for root #systemctl status sshd -l进行查看\u0026lt;br /\u0026gt; 另外一个信息是没有加载pam \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 我做的是直接把我源码安装的ssh卸载了\u0026lt;br /\u0026gt; 然后在yum安装一个，安装好之后进行最开始的配置\u0026lt;br /\u0026gt; 修改密码root\u0026lt;br /\u0026gt; ssh localhost\u0026lt;br /\u0026gt; 登录成功了\u0026lt;br /\u0026gt; 重启sshd\u0026lt;br /\u0026gt; 重启reboot\u0026lt;br /\u0026gt; ###############################\u0026lt;br /\u0026gt; good连接成功了 \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; ###############################\u0026lt;br /\u0026gt; 总结原因\u0026lt;br /\u0026gt; 设置密码尝试次数锁定：尝试次数过多锁定，但是后面到时间后自动解锁\u0026lt;br /\u0026gt; 所以前面的某条猜想破灭\u0026lt;br /\u0026gt; 密码过期也不成立，因为修改密码后任然不可登陆\u0026lt;br /\u0026gt; 最后问题是PAM编译时候没有正确安装\u0026lt;br /\u0026gt; 如果想要重来的话正确编译安装好pam就行了\u0026lt;br /\u0026gt; ##################################### \u0026lt;/p\u0026gt;\u0026lt;/p\u0026gt; 点赞\n收藏 分享 \u0026lt;br /\u0026gt; \u0026lt;!--打赏结束--\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;li class=\u0026quot;tool-item tool-more\u0026quot;\u0026gt; \u0026lt;p\u0026gt; \u0026lt;svg t=\u0026quot;1575545411852\u0026quot; class=\u0026quot;icon\u0026quot; viewbox=\u0026quot;0 0 1024 1024\u0026quot; version=\u0026quot;1.1\u0026quot; xmlns=\u0026quot;http://www.w3.org/2000/svg\u0026quot; p-id=\u0026quot;5717\u0026quot; xmlns:xlink=\u0026quot;http://www.w3.org/1999/xlink\u0026quot; width=\u0026quot;200\u0026quot; height=\u0026quot;200\u0026quot;\u0026gt;\u0026lt;defs\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;/defs\u0026gt;\u0026lt;path d=\u0026quot;M179.176 499.222m-113.245 0a113.245 113.245 0 1 0 226.49 0 113.245 113.245 0 1 0-226.49 0Z\u0026quot; p-id=\u0026quot;5718\u0026quot;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;path d=\u0026quot;M509.684 499.222m-113.245 0a113.245 113.245 0 1 0 226.49 0 113.245 113.245 0 1 0-226.49 0Z\u0026quot; p-id=\u0026quot;5719\u0026quot;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;path d=\u0026quot;M846.175 499.222m-113.245 0a113.245 113.245 0 1 0 226.49 0 113.245 113.245 0 1 0-226.49 0Z\u0026quot; p-id=\u0026quot;5720\u0026quot;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;ul class=\u0026quot;more-box\u0026quot;\u0026gt; \u0026lt;li class=\u0026quot;item\u0026quot;\u0026gt; 文章举报 \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;middle-message\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;title\u0026quot;\u0026gt; \u0026lt;span class=\u0026quot;tit\u0026quot;\u0026gt;千古若昙花\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;text\u0026quot;\u0026gt; \u0026lt;span\u0026gt;发布了14 篇原创文章\u0026lt;/span\u0026gt; · \u0026lt;span\u0026gt;获赞 2\u0026lt;/span\u0026gt; · \u0026lt;span\u0026gt;访问量 5485\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;right-message\u0026quot;\u0026gt; 私信\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; 关注 \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/p\u0026gt; ","date":"2020年22月21日","externalUrl":null,"permalink":"/277.html","section":"Posts","summary":"","title":"记录一次openssh无法登陆的问题","type":"post"},{"content":"很多人想学习Linux，却不知道怎么着手，甚至不知道Linux有哪些方向，非常迷茫。基于此，我特地写了篇文章介绍Linux方向性问题，没想到一不小心成了爆款：\n到什么程度才叫精通 Linux？​\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;180\u0026quot; data-height=\u0026quot;120\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; 图标 看完这个回答，相信很多人至少知道了目前 Linux 从业者所从事的几个方向，对于方向选择有个大概的认知。\n自我介绍一下。我是良许，本科及硕士所学专业却是机械，毕业后从零开始自学转行 IT，1 年后被世界 500 强外企所录用，目前是 Linux 工程师。\n本文将根据我的从业经验及与同行大佬的交流，介绍一些Linux学习方法，并且在文末赠送一些Linux书籍的电子版及及视频教程等资源，希望对大家有帮助！\n书籍篇 # 对于Linux书籍的推荐，我特地写了几个回答来介绍，这里就不重复贴回答了：\n有没有学习Linux比较好的入门书籍？\n求推荐学习linux命令的书籍?\n有没有比《鸟哥的Linux私房菜》更好的书？\n嵌入式Linux有哪些好书推荐？\n资源篇 # 不管学习什么技术，资源都是必不可少的。想当年，我自学转行，靠的就是大量的优质资源。优质资源会助你一臂之力，让你快速入门。\n当年我自学使用的优质资源，我也全部共享出来，在我的公众号「良许Linux」后台回复「简书」即可免费获取。\n当然，我也整理了另外一些不错的资源，写在这个回答里了，大家可以看看：\n有哪些好的Linux学习资源？​\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;180\u0026quot; data-height=\u0026quot;120\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; 图标 如何入门并深入学习Linux # 1. Linux学习路径\nLinux应用开发自学之路这篇文章介绍了我从零开始自学转行Linux的完整过程，被很多大号转载，并且影响了很多人，大家可以参考。\n自学简单编程可行吗？这篇文章更详细介绍了我是如何自学转行的，包括心路历程，转行过程，转行中需要注意的地方，以及更高效转行成功的方法。\nLinux 思维导图整理（建议收藏）这是一个技术大佬整理的Linux思维导图，包括：Linux学习路径，Linux基础入门，Linux内核学习路线，Linux命令参考，Linux命令速查等等。这份导图虽然不是100%全面，但如果能够将里面全部内容掌握下来，你也是个高手了。\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;439\u0026quot; data-height=\u0026quot;692\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 2. Linux环境搭建\n2.1 虚拟机安装与配置\n既然要学习Linux那肯定需要一个Linux环境。那么环境搭建有两个选择：1. 安装虚拟机；2. 直接在实体机上安装。对于这两个选择，我更倾向于第1个，因为前期学习一些命令及基础知识，直接在虚拟机上进行就可以了。\n手把手教你安装Linux虚拟机\n手把手教你配置Linux虚拟机\n虚拟机常用的有两种：Vmware，VirtualBox。Vmware功能更强大，但是是收费的。而VirtualBox虽然功能不及Vmware，但对于新手完全够用了。这两篇文章所使用的是Wmare，手把手教你安装并配置虚拟机，图文并茂，一路跟下来就可以安装并配置好虚拟机，完成最基本的搭建。\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;720\u0026quot; data-height=\u0026quot;529\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 2.2 主机与虚拟机文件共享\n虚拟机安装好之后，还有一项很重要的工作要做，那就是实现虚拟机与主机的互通，也就是互相共享文件。实现文件共享有很多方式，一般而言有以下几种：\n使用 FTP 协议实现文件共享 使用 samba 协议实现文件共享 特别地，对于Vmware有一套自己的专属文件共享方式，VirtualBox应该也有，但我没去研究过。对于Windows与Linux之间的文件共享，我们一般会用到一款很强大的共享工具——WinSCP，当然还有很多类似工具，比如Xftp，FileZilla。这些工具其实都是基于FTP协议，使用起来也大同小异，都非常方便。\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;622\u0026quot; data-height=\u0026quot;463\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 2.3 终端工具\n作为一名Linux工程师，不管是运维还是开发，我们很多时间会是在命令行下工作。我一般是把虚拟机打开着，然后使用终端工具远程到虚拟机进行操作。这里推荐一款很强大的终端工具——MobaXterm，它的功能十分强大，界面也非常友好，我用上一次就爱不释手。\n当然还有很多好用的终端工具，比如XShell、secureCRT、Putty、telnet等，选择一个自己最喜欢的工具即可。\n2.4 编程工具\n如果你是一名Linux开发人员，那你的工作肯定少不了编程。我一般的作法是，在Window上使用代码编辑工具编好代码，然后在Linux下编译。我经常使用两个工具：Notepad++和Sourceinsight。\n使用notepad++远程编辑虚拟机文档\n代码阅读神器——Sourceinsight\n当然我们也可以直接在Linux下写代码，在Linux下编译。Linux下写代码也有很多软件，常用的比如最性感的编辑器——Sublime Text。\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;720\u0026quot; data-height=\u0026quot;566\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 3. Linux基础知识\nLinux环境搭建完毕之后，我们就可以正式进入到Linux的学习中来。\n3.1 Linux系统架构\n学习Linux，我们肯定要知道Linux的系统架构是怎样的。一般而言，Linux是由以下几部分构成：\n内核 bootloader 文件系统 Shell 应用程序 内核是Linux系统的核心，它往下直接与硬件打交道，向上连接应用程序。它是由Linux社区来共同维护，其中Linus是核心人物。内核主要是由C语言及少量汇编语言编写而成，是最著名的一个开源项目之一。内核的源码在这里，但对于初学者，就别指望能把它看懂。\n初学者只要了解一些内核的基本架构即可，后期可以再进一步深入学习。网络上有一张非常经典的内核架构图，可以借助来理解内核。\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;720\u0026quot; data-height=\u0026quot;726\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image Bootloader就是一个单片机程序，用来引导系统启动。这个程序比较简单，有些高手甚至自己手写了bootloader程序。\nLinux文件系统有ext3、ext4等，而windows 有 fat32 、ntfs等。做底层开发的工程师需要深入了解，在此不赘述。\n3.2 Shell\nShell是系统的用户界面，提供了用户与内核进行交互操作的一种接口（命令解释器）。它的基本作用如下图示：\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;720\u0026quot; data-height=\u0026quot;347\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 对于Shell的使用，有非常多坑，初学者一定要规避。在此，我也找了两篇Shell面试题，以帮助大家学习进步：\n必会的 24 道 Shell 脚本面试题\n10 个实战与面试【常用 Shell 脚本】编写\n3.3 Vim\nVim是Linux里非常重要的一个编辑器，但是，它比较难，对于初学者非常不友好，号称上古神器。Vim有很多命令，所以我们首先要学习Vim的基本命令。\n如果你觉得Vim不好学，那么我介绍一款提高Vim水平的游戏。这款游戏灵感来自PacMan，让你使用Vim的命令去控制主角躲避怪物。把这款游戏玩熟练了，你的Vim水平也上了很大一个台阶。\n当然如果是官方标配版的Vim，那其实还是非常不好用的。好在Vim社区有很多大神，他们开发了很多实用的插件，让Vim用起来不再那么难用，比如以下三款非常实用的插件：\nVim的三款实用插件\n3.4 其它\n除了以上3点，Linux系统还有很多基础知识，这些知识很多很细，没办法一篇文章讲完，需要在实践中慢慢学习。\n比如Linux系统的目录结构，它是一个树状结构，跟Windows系统有本质的区别。\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;675\u0026quot; data-height=\u0026quot;392\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 还有，Linux有很多快捷键，掌握了这些快捷键会为我们提高不少效率。\n虚拟终端快捷键\n4. Linux命令\n众所周知，Linux有非常多命令，但是，刚开始学Linux千万别贪多，别想着一口吃成大胖子。对于普通人而言，先学会一些最基本的命令，再去拓展其它更高阶的命令。\nLinux命令基本格式及目录处理命令\n超好用的Unix/Linux 命令技巧 大神为你详细解读\n给Linux小白看的命令行极简教程\nLinux的10个最危险的命令\n常用的命令可能就二三十个，当你把这二三十个命令都用得非常熟之后，你才算刚入门。当然，你别小看这些基础命令，很多基础命令有着自己的高级用法，当你把高级用法都玩透了，你就开始慢慢脱离小白了。\n5分钟 more 命令从入门到精通\nLinux下 ls 命令的高级用法8例\nLinux 下你所不知道的 7 个 SSH 命令用法\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;720\u0026quot; data-height=\u0026quot;1018\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 5. Linux神器\n在 Linux 下工作，有一些工具可能大大提高你的工作效率。有些工具大家可能耳熟能详，但还有更多神器可能连听都没听说过。\n比如我们程序员经常需要绘制一些流程图，我们可以使用一些诸如EA之类的绘图工具，但这类工具很多都很庞大，而且比较难学。在Linux下其实我们可以使用dot工具简单高效绘图！\n程序员轻松绘图神器\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;299\u0026quot; data-height=\u0026quot;577\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 再如，我们如果和同事协作开发，想要把自己的操作过程录制下来，发给同事然后同事继续你的工作。或者，别人使用你的电脑，你想把他的操作记录下来，以免后期争议。这时，Script命令就派上用场了。\nLinux终端里的记录器\n当然还有很多非常实用的神器，限于篇幅就不一一列举了。\n如何高效回退到特定层级目录？\nLinux任务的前后台管理\nLinux下如何高效切换目录？\n6. Linux趣应用\n工作都是乏味的，我们要在工作中找到一些乐趣。作为一个免费的操作系统，大量的爱好者为 Linux 写了很多很有趣的应用，不仅可以帮助我们提高工作效率，而且还可以给我们枯燥的生活带来乐趣。\nLinux 终端给人的感觉就是黑漆漆一片，里面只能显示一些字符，而从来没见过显示图片的，但是，实际上，Linux 终端除了显示字符外，当然也可以显示图片（然后就可以用来看女神照片）。那是怎么实现的呢？这篇文章有答案：\n什么？Linux 终端也可以用来看女神照片？\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;555\u0026quot; data-height=\u0026quot;316\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 人这一辈子，真的是非常不容易：读书时，被老师、同学嘲笑，工作时，被老板、同事嘲笑，就连出去撸个串儿，还可能被朋友嘲笑……这些也就算了，毕竟大家还都是同类，都是活生生的人。但是，你如果被 Linux 终端给嘲笑了，你的内心会是什么感受？\n说出来也许你不信，我被 Linux 终端嘲笑了…….\n[alvin@VM_0_16_centos ~]$ sldkf Why are you doing this to me?! -bash: sldkf: command not found [alvin@VM_0_16_centos ~]$ iehf You are not as bad as people say, you are much, much worse. -bash: iehf: command not found [alvin@VM_0_16_centos ~]$ sdfas How many times do I have to flush before you go away? -bash: sdfas: command not found Git 是用来做啥的？想必码农朋友都知道，Git 是版本控制软件，是软件开发过程中团队协作不可或缺的软件。但是，作为版本控制软件的 Git ，能跟聊天工具扯上关系吗？这二者似乎毫无关系，但脑洞大开的外国朋友活生生将 Git 改造成了一个聊天工具！\nGit 居然可以用来跟女神聊天？\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;646\u0026quot; data-height=\u0026quot;423\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 等等类似于此类的应用，这些应用虽然不是学习过程中的必需品，但却可以给我们的学习生活带来很多乐趣！\n7. Git\n作为程序员，肯定不是离开Git。Git是版本控制软件，是软件开发过程中团队协作不可或缺的软件。但可悲的是，在学校里很少会有Git相关课程，所以很多大学生都不知道有Git这个东西。\n对于Git的入门，建议看 Pro Git 这本书，它是一本免费开源书，在它的官网上就可以直接在线阅读。\n[[[[[[[[[[[[[[https://git-scm.com/book/zh/v2]1]1]1]1]1]1]1]1]1]1]1]1]1]1\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;500\u0026quot; data-height=\u0026quot;660\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image Git虽然命令也很多，但基本的常用的也没几个。在使用Git的过程中，我们也要注意一些 Git 提交规范。\n如何高效的使用 Git\n学会这两件事，让你成为 Git 老司机\n你可能不太会用的 10 个 Git 命令\n使用Git，就不得不提到GitHub。GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。由于开发人员多为男性，故又名GayHub……\n很多小伙伴知道使用Git，却不知道如何在GitHub上与其他小伙伴一起协作，为此我特地写了一篇文章来介绍GitHub的协作方法：\n如何在GitHub上大显身手？\n除此之外，还有你必须收藏的 GitHub 技巧\n\u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;427\u0026quot; data-height=\u0026quot;369\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image 后记 # Linux博大精深，绝非一篇文章就能讲透的。本文根据自己的一些经验，介绍了一些方向性的东西。大家如果按着这些方向去学习，也一定会成为大神！\n电子书+源码+精选Linux资料获取方法 # 在公众号「良许Linux」后台回复「简书」即可免费获取。\n❤️ 看完三件事： 如果你觉得这篇内容对你挺有启发，我想邀请你帮我三个忙：\n**点赞，**让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-） **关注我和专栏，**让我们成为长期关系 **关注公众号「良许Linux」，**第一时间阅读最新的Linux文章，公众号后台回复 1024 送你 最新的编程技术资料。 \u0026lt;div class=\u0026quot;image-view\u0026quot; data-width=\u0026quot;150\u0026quot; data-height=\u0026quot;150\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; image ","date":"2020年22月21日","externalUrl":null,"permalink":"/260.html","section":"Posts","summary":"","title":"Linux学习方法及学习资料汇总","type":"post"},{"content":" HTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\nHTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\nHTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\nHTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\nHTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\nHTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\nHTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\nHTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\nHTTP 错误 400 400 请求出错 由于语法格式有误，服务器无法理解此请求。不作修改，客户程序就无法重复此请求。 HTTP 错误 401 401.1 未授权：登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.2 未授权：服务器的配置导致登录失败 此错误表明传输给服务器的证书与登录服务器所需的证书不匹配。此错误通常由未发送正确的 WWW 验证表头字段所致。 请与 Web 服务器的管理员联系，以确认您是否具有访问所请求资源的权限。 401.3 未授权：由于资源中的 ACL 而未授权 此错误表明客户所传输的证书没有对服务器中特定资源的访问权限。此资源可能是客户机中的地址行所列出的网页或文件，也可能是处理客户机中的地址行所列出的文件所需服务器上的其他文件。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.4 未授权：授权服务被筛选程序拒绝 此错误表明 Web 服务器已经安装了筛选程序，用以验证连接到服务器的用户。此筛选程序拒绝连接到此服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web 服务器的管理员联系以确认您是否具有访问所请求资源的权限。 401.5 未授权：ISAPI/CGI 应用程序的授权失败 此错误表明试图使用的 Web服务器中的地址已经安装了 ISAPI 或 CGI程序，在继续之前用以验证用户的证书。此程序拒绝用来连接到服务器的真品证书的访问。 请记录试图访问的完整地址，并与 Web服务器的管理员联系以确认您是否具有访问所请求资源的权限 HTTP 错误 403 403.1 禁止：禁止执行访问 如果从并不允许执行程序的目录中执行 CGI、ISAPI或其他执行程序就可能引起此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.2 禁止：禁止读取访问 如果没有可用的默认网页或未启用此目录的目录浏览，或者试图显示驻留在只标记为执行或脚本权限的目录中的HTML 页时就会导致此错误。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.3 禁止：禁止写访问 如果试图上载或修改不允许写访问的目录中的文件，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.4 禁止：需要 SSL 此错误表明试图访问的网页受安全套接字层（SSL）的保护。要查看，必须在试图访问的地址前输入https:// 以启用 SSL。 如果问题依然存在，请与 Web服务器的管理员联系。 403.5 禁止：需要 SSL 128 此错误消息表明您试图访问的资源受 128位的安全套接字层（SSL）保护。要查看此资源，需要有支持此SSL 层的浏览器。 请确认浏览器是否支持 128 位 SSL安全性。如果支持，就与 Web服务器的管理员联系，并报告问题。 403.6 禁止：拒绝 IP 地址 如果服务器含有不允许访问此站点的 IP地址列表，并且您正使用的 IP地址在此列表中，就会导致此问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.7 禁止：需要用户证书 当试图访问的资源要求浏览器具有服务器可识别的用户安全套接字层（SSL）证书时就会导致此问题。可用来验证您是否为此资源的合法用户。 请与 Web服务器的管理员联系以获取有效的用户证书。 403.8 禁止：禁止站点访问 如果 Web服务器不为请求提供服务，或您没有连接到此站点的权限时，就会导致此问题。 请与 Web 服务器的管理员联系。 403.9 禁止访问：所连接的用户太多 如果 Web太忙并且由于流量过大而无法处理您的请求时就会导致此问题。请稍后再次连接。 如果问题依然存在，请与 Web 服务器的管理员联系。 403.10 禁止访问：配置无效 此时 Web 服务器的配置存在问题。 如果问题依然存在，请与 Web服务器的管理员联系。 403.11 禁止访问：密码已更改 在身份验证的过程中如果用户输入错误的密码，就会导致此错误。请刷新网页并重试。 如果问题依然存在，请与 Web服务器的管理员联系。 403.12 禁止访问：映射程序拒绝访问 拒绝用户证书试图访问此 Web 站点。 请与站点管理员联系以建立用户证书权限。如果必要，也可以更改用户证书并重试。 HTTP 错误 404 404 找不到 Web 服务器找不到您所请求的文件或脚本。请检查URL 以确保路径正确。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 405 405 不允许此方法 对于请求所标识的资源，不允许使用请求行中所指定的方法。请确保为所请求的资源设置了正确的 MIME 类型。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 406 406 不可接受 根据此请求中所发送的“接受”标题，此请求所标识的资源只能生成内容特征为“不可接受”的响应实体。 如果问题依然存在，请与服务器的管理员联系。 HTTP 错误 407 407 需要代理身份验证 在可为此请求提供服务之前，您必须验证此代理服务器。请登录到代理服务器，然后重试。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 412 412 前提条件失败 在服务器上[测试][1]前提条件时，部分请求标题字段中所给定的前提条件估计为FALSE。客户机将前提条件放置在当前资源 metainformation（标题字段数据）中，以防止所请求的方法被误用到其他资源。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 414 414 Request-URI 太长 Request-URL太长，服务器拒绝服务此请求。仅在下列条件下才有可能发生此条件： 客户机错误地将 POST 请求转换为具有较长的查询信息的 GET 请求。 客户机遇到了重定向问题（例如，指向自身的后缀的重定向前缀）。 服务器正遭受试图利用某些服务器（将固定长度的缓冲区用于读取或执行 Request-URI）中的安全性漏洞的客户干扰。 如果问题依然存在，请与 Web 服务器的管理员联系。 HTTP 错误 500 500 服务器的内部错误 Web 服务器不能执行此请求。请稍后重试此请求。 如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 501 501 未实现 Web 服务器不支持实现此请求所需的功能。请检查URL 中的错误，如果问题依然存在，请与 Web服务器的管理员联系。 HTTP 错误 502 502 网关出错 当用作网关或代理时，服务器将从试图实现此请求时所访问的upstream 服务器中接收无效的响应。 如果问题依然存在，请与 Web服务器的管理员联系。\n[1]: http://lib.csdn.net/base/softwaretest\" \\o \u0026ldquo;软件测试知识库\u0026rdquo; \\t \u0026ldquo;https://www.cnblogs.com/ylei11/p/_blank\n","date":"2020年22月21日","externalUrl":null,"permalink":"/245.html","section":"Posts","summary":"","title":"http错误代码识别","type":"post"},{"content":" Curl命令超级详解 # 在Linux中curl是一个利用URL规则在命令行下工作的文件传输工具，可以说是一款很强大的http命令行工具。它支持文件的上传和下载，是综合传输工具，但按传统，习惯称url为下载工具。\n语法：# curl [option] [url]\n常见参数：\n-A/\u0026ndash;user-agent 设置用户代理发送给服务器\n-b/\u0026ndash;cookie \u0026lt;name=string/file\u0026gt; cookie字符串或文件读取位置\n-c/\u0026ndash;cookie-jar 操作结束后把cookie写入到这个文件中\n-C/\u0026ndash;continue-at 断点续转\n-D/\u0026ndash;dump-header 把header信息写入到该文件中\n-e/\u0026ndash;referer 来源网址\n-f/\u0026ndash;fail 连接失败时不显示http错误\n-o/\u0026ndash;output 把输出写到该文件中\n-O/\u0026ndash;remote-name 把输出写到该文件中，保留远程文件的文件名\n-r/\u0026ndash;range 检索来自HTTP/1.1或FTP服务器字节范围\n-s/\u0026ndash;silent 静音模式。不输出任何东西\n-T/\u0026ndash;upload-file 上传文件\n-u/\u0026ndash;user \u0026lt;user[:password]\u0026gt; 设置服务器的用户和密码\n-w/\u0026ndash;write-out [format] 什么输出完成后\n-x/\u0026ndash;proxy \u0026lt;host[:port]\u0026gt; 在给定的端口上使用HTTP代理\n-#/\u0026ndash;progress-bar 进度条显示当前的传送状态\n例子：\n例子：\n1、基本用法\n# curl http://www.linux.com\n执行后，www.linux.com 的html就会显示在屏幕上了\nPs：由于安装linux的时候很多时候是没有安装桌面的，也意味着没有浏览器，因此这个方法也经常用于测试一台服务器是否可以到达一个网站\n2、保存访问的网页\n2.1:使用linux的重定向功能保存\n# curl http://www.linux.com \u0026raquo; linux.html\n2.2:可以使用curl的内置option:-o(小写)保存网页\n$ curl -o linux.html http://www.linux.com\n执行完成后会显示如下界面，显示100%则表示保存成功\n% Total % Received % Xferd Average Speed Time Time Time Current\nDload Upload Total Spent Left Speed\n100 79684 0 79684 0 0 3437k 0 \u0026ndash;:\u0026ndash;:-- \u0026ndash;:\u0026ndash;:-- \u0026ndash;:\u0026ndash;:\u0026ndash; 7781k\n2.3:可以使用curl的内置option:-O(大写)保存网页中的文件\n要注意这里后面的url要具体到某个文件，不然抓不下来\n# curl -O http://www.linux.com/hello.sh\n3、测试网页返回值\n# curl -o /dev/null -s -w %{http_code} www.linux.com\nPs:在脚本中，这是很常见的测试网站是否正常的用法\n4、指定proxy服务器以及其端口\n很多时候上网需要用到代理服务器(比如是使用代理服务器上网或者因为使用curl别人网站而被别人屏蔽IP地址的时候)，幸运的是curl通过使用内置option：-x来支持设置代理\n# curl -x 192.168.100.100:1080 http://www.linux.com\n5、cookie\n有些网站是使用cookie来记录session信息。对于chrome这样的浏览器，可以轻易处理cookie信息，但在curl中只要增加相关参数也是可以很容易的处理cookie\n5.1:保存http的response里面的cookie信息。内置option:-c（小写）\n# curl -c cookiec.txt http://www.linux.com\n执行后cookie信息就被存到了cookiec.txt里面了\n5.2:保存http的response里面的header信息。内置option: -D\n# curl -D cookied.txt http://www.linux.com\n执行后cookie信息就被存到了cookied.txt里面了\n注意：-c(小写)产生的cookie和-D里面的cookie是不一样的。\n5.3:使用cookie\n很多网站都是通过监视你的cookie信息来判断你是否按规矩访问他们的网站的，因此我们需要使用保存的cookie信息。内置option: -b\n# curl -b cookiec.txt http://www.linux.com\n6、模仿浏览器\n有些网站需要使用特定的浏览器去访问他们，有些还需要使用某些特定的版本。curl内置option:-A可以让我们指定浏览器去访问网站\n# curl -A \u0026ldquo;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.0)\u0026rdquo; http://www.linux.com\n这样服务器端就会认为是使用IE8.0去访问的\n7、伪造referer（盗链）\n很多服务器会检查http访问的referer从而来控制访问。比如：你是先访问首页，然后再访问首页中的邮箱页面，这里访问邮箱的referer地址就是访问首页成功后的页面地址，如果服务器发现对邮箱页面访问的referer地址不是首页的地址，就断定那是个盗连了\ncurl中内置option：-e可以让我们设定referer\n# curl -e \u0026ldquo;www.linux.com\u0026rdquo; http://mail.linux.com\n这样就会让服务器其以为你是从www.linux.com点击某个链接过来的\n8、下载文件\n8.1：利用curl下载文件。\n#使用内置option：-o(小写)\n# curl -o dodo1.jpg http:www.linux.com/dodo1.JPG\n#使用内置option：-O（大写)\n# curl -O http://www.linux.com/dodo1.JPG\n这样就会以服务器上的名称保存文件到本地\n8.2：循环下载\n有时候下载图片可以能是前面的部分名称是一样的，就最后的尾椎名不一样\n# curl -O http://www.linux.com/dodo[1-5].JPG\n这样就会把dodo1，dodo2，dodo3，dodo4，dodo5全部保存下来\n8.3：下载重命名\n# curl -O http://www.linux.com/{hello,bb}/dodo[1-5].JPG\n由于下载的hello与bb中的文件名都是dodo1，dodo2，dodo3，dodo4，dodo5。因此第二次下载的会把第一次下载的覆盖，这样就需要对文件进行重命名。\n# curl -o #1_#2.JPG http://www.linux.com/{hello,bb}/dodo[1-5].JPG\n这样在hello/dodo1.JPG的文件下载下来就会变成hello_dodo1.JPG,其他文件依此类推，从而有效的避免了文件被覆盖\n8.4：分块下载\n有时候下载的东西会比较大，这个时候我们可以分段下载。使用内置option：-r\n# curl -r 0-100 -o dodo1_part1.JPG http://www.linux.com/dodo1.JPG\n# curl -r 100-200 -o dodo1_part2.JPG http://www.linux.com/dodo1.JPG\n# curl -r 200- -o dodo1_part3.JPG http://www.linux.com/dodo1.JPG\n# cat dodo1_part* \u0026gt; dodo1.JPG\n这样就可以查看dodo1.JPG的内容了\n8.5：通过ftp下载文件\ncurl可以通过ftp下载文件，curl提供两种从ftp中下载的语法\n# curl -O -u 用户名:密码 ftp://www.linux.com/dodo1.JPG\n# curl -O ftp://用户名:密码@www.linux.com/dodo1.JPG\n8.6：显示下载进度条\n# curl -# -O http://www.linux.com/dodo1.JPG\n8.7：不会显示下载进度信息\n# curl -s -O http://www.linux.com/dodo1.JPG\n9、断点续传\n在windows中，我们可以使用迅雷这样的软件进行断点续传。curl可以通过内置option:-C同样可以达到相同的效果\n如果在下载dodo1.JPG的过程中突然掉线了，可以使用以下的方式续传\n# curl -C -O http://www.linux.com/dodo1.JPG\n10、上传文件\ncurl不仅仅可以下载文件，还可以上传文件。通过内置option:-T来实现\n# curl -T dodo1.JPG -u 用户名:密码 ftp://www.linux.com/img/\n这样就向ftp服务器上传了文件dodo1.JPG\n11、显示抓取错误\n# curl -f http://www.linux.com/error\n其他参数(此处翻译为转载)：\n-a/\u0026ndash;append 上传文件时，附加到目标文件\n\u0026ndash;anyauth 可以使用“任何”身份验证方法\n\u0026ndash;basic 使用HTTP基本验证\n-B/\u0026ndash;use-ascii 使用ASCII文本传输\n-d/\u0026ndash;data HTTP POST方式传送数据\n\u0026ndash;data-ascii 以ascii的方式post数据\n\u0026ndash;data-binary 以二进制的方式post数据\n\u0026ndash;negotiate 使用HTTP身份验证\n\u0026ndash;digest 使用数字身份验证\n\u0026ndash;disable-eprt 禁止使用EPRT或LPRT\n\u0026ndash;disable-epsv 禁止使用EPSV\n\u0026ndash;egd-file 为随机数据(SSL)设置EGD socket路径\n\u0026ndash;tcp-nodelay 使用TCP_NODELAY选项\n-E/\u0026ndash;cert \u0026lt;cert[:passwd]\u0026gt; 客户端证书文件和密码 (SSL)\n\u0026ndash;cert-type 证书文件类型 (DER/PEM/ENG) (SSL)\n\u0026ndash;key 私钥文件名 (SSL)\n\u0026ndash;key-type 私钥文件类型 (DER/PEM/ENG) (SSL)\n\u0026ndash;pass 私钥密码 (SSL)\n\u0026ndash;engine 加密引擎使用 (SSL). \u0026ldquo;\u0026ndash;engine list\u0026rdquo; for list\n\u0026ndash;cacert CA证书 (SSL)\n\u0026ndash;capath CA目 (made using c_rehash) to verify peer against (SSL)\n\u0026ndash;ciphers SSL密码\n\u0026ndash;compressed 要求返回是压缩的形势 (using deflate or gzip)\n\u0026ndash;connect-timeout 设置最大请求时间\n\u0026ndash;create-dirs 建立本地目录的目录层次结构\n\u0026ndash;crlf 上传是把LF转变成CRLF\n\u0026ndash;ftp-create-dirs 如果远程目录不存在，创建远程目录\n\u0026ndash;ftp-method [multicwd/nocwd/singlecwd] 控制CWD的使用\n\u0026ndash;ftp-pasv 使用 PASV/EPSV 代替端口\n\u0026ndash;ftp-skip-pasv-ip 使用PASV的时候,忽略该IP地址\n\u0026ndash;ftp-ssl 尝试用 SSL/TLS 来进行ftp数据传输\n\u0026ndash;ftp-ssl-reqd 要求用 SSL/TLS 来进行ftp数据传输\n-F/\u0026ndash;form \u0026lt;name=content\u0026gt; 模拟http表单提交数据\n-form-string \u0026lt;name=string\u0026gt; 模拟http表单提交数据\n-g/\u0026ndash;globoff 禁用网址序列和范围使用{}和[]\n-G/\u0026ndash;get 以get的方式来发送数据\n-h/\u0026ndash;help 帮助\n-H/\u0026ndash;header 自定义头信息传递给服务器\n\u0026ndash;ignore-content-length 忽略的HTTP头信息的长度\n-i/\u0026ndash;include 输出时包括protocol头信息\n-I/\u0026ndash;head 只显示文档信息\n-j/\u0026ndash;junk-session-cookies 读取文件时忽略session cookie\n\u0026ndash;interface 使用指定网络接口/地址\n\u0026ndash;krb4 使用指定安全级别的krb4\n-k/\u0026ndash;insecure 允许不使用证书到SSL站点\n-K/\u0026ndash;config 指定的配置文件读取\n-l/\u0026ndash;list-only 列出ftp目录下的文件名称\n\u0026ndash;limit-rate 设置传输速度\n\u0026ndash;local-port 强制使用本地端口号\n-m/\u0026ndash;max-time 设置最大传输时间\n\u0026ndash;max-redirs 设置最大读取的目录数\n\u0026ndash;max-filesize 设置最大下载的文件总量\n-M/\u0026ndash;manual 显示全手动\n-n/\u0026ndash;netrc 从netrc文件中读取用户名和密码\n\u0026ndash;netrc-optional 使用 .netrc 或者 URL来覆盖-n\n\u0026ndash;ntlm 使用 HTTP NTLM 身份验证\n-N/\u0026ndash;no-buffer 禁用缓冲输出\n-p/\u0026ndash;proxytunnel 使用HTTP代理\n\u0026ndash;proxy-anyauth 选择任一代理身份验证方法\n\u0026ndash;proxy-basic 在代理上使用基本身份验证\n\u0026ndash;proxy-digest 在代理上使用数字身份验证\n\u0026ndash;proxy-ntlm 在代理上使用ntlm身份验证\n-P/\u0026ndash;ftp-port 使用端口地址，而不是使用PASV\n-Q/\u0026ndash;quote 文件传输前，发送命令到服务器\n\u0026ndash;range-file 读取（SSL）的随机文件\n-R/\u0026ndash;remote-time 在本地生成文件时，保留远程文件时间\n\u0026ndash;retry 传输出现问题时，重试的次数\n\u0026ndash;retry-delay 传输出现问题时，设置重试间隔时间\n\u0026ndash;retry-max-time 传输出现问题时，设置最大重试时间\n-S/\u0026ndash;show-error 显示错误\n\u0026ndash;socks4 \u0026lt;host[:port]\u0026gt; 用socks4代理给定主机和端口\n\u0026ndash;socks5 \u0026lt;host[:port]\u0026gt; 用socks5代理给定主机和端口\n-t/\u0026ndash;telnet-option \u0026lt;OPT=val\u0026gt; Telnet选项设置\n\u0026ndash;trace 对指定文件进行debug\n\u0026ndash;trace-ascii Like \u0026ndash;跟踪但没有hex输出\n\u0026ndash;trace-time 跟踪/详细输出时，添加时间戳\n\u0026ndash;url Spet URL to work with\n-U/\u0026ndash;proxy-user \u0026lt;user[:password]\u0026gt; 设置代理用户名和密码\n-V/\u0026ndash;version 显示版本信息\n-X/\u0026ndash;request 指定什么命令\n-y/\u0026ndash;speed-time 放弃限速所要的时间。默认为30\n-Y/\u0026ndash;speed-limit 停止传输速度的限制，速度时间\u0026rsquo;秒\n-z/\u0026ndash;time-cond 传送时间设置\n-0/\u0026ndash;http1.0 使用HTTP 1.0\n-1/\u0026ndash;tlsv1 使用TLSv1（SSL）\n-2/\u0026ndash;sslv2 使用SSLv2的（SSL）\n-3/\u0026ndash;sslv3 使用的SSLv3（SSL）\n\u0026ndash;3p-quote like -Q for the source URL for 3rd party transfer\n\u0026ndash;3p-url 使用url，进行第三方传送\n\u0026ndash;3p-user 使用用户名和密码，进行第三方传送\n-4/\u0026ndash;ipv4 使用IP4\n-6/\u0026ndash;ipv6 使用IP6\n转自：http://www.linuxdiyf.com/linux/2800.html\n","date":"2020年22月18日","externalUrl":null,"permalink":"/139.html","section":"Posts","summary":"","title":"Curl命令超级详解","type":"post"},{"content":" Linux安全基线配置规范\nLinux安全基线配置规范 一、\t设置密码修改最小间隔时间，限制密码更改过于频繁 加固建议 在 /etc/login.defs 中将 PASS_MIN_DAYS 参数设置为7-14之间,建议为7： PASS_MIN_DAYS 7 需同时执行命令为root用户设置： chage --mindays 7 root 二、\t设置SSH空闲超时退出时间 设置SSH空闲超时退出时间,可降低未授权用户访问其他用户ssh会话的风险 编辑/etc/ssh/sshd_config，将ClientAliveInterval 设置为300到900，即5-15分钟，将ClientAliveCountMax设置为0-3之间。 ClientAliveInterval 600 ClientAliveCountMax 2 三、\t密码复杂度检查 检查密码长度和密码是否使用多种字符类型 编辑/etc/security/pwquality.conf，把minlen（密码最小长度）设置为9-32位， 把minclass（至少包含小写字母、大写字母、数字、特殊字符等4类字符中等3类或4类）设置为3或4。如： minlen=10 minclass=3 四、\t检查密码重用是否受限制 | 身份鉴别 强制用户不重用最近使用的密码，降低密码猜测攻击风险 在/etc/pam.d/password-auth和/etc/pam.d/system-auth中password sufficient pam_unix.so 这行的末尾配置remember参数为5-24之间，原来的内容不用更改，只在末尾加了remember=5。 五、\t检查系统空密码账户 | 身份鉴别 检查系统空密码账户 为用户设置一个非空密码，或者执行`passwd -l \u0026lt;username\u003e`锁定用户 六、\t禁止SSH空密码用户登录 | SSH服务配置 禁止SSH空密码用户登录 编辑文件`/etc/ssh/sshd_config`，将PermitEmptyPasswords配置为no: PermitEmptyPasswords no 七、\t设置密码失效时间 | 身份鉴别 设置密码失效时间，强制定期修改密码，减少密码被泄漏和猜测风险，使用非密码登陆方式(如密钥对)请忽略此项。 `使用非密码登陆方式如密钥对，请忽略此项。`在 `/etc/login.defs `中将 PASS_MAX_DAYS 参数设置为 60-180之间，如: PASS_MAX_DAYS 90 需同时执行命令设置root密码失效时间： chage --maxdays 90 root 八、\t确保密码到期警告天数为7或更多 | 身份鉴别 确保密码到期警告天数为7或更多 在 /etc/login.defs 中将 PASS_WARN_AGE 参数设置为7-14之间，建议为7： PASS_WARN_AGE 7 同时执行命令使root用户设置生效： chage --warndays 7 root 九、\t确保SSH MaxAuthTries设置为3到6之间 | SSH服务配置 设置较低的Max AuthTrimes参数将降低SSH服务器被暴力攻击成功的风险。 在/etc/ssh/sshd_config中取消MaxAuthTries注释符号#，设置最大密码尝试失败次数3-6，建议为4： MaxAuthTries 4 十、\t确保rsyslog服务已启用 | 安全审计 确保rsyslog服务已启用，记录日志用于审计 运行以下命令启用rsyslog服务： systemctl enable rsyslog systemctl start rsyslog 十一、\t安全日志完备性要求 配置名称：安全日志完备性要求 配置要求：系统应配置完备日志记录，记录对与系统相关的安全事件。 操作指南：1、# cat /etc/syslog.conf查看是否有对应配置 2、# cat /var/log/secure查看是否有对应配置 检查方法：1、cat /etc/syslog.conf确认有对应配置； 2、查看/var/log/secure，应记录有需要的设备相关的安全事件。 配置方法：修改配置文件vi /etc/syslog.conf。 配置如下类似语句： authpriv.*\t/var/log/secure 定义为需要保存的设备相关安全事件 十二、\t确保SSH LogLevel设置为INFO | 服务配置 确保SSH LogLevel设置为INFO,记录登录和注销活动 编辑 /etc/ssh/sshd_config 文件以按如下方式设置参数(取消注释): LogLevel INFO 十三、\t访问控制配置文件的权限设置 | 文件权限 访问控制配置文件的权限设置 运行以下4条命令： chown root:root /etc/hosts.allow chown root:root /etc/hosts.deny chmod 644 /etc/hosts.deny chmod 644 /etc/hosts.allow 十四、\t开启地址空间布局随机化 | 入侵防范 它将进程的内存空间地址随机化来增大入侵者预测目的地址难度，从而降低进程被成功入侵的风险 在/etc/sysctl.conf或/etc/sysctl.d/*文件中设置以下参数： `kernel.randomize_va_space = 2` 执行命令： `sysctl -w kernel.randomize_va_space=2` 十五、\t确保root是唯一的UID为0的帐户 | 身份鉴别 除root以外其他UID为0的用户都应该删除，或者为其分配新的UID 除root以外其他UID为0的用户(查看命令`cat /etc/passwd | awk -F: '($3 == 0) { print $1 }'|grep -v '^root$' `)都应该删除，或者为其分配新的UID 十六、\tSSHD强制使用V2安全协议 描述：SSHD强制使用V2安全协议。 加固建议 vim /etc/ssh/sshd_config Protocol 2 十七、\t共享账号检查 配置名称：用户账号分配检查，避免共享账号存在 配置要求： 1、系统需按照实际用户分配账号； 2、避免不同用户间共享账号，避免用户账号和服务器间通信使用的账号共享。 参考配置操作：cat /etc/passwd查看当前所有用户的情况； 检查方法：命令cat /etc/passwd查看当前所有用户的信息，与管理员确认是否有共享账号情况存在。 配置方法：如需建立用户，参考如下： #useradd username #创建账号 #passwd username #设置密码 使用该命令为不同的用户分配不同的账号，设置不同的口令及权限信息等。 适用版本：Linux Redhat AS 3、Linux Redhat AS 4 十八、\t多余账户锁定策略 配置名称：多余账户锁定策略 配置要求：应锁定与设备运行、维护等工作无关的账号。 操作指南：参考配置操作： 查看锁定用户： # cat /etc/password，查看哪些账户的shell域中为nologin； 检查方法：人工检查： # cat /etc/password后查看多余账户的shell域为nologin为符合； BVS基线检查： 多余账户处于锁定状态为符合。 配置方法：锁定用户： 修改/etc/password文件，将需要锁定的用户的shell域设为nologin； 或通过#passwd –l username锁定账户； 只有具备超级用户权限的使用者方可使用#passwd –l username锁定用户,用#passwd –d username解锁后原有密码失效，登录需输入新密码。 补充操作说明： 一般情况下，需要锁定的用户：lp,nuucp,hpdb,www,demon 适用版本：Linux Redhat AS 3、Linux Redhat AS 4 十九、\t用户缺省权限控制 配置名称：用户缺省权限控制 配置要求：控制用户缺省访问权限，当在创建新文件或目录时应屏蔽掉新文件或目录不应有的访问允许权限,防止同属于该组的其它用户及别的组的用户修改该用户的文件或更高限制。 操作指南： 1、# cat /etc/bashrc 查看全局默认设置umask值 2、查看具体用户home目录下bash_profile，具体用户的umask 检查方法：查看全局默认设置umask值为027或更小权限为符合（如有特许权限需求，可根据实际情况判断）； 查看具体用户的umask，本着最小权限的原则。 配置方法：参考配置操作： 单独针对用户设置 可修改用户home目录下的.bash_profile脚本文件，例如，可增加一条语句：umask 027；对于权限要求较严格的场合，建议设置为077。 全局默认设置： 默认通过全局脚本/etc/bashrc设置所有用户的默认umask值，修改脚本即可实现对用户默认umask值的全局性修改， 通常建议将umask设置为027以上，对于权限要求较严格的场合，建议设置为077 二十、\tSSH登录配置 配置名称：SSH登录配置 配置要求：系统应配置使用SSH等加密协议进行远程登录维护，并安全配置SSHD的设置。不使用TELENT进行远程登录维护。 操作指南： 1、查看SSH服务状态：# ps –elf|grep ssh； 2、查看telnet服务状态：# ps –elf|grep telnet。 检查方法： 1、不能使用telnet进行远程维护； 2、应使用SSH进行远程维护； 3、SH配置要符合如下要求； Protocol 2 #使用ssh2版本 X11Forwarding yes #允许窗口图形传输使用ssh加密 IgnoreRhosts yes#完全禁止SSHD使用.rhosts文件 RhostsAuthentication no #不设置使用基于rhosts的安全验证 RhostsRSAAuthentication no #不设置使用RSA算法的基于rhosts的安全验证 HostbasedAuthentication no #不允许基于主机白名单方式认证 PermitRootLogin no #不允许root登录 PermitEmptyPasswords no #不允许空密码 Banner /etc/motd #设置ssh登录时显示的banner 4、以上条件都满足为符合。 配置方法：1、参考配置操作 编辑 sshd_config，添加相关设置，SSHD相关安全设置选项参考检查方法中的描述。 2、补充操作说明 查看SSH服务状态：# ps –elf|grep ssh 二十一、\t关闭不必要的系统服务 配置名称：关闭不必要的系统服务 配置要求：根据每台机器的不同角色，关闭不需要的系统服务。操作指南中的服务项提供参考，根据服务器的角色和应用情况对启动项进行修改。 如无特殊需要，应关闭Sendmail、Telnet、Bind等服务。 操作指南：执行命令 #chkconfig --list，查看哪些服务开放。 检查方法：与管理员确认无用服务已关闭 配置方法： 1、参考配置操作 使用如下方式禁用不必要的服务#service \u0026lt;服务名\u003e stop #chkconfig –level 35 off 2、参考说明 Linux/Unix系统服务中，部分服务存在较高安全风险，应当禁用，包括： “lpd”，此服务为行式打印机后台程序，用于假脱机打印工作的UNIX后台程序，此服务通常情况下不用，建议禁用； “telnet”，此服务采用明文传输数据，登陆信息容易被窃取，建议用ssh代替； “routed”，此服务为路由守候进程，使用动态RIP路由选择协议，建议禁用； “sendmail”，此服务为邮件服务守护进程，非邮件服务器应将其关闭； “Bluetooth”，此服务为蓝牙服务，如果不需要蓝牙服务时应关闭； “identd”，此服务为AUTH服务，在提供用户信息方面与finger类似，一般情况下该服务不是必须的，建议关闭； “xfs”，此服务为Linux中X Window的字体服务，关于该服务历史上出现过信息泄露和拒绝服务等漏洞，应以减少系统风险； R服务（“rlogin”、“rwho”、“rsh”、“rexec”），R服务设计上存在严重的安全缺陷，仅适用于封闭环境中信任主机之间便捷访问， 其他场合下均必须禁用； 基于inetd/xinetd的服务（daytime、chargen、echo等），此类服务建议禁用。 二十二、\t禁止Control-Alt-Delete键盘关闭命令 配置名称：禁止Control-Alt-Delete键盘关闭命令 配置要求：应禁止使用Control-Alt-Delete组合键重启服务器，防止误操作 操作指南：命令cat /etc/inittab，查看配置 检查方法：/etc/inittab 中应有：“#ca::ctrlaltdel:/sbin/shutdown -t3 -r now”配置为符合。 配置方法：1、参考配置操作 在“/etc/inittab” 文件中注释掉下面这行（使用#）： ca::ctrlaltdel:/sbin/shutdown -t3 -r now 改为： #ca::ctrlaltdel:/sbin/shutdown -t3 -r now 为了使此改动生效，输入下面这个命令： # /sbin/init q 2、补充说明 禁止ctl-alt-del使得在控制台直接按ctl-alt-del不能重新启动计算机。 ","date":"2020年22月18日","externalUrl":null,"permalink":"/118.html","section":"Posts","summary":"","title":"Linux安全基线配置规范","type":"post"},{"content":" ApacheSVN配置下载 ","date":"2020年22月18日","externalUrl":null,"permalink":"/109.html","section":"Posts","summary":"","title":"ApacheSVN配置","type":"post"},{"content":" K8s常用运维命令\n查看集群信息 [root@k8s-master ~]# kubectl cluster-info 查看各组件状态 kubectl -s http://localhost:8080 get componentstatuses 查看service清单 kubectl get service 查看pods清单 [root@k8s-master ~]# kubectl get pod 查看节点 kubectl get node 查看replicationControllers清单 (同理可以将命令中的replicationControllers变为replicationController也是可以的) [root@k8s-master ~]# kubectl get replicationControllers 查看rc和namespace [root@k8s-master ~]# kubectl get rc,namespace 查看pod和svc(和service一样) 以jison格式输出pod的详细信息. kubectl get pods 注意下面命令中的pods的名称可以通过上面命令查看 [root@k8s-master ~]# kubectl get po nginx-controller-djd1b -o json 查看指定pod跑在哪个node上 [root@k8s-master ~]# kubectl get pod nginx-controller-djd1b -o wide describe方法 describe类似于get，同样用于获取resource的相关信息。不同的是，get获得的是更详细的resource个性的详细信息，describe获得的是resource集群相关的信息。 describe命令同get类似，但是describe不支持-o选项，对于同一类型resource，describe输出的信息格式，内容域相同。 需要注意: 如果发现是查询某个resource的信息，使用get命令能够获取更加详尽的信息。但是如果想要查询某个resource的状态，如某个pod并不是在running状态，这时需要获取更详尽的状态信息时，就应该使用describe命令 create创建 kubectl命令用于根据文件或输入创建集群resource。如果已经定义了相应resource的yaml或json文件，直接kubectl create -f filename即可创建文件内定义的resource。也可以直接只用子命令[namespace/secret/configmap/serviceaccount]等直接创建相应的resource。从追踪和维护的角度出发，建议使用json或yaml的方式定义资源。 命令格式: # kubectl create -f 文件名 replace更新替换资源 replace命令用于对已有资源进行更新、替换。如前面create中创建的nginx，当我们需要更新resource的一些属性的时候，如果修改副本数量，增加、修改label，更改image版本，修改端口等。都可以直接修改原yaml文件，然后执行replace命令。 需要注意: 名字不能被更更新。另外，如果是更新label，原有标签的pod将会与更新label后的rc断开联系，有新label的rc将会创建指定副本数的新的pod，但是默认并不会删除原来的pod。所以此时如果使用get po将会发现pod数翻倍，进一步check会发现原来的pod已经不会被新rc控制， 命令格式: # kubectl replace -f nginx-rc.yaml Delete 根据resource名或label删除resource。 # kubectl delete -f nginx-rc.yaml # kubectl delete po nginx-controller-djd1b logs logs命令用于显示pod运行中，容器内程序输出到标准输出的内容。跟docker的logs命令类似。如果要获得tail -f 的方式，也可以使用-f选项。 # kubectl logs nginx-controller-djd1b kubectl get service -n kube-system | grep dashboard ","date":"2020年22月18日","externalUrl":null,"permalink":"/72.html","section":"Posts","summary":"","title":"K8s常用运维命令","type":"post"},{"content":"一、 xxx网站群系统描述\nxxxxx网站群系统，由PC版网站、视频系统和手机版网站等子系统组成。该系统介绍xxxxxx开展的业务活动xxxxxx。\n（一）PC版网站于xx年xx月xxx日正式对外公布，由我宫委托xxxxxxx开发，目前该系统由xxxxxxxxxx维护。\n随着网站视频的内容越来越多，我单位于xxxxx年xxx月xx日借助于xxxxxx推出了视频栏目。目前该栏目由xxxxxx维护。\n考虑到移动设备的使用越来越多，我部门于xxxx年xxx月xx日委托xxxxxx基于原网站的内容推出了移动版网站。目前该系统由xxxxxxx维护。\n（二）PC版网站由xx台服务器组成，分别是xxx服务器，xxx服务器，数据库服务器，子站服务器。均采用xxxxx操作系统，使用xxx进行发布，采用xxxxx数据库。\n视频栏目由三台服务器组成，分别是点播服务器，播控服务器，转码服务器，均采用xxxx操作系统，使用xxxx进行发布,采用xxxxx数据库。\n移动版网站由一台服务器组成，采用xxxx操作系统，使用xxx进行发布,采用xxx数据库。\n整个网站群系统部署在xxxxxx局域网中，外接线路由xxxxx公司提供一条xxx光纤接入。路由器使用xxx台xxx，核心交换机使用xx台xxxx，路由器与核心交换机之间使用xxxx防火墙进行安全防护。网站群系统部署在xxxxx区域中。\n（三）PC网站系统共包含xxx大栏目：关于xxxxxxxx。移动版网站包括xxxxxx五个栏目。整个网站系统全面而系统介绍了xxxxx业务活动，公众活动，有选择的介绍了xxxxxx相关部门和相关业务专家进行审批。\n","date":"2020年22月18日","externalUrl":null,"permalink":"/70.html","section":"Posts","summary":"","title":"网站群系统描述","type":"post"},{"content":" 安装zabbix监控首先的先安装LNMP环境，在这里我采用事先准备好的脚本进行安装LNMP环境 脚本内容如下\n安装zabbix监控首先的先安装LNMP环境，在这里我采用事先准备好的脚本进行安装LNMP环境 脚本内容如下\n安装zabbix监控首先的先安装LNMP环境，在这里我采用事先准备好的脚本进行安装LNMP环境 脚本内容如下\n安装zabbix监控首先的先安装LNMP环境，在这里我采用事先准备好的脚本进行安装LNMP环境 脚本内容如下\n安装zabbix监控首先的先安装LNMP环境，在这里我采用事先准备好的脚本进行安装LNMP环境 脚本内容如下\n#!/bin/bash #\u0026nbsp;DATE：Wed\u0026nbsp;Jan\u0026nbsp;17\u0026nbsp;1#\u0026nbsp;hw226234@126.com\u0026nbsp;\u0026nbsp;3\u0026nbsp;#this\u0026nbsp;is\u0026nbsp;a\u0026nbsp;lnmp-install \u0026nbsp; #\u0026nbsp;The\u0026nbsp;Nginx\u0026nbsp;service\u0026nbsp;is\u0026nbsp;being\u0026nbsp;installed ROOT_ID=0 ML=/usr/local/src NGINX_ML=/usr/local/src/nginx-1.12.2 PML=/usr/local/src/php-5.6.27 QD=`netstat\u0026nbsp;-anpt\u0026nbsp;|\u0026nbsp;grep\u0026nbsp;80\u0026nbsp;|\u0026nbsp;awk\u0026nbsp;'{print\u0026nbsp;$7}'\u0026nbsp;|\u0026nbsp;cut\u0026nbsp;-d\u0026nbsp;\"/\"\u0026nbsp;-f2\u0026nbsp;|\u0026nbsp;cut\u0026nbsp;-d\u0026nbsp;\":\"\u0026nbsp;-f1` ADDR=`ip\u0026nbsp;a\u0026nbsp;|\u0026nbsp;grep\u0026nbsp;eth0 \u0026lt;pre wp-pre-tag-0=\"\"\u003e nbsp;| awk \u0026rsquo;{print $2}\u0026rsquo; | cut -d \u0026quot;/\u0026quot; -f1`\nMMM=`netstat -anput | grep mysqld | awk \u0026rsquo;{print $4}\u0026rsquo; | cut -d \u0026quot;:\u0026quot; -f4`\nMAR=`rpm -qa | grep mariadb`\ncd $ML \u0026amp;\u0026amp; {\nwget http://mirrors.aliyun.com/repo/Centos-7.repo \u0026amp;\u0026gt; /dev/null\nmv Centos-7.repo /etc/yum.repos.d/Centos-Base.repo\nyum clean all \u0026amp;\u0026gt; /dev/null\nyum makecache \u0026amp;\u0026gt; /dev/null\n}\nif [ $? -eq 0 ]\nthen\necho \u0026ldquo;Yum源更新完毕,开始安装！！！\u0026rdquo;\nelse\necho \u0026ldquo;Yum源error\u0026rdquo;\nexit 1\nfi\necho \u0026ldquo;Yum源配置成功\u0026rdquo;\nif [ \u0026quot;$UID\u0026quot; -eq \u0026quot;$ROOT_ID\u0026quot; ]\nthen\necho \u0026ldquo;root用户运行中\u0026rdquo; \u0026amp;\u0026amp; systemctl stop firewalld \u0026amp;\u0026amp; yum install -y gcc gcc-c++ pcre-devel zlib-devel openssl-devel \u0026amp;\u0026gt; /dev/null\nelse\necho \u0026ldquo;请使用Root用户运行\u0026rdquo;\nexit 1\nfi\necho \u0026ldquo;依赖包安装完成！\u0026rdquo;\ncd $ML || {\necho \u0026ldquo;进入目录失败！！！\u0026rdquo;\nexit 1\n}\nwget http://nginx.org/download/nginx-1.12.2.tar.gz \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; {\ntar zxf nginx-1.12.2.tar.gz \u0026amp;\u0026amp; groupadd www \u0026amp;\u0026amp; useradd -g www www -s /sbin/nologin\n}\necho \u0026ldquo;Nginx包下载成功\u0026rdquo;\ncd $NGINX_ML \u0026amp;\u0026amp; {\n./configure \u0026ndash;prefix=/usr/local/nginx \u0026ndash;with-http_dav_module \u0026ndash;with-http_stub_status_module \u0026ndash;with-http_addition_module \u0026ndash;with-http_sub_module \u0026ndash;with-http_flv_module \u0026ndash;with-http_mp4_module \u0026ndash;with-http_ssl_module \u0026ndash;with-http_gzip_static_module \u0026ndash;user=www \u0026ndash;group=www \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; make \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; make install \u0026amp;\u0026gt; /dev/null }\nif [ $? -eq \u0026ldquo;0\u0026rdquo; ]\nthen\nln -s /usr/local/nginx/sbin/nginx /usr/local/sbin ;nginx \u0026amp;\u0026amp; echo \u0026ldquo;Nginx启动成功，请访问http://$ADDR:80\u0026rdquo;\nelse\necho \u0026ldquo;Nginx启动失败！！！\u0026rdquo;\nexit 1\nfi\n#Start installing MySQL5.7！\necho \u0026ldquo;开始下载MySQL二进制安装包，请稍等\u0026hellip;\u0026rdquo;\nif [ -z \u0026quot;$MAR\u0026quot; ]\nthen\necho \u0026ldquo;开始安装MySQL\u0026rdquo;\nfi\nif [ -n \u0026quot;$MAR\u0026quot; ]\nthen\nrpm -e mariadb-libs \u0026ndash;nodeps \u0026amp;\u0026amp; echo \u0026ldquo;卸载mariadb成功！正式安装MySQL\u0026rdquo;\nfi\ncd $ML || {\necho \u0026ldquo;进入目录失败！！！\u0026rdquo;\nexit 1\n}\n#wget http://mirrors.sohu.com/mysql/MySQL-5.7/mysql-5.7.18-linux-glibc2.5-x86_64.tar.gz \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; {\nwget https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz \u0026amp;\u0026amp; {\ntar zxf mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz \u0026amp;\u0026amp; mv mysql-5.7.22-linux-glibc2.12-x86_64 /usr/local/mysql\ncd /usr/local/mysql/ \u0026amp;\u0026amp; mkdir data \u0026amp;\u0026amp; mkdir log \u0026amp;\u0026amp; echo \u0026ldquo;export PATH=$PATH:/usr/local/mysql/bin\u0026rdquo; \u0026raquo; /etc/profile\nsource /etc/profile \u0026amp;\u0026amp; groupadd mysql \u0026amp;\u0026amp; useradd -r -g mysql -s /bin/false mysql\n}\ncat \u0026laquo; EOF \u0026gt;/etc/my.cnf\nsocket=/usr/local/mysql/mysql.sock basedir=/usr/local/mysql datadir=/usr/local/mysql/data pid-file=/usr/local/mysql/data/mysqld.pid socket=/usr/local/mysql/mysql.sock log_error=/usr/local/mysql/log/mysql.err\nEOF\nif [ ! -d /etc/my.cnf ]\nthen\nchmod 750 data/ \u0026amp;\u0026amp; chown -R mysql . \u0026amp;\u0026amp; chgrp -R mysql . \u0026amp;\u0026amp; bin/mysqld \u0026ndash;initialize \u0026ndash;user=mysql \u0026amp;\u0026amp; cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld \u0026amp;\u0026amp; service mysqld start \u0026amp;\u0026gt; /dev/null\nelse\necho \u0026ldquo;错误！！！\u0026rdquo;\nfi\nif [ $? -eq \u0026ldquo;0\u0026rdquo; ]\nthen\necho \u0026ldquo;MySQL正式安装完成杀青！\u0026rdquo;\nelse\necho \u0026ldquo;MySQL安装失败！！！\u0026rdquo;\nexit 1\nfi\n#PHP install sccessy\nyum -y install libxml2-devel libcurl-devel openssl-devel bzip2-devel \u0026amp;\u0026gt; /dev/null\nif [ $? -eq 0 ]\nthen\necho \u0026ldquo;依赖包安装成功！！！\u0026rdquo;\nelse\necho \u0026ldquo;依赖包安装失败！！！\u0026rdquo;\nfi\ncd $ML || {\necho \u0026ldquo;进入目录失败！！！\u0026rdquo;\nexit 1\n}\nwget ftp://mcrypt.hellug.gr/pub/crypto/mcrypt/libmcrypt/libmcrypt-2.5.7.tar.gz \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; {\ntar zxf libmcrypt-2.5.7.tar.gz \u0026amp;\u0026amp; cd libmcrypt-2.5.7/ \u0026amp;\u0026amp; ./configure \u0026ndash;prefix=/usr/local/libmcrypt \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; make \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; make install \u0026amp;\u0026gt; /dev/null\n}\nif [ $? -eq 0 ]\nthen\necho \u0026ldquo;Libmcrypt安装成功！\u0026rdquo;\nelse\necho \u0026ldquo;Libmcrypt-ERROR!\u0026rdquo;\nexit 1\nfi\n# PHP install\ncd $ML || {\necho \u0026ldquo;进入目录失败！！！\u0026rdquo;\nexit 1\n}\nwget http://cn2.php.net/distributions/php-5.6.27.tar.gz \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; {\ntar zxf php-5.6.27.tar.gz \u0026amp;\u0026amp; cd php-5.6.27/ \u0026amp;\u0026amp; ./configure \u0026ndash;prefix=/usr/local/php5.6 \u0026ndash;with-mysql=mysqlnd \u0026ndash;with-pdo-mysql=mysqlnd \u0026ndash;with-mysqli=mysqlnd \u0026ndash;with-openssl \u0026ndash;enable-fpm \u0026ndash;enable-sockets \u0026ndash;enable-sysvshm \u0026ndash;enable-mbstring \u0026ndash;with-freetype-dir \u0026ndash;with-jpeg-dir \u0026ndash;with-png-dir \u0026ndash;with-zlib \u0026ndash;with-libxml-dir=/usr \u0026ndash;enable-xml \u0026ndash;with-mhash \u0026ndash;with-mcrypt=/usr/local/libmcrypt \u0026ndash;with-config-file-path=/etc \u0026ndash;with-config-file-scan-dir=/etc/php.d \u0026ndash;with-bz2 \u0026ndash;enable-maintainer-zts \u0026amp;\u0026gt; /dev/null\n}\nif [ $? -eq 0 ]\nthen\nmake \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; make install \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; echo \u0026ldquo;PHP编译安装成功,正在配置请稍等\u0026hellip;.\u0026rdquo;\nelse\necho \u0026ldquo;PHP安装失败\u0026rdquo;\nfi\ncd $PML || {\necho \u0026ldquo;进入目录失败！！！\u0026rdquo;\nexit 1\n}\ncp php.ini-production /etc/php.ini \u0026amp;\u0026amp; {\ncp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm \u0026amp;\u0026amp; chmod +x /etc/init.d/php-fpm \u0026amp;\u0026amp; chkconfig \u0026ndash;add php-fpm \u0026amp;\u0026amp; chkconfig php-fpm on\n}\nif [ $? -eq 0 ]\nthen\ncp /usr/local/php5.6/etc/php-fpm.conf.default /usr/local/php5.6/etc/php-fpm.conf \u0026amp;\u0026amp; echo \u0026ldquo;复制主配置成功\u0026rdquo;\nelse\necho \u0026ldquo;PHP权限失败，请重试！\u0026rdquo;\nfi\nif [ ! -d /usr/local/php5.6/etc/php-fpm.conf ]\nthen\nsed -i \u0026rsquo;s#;pid = run/php-fpm.pid#pid = run/php-fpm.pid#g\u0026rsquo; /usr/local/php5.6/etc/php-fpm.conf\nsed -i \u0026rsquo;s/listen = 127.0.0.1:9000/listen = 127.0.0.1:9000/g\u0026rsquo; /usr/local/php5.6/etc/php-fpm.conf\nsed -i \u0026rsquo;s/pm.max_children = 5/pm.max_children = 300/g\u0026rsquo; /usr/local/php5.6/etc/php-fpm.conf\nsed -i \u0026rsquo;s/pm.start_servers = 2/pm.start_servers = 20/g\u0026rsquo; /usr/local/php5.6/etc/php-fpm.conf\nsed -i \u0026rsquo;s/pm.min_spare_servers = 1/pm.min_spare_servers = 20/g\u0026rsquo; /usr/local/php5.6/etc/php-fpm.conf\nsed -i \u0026rsquo;s/pm.max_spare_servers = 3/pm.max_spare_servers = 100/g\u0026rsquo; /usr/local/php5.6/etc/php-fpm.conf\nelse\necho \u0026ldquo;NONONO\u0026rdquo;\nfi\nif [ $? -eq 0 ]\nthen\nsystemctl start php-fpm \u0026amp;\u0026amp; echo \u0026ldquo;PHP启动成功\u0026rdquo;\nelse\necho \u0026ldquo;启动PHP失败\u0026rdquo;\nfi\n#配置nginx解析php\nif [ ! -d /usr/local/nginx/conf/nginx.conf ]\nthen\nsed -i \u0026rsquo;s/index index.html index.htm;/index index.php index.html index.htm;/g\u0026rsquo; /usr/local/nginx/conf/nginx.conf\nsed -i \u0026rsquo;s/# root html;/ root html;/g\u0026rsquo; /usr/local/nginx/conf/nginx.conf\nsed -i \u0026rsquo;s/# fastcgi_pass 127.0.0.1:9000;/ fastcgi_pass 127.0.0.1:9000;/g\u0026rsquo; /usr/local/nginx/conf/nginx.conf\nsed -i \u0026rsquo;s/# fastcgi_index index.php;/ fastcgi_index index.php;/g\u0026rsquo; /usr/local/nginx/conf/nginx.conf\nsed -i \u0026rsquo;s*# fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;* fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;*g\u0026rsquo; /usr/local/nginx/conf/nginx.conf\nsed -i \u0026rsquo;s/# include fastcgi_params;/ include fastcgi.conf;/g\u0026rsquo; /usr/local/nginx/conf/nginx.conf\nsed -i \u0026lsquo;71d\u0026rsquo; /usr/local/nginx/conf/nginx.conf \u0026amp;\u0026amp; sed -i \u0026lsquo;N;70a}\u0026rsquo; /usr/local/nginx/conf/nginx.conf\nsed -i \u0026lsquo;65d\u0026rsquo; /usr/local/nginx/conf/nginx.conf \u0026amp;\u0026amp; sed -i \u0026lsquo;N;64alocation ~ \\.php\nnbsp;{\u0026rsquo; /usr/local/nginx/conf/nginx.conf\nelse\necho \u0026ldquo;解析PHP失败！！！\u0026rdquo;\nfi\ntouch /usr/local/nginx/html/phptest.php\ncat \u0026laquo; EOF \u0026gt;/usr/local/nginx/html/phptest.php\n\u003c?php phpinfo(); ?\u003e EOF\nif [ ! -d /usr/local/nginx/html/phptest.php ]\nthen\nnginx -s reload \u0026amp;\u0026amp; systemctl restart php-fpm\nelse\necho \u0026ldquo;测试目录文件失败\u0026rdquo;\nfi\nwget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo \u0026amp;\u0026gt; /dev/null \u0026amp;\u0026amp; yum install -y sl \u0026amp;\u0026gt; /dev/null\nsl\nif [ $? -eq 0 ]\nthen\necho \u0026ldquo;LNMP安装成功，请您访问http://$ADDR/phptest.php\u0026rdquo;\nelse\necho \u0026ldquo;安装失败\u0026rdquo;\nfi\nif [ $? -eq 0 ]\nthen\necho \u0026ldquo;LNMP安装成功，请您访问http://$ADDR/phptest.php\u0026rdquo;\nelse\necho \u0026ldquo;安装失败\u0026rdquo;\nfi\n###################################################################################################This is a lnmp-install~\n以上为lnmp环境的搭建，不要准备包，全部在线下载，整个过程最多30分钟，这个只是基本的lnmp环境\n如果说要安装zabbix4.0的话还需要满足他的先决条件，在这里我们一步步的来，遇到阻挡了再去安装。\n下面开始安装zabbix4.0\n软件包下载地址：https://www.zabbix.com/download_sources\n解压软件包：\nyum\u0026nbsp;install\u0026nbsp;-y\u0026nbsp;net-snmp-devel tar\u0026nbsp;zxf\u0026nbsp;zabbix-4.0.0.tar.gz cd\u0026nbsp;zabbix-4.0.0 ./configure\u0026nbsp;--prefix=/usr/local/zabbix\u0026nbsp;--enable-server\u0026nbsp;--enable-agent\u0026nbsp;--with-mysql\u0026nbsp;--enable-ipv6\u0026nbsp;--with-net-snmp\u0026nbsp;--with-libcurl\u0026nbsp;--with-libxml2 在这里有可能会发生报错：\n现象1：\nconfigure:\u0026nbsp;error:\u0026nbsp;Not\u0026nbsp;found\u0026nbsp;mysqlclient\u0026nbsp;library 解决：将编译时的\u0026ndash;with-mysql后面跟上数据库的安装路径\n1 make \u0026amp;\u0026amp; make install\n到这里安装成功，下面开始配置各项配置文件\n1\u0026nbsp;vim\u0026nbsp;/usr/local/zabbix/etc/zabbix_server.conf 2\u0026nbsp;DBHost=localhost\u0026nbsp;#默认注释掉了，直接取消注释即可 3\u0026nbsp;DBName=zabbix\u0026nbsp;#数据库名字 4\u0026nbsp;DBUser=zabbix\u0026nbsp;#默认是root，我们授权的用户是zabbix 5\u0026nbsp;DBPassword=zabbix\u0026nbsp;#密码我们授权的也是zabbix 下面是数据库的导入与授权操作\n1.先登录数据库\n在这里也许你会不知道数据库该怎么登录，因为你并不知道数据库密码\n初始密码获取方法： cat /usr/local/mysql/log/mysql.err | grep password\n黄色框里面的就是数据库的初始密码了\n登录数据库以后必须更改初密码，否则无法进行建库等操作\n更改密码：\n1\u0026nbsp;use\u0026nbsp;mysql; 2\u0026nbsp;update\u0026nbsp;user\u0026nbsp;set\u0026nbsp;password=password('mysql')\u0026nbsp;where\u0026nbsp;user='root'; 3\u0026nbsp;flush\u0026nbsp;privileges; 4\u0026nbsp;create\u0026nbsp;database\u0026nbsp;zabbix; 5\u0026nbsp;grant\u0026nbsp;all\u0026nbsp;on\u0026nbsp;zabbix.*\u0026nbsp;to\u0026nbsp;zabbix@'localhost'\u0026nbsp;identified\u0026nbsp;by\u0026nbsp;'zabbixmysql'; 6\u0026nbsp;flush\u0026nbsp;privileges; 接下来是导入数据库：\n1\u0026nbsp;cd\u0026nbsp;/usr/src/zabbix-4.0.0 2\u0026nbsp;mysql\u0026nbsp;-uzabbix\u0026nbsp;-pzabbixmysql\u0026nbsp;zabbix\u0026nbsp;\u0026lt;\u0026nbsp;database/mysql/schema.sql 3\u0026nbsp;mysql\u0026nbsp;-uzabbix\u0026nbsp;-pzabbixmysql\u0026nbsp;zabbix\u0026nbsp;\u0026lt;\u0026nbsp;database/mysql/images.sql 4\u0026nbsp;mysql\u0026nbsp;-uzabbix\u0026nbsp;-pzabbixmysql\u0026nbsp;zabbix\u0026nbsp;\u0026lt;\u0026nbsp;database/mysql/data.sql \u0026lt;p\u0026gt; 下面我们可以写一个数据库连通性的测试页面放到nginx的html目录下： \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;!-- /wp:paragraph --\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;!-- wp:shortcode --\u0026gt; \u0026lt;br /\u0026gt; vim /usr/local/nginx/html/mysqltest.php\u0026lt;br /\u0026gt; \u0026lt;?php $link=mysql_connect(\u0026rsquo;localhost\u0026rsquo;,\u0026lsquo;zabbix\u0026rsquo;,\u0026lsquo;zabbix\u0026rsquo;); if($link) echo \u0026quot;\nThe database connection was successful! \u0026lt;p\u0026gt; \u0026quot;;\u0026lt;br /\u0026gt; else echo \u0026quot; \u0026lt;/p\u0026gt; \u0026lt;h1\u0026gt; The database connection was Fail!! \u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026quot;;\u0026lt;br /\u0026gt; mysql_close();\u0026lt;br /\u0026gt; ?\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;!-- /wp:shortcode --\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;!-- wp:preformatted {\u0026quot;className\u0026quot;:\u0026quot;brush:bash;toolbar:false\u0026quot;} --\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;pre class=\u0026quot;wp-block-preformatted brush:bash;toolbar:false\u0026quot;\u0026gt;\u0026lt;/pre\u0026gt; 浏览器访问nginx的IP后面加上测试文件文件名出先下面内容则代表连接成功： 接下来就是进入zabbix的web界面了，这时候需要把前端文件copy到nginx的HTML目录下 mkdir\u0026nbsp;/usr/local/nginx/html/zabbix cd\u0026nbsp;/usr/src/zabbix-4.0.0/frontends/php/ cp\u0026nbsp;*\u0026nbsp;/usr/local/nginx/html/zabbix/ 进入web界面：http://ip/zabbix/ 下面是安装过程遇到的问题 提示不满足zabbix的先决条件 根据提示去更改php.ini的相关数值，参考上面的先决条件 在这个过程可能会涉及到php模块的安装，可以参考php扩展模块的安装方法安装就能完成 \u0026nbsp;php扩展模块安装方法：https://www.cnblogs.com/hw226234/p/9777616.html\u0026nbsp; 本文来自我的个人博客：https://www.cnblogs.com/hw226234/ ","date":"2020年22月16日","externalUrl":null,"permalink":"/18.html","section":"Posts","summary":"","title":"zabbix4.0的安装与配置","type":"post"},{"content":" #!/bin/bash # @Author: HanWei # @Date: 2020-02-14 18:51:37 # @Last Modified by: HanWei # @Last Modified time: 2020-02-14 18:51:37 # @E-mail: han_wei_95@163.com ################################################# : '脚本功能说明： 1.定期修改密码 2.使用随机密码来设置密码 3.将密码发送到指定的邮箱账号 4.邮件发送成功才进行修改密码 5.使用方法 sh shell.sh username ' ################################################## date=$(date) hostname=$(hostname) passwd=$(openssl rand -base64 16) echo $passwd \u003e\u003e passwd.txt chattr +a passwd.txt user=$1 echo ${passwd} | passwd --stdin $user echo \"passwd is ${passwd} for $user\" | mail -s \"$date $hostname 密码修改通知 \" han_wei_95@163.com ","date":"2020年22月16日","externalUrl":null,"permalink":"/5.html","section":"Posts","summary":"","title":"Linux使用随机数修改密码","type":"post"},{"content":"","date":"2020年22月10日","externalUrl":null,"permalink":"/tags/tcpdump/","section":"标签","summary":"","title":"Tcpdump","type":"tags"},{"content":" 本文主要内容翻译自《Tcpdump Examples》。\ntcpdump 是一款强大的网络抓包工具，它使用 libpcap 库来抓取网络数据包，这个库在几乎在所有的 Linux/Unix 中都有。熟悉 tcpdump 的使用能够帮助你分析调试网络数据，本文将通过一个个具体的示例来介绍它在不同场景下的使用方法。不管你是系统管理员，程序员，云原生工程师还是 yaml 工程师，掌握 tcpdump 的使用都能让你如虎添翼，升职加薪。\n1. 基本语法和使用方法 # tcpdump 的常用参数如下：\n$ tcpdump -i eth0 -nn -s0 -v port 80 -i : 选择要捕获的接口，通常是以太网卡或无线网卡，也可以是 vlan 或其他特殊接口。如果该系统上只有一个网络接口，则无需指定。 -nn : 单个 n 表示不解析域名，直接显示 IP；两个 n 表示不解析域名和端口。这样不仅方便查看 IP 和端口号，而且在抓取大量数据时非常高效，因为域名解析会降低抓取速度。 -s0 : tcpdump 默认只会截取前 96 字节的内容，要想截取所有的报文内容，可以使用 -s number， number 就是你要截取的报文字节数，如果是 0 的话，表示截取报文全部内容。 -v : 使用 -v，-vv 和 -vvv 来显示更多的详细信息，通常会显示更多与特定协议相关的信息。 port 80 : 这是一个常见的端口过滤器，表示仅抓取 80 端口上的流量，通常是 HTTP。 额外再介绍几个常用参数：\n-p : 不让网络接口进入混杂模式。默认情况下使用 tcpdump 抓包时，会让网络接口进入混杂模式。一般计算机网卡都工作在非混杂模式下，此时网卡只接受来自网络端口的目的地址指向自己的数据。当网卡工作在混杂模式下时，网卡将来自接口的所有数据都捕获并交给相应的驱动程序。如果设备接入的交换机开启了混杂模式，使用 -p 选项可以有效地过滤噪声。 -e : 显示数据链路层信息。默认情况下 tcpdump 不会显示数据链路层信息，使用 -e 选项可以显示源和目的 MAC 地址，以及 VLAN tag 信息。例如： $ tcpdump -n -e -c 5 not ip6 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on br-lan, link-type EN10MB (Ethernet), capture size 262144 bytes 18:27:53.619865 24:5e:be:0c:17:af \u0026gt; 00:e2:69:23:d3:3b, ethertype IPv4 (0x0800), length 1162: 192.168.100.20.51410 \u0026gt; 180.176.26.193.58695: Flags [.], seq 2045333376:2045334484, ack 3398690514, win 751, length 1108 18:27:53.626490 00:e2:69:23:d3:3b \u0026gt; 24:5e:be:0c:17:af, ethertype IPv4 (0x0800), length 68: 220.173.179.66.36017 \u0026gt; 192.168.100.20.51410: UDP, length 26 18:27:53.626893 24:5e:be:0c:17:af \u0026gt; 00:e2:69:23:d3:3b, ethertype IPv4 (0x0800), length 1444: 192.168.100.20.51410 \u0026gt; 220.173.179.66.36017: UDP, length 1402 18:27:53.628837 00:e2:69:23:d3:3b \u0026gt; 24:5e:be:0c:17:af, ethertype IPv4 (0x0800), length 1324: 46.97.169.182.6881 \u0026gt; 192.168.100.20.59145: Flags [P.], seq 3058450381:3058451651, ack 14349180, win 502, length 1270 18:27:53.629096 24:5e:be:0c:17:af \u0026gt; 00:e2:69:23:d3:3b, ethertype IPv4 (0x0800), length 54: 192.168.100.20.59145 \u0026gt; 192.168.100.1.12345: Flags [.], ack 3058451651, win 6350, length 0 5 packets captured 显示 ASCII 字符串 # -A 表示使用 ASCII 字符串打印报文的全部数据，这样可以使读取更加简单，方便使用 grep 等工具解析输出内容。-X 表示同时使用十六进制和 ASCII 字符串打印报文的全部数据。这两个参数不能一起使用。例如：\n$ tcpdump -A -s0 port 80 抓取特定协议的数据 # 后面可以跟上协议名称来过滤特定协议的流量，以 UDP 为例，可以加上参数 udp 或 protocol 17，这两个命令意思相同。\n$ tcpdump -i eth0 udp $ tcpdump -i eth0 proto 17 同理，tcp 与 protocol 6 意思相同。\n抓取特定主机的数据 # 使用过滤器 host 可以抓取特定目的地和源 IP 地址的流量。\n$ tcpdump -i eth0 host 10.10.1.1 也可以使用 src 或 dst 只抓取源或目的地：\n$ tcpdump -i eth0 dst 10.10.1.20 将抓取的数据写入文件 # 使用 tcpdump 截取数据报文的时候，默认会打印到屏幕的默认输出，你会看到按照顺序和格式，很多的数据一行行快速闪过，根本来不及看清楚所有的内容。不过，tcpdump 提供了把截取的数据保存到文件的功能，以便后面使用其他图形工具（比如 wireshark，Snort）来分析。\n-w 选项用来把数据报文输出到文件：\n$ tcpdump -i eth0 -s0 -w test.pcap 行缓冲模式 # 如果想实时将抓取到的数据通过管道传递给其他工具来处理，需要使用 -l 选项来开启行缓冲模式（或使用 -c 选项来开启数据包缓冲模式）。使用 -l 选项可以将输出通过立即发送给其他命令，其他命令会立即响应。\n$ tcpdump -i eth0 -s0 -l port 80 | grep \u0026#39;Server:\u0026#39; 组合过滤器 # 过滤的真正强大之处在于你可以随意组合它们，而连接它们的逻辑就是常用的 与/AND/\u0026amp;\u0026amp; 、 或/OR/|| 和 非/not/!。\nand or \u0026amp;\u0026amp; or or || not or ! 2. 过滤器 # 关于 tcpdump 的过滤器，这里有必要单独介绍一下。\n机器上的网络报文数量异常的多，很多时候我们只关系和具体问题有关的数据报（比如访问某个网站的数据，或者 icmp 超时的报文等等），而这些数据只占到很小的一部分。把所有的数据截取下来，从里面找到想要的信息无疑是一件很费时费力的工作。而 tcpdump 提供了灵活的语法可以精确地截取关心的数据报，简化分析的工作量。这些选择数据包的语句就是过滤器（filter）！\nHost 过滤器 # Host 过滤器用来过滤某个主机的数据报文。例如：\n$ tcpdump host 1.2.3.4 该命令会抓取所有发往主机 1.2.3.4 或者从主机 1.2.3.4 发出的流量。如果想只抓取从该主机发出的流量，可以使用下面的命令：\n$ tcpdump src host 1.2.3.4 Network 过滤器 # Network 过滤器用来过滤某个网段的数据，使用的是 CIDR 模式。可以使用四元组（x.x.x.x）、三元组（x.x.x）、二元组（x.x）和一元组（x）。四元组就是指定某个主机，三元组表示子网掩码为 255.255.255.0，二元组表示子网掩码为 255.255.0.0，一元组表示子网掩码为 255.0.0.0。例如，\n抓取所有发往网段 192.168.1.x 或从网段 192.168.1.x 发出的流量：\n$ tcpdump net 192.168.1 抓取所有发往网段 10.x.x.x 或从网段 10.x.x.x 发出的流量：\n$ tcpdump net 10 和 Host 过滤器一样，这里也可以指定源和目的：\n$ tcpdump src net 10 也可以使用 CIDR 格式：\n$ tcpdump src net 172.16.0.0/12 Proto 过滤器 # Proto 过滤器用来过滤某个协议的数据，关键字为 proto，可省略。proto 后面可以跟上协议号或协议名称，支持 icmp, igmp, igrp, pim, ah, esp, carp, vrrp, udp 和 tcp。因为通常的协议名称是保留字段，所以在于 proto 指令一起使用时，必须根据 shell 类型使用一个或两个反斜杠（/）来转义。Linux 中的 shell 需要使用两个反斜杠来转义，MacOS 只需要一个。\n例如，抓取 icmp 协议的报文：\n$ tcpdump -n proto \\\\icmp # 或者 $ tcpdump -n icmp Port 过滤器 # Port 过滤器用来过滤通过某个端口的数据报文，关键字为 port。例如：\n$ tcpdump port 389 3. 理解 tcpdump 的输出 # 截取数据只是第一步，第二步就是理解这些数据，下面就解释一下 tcpdump 命令输出各部分的意义。\n21:27:06.995846 IP (tos 0x0, ttl 64, id 45646, offset 0, flags [DF], proto TCP (6), length 64) 192.168.1.106.56166 \u0026gt; 124.192.132.54.80: Flags [S], cksum 0xa730 (correct), seq 992042666, win 65535, options [mss 1460,nop,wscale 4,nop,nop,TS val 663433143 ecr 0,sackOK,eol], length 0 21:27:07.030487 IP (tos 0x0, ttl 51, id 0, offset 0, flags [DF], proto TCP (6), length 44) 124.192.132.54.80 \u0026gt; 192.168.1.106.56166: Flags [S.], cksum 0xedc0 (correct), seq 2147006684, ack 992042667, win 14600, options [mss 1440], length 0 21:27:07.030527 IP (tos 0x0, ttl 64, id 59119, offset 0, flags [DF], proto TCP (6), length 40) 192.168.1.106.56166 \u0026gt; 124.192.132.54.80: Flags [.], cksum 0x3e72 (correct), ack 2147006685, win 65535, length 0 最基本也是最重要的信息就是数据报的源地址/端口和目的地址/端口，上面的例子第一条数据报中，源地址 ip 是 192.168.1.106，源端口是 56166，目的地址是 124.192.132.54，目的端口是 80。 \u0026gt; 符号代表数据的方向。\n此外，上面的三条数据还是 tcp 协议的三次握手过程，第一条就是 SYN 报文，这个可以通过 Flags [S] 看出。下面是常见的 TCP 报文的 Flags:\n[S] : SYN（开始连接） [.] : 没有 Flag [P] : PSH（推送数据） [F] : FIN （结束连接） [R] : RST（重置连接） 而第二条数据的 [S.] 表示 SYN-ACK，就是 SYN 报文的应答报文。\n4. 例子 # 下面给出一些具体的例子，每个例子都可以使用多种方法来获得相同的输出，你使用的方法取决于所需的输出和网络上的流量。我们在排障时，通常只想获取自己想要的内容，可以通过过滤器和 ASCII 输出并结合管道与 grep、cut、awk 等工具来实现此目的。\n例如，在抓取 HTTP 请求和响应数据包时，可以通过删除标志 SYN/ACK/FIN 来过滤噪声，但还有更简单的方法，那就是通过管道传递给 grep。在达到目的的同时，我们要选择最简单最高效的方法。下面来看例子。\n提取 HTTP 用户代理 # 从 HTTP 请求头中提取 HTTP 用户代理：\n$ tcpdump -nn -A -s1500 -l | grep \u0026#34;User-Agent:\u0026#34; 通过 egrep 可以同时提取用户代理和主机名（或其他头文件）：\n$ tcpdump -nn -A -s1500 -l | egrep -i \u0026#39;User-Agent:|Host:\u0026#39; 只抓取 HTTP GET 和 POST 流量 # 抓取 HTTP GET 流量：\n$ tcpdump -s 0 -A -vv \u0026#39;tcp[((tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2):4] = 0x47455420\u0026#39; 也可以抓取 HTTP POST 请求流量：\n$ tcpdump -s 0 -A -vv \u0026#39;tcp[((tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2):4] = 0x504f5354\u0026#39; 注意：该方法不能保证抓取到 HTTP POST 有效数据流量，因为一个 POST 请求会被分割为多个 TCP 数据包。\n上述两个表达式中的十六进制将会与 GET 和 POST 请求的 ASCII 字符串匹配。例如，tcp[((tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2):4] 首先会确定我们感兴趣的字节的位置（在 TCP header 之后），然后选择我们希望匹配的 4 个字节。\n提取 HTTP 请求的 URL # 提取 HTTP 请求的主机名和路径：\n$ tcpdump -s 0 -v -n -l | egrep -i \u0026#34;POST /|GET /|Host:\u0026#34; tcpdump: listening on enp7s0, link-type EN10MB (Ethernet), capture size 262144 bytes POST /wp-login.php HTTP/1.1 Host: dev.example.com GET /wp-login.php HTTP/1.1 Host: dev.example.com GET /favicon.ico HTTP/1.1 Host: dev.example.com GET / HTTP/1.1 Host: dev.example.com 提取 HTTP POST 请求中的密码 # 从 HTTP POST 请求中提取密码和主机名：\n$ tcpdump -s 0 -A -n -l | egrep -i \u0026#34;POST /|pwd=|passwd=|password=|Host:\u0026#34; tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp7s0, link-type EN10MB (Ethernet), capture size 262144 bytes 11:25:54.799014 IP 10.10.1.30.39224 \u0026gt; 10.10.1.125.80: Flags [P.], seq 1458768667:1458770008, ack 2440130792, win 704, options [nop,nop,TS val 461552632 ecr 208900561], length 1341: HTTP: POST /wp-login.php HTTP/1.1 .....s..POST /wp-login.php HTTP/1.1 Host: dev.example.com .....s..log=admin\u0026amp;pwd=notmypassword\u0026amp;wp-submit=Log+In\u0026amp;redirect_to=http%3A%2F%2Fdev.example.com%2Fwp-admin%2F\u0026amp;testcookie=1 提取 Cookies # 提取 Set-Cookie（服务端的 Cookie）和 Cookie（客户端的 Cookie）：\n$ tcpdump -nn -A -s0 -l | egrep -i \u0026#39;Set-Cookie|Host:|Cookie:\u0026#39; tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on wlp58s0, link-type EN10MB (Ethernet), capture size 262144 bytes Host: dev.example.com Cookie: wordpress_86be02xxxxxxxxxxxxxxxxxxxc43=admin%7C152xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxfb3e15c744fdd6; _ga=GA1.2.21343434343421934; _gid=GA1.2.927343434349426; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_86be654654645645645654645653fc43=admin%7C15275102testtesttesttestab7a61e; wp-settings-time-1=1527337439 抓取 ICMP 数据包 # 查看网络上的所有 ICMP 数据包：\n$ tcpdump -n icmp tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp7s0, link-type EN10MB (Ethernet), capture size 262144 bytes 11:34:21.590380 IP 10.10.1.217 \u0026gt; 10.10.1.30: ICMP echo request, id 27948, seq 1, length 64 11:34:21.590434 IP 10.10.1.30 \u0026gt; 10.10.1.217: ICMP echo reply, id 27948, seq 1, length 64 11:34:27.680307 IP 10.10.1.159 \u0026gt; 10.10.1.1: ICMP 10.10.1.189 udp port 59619 unreachable, length 115 抓取非 ECHO/REPLY 类型的 ICMP 数据包 # 通过排除 echo 和 reply 类型的数据包使抓取到的数据包不包括标准的 ping 包：\n$ tcpdump \u0026#39;icmp[icmptype] != icmp-echo and icmp[icmptype] != icmp-echoreply\u0026#39; tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp7s0, link-type EN10MB (Ethernet), capture size 262144 bytes 11:37:04.041037 IP 10.10.1.189 \u0026gt; 10.10.1.20: ICMP 10.10.1.189 udp port 36078 unreachable, length 156 抓取 SMTP/POP3 协议的邮件 # 可以提取电子邮件的正文和其他数据。例如，只提取电子邮件的收件人：\n$ tcpdump -nn -l port 25 | grep -i \u0026#39;MAIL FROM\\|RCPT TO\u0026#39; 抓取 NTP 服务的查询和响应 # $ tcpdump dst port 123 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on eth0, link-type EN10MB (Ethernet), capture size 65535 bytes 21:02:19.112502 IP test33.ntp \u0026gt; 199.30.140.74.ntp: NTPv4, Client, length 48 21:02:19.113888 IP 216.239.35.0.ntp \u0026gt; test33.ntp: NTPv4, Server, length 48 21:02:20.150347 IP test33.ntp \u0026gt; 216.239.35.0.ntp: NTPv4, Client, length 48 21:02:20.150991 IP 216.239.35.0.ntp \u0026gt; test33.ntp: NTPv4, Server, length 48 抓取 SNMP 服务的查询和响应 # 通过 SNMP 服务，渗透测试人员可以获取大量的设备和系统信息。在这些信息中，系统信息最为关键，如操作系统版本、内核版本等。使用 SNMP 协议快速扫描程序 onesixtyone，可以看到目标系统的信息：\n$ onesixtyone 10.10.1.10 public Scanning 1 hosts, 1 communities 10.10.1.10 [public] Linux test33 4.15.0-20-generic #21-Ubuntu SMP Tue Apr 24 06:16:15 UTC 2018 x86_64 可以通过 tcpdump 抓取 GetRequest 和 GetResponse：\n$ tcpdump -n -s0 port 161 and udp tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on wlp58s0, link-type EN10MB (Ethernet), capture size 262144 bytes 23:39:13.725522 IP 10.10.1.159.36826 \u0026gt; 10.10.1.20.161: GetRequest(28) .1.3.6.1.2.1.1.1.0 23:39:13.728789 IP 10.10.1.20.161 \u0026gt; 10.10.1.159.36826: GetResponse(109) .1.3.6.1.2.1.1.1.0=\u0026#34;Linux testmachine 4.15.0-20-generic #21-Ubuntu SMP Tue Apr 24 06:16:15 UTC 2018 x86_64\u0026#34; 切割 pcap 文件 # 当抓取大量数据并写入文件时，可以自动切割为多个大小相同的文件。例如，下面的命令表示每 3600 秒创建一个新文件 capture-(hour).pcap，每个文件大小不超过 200*1000000 字节：\n$ tcpdump -w /tmp/capture-%H.pcap -G 3600 -C 200 这些文件的命名为 capture-{1-24}.pcap，24 小时之后，之前的文件就会被覆盖。\n抓取 IPv6 流量 # 可以通过过滤器 ip6 来抓取 IPv6 流量，同时可以指定协议如 TCP：\n$ tcpdump -nn ip6 proto 6 从之前保存的文件中读取 IPv6 UDP 数据报文：\n$ tcpdump -nr ipv6-test.pcap ip6 proto 17 检测端口扫描 # 在下面的例子中，你会发现抓取到的报文的源和目的一直不变，且带有标志位 [S] 和 [R]，它们与一系列看似随机的目标端口进行匹配。当发送 SYN 之后，如果目标主机的端口没有打开，就会返回一个 RESET。这是 Nmap 等端口扫描工具的标准做法。\n$ tcpdump -nn 21:46:19.693601 IP 10.10.1.10.60460 \u0026gt; 10.10.1.199.5432: Flags [S], seq 116466344, win 29200, options [mss 1460,sackOK,TS val 3547090332 ecr 0,nop,wscale 7], length 0 21:46:19.693626 IP 10.10.1.10.35470 \u0026gt; 10.10.1.199.513: Flags [S], seq 3400074709, win 29200, options [mss 1460,sackOK,TS val 3547090332 ecr 0,nop,wscale 7], length 0 21:46:19.693762 IP 10.10.1.10.44244 \u0026gt; 10.10.1.199.389: Flags [S], seq 2214070267, win 29200, options [mss 1460,sackOK,TS val 3547090333 ecr 0,nop,wscale 7], length 0 21:46:19.693772 IP 10.10.1.199.389 \u0026gt; 10.10.1.10.44244: Flags [R.], seq 0, ack 2214070268, win 0, length 0 21:46:19.693783 IP 10.10.1.10.35172 \u0026gt; 10.10.1.199.1433: Flags [S], seq 2358257571, win 29200, options [mss 1460,sackOK,TS val 3547090333 ecr 0,nop,wscale 7], length 0 21:46:19.693826 IP 10.10.1.10.33022 \u0026gt; 10.10.1.199.49153: Flags [S], seq 2406028551, win 29200, options [mss 1460,sackOK,TS val 3547090333 ecr 0,nop,wscale 7], length 0 21:46:19.695567 IP 10.10.1.10.55130 \u0026gt; 10.10.1.199.49154: Flags [S], seq 3230403372, win 29200, options [mss 1460,sackOK,TS val 3547090334 ecr 0,nop,wscale 7], length 0 21:46:19.695590 IP 10.10.1.199.49154 \u0026gt; 10.10.1.10.55130: Flags [R.], seq 0, ack 3230403373, win 0, length 0 21:46:19.695608 IP 10.10.1.10.33460 \u0026gt; 10.10.1.199.49152: Flags [S], seq 3289070068, win 29200, options [mss 1460,sackOK,TS val 3547090335 ecr 0,nop,wscale 7], length 0 21:46:19.695622 IP 10.10.1.199.49152 \u0026gt; 10.10.1.10.33460: Flags [R.], seq 0, ack 3289070069, win 0, length 0 21:46:19.695637 IP 10.10.1.10.34940 \u0026gt; 10.10.1.199.1029: Flags [S], seq 140319147, win 29200, options [mss 1460,sackOK,TS val 3547090335 ecr 0,nop,wscale 7], length 0 21:46:19.695650 IP 10.10.1.199.1029 \u0026gt; 10.10.1.10.34940: Flags [R.], seq 0, ack 140319148, win 0, length 0 21:46:19.695664 IP 10.10.1.10.45648 \u0026gt; 10.10.1.199.5060: Flags [S], seq 2203629201, win 29200, options [mss 1460,sackOK,TS val 3547090335 ecr 0,nop,wscale 7], length 0 21:46:19.695775 IP 10.10.1.10.49028 \u0026gt; 10.10.1.199.2000: Flags [S], seq 635990431, win 29200, options [mss 1460,sackOK,TS val 3547090335 ecr 0,nop,wscale 7], length 0 21:46:19.695790 IP 10.10.1.199.2000 \u0026gt; 10.10.1.10.49028: Flags [R.], seq 0, ack 635990432, win 0, length 0 过滤 Nmap NSE 脚本测试结果 # 本例中 Nmap NSE 测试脚本 http-enum.nse 用来检测 HTTP 服务的合法 URL。\n在执行脚本测试的主机上：\n$ nmap -p 80 --script=http-enum.nse targetip 在目标主机上：\n$ tcpdump -nn port 80 | grep \u0026#34;GET /\u0026#34; GET /w3perl/ HTTP/1.1 GET /w-agora/ HTTP/1.1 GET /way-board/ HTTP/1.1 GET /web800fo/ HTTP/1.1 GET /webaccess/ HTTP/1.1 GET /webadmin/ HTTP/1.1 GET /webAdmin/ HTTP/1.1 抓取 DNS 请求和响应 # 向 Google 公共 DNS 发起的出站 DNS 请求和 A 记录响应可以通过 tcpdump 抓取到：\n$ tcpdump -i wlp58s0 -s0 port 53 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on wlp58s0, link-type EN10MB (Ethernet), capture size 262144 bytes 14:19:06.879799 IP test.53852 \u0026gt; google-public-dns-a.google.com.domain: 26977+ [1au] A? play.google.com. (44) 14:19:07.022618 IP google-public-dns-a.google.com.domain \u0026gt; test.53852: 26977 1/0/1 A 216.58.203.110 (60) 抓取 HTTP 有效数据包 # 抓取 80 端口的 HTTP 有效数据包，排除 TCP 连接建立过程的数据包（SYN / FIN / ACK）：\n$ tcpdump \u0026#39;tcp port 80 and (((ip[2:2] - ((ip[0]\u0026amp;0xf)\u0026lt;\u0026lt;2)) - ((tcp[12]\u0026amp;0xf0)\u0026gt;\u0026gt;2)) != 0)\u0026#39; 将输出内容重定向到 Wireshark # 通常 Wireshark（或 tshark）比 tcpdump 更容易分析应用层协议。一般的做法是在远程服务器上先使用 tcpdump 抓取数据并写入文件，然后再将文件拷贝到本地工作站上用 Wireshark 分析。\n还有一种更高效的方法，可以通过 ssh 连接将抓取到的数据实时发送给 Wireshark 进行分析。以 MacOS 系统为例，可以通过 brew cask install wireshark 来安装，然后通过下面的命令来分析：\n$ ssh root@remotesystem \u0026#39;tcpdump -s0 -c 1000 -nn -w - not port 22\u0026#39; | /Applications/Wireshark.app/Contents/MacOS/Wireshark -k -i - 例如，如果想分析 DNS 协议，可以使用下面的命令：\n$ ssh root@remotesystem \u0026#39;tcpdump -s0 -c 1000 -nn -w - port 53\u0026#39; | /Applications/Wireshark.app/Contents/MacOS/Wireshark -k -i - 抓取到的数据：\n-c 选项用来限制抓取数据的大小。如果不限制大小，就只能通过 ctrl-c 来停止抓取，这样一来不仅关闭了 tcpdump，也关闭了 wireshark。\n找出发包最多的 IP # 找出一段时间内发包最多的 IP，或者从一堆报文中找出发包最多的 IP，可以使用下面的命令：\n$ tcpdump -nnn -t -c 200 | cut -f 1,2,3,4 -d \u0026#39;.\u0026#39; | sort | uniq -c | sort -nr | head -n 20 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp7s0, link-type EN10MB (Ethernet), capture size 262144 bytes 200 packets captured 261 packets received by filter 0 packets dropped by kernel 108 IP 10.10.211.181 91 IP 10.10.1.30 1 IP 10.10.1.50 cut -f 1,2,3,4 -d \u0026lsquo;.\u0026rsquo; : 以 . 为分隔符，打印出每行的前四列。即 IP 地址。 sort | uniq -c : 排序并计数 sort -nr : 按照数值大小逆向排序 抓取用户名和密码 # 本例将重点放在标准纯文本协议上，过滤出于用户名和密码相关的报文：\n$ tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -l -A | egrep -i -B5 \u0026#39;pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user \u0026#39; 抓取 DHCP 报文 # 最后一个例子，抓取 DHCP 服务的请求和响应报文，67 为 DHCP 端口，68 为客户机端口。\n$ tcpdump -v -n port 67 or 68 tcpdump: listening on enp7s0, link-type EN10MB (Ethernet), capture size 262144 bytes 14:37:50.059662 IP (tos 0x10, ttl 128, id 0, offset 0, flags [none], proto UDP (17), length 328) 0.0.0.0.68 \u0026gt; 255.255.255.255.67: BOOTP/DHCP, Request from 00:0c:xx:xx:xx:d5, length 300, xid 0xc9779c2a, Flags [none] Client-Ethernet-Address 00:0c:xx:xx:xx:d5 Vendor-rfc1048 Extensions Magic Cookie 0x63825363 DHCP-Message Option 53, length 1: Request Requested-IP Option 50, length 4: 10.10.1.163 Hostname Option 12, length 14: \u0026#34;test-ubuntu\u0026#34; Parameter-Request Option 55, length 16: Subnet-Mask, BR, Time-Zone, Default-Gateway Domain-Name, Domain-Name-Server, Option 119, Hostname Netbios-Name-Server, Netbios-Scope, MTU, Classless-Static-Route NTP, Classless-Static-Route-Microsoft, Static-Route, Option 252 14:37:50.059667 IP (tos 0x10, ttl 128, id 0, offset 0, flags [none], proto UDP (17), length 328) 0.0.0.0.68 \u0026gt; 255.255.255.255.67: BOOTP/DHCP, Request from 00:0c:xx:xx:xx:d5, length 300, xid 0xc9779c2a, Flags [none] Client-Ethernet-Address 00:0c:xx:xx:xx:d5 Vendor-rfc1048 Extensions Magic Cookie 0x63825363 DHCP-Message Option 53, length 1: Request Requested-IP Option 50, length 4: 10.10.1.163 Hostname Option 12, length 14: \u0026#34;test-ubuntu\u0026#34; Parameter-Request Option 55, length 16: Subnet-Mask, BR, Time-Zone, Default-Gateway Domain-Name, Domain-Name-Server, Option 119, Hostname Netbios-Name-Server, Netbios-Scope, MTU, Classless-Static-Route NTP, Classless-Static-Route-Microsoft, Static-Route, Option 252 14:37:50.060780 IP (tos 0x0, ttl 64, id 53564, offset 0, flags [none], proto UDP (17), length 339) 10.10.1.1.67 \u0026gt; 10.10.1.163.68: BOOTP/DHCP, Reply, length 311, xid 0xc9779c2a, Flags [none] Your-IP 10.10.1.163 Server-IP 10.10.1.1 Client-Ethernet-Address 00:0c:xx:xx:xx:d5 Vendor-rfc1048 Extensions Magic Cookie 0x63825363 DHCP-Message Option 53, length 1: ACK Server-ID Option 54, length 4: 10.10.1.1 Lease-Time Option 51, length 4: 86400 RN Option 58, length 4: 43200 RB Option 59, length 4: 75600 Subnet-Mask Option 1, length 4: 255.255.255.0 BR Option 28, length 4: 10.10.1.255 Domain-Name-Server Option 6, length 4: 10.10.1.1 Hostname Option 12, length 14: \u0026#34;test-ubuntu\u0026#34; T252 Option 252, length 1: 10 Default-Gateway Option 3, length 4: 10.10.1.1 5. 总结 # 本文主要介绍了 tcpdump 的基本语法和使用方法，并通过一些示例来展示它强大的过滤功能。将 tcpdump 与 wireshark 进行组合可以发挥更强大的功效，本文也展示了如何优雅顺滑地结合 tcpdump 和 wireshark。如果你想了解更多的细节，可以查看 tcpdump 的 man 手册。\n","date":"2020年22月10日","externalUrl":null,"permalink":"/posts/tcpdump-examples/","section":"Posts","summary":"","title":"Tcpdump 使用教程","type":"posts"},{"content":"","date":"2019年1212月15日","externalUrl":null,"permalink":"/tags/istio/","section":"标签","summary":"","title":"Istio","type":"tags"},{"content":"没错，Istio 架构又换了。。。北京时间 2020 年 3 月 6 日 凌晨发布了 1.5 版本，该版本最大的变化是将控制平面的所有组件组合成一个单体结构叫 istiod。\n从架构图可以看出，在 Istio 1.5 中，饱受诟病的 Mixer 终于被废弃了，新版本的 HTTP 遥测默认基于 in-proxy Stats filter，同时可使用 WebAssembly 开发 in-proxy 扩展。更详细的说明请参考 Istio 1.5 发布公告。\n官方文档的部署方法比较笼统，不利于快速上手，为了帮助大家快速上手，本文将重点介绍 Istio 1.5 的部署方法。为了更方便地管理 Istio 各个组件的生命周期，推荐使用 Operator 进行部署。\n在部署 Istio 之前，首先需要确保 Kubernetes 集群（kubernetes 版本建议在 1.14 以上）已部署并配置好本地的 kubectl 客户端。\nKubernetes 环境准备 # 为了快速准备 kubernetes 环境，我们可以使用 sealos 来部署，步骤如下：\n前提条件 # 下载kubernetes 离线安装包 下载最新版本sealos 务必同步服务器时间 主机名不可重复 安装 kubernetes 集群 # $ sealos init --master 192.168.0.2 \\ --node 192.168.0.3 \\ --node 192.168.0.4 \\ --node 192.168.0.5 \\ --user root \\ --passwd your-server-password \\ --version v1.16.3 \\ --pkg-url /root/kube1.16.3.tar.gz 检查安装是否正常：\n$ kubectl get node NAME STATUS ROLES AGE VERSION sealos01 Ready master 18h v1.16.3 sealos02 Ready \u0026lt;none\u0026gt; 18h v1.16.3 sealos03 Ready \u0026lt;none\u0026gt; 18h v1.16.3 sealos04 Ready \u0026lt;none\u0026gt; 18h v1.16.3 下载 Istio 部署文件 # 你可以从 GitHub 的 release 页面下载 istio，或者直接通过下面的命令下载：\n$ curl -L https://istio.io/downloadIstio | sh - 下载完成后会得到一个 istio-1.5.0 目录，里面包含了：\ninstall/kubernetes : 针对 Kubernetes 平台的安装文件 samples : 示例应用 bin : istioctl 二进制文件，可以用来手动注入 sidecar proxy 进入 istio-1.5.0 目录。\n$ cd istio-1.5.0 $ tree -L 1 ./ ./ ├── bin ├── install ├── LICENSE ├── manifest.yaml ├── README.md ├── samples └── tools 4 directories, 4 files 将 istioctl 拷贝到 /usr/local/bin/ 中：\n$ cp bin/istioctl /usr/local/bin/ 开启 istioctl 的自动补全功能 # bash # 将 tools 目录中的 istioctl.bash 拷贝到 $HOME 目录中：\n$ cp tools/istioctl.bash ~/ 在 ~/.bashrc 中添加一行：\nsource ~/istioctl.bash 应用生效：\n$ source ~/.bashrc zsh # 将 tools 目录中的 _istioctl 拷贝到 $HOME 目录中：\n$ cp tools/_istioctl ~/ 在 ~/.zshrc 中添加一行：\nsource ~/_istioctl 应用生效：\n$ source ~/.zshrc 部署 Istio # istioctl 提供了多种安装配置文件，可以通过下面的命令查看：\n$ ll install/kubernetes/operator/profiles -rw-r--r-- 1 root root 18K 3月 4 20:40 default.yaml -rw-r--r-- 1 root root 3.2K 3月 4 20:40 demo.yaml -rw-r--r-- 1 root root 964 3月 4 20:40 empty.yaml -rw-r--r-- 1 root root 913 3月 4 20:40 minimal.yaml -rw-r--r-- 1 root root 579 3月 4 20:40 remote.yaml -rw-r--r-- 1 root root 554 3月 4 20:40 separate.yaml 它们之间的差异如下：\ndefault demo minimal remote 核心组件 istio-egressgateway X istio-ingressgateway X X istio-pilot X X X 附加组件 Grafana X istio-tracing X kiali X prometheus X X X 其中标记 X 表示该安装该组件。\n如果只是想快速试用并体验完整的功能，可以直接使用配置文件 demo 来部署。\n在正式部署之前，需要先说明两点：\nIstio CNI Plugin # 当前实现将用户 pod 流量转发到 proxy 的默认方式是使用 privileged 权限的 istio-init 这个 init container 来做的（运行脚本写入 iptables），需要用到 NET_ADMIN capabilities。对 linux capabilities 不了解的同学可以参考我的 Linux capabilities 系列。\nIstio CNI 插件的主要设计目标是消除这个 privileged 权限的 init container，换成利用 Kubernetes CNI 机制来实现相同功能的替代方案。具体的原理就是在 Kubernetes CNI 插件链末尾加上 Istio 的处理逻辑，在创建和销毁 pod 的这些 hook 点来针对 istio 的 pod 做网络配置：写入 iptables，让该 pod 所在的 network namespace 的网络流量转发到 proxy 进程。\n详细内容请参考官方文档。\n使用 Istio CNI 插件来创建 sidecar iptables 规则肯定是未来的主流方式，不如我们现在就尝试使用这种方法。\nKubernetes 关键插件（Critical Add-On Pods） # 众所周知，Kubernetes 的核心组件都运行在 master 节点上，然而还有一些附加组件对整个集群来说也很关键，例如 DNS 和 metrics-server，这些被称为关键插件。一旦关键插件无法正常工作，整个集群就有可能会无法正常工作，所以 Kubernetes 通过优先级（PriorityClass）来保证关键插件的正常调度和运行。要想让某个应用变成 Kubernetes 的关键插件，只需要其 priorityClassName 设为 system-cluster-critical 或 system-node-critical，其中 system-node-critical 优先级最高。\n注意：关键插件只能运行在 kube-system namespace 中！\n详细内容可以参考官方文档。\n接下来正式安装 Istio，首先部署 Istio operator：\n🐳 → istioctl operator init 该命令会创建一个 namespace istio-operator，并将 Istio operator 部署在此 namespace 中。\n🐳 → kubectl -n istio-operator get pod NAME READY STATUS RESTARTS AGE istio-operator-7c69599466-bz8lp 1/1 Running 0 3h29m 然后创建一个 CR IstioOperator：\n🐳 → kubectl create ns istio-system 🐳 → kubectl apply -f - \u0026lt;\u0026lt;EOF apiVersion: install.istio.io/v1alpha1 kind: IstioOperator metadata: namespace: istio-system name: example-istiocontrolplane spec: profile: demo components: cni: enabled: true namespace: kube-system ingressGateways: - enabled: true k8s: service: type: ClusterIP strategy: rollingUpdate: maxUnavailable: 100% maxSurge: 0% nodeSelector: kubernetes.io/hostname: sealos02 overlays: - apiVersion: apps/v1 kind: Deployment name: istio-ingressgateway patches: - path: spec.template.spec value: hostNetwork: true dnsPolicy: ClusterFirstWithHostNet - apiVersion: v1 kind: Service name: istio-ingressgateway patches: - path: spec.ports value: - name: status-port port: 15020 targetPort: 15020 - name: http2 port: 80 targetPort: 80 - name: https port: 443 targetPort: 443 values: cni: excludeNamespaces: - istio-system - kube-system - monitoring logLevel: info EOF 其中各个字段的详细含义请参考 IstioOperator API 文档，这里我简要说明一下：\nistio-ingressgateway 的 Service 默认类型为 LoadBalancer，需将其改为 ClusterIP。 为防止集群资源紧张，更新配置后无法创建新的 Pod，需将滚动更新策略改为先删除旧的，再创建新的。 将 istio-ingressgateway 调度到指定节点。 默认情况下除了 istio-system namespace 之外，istio cni 插件会监视其他所有 namespace 中的 Pod，然而这并不能满足我们的需求，更严谨的做法是让 istio CNI 插件至少忽略 kube-system、istio-system 这两个 namespace，如果你还有其他的特殊的 namespace，也应该加上，例如 monitoring。 下面着重解释 overlays 列表中的字段：\nHostNetwork # 为了暴露 Ingress Gateway，我们可以使用 hostport 暴露端口，并将其调度到某个固定节点。如果你的 CNI 插件不支持 hostport，可以使用 HostNetwork 模式运行，但你会发现无法启动 ingressgateway 的 Pod，因为如果 Pod 设置了 HostNetwork=true，则 dnsPolicy 就会从 ClusterFirst 被强制转换成 Default。而 Ingress Gateway 启动过程中需要通过 DNS 域名连接 pilot 等其他组件，所以无法启动。\n我们可以通过强制将 dnsPolicy 的值设置为 ClusterFirstWithHostNet 来解决这个问题，详情参考：Kubernetes DNS 高阶指南。\n当然你可以部署完成之后再修改 Ingress Gateway 的 Deployment，但这种方式还是不太优雅。经过我对 IstioOperator API 文档 的研究，发现了一个更为优雅的方法，那就是直接修改资源对象 IstioOperator 的内容，在 components.ingressGateways 下面加上么一段：\noverlays: - apiVersion: apps/v1 kind: Deployment name: istio-ingressgateway patches: - path: spec.template.spec value: hostNetwork: true dnsPolicy: ClusterFirstWithHostNet 具体含义我就不解释了，请看上篇文章。这里只对 IstioOperator 的语法做简单说明：\noverlays 列表用来修改对应组件的各个资源对象的 manifest，这里修改的是组件 Ingress Gateway 的 Deployment。 patches 列表里是实际要修改或添加的字段，我就不解释了，应该很好理解。 只暴露必要端口 # 从安全的角度来考虑，我们不应该暴露那些不必要的端口，对于 Ingress Gateway 来说，只需要暴露 HTTP、HTTPS 和 metrics 端口就够了。方法和上面一样，直接在 components.ingressGateways 的 overlays 列表下面加上这么一段：\n- apiVersion: v1 kind: Service name: istio-ingressgateway patches: - path: spec.ports value: - name: status-port port: 15020 targetPort: 15020 - name: http2 port: 80 targetPort: 80 - name: https port: 443 targetPort: 443 部署完成后，查看各组件状态：\n🐳 → kubectl -n istio-system get pod NAME READY STATUS RESTARTS AGE grafana-5cc7f86765-rt549 1/1 Running 0 3h11m istio-egressgateway-57999c5b76-59z8v 1/1 Running 0 3h11m istio-ingressgateway-5b97647565-zjz4k 1/1 Running 0 71m istio-tracing-8584b4d7f9-2jbjp 1/1 Running 0 3h11m istiod-86798869b8-jmk9v 1/1 Running 0 3h11m kiali-76f556db6d-qnsfj 1/1 Running 0 3h11m prometheus-6fd77b7876-c4vzn 2/2 Running 0 3h11m 🐳 → kubectl -n kube-system get pod -l k8s-app=istio-cni-node NAME READY STATUS RESTARTS AGE istio-cni-node-4dlfb 2/2 Running 0 3h12m istio-cni-node-4s9s7 2/2 Running 0 3h12m istio-cni-node-8g22x 2/2 Running 0 3h12m istio-cni-node-x2drr 2/2 Running 0 3h12m 可以看到 cni 插件已经安装成功，查看配置是否已经追加到 CNI 插件链的末尾：\n🐳 → cat /etc/cni/net.d/10-calico.conflist { \u0026#34;name\u0026#34;: \u0026#34;k8s-pod-network\u0026#34;, \u0026#34;cniVersion\u0026#34;: \u0026#34;0.3.1\u0026#34;, \u0026#34;plugins\u0026#34;: [ ... { \u0026#34;cniVersion\u0026#34;: \u0026#34;0.3.1\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;istio-cni\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;istio-cni\u0026#34;, \u0026#34;log_level\u0026#34;: \u0026#34;info\u0026#34;, \u0026#34;kubernetes\u0026#34;: { \u0026#34;kubeconfig\u0026#34;: \u0026#34;/etc/cni/net.d/ZZZ-istio-cni-kubeconfig\u0026#34;, \u0026#34;cni_bin_dir\u0026#34;: \u0026#34;/opt/cni/bin\u0026#34;, \u0026#34;exclude_namespaces\u0026#34;: [ \u0026#34;istio-system\u0026#34;, \u0026#34;kube-system\u0026#34;, \u0026#34;monitoring\u0026#34; ] } } ] } 暴露 Dashboard # 这个没什么好说的，通过 Ingress Controller 暴露就好了，可以参考我以前写的 Istio 1.0 部署。如果使用 Contour 的可以参考我的另一篇文章：Contour 学习笔记（一）：使用 Contour 接管 Kubernetes 的南北流量。\n这里我再介绍一种新的方式，istioctl 提供了一个子命令来从本地打开各种 Dashboard：\n🐳 → istioctl dashboard --help Access to Istio web UIs Usage: istioctl dashboard [flags] istioctl dashboard [command] Aliases: dashboard, dash, d Available Commands: controlz Open ControlZ web UI envoy Open Envoy admin web UI grafana Open Grafana web UI jaeger Open Jaeger web UI kiali Open Kiali web UI prometheus Open Prometheus web UI zipkin Open Zipkin web UI 例如，要想在本地打开 Grafana 页面，只需执行下面的命令：\n🐳 → istioctl dashboard grafana http://localhost:36813 咋一看可能觉得这个功能很鸡肋，我的集群又不是部署在本地，而且这个命令又不能指定监听的 IP，在本地用浏览器根本打不开呀！其实不然，你可以在本地安装 kubectl 和 istioctl 二进制文件，然后通过 kubeconfig 连接到集群，最后再在本地执行上面的命令，就可以打开页面啦，开发人员用来测试是不是很方便？Windows 用户当我没说。。。\n接下来我们就可以在浏览器中通过 Gateway 的 URL 来访问服务网格中的服务了。后面我会开启一系列实验教程，本文的所有步骤都是为后面做准备，如果想跟着我做后面的实验，请务必做好本文所述的准备工作。\n","date":"2019年1212月15日","externalUrl":null,"permalink":"/posts/istio-deploy/","section":"Posts","summary":"","title":"Istio 1.5 部署指南","type":"posts"},{"content":"","date":"2019年1212月15日","externalUrl":null,"permalink":"/categories/service-mesh/","section":"Categories","summary":"","title":"Service-Mesh","type":"categories"},{"content":"","date":"2019年33月6日","externalUrl":null,"permalink":"/tags/coredns/","section":"标签","summary":"","title":"CoreDNS","type":"tags"},{"content":"","date":"2019年33月6日","externalUrl":null,"permalink":"/categories/gfw/","section":"Categories","summary":"","title":"GFW","type":"categories"},{"content":"CoreDNS 是 Golang 编写的一个插件式 DNS 服务器，是 Kubernetes 1.13 后所内置的默认 DNS 服务器。CoreDNS 的目标是成为 cloud-native 环境下的 DNS 服务器和服务发现解决方案，即：\nOur goal is to make CoreDNS the cloud-native DNS server and service discovery solution.\n它有以下几个特性：\n插件化（Plugins）\n基于 Caddy 服务器框架，CoreDNS 实现了一个插件链的架构，将大量应用端的逻辑抽象成 plugin 的形式（如 Kubernetes 的 DNS 服务发现，Prometheus 监控等）暴露给使用者。CoreDNS 以预配置的方式将不同的 plugin 串成一条链，按序执行 plugin 的逻辑。从编译层面，用户选择所需的 plugin 编译到最终的可执行文件中，使得运行效率更高。CoreDNS 采用 Go 编写，所以从具体代码层面来看，每个 plugin 其实都是实现了其定义的 interface 的组件而已。第三方只要按照 CoreDNS Plugin API 去编写自定义插件，就可以很方便地集成于 CoreDNS。\n配置简单化\n引入表达力更强的 DSL，即 Corefile 形式的配置文件（也是基于 Caddy 框架开发）。\n一体化的解决方案\n区别于 kube-dns，CoreDNS 编译出来就是一个单独的二进制可执行文件，内置了 cache，backend storage，health check 等功能，无需第三方组件来辅助实现其他功能，从而使得部署更方便，内存管理更为安全。\n其实从功能角度来看，CoreDNS 更像是一个通用 DNS 方案（类似于 BIND），然后通过插件模式来极大地扩展自身功能，从而可以适用于不同的场景（比如 Kubernetes）。正如官方博客所说：\nCoreDNS is powered by plugins.\nCorefile 介绍 # Corefile 是 CoreDNS 的配置文件（源于 Caddy 框架的配置文件 Caddyfile），它定义了：\nserver 以什么协议监听在哪个端口（可以同时定义多个 server 监听不同端口） server 负责哪个 zone 的权威（authoritative）DNS 解析 server 将加载哪些插件 常见地，一个典型的 Corefile 格式如下所示：\nZONE:[PORT] { [PLUGIN] ... } ZONE : 定义 server 负责的 zone，PORT 是可选项，默认为 53； PLUGIN : 定义 server 所要加载的 plugin。每个 plugin 可以有多个参数； 比如：\n. { chaos CoreDNS-001 } 上述配置文件表达的是：server 负责根域 . 的解析，其中 plugin 是 chaos 且没有参数。\n定义 server # 一个最简单的配置文件可以为：\n.{} 即 server 监听 53 端口并不使用插件。**如果此时在定义其他 server，要保证监听端口不冲突；如果是在原来 server 增加 zone，则要保证 zone 之间不冲突，**如：\n. {} .:54 {} 另一个 server 运行于 54 端口并负责根域 . 的解析。\n又如：\nexample.org { whoami } org { whoami } 同一个 server 但是负责不同 zone 的解析，有不同插件链。\n定义 Reverse Zone # 跟其他 DNS 服务器类似，Corefile 也可以定义 Reverse Zone（反向解析 IP 地址对应的域名）：\n0.0.10.in-addr.arpa { whoami } 或者简化版本：\n10.0.0.0/24 { whoami } 可以通过 dig 进行反向查询：\n$ dig -x 10.0.0.1 使用不同的通信协议 # CoreDNS 除了支持 DNS 协议，也支持 TLS 和 gRPC，即 DNS-over-TLS 和 DNS-over-gRPC 模式：\ntls://example.org:1443 { #... } 插件的工作模式 # 当 CoreDNS 启动后，它将根据配置文件启动不同 server ，每台 server 都拥有自己的插件链。当有 DNS 请求时，它将依次经历如下 3 步逻辑：\n如果有当前请求的 server 有多个 zone，将采用贪心原则选择最匹配的 zone； 一旦找到匹配的 server，按照 plugin.cfg 定义的顺序执行插件链上的插件； 每个插件将判断当前请求是否应该处理，将有以下几种可能： 请求被当前插件处理\n插件将生成对应的响应并回给客户端，此时请求结束，下一个插件将不会被调用，如 whoami 插件；\n请求被当前插件以 Fallthrough 形式处理\n如果请求在该插件处理过程中有可能将跳转至下一个插件，该过程称为 fallthrough，并以关键字 fallthrough 来决定是否允许此项操作，例如 host 插件，当查询域名未位于 /etc/hosts，则调用下一个插件；\n请求在处理过程被携带 Hint\n请求被插件处理，并在其响应中添加了某些信息（hint）后继续交由下一个插件处理。这些额外的信息将组成对客户端的最终响应，如 metric 插件；\nCoreDNS 如何处理 DNS 请求 # 如果 Corefile 为：\ncoredns.io:5300 { file db.coredns.io } example.io:53 { log errors file db.example.io } example.net:53 { file db.example.net } .:53 { kubernetes proxy . 8.8.8.8 log health errors cache } 从配置文件来看，我们定义了两个 server（尽管有 4 个区块），分别监听在 5300 和 53 端口。其逻辑图可如下所示：\n每个进入到某个 server 的请求将按照 plugin.cfg 定义顺序执行其已经加载的插件。\n从上图，我们需要注意以下几点：\n尽管在 .:53 配置了 health 插件，但是它并为在上面的逻辑图中出现，原因是：该插件并未参与请求相关的逻辑（即并没有在插件链上），只是修改了 server 配置。更一般地，我们可以将插件分为两种： Normal 插件：参与请求相关的逻辑，且插入到插件链中； 其他插件：不参与请求相关的逻辑，也不出现在插件链中，只是用于修改 server 的配置，如 health，tls 等插件； 配置 CoreDNS # 既然 CoreDNS 如此优秀，我用它来抵御伟大的防火长城岂不美哉？研究了一圈，发现技术上还是可行的，唯一的一个缺点是不支持使用代理，不过你可以通过 proxychians-ng 或 proxifier 来强制使用代理。下面开始折腾。\n具体的思路其实非常简单，就是将国内的域名查询请求转发到 114 等国内的公共 DNS 服务器，将国外的域名查询请求转发到 8.8.8.8 等国外的公共 DNS 服务器。然而 CoreDNS 的插件链有点反直觉，同一个插件链上的每一个插件只能出现一次，如果只使用 forward 插件是满足不了需求的。\nCoreDNS 原来还有个插件叫 proxy，功能和 forward 类似，目测好像同时利用 proxy 和 forward 插件就可以实现咱的需求了。但理想与现实的差距总是很大，不知道从什么时候开始，CoreDNS 官方编译的二进制文件已经没有 proxy 插件了，真是气人。\ndnsredir # 偶然间发现了一个第三方插件 dnsredir，目测可以解决我的所有问题。该插件综合了 proxy 和 forward 插件的所有优点，支持 UDP、TCP、DNS-over-TLS 和 DNS-over-HTTPS，也支持多个后端，还具备健康检查和故障转移的功能，真是太香了！\n它的语法是这样的：\ndnsredir FROM... { to TO... } FROM... 是一个文件列表，包含了匹配的域名和解析该域名的服务器，说白了就是 dnsmasq 所使用的格式，直接看例子：\nserver=/0-100.com/114.114.114.114 server=/0-100.com/114.114.114.114 为什么要用这种格式呢？当然是为了方便啦。\n为什么这样会方便呢？当然是为了可以直接用上 FelixOnMars的大陆区域名列表了。。。FelixOnMars 同时还提供了 Google 和 Apple 的域名列表，这在某些地区某些ISP可以得到国内镜像的 IP，从而加速访问，想想就刺激。\n当然，除了使用文件列表外，还可以使用 .，类似于上面所说的根域。这个插件最大的亮点是可以在插件链中重复使用 dnsredir 插件，只要 FROM... 不重复就行。\nto TO... 用来将 DNS 解析请求发给上游 DNS 服务器。支持几乎所有 DNS 协议，例如：\ndns://1.1.1.1 8.8.8.8 tcp://9.9.9.9 udp://2606:4700:4700::1111 tls://1.1.1.1@one.one.one.one tls://8.8.8.8 tls://dns.quad9.net doh://cloudflare-dns.com/dns-query json-doh://1.1.1.1/dns-query json-doh://dns.google/resolve ietf-doh://dns.quad9.net/dns-query 增强版 CoreDNS # dnsredir 虽香，但大家别忘了，它是第三方插件，官方默认的二进制文件是不包含该插件的。你可以选择自己编译，但如果经常需要升级怎么办？总不能每次都手动编译吧，也太累了。\n好在有位大佬已经通过 CI/CD 流程将所需的第三方插件都集成编译进去了，并定期更新，简直就是我等的福音。大佬的项目地址为：\nhttps://github.com/missdeer/coredns_custom_build 现在只需要下载对应操作系统的二进制文件，到处拷贝，就可以运行了。\n下面统统以 MacOS 为例作讲解。Openwrt 的玩法也一样，参考本文的方法论即可，具体本文就不展开了。\n直接下载二进制文件：\n$ wget \u0026#39;https://appveyorcidatav2.blob.core.windows.net/missdeer-15199/coredns-custom-build/1-7-1-514/idbodwxwywg1xgdg/distrib/coredns-linux-amd64.zip?sv=2015-12-11\u0026amp;sr=c\u0026amp;sig=BhMWcOVtDuaETyz2DcjpOr9GdvkpNVOqoIa7iWFpFNQ%3D\u0026amp;st=2020-12-23T15%3A26%3A19Z\u0026amp;se=2020-12-23T15%3A32%3A19Z\u0026amp;sp=r\u0026#39; $ $ tar zxf coredns-linux-amd64.zip $ mv coredns-linux-amd64/coredns /usr/local/bin/ 配置 # 要深入了解 CoreDNS，请查看其文档，及 plugins 的介绍。下面是我的配置文件：\ncat \u0026gt; /usr/local/etc/Corefile \u0026lt;\u0026lt;EOF # https://coredns.io/plugins/cache/ (global_cache) { cache { # [5, 60] success 65536 3600 300 # [1, 10] denial 8192 600 60 prefetch 1 60m 10% } } .:7913 { ads { default-lists blacklist https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-domains.txt whitelist https://files.krnl.eu/whitelist.txt log auto-update-interval 24h list-store ads-cache } errors hosts { fallthrough } health prometheus :9153 import global_cache template ANY AAAA { rcode NXDOMAIN } dnsredir accelerated-domains.china.conf google.china.conf apple.china.conf mydns.conf { expire 15s max_fails 3 health_check 3s policy round_robin path_reload 2s to 114.114.114.114 223.5.5.5 119.29.29.29 } dnsredir . { expire 60s max_fails 5 health_check 5s policy random spray to tls://8.8.8.8@dns.google tls://8.8.4.4@dns.google to tls://1.1.1.1@1dot1dot1dot1.cloudflare-dns.com tls://1.0.0.1@1dot1dot1dot1.cloudflare-dns.com # Global TLS server name # tls_servername cloudflare-dns.com } log loop reload 6s } EOF hosts : hosts 是 CoreDNS 的一个 plugin，这一节的意思是加载 /etc/hosts 文件里面的解析信息。hosts 在最前面，则如果一个域名在 hosts 文件中存在，则优先使用这个信息返回； fallthrough : 如果 hosts 中找不到，则进入下一个 plugin 继续。缺少这一个指令，后面的 plugins 配置就无意义了； cache : 溯源得到的结果，缓存指定时间。类似 TTL 的概念； reload : 多久扫描配置文件一次。如有变更，自动加载； errors : 打印/存储错误日志； dnsredir : 这是重点插件。第一段 dnsredir 配置使用了 4 个文件列表，均是 FelixOnMars的大陆区域名列表，这里我还加了一个自定义的文件列表 mydns.conf。第二段 dnsredir 配置表示默认的解析配置，可以理解为故障转移，如果某个域名没有匹配到任何一个文件列表，就使用第二段 dnsredir 的上游 DNS 服务器进行解析。通过这样的配置方式，就实现了将国内的域名查询请求转发到 114 等国内的公共 DNS 服务器，将国外的域名查询请求转发到 8.8.8.8 等国外的公共 DNS 服务器。 讲一下我自己的理解：\n配置文件类似于 nginx 配置文件的格式； 最外面一级的大括号，对应『服务』的概念。多个服务可以共用一个端口； 往里面一级的大括号，对应 plugins 的概念，每一个大括号都是一个 plugin。这里可以看出，plugins 是 CoreDNS 的一等公民； 服务之间顺序有无关联没有感觉，但 plugins 之间是严重顺序相关的。某些 plugin 必须用 fallthrough 关键字流向下一个 plugin； plugin 内部的配置选项是顺序无关的； 从 plugins 页面的介绍看，CoreDNS 的功能还是很强的，既能轻松从 bind 迁移，还能兼容 old-style dns server 的运维习惯； 从 CoreDNS 的性能指标看，适合做大型服务。 注意：该方案的前提是能够强制让 CoreDNS 使用代理，或者更精确一点，让 8.8.8.8 和 8.8.4.4 使用代理。这里的方法比较复杂一点，本文就不介绍了。如果你实在不知道怎么办，可以将 8.8.8.8 这一行删除，直接使用 Cloudflare 提供的 DNS 服务，虽然响应有点慢，但好在可以访问。\n如果你无法忍受 Cloudflare 的响应速度，可以考虑使用国内的无污染 DNS：红鱼 DNS。然后直接一劳永逸：\ncat \u0026gt; /usr/local/etc/Corefile \u0026lt;\u0026lt;EOF # https://coredns.io/plugins/cache/ (global_cache) { cache { # [5, 60] success 65536 3600 300 # [1, 10] denial 8192 600 60 prefetch 1 60m 10% } } .:7913 { ads { default-lists blacklist https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-domains.txt whitelist https://files.krnl.eu/whitelist.txt log auto-update-interval 24h list-store ads-cache } errors hosts { fallthrough } health prometheus :9153 import global_cache template ANY AAAA { rcode NXDOMAIN } dnsredir accelerated-domains.china.conf google.china.conf apple.china.conf mydns.conf { expire 15s max_fails 3 health_check 3s policy round_robin path_reload 2s to 114.114.114.114 223.5.5.5 119.29.29.29 } dnsredir . { expire 60s max_fails 5 health_check 5s policy random spray to doh://13800000000.rubyfish.cn } log loop reload 6s } EOF 这样 CoreDNS 就不用担心走代理的问题了。\n定时更新国内域名列表 # 大陆域名列表每天都会更新，所以还需要写个脚本来更新文件列表。不用检查文件是否存在了，直接简单粗暴无脑更新：\n$ cat \u0026gt; /usr/local/bin/update_coredns.sh \u0026lt;\u0026lt;EOF #!/bin/bash rm accelerated-domains.china.conf wget https://cdn.jsdelivr.net/gh/felixonmars/dnsmasq-china-list/accelerated-domains.china.conf -O /usr/local/etc/accelerated-domains.china.conf rm apple.china.conf wget https://cdn.jsdelivr.net/gh/felixonmars/dnsmasq-china-list/apple.china.conf -O /usr/local/etc/apple.china.conf rm google.china.conf wget https://cdn.jsdelivr.net/gh/felixonmars/dnsmasq-china-list/google.china.conf -O /usr/local/etc/google.china.conf EOF $ sudo chmod +x /usr/local/bin/update_coredns.sh 先执行一遍该脚本，更新 Corefile 的配置：\n$ /usr/local/bin/update_coredns.sh 然后通过 Crontab 制作定时任务，每隔两天下午两点更新域名列表：\n$ crontab -l 0 14 */2 * * /usr/local/bin/update_coredns.sh 开机自启 # MacOS 可以使用 launchctl 来管理服务，它可以控制启动计算机时需要开启的服务，也可以设置定时执行特定任务的脚本，就像 Linux crontab 一样, 通过加装 *.plist 文件执行相应命令。Launchd 脚本存储在以下位置, 默认需要自己创建个人的 LaunchAgents 目录：\n~/Library/LaunchAgents : 由用户自己定义的任务项 /Library/LaunchAgents : 由管理员为用户定义的任务项 /Library/LaunchDaemons : 由管理员定义的守护进程任务项 /System/Library/LaunchAgents : 由 MacOS 为用户定义的任务项 /System/Library/LaunchDaemons : 由 MacOS 定义的守护进程任务项 我们选择在 /Library/LaunchAgents/ 目录下创建 coredns.plist 文件，内容如下：\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE plist PUBLIC \u0026#34;-//Apple Computer//DTD PLIST 1.0//EN\u0026#34; \u0026#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd\u0026#34;\u0026gt; \u0026lt;plist version=\u0026#34;1.0\u0026#34;\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;Label\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;coredns\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;ProgramArguments\u0026lt;/key\u0026gt; \u0026lt;array\u0026gt; \u0026lt;string\u0026gt;/usr/local/bin/coredns\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;-conf\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;/usr/local/etc/Corefile\u0026lt;/string\u0026gt; \u0026lt;/array\u0026gt; \u0026lt;key\u0026gt;StandardOutPath\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;/var/log/coredns.stdout.log\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;StandardErrorPath\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;/var/log/coredns.stderr.log\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;KeepAlive\u0026lt;/key\u0026gt; \u0026lt;true/\u0026gt; \u0026lt;key\u0026gt;RunAtLoad\u0026lt;/key\u0026gt; \u0026lt;true/\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;/plist\u0026gt; 设置开机自动启动 coredns：\n$ sudo launchctl load -w /Library/LaunchAgents/coredns.plist 查看服务：\n$ sudo launchctl list|grep coredns 61676\t0\tcoredns $ sudo launchctl list coredns { \u0026#34;StandardOutPath\u0026#34; = \u0026#34;/var/log/coredns.stdout.log\u0026#34;; \u0026#34;LimitLoadToSessionType\u0026#34; = \u0026#34;System\u0026#34;; \u0026#34;StandardErrorPath\u0026#34; = \u0026#34;/var/log/coredns.stderr.log\u0026#34;; \u0026#34;Label\u0026#34; = \u0026#34;coredns\u0026#34;; \u0026#34;TimeOut\u0026#34; = 30; \u0026#34;OnDemand\u0026#34; = false; \u0026#34;LastExitStatus\u0026#34; = 0; \u0026#34;PID\u0026#34; = 61676; \u0026#34;Program\u0026#34; = \u0026#34;/usr/local/bin/coredns\u0026#34;; \u0026#34;ProgramArguments\u0026#34; = ( \u0026#34;/usr/local/bin/coredns\u0026#34;; \u0026#34;-conf\u0026#34;; \u0026#34;/usr/local/etc/Corefile\u0026#34;; ); }; 查看端口号：\n$ sudo ps -ef|egrep -v grep|grep coredns 0 81819 1 0 2:54下午 ?? 0:04.70 /usr/local/bin/coredns -conf /usr/local/etc/Corefile $ sudo lsof -P -p 81819|egrep \u0026#34;TCP|UDP\u0026#34; coredns 81819 root 5u IPv6 0x1509853aadbdf853 0t0 TCP *:5302 (LISTEN) coredns 81819 root 6u IPv6 0x1509853acd2f39ab 0t0 UDP *:5302 coredns 81819 root 7u IPv6 0x1509853aadbdc493 0t0 TCP *:53 (LISTEN) coredns 81819 root 8u IPv6 0x1509853acd2f5a4b 0t0 UDP *:53 coredns 81819 root 9u IPv6 0x1509853ac63bfed3 0t0 TCP *:5301 (LISTEN) coredns 81819 root 10u IPv6 0x1509853acd2f5d03 0t0 UDP *:5301 大功告成，现在你只需要将系统的 DNS IP 设置为 127.0.0.1 就可以了。\n验证 # $ doggo www.youtube.com @udp://127.0.0.1 NAME TYPE CLASS\tTTL ADDRESS NAMESERVER www.youtube.com. CNAME\tIN 293s\tyoutube-ui.l.google.com.\t127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t172.217.14.110 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t172.217.11.174 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t172.217.5.206 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t172.217.5.78 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t172.217.14.78 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t142.250.72.238 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t216.58.193.206 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t142.250.68.110 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t142.250.68.78 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t172.217.4.142 127.0.0.1:53 youtube-ui.l.google.com.\tA IN 293s\t142.250.68.14 127.0.0.1:53 搞定。\n什么？你问我 doggo 是个啥？自己谷歌。\n参考资料 # CoreDNS 使用与架构分析 CoreDNS搭建无污染DNS ","date":"2019年33月6日","externalUrl":null,"permalink":"/posts/install-coredns-on-macos/","section":"Posts","summary":"","title":"使用 CoreDNS 来应对 DNS 污染","type":"posts"},{"content":"","date":"2019年11月28日","externalUrl":null,"permalink":"/categories/load-balancing/","section":"Categories","summary":"","title":"Load-Balancing","type":"categories"},{"content":" 原文链接：nginx mirroring tips and tricks\n最近我在研究 Nginx 1.13.4 最新的 mirror 模块，利用 mirror 模块，你可以将线上实时流量拷贝至其他环境同时不影响源站请求的响应，因为 Nginx 会丢弃 mirror 的响应。mirror 模块可用于以下几个场景：\n通过预生产环境测试来观察新系统对生产环境流量的处理能力。 复制请求日志以进行安全分析。 复制请求用于数据科学研究。 等等 我已经用它来测试新系统对生产环境流量的处理能力，但遇到了一些小问题，经过一番努力我总结出了一些小窍门，现在分享给你们。\n基础配置 # 先来创建一个基本的配置，架构如下图所示，由一个用来实际处理流量的后端和一个前端代理组成：\nNginx 配置文件如下：\nupstream backend { server backend.local:10000; } server { server_name proxy.local; listen 8000; location / { proxy_pass http://backend; } } 配置文件由两部分组成：后端服务与代理。代理监听在 8000 端口，它会将流量转发到后端服务的 10000 端口。看起来没什么稀奇的，先做个压力测试看看性能吧。这里我选择用 hey 来测试压力，因为它很简单，可以施加稳定的负载，其他工具的负载施加很不稳定（例如，wrk, apache benchmark, siege）。\n$ hey -z 10s -q 1000 -n 100000 -c 1 -t 1 http://proxy.local:8000 Summary: Total:\t10.0016 secs Slowest:\t0.0225 secs Fastest:\t0.0003 secs Average:\t0.0005 secs Requests/sec:\t995.8393 Total data:\t6095520 bytes Size/request:\t612 bytes Response time histogram: 0.000 [1] | 0.003 [9954] |■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 0.005 [4] | 0.007 [0] | 0.009 [0] | 0.011 [0] | 0.014 [0] | 0.016 [0] | 0.018 [0] | 0.020 [0] | 0.022 [1] | Latency distribution: 10% in 0.0003 secs 25% in 0.0004 secs 50% in 0.0005 secs 75% in 0.0006 secs 90% in 0.0007 secs 95% in 0.0007 secs 99% in 0.0009 secs Details (average, fastest, slowest): DNS+dialup:\t0.0000 secs, 0.0003 secs, 0.0225 secs DNS-lookup:\t0.0000 secs, 0.0000 secs, 0.0008 secs req write:\t0.0000 secs, 0.0000 secs, 0.0003 secs resp wait:\t0.0004 secs, 0.0002 secs, 0.0198 secs resp read:\t0.0001 secs, 0.0000 secs, 0.0012 secs Status code distribution: [200]\t9960 responses 大多数请求都在 1 毫秒内处理完成，也没有错误响应，很好，但这只是我们的底线。\n基础流量镜像配置 # 现在我们向后端添加一个测试服务，并将发往源后端的流量复制一份到测试后端。\n流量镜像的配置文件如下：\nupstream backend { server backend.local:10000; } upstream test_backend { server test.local:20000; } server { server_name proxy.local; listen 8000; location / { mirror /mirror; proxy_pass http://backend; } location = /mirror { internal; proxy_pass http://test_backend$request_uri; } } mirror 指令制定镜像 uri 为 /mirror location = /mirror 中的 internal 指定此 location 只能被“内部的”请求调用，外部的调用请求会返回 ”Not found” (404) 在 mirror 配置中可以做很多事情，但这里我们只是单纯地转发所有的流量。\n再次进行压力测试，观察流量镜像是如何影响性能的：\n$ hey -z 10s -q 1000 -n 100000 -c 1 -t 1 http://proxy.local:8000 Summary: Total:\t10.0010 secs Slowest:\t0.0042 secs Fastest:\t0.0003 secs Average:\t0.0005 secs Requests/sec:\t997.3967 Total data:\t6104700 bytes Size/request:\t612 bytes Response time histogram: 0.000 [1] | 0.001 [9132] |■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 0.001 [792] |■■■ 0.001 [43] | 0.002 [3] | 0.002 [0] | 0.003 [2] | 0.003 [0] | 0.003 [0] | 0.004 [1] | 0.004 [1] | Latency distribution: 10% in 0.0003 secs 25% in 0.0004 secs 50% in 0.0005 secs 75% in 0.0006 secs 90% in 0.0007 secs 95% in 0.0008 secs 99% in 0.0010 secs Details (average, fastest, slowest): DNS+dialup:\t0.0000 secs, 0.0003 secs, 0.0042 secs DNS-lookup:\t0.0000 secs, 0.0000 secs, 0.0009 secs req write:\t0.0000 secs, 0.0000 secs, 0.0002 secs resp wait:\t0.0004 secs, 0.0002 secs, 0.0041 secs resp read:\t0.0001 secs, 0.0000 secs, 0.0021 secs Status code distribution: [200]\t9975 responses 和第一次的测试结果一样：大多数请求都在 1 毫秒内处理完成，也没有错误响应。可以得出结论：镜像流量不会影响源站请求的响应。\n将流量复制到故障后端 # 到目前为止，测试结果都很符合预期。考虑另外一种场景，如果镜像后端出现了故障，时不时会返回错误响应，这时会不会对原始请求产生影响呢？\n为了模拟这种场景，我用 golang 写了一个小工具来随机注入故障，你可以通过以下命令来启动：\n$ mirror-backend -errors 2019/01/13 14:43:12 Listening on port 20000, delay is 0, error injecting is true 然后进行负载测试：\n$ hey -z 10s -q 1000 -n 100000 -c 1 -t 1 http://proxy.local:8000 Summary: Total:\t10.0008 secs Slowest:\t0.0027 secs Fastest:\t0.0003 secs Average:\t0.0005 secs Requests/sec:\t998.7205 Total data:\t6112656 bytes Size/request:\t612 bytes Response time histogram: 0.000 [1] | 0.001 [7388] |■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 0.001 [2232] |■■■■■■■■■■■■ 0.001 [324] |■■ 0.001 [27] | 0.002 [6] | 0.002 [2] | 0.002 [3] | 0.002 [2] | 0.002 [0] | 0.003 [3] | Latency distribution: 10% in 0.0003 secs 25% in 0.0003 secs 50% in 0.0004 secs 75% in 0.0006 secs 90% in 0.0007 secs 95% in 0.0008 secs 99% in 0.0009 secs Details (average, fastest, slowest): DNS+dialup:\t0.0000 secs, 0.0003 secs, 0.0027 secs DNS-lookup:\t0.0000 secs, 0.0000 secs, 0.0008 secs req write:\t0.0000 secs, 0.0000 secs, 0.0001 secs resp wait:\t0.0004 secs, 0.0002 secs, 0.0026 secs resp read:\t0.0001 secs, 0.0000 secs, 0.0006 secs Status code distribution: [200]\t9988 responses 仍然和之前的测试结果一样！这说明了故障后端的错误并不会影响源后端的响应。Nginx 忽略了镜像请求的响应，所以测试结果会和之前一样。\n将流量复制到响应缓慢的后端 # 继续设想下一种场景：镜像后端不会返回错误响应，仅仅只是响应很缓慢，这时候会对原始请求有影响吗？\n通过以下命令来让镜像后端对每个请求延迟 1 秒再响应：\n$ mirror-backend -delay 1 2019/01/13 14:50:39 Listening on port 20000, delay is 1, error injecting is false 然后进行负载测试：\n$ hey -z 10s -q 1000 -n 100000 -c 1 -t 1 http://proxy.local:8000 Summary: Total:\t10.0290 secs Slowest:\t0.0023 secs Fastest:\t0.0018 secs Average:\t0.0021 secs Requests/sec:\t1.9942 Total data:\t6120 bytes Size/request:\t612 bytes Response time histogram: 0.002 [1]\t|■■■■■■■■■■ 0.002 [0]\t| 0.002 [1]\t|■■■■■■■■■■ 0.002 [0]\t| 0.002 [0]\t| 0.002 [0]\t| 0.002 [1]\t|■■■■■■■■■■ 0.002 [1]\t|■■■■■■■■■■ 0.002 [0]\t| 0.002 [4]\t|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ 0.002 [2]\t|■■■■■■■■■■■■■■■■■■■■ Latency distribution: 10% in 0.0018 secs 25% in 0.0021 secs 50% in 0.0022 secs 75% in 0.0023 secs 90% in 0.0023 secs 0% in 0.0000 secs 0% in 0.0000 secs Details (average, fastest, slowest): DNS+dialup:\t0.0007 secs, 0.0018 secs, 0.0023 secs DNS-lookup:\t0.0003 secs, 0.0002 secs, 0.0006 secs req write:\t0.0001 secs, 0.0001 secs, 0.0002 secs resp wait:\t0.0011 secs, 0.0007 secs, 0.0013 secs resp read:\t0.0002 secs, 0.0001 secs, 0.0002 secs Status code distribution: [200]\t10 responses Error distribution: [10]\tGet http://proxy.local:8000: net/http: request canceled (Client.Timeout exceeded while awaiting headers) 发生了什么？rps（requests per second） 变成了 1.9？之前的 1000 rps 到哪去了？为什么会有错误响应？\n为了解释这个现象，有必要来探究一下 Nginx 是怎样实现流量镜像的。\nNginx 如何实现流量镜像 # 当请求到达 Nginx 时，如果 Nginx 开启了流量镜像功能，它就会将请求复制一份，并根据 mirror location 中的配置来处理这份复制的请求。本文我们只是将复制的请求转发到镜像后端。\n下面到了关键部分，复制的镜像请求和原始请求是相关联的，按照我的理解，只要镜像请求没有处理完成，原始请求就会被阻塞。\n这就是为什么上一个测试的结果接近于 2 rps，hey 先发送了 10 个请求，没有响应；再发送 10 个请求，但这 10 个请求被阻塞了，因为之前的镜像请求发生了延迟，导致最后 10 个请求超时并返回错误响应。\n如果我们将测试工具可接受的延迟时间增加到 10 秒，就不会出现错误了：\n$ hey -z 10s -q 1000 -n 100000 -c 1 -t 10 http://proxy.local:8000 Summary: Total:\t10.0197 secs Slowest:\t1.0018 secs Fastest:\t0.0020 secs Average:\t0.9105 secs Requests/sec:\t1.0978 Total data:\t6732 bytes Size/request:\t612 bytes Response time histogram: 0.002 [1] |■■■■ 0.102 [0] | 0.202 [0] | 0.302 [0] | 0.402 [0] | 0.502 [0] | 0.602 [0] | 0.702 [0] | 0.802 [0] | 0.902 [0] | 1.002 [10] |■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ Latency distribution: 10% in 1.0011 secs 25% in 1.0012 secs 50% in 1.0016 secs 75% in 1.0016 secs 90% in 1.0018 secs 0% in 0.0000 secs 0% in 0.0000 secs Details (average, fastest, slowest): DNS+dialup:\t0.0001 secs, 0.0020 secs, 1.0018 secs DNS-lookup:\t0.0000 secs, 0.0000 secs, 0.0005 secs req write:\t0.0001 secs, 0.0000 secs, 0.0002 secs resp wait:\t0.9101 secs, 0.0008 secs, 1.0015 secs resp read:\t0.0002 secs, 0.0001 secs, 0.0003 secs Status code distribution: [200]\t11 responses 现在我们搞清楚了原因 : 如果镜像请求响应很缓慢，原始请求就会被阻塞。\n我不知道如何修复这个 bug，但我想到了一个方法可以缓解这个 bug 带来的影响：只复制流量的一部分。具体的实现方法见下文。\n只复制流量的一部分 # 如果你不确定镜像后端是否能够正确处理原始请求，你可以只复制一部分流量到镜像后端，例如 10%。\nmirror 指令没有更多的配置项，它只会将所有的请求复制一份，并根据 mirror location 中的配置来处理请求，所以在 mirror 指令中做文章是行不通的，我们只能修改 mirror location 中的配置。修改后的配置文件如下：\n1\tupstream backend { 2\tserver backend.local:10000; 3\t} 4\t5\tupstream test_backend { 6\tserver test.local:20000; 7\t} 8\t9\tsplit_clients $remote_addr $mirror_backend { 10\t50% test_backend; 11\t* \u0026#34;\u0026#34;; 12\t} 13\t14\tserver { 15\tserver_name proxy.local; 16\tlisten 8000; 17\t18\taccess_log /var/log/nginx/proxy.log; 19\terror_log /var/log/nginx/proxy.error.log info; 20\t21\tlocation / { 22\tmirror /mirror; 23\tproxy_pass http://backend; 24\t} 25\t26\tlocation = /mirror { 27\tinternal; 28\tif ($mirror_backend = \u0026#34;\u0026#34;) { 29\treturn 400; 30\t} 31\t32\tproxy_pass http://$mirror_backend$request_uri; 33\t} 34\t35\t} 在 mirror location 中，请求会被转发到 $mirror_backend 变量（32 行）定义的后端。$mirror_backend 变量由 split_clients 配置块定义，split_clients 会将左边的变量 $remote_addr（requests remote address）经过 MurmurHash2 算法进行哈希，得出的值如果在前 50%（从 0 到 2147483500），那么 $mirror_backend 的值为 test_backend；如果不在前 50%，那么 $mirror_backend 的值为空字符 \u0026quot;\u0026quot;。\n这样我们就实现了只复制部分流量到镜像后端，如果 $mirror_backend 变量的值为空字符串，就不复制流量；其他情况就会将流量到镜像后端。因为镜像请求的错误响应并不会影响原始请求，所以丢弃镜像请求并返回错误响应是很安全的。\n这个方法的优点在于你可以根据任何变量或变量组合来拆分镜像流量。如果你想真正区分用户，那么 remote address 可能不适合作为拆分镜像流量的依据，因为用户可能会更换 IP。这时你最好使用用户粘性密钥来拆分镜像流量，例如 API key。\n比如，如果你想根据请求中的 apikey 来拆分镜像流量，只需要将 split_client 配置块中的 $remote_addr 改为 $arg_apikey：\nsplit_clients $arg_apikey $mirror_backend { 50% test_backend; * \u0026#34;\u0026#34;; } 现在如果你查询从 1 到 20 这几个 apikey，只有一半（11）的请求会被复制到镜像后端：\n$ for i in {1..20};do curl -i \u0026#34;proxy.local:8000/?apikey=${i}\u0026#34; ;done 查看镜像后端的日志：\n... 2019/01/13 22:34:34 addr=127.0.0.1:47224 host=test_backend uri=\u0026#34;/?apikey=1\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47230 host=test_backend uri=\u0026#34;/?apikey=2\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47240 host=test_backend uri=\u0026#34;/?apikey=4\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47246 host=test_backend uri=\u0026#34;/?apikey=5\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47252 host=test_backend uri=\u0026#34;/?apikey=6\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47262 host=test_backend uri=\u0026#34;/?apikey=8\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47272 host=test_backend uri=\u0026#34;/?apikey=10\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47278 host=test_backend uri=\u0026#34;/?apikey=11\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47288 host=test_backend uri=\u0026#34;/?apikey=13\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47298 host=test_backend uri=\u0026#34;/?apikey=15\u0026#34; 2019/01/13 22:34:34 addr=127.0.0.1:47308 host=test_backend uri=\u0026#34;/?apikey=17\u0026#34; ... 这个方法的奇妙之处在于 split_client 对流量的拆分结果是保持恒定的，apikey=1 的请求会一直被复制到镜像后端。\n总结 # 这就是我使用 Nginx 的 mirror 模块过程中的一些趟坑经历，本文向你们展示了如何简单地复制所有的流量，以及如何通过 split_client 模块来复制部分流量，同时我还解释了当镜像后端响应缓慢时为什么原始请求会被阻塞，并给出了解决方案。\n","date":"2019年11月28日","externalUrl":null,"permalink":"/posts/nginx-mirror/","section":"Posts","summary":"","title":"Nginx 流量镜像使用技巧","type":"posts"},{"content":"","date":"2018年1111月7日","externalUrl":null,"permalink":"/categories/blog/","section":"Categories","summary":"","title":"Blog","type":"categories"},{"content":"","date":"2018年1111月7日","externalUrl":null,"permalink":"/tags/hugo/","section":"标签","summary":"","title":"Hugo","type":"tags"},{"content":"很多站长开发网站时为了推广页面，或者获得更多的回访和流量，会在网站页面添加 “分享到” 插件，用来发布到某些社交网站。因此社会化分享是很多网站常用的功能之一，国内也有很多专业的公司在做，比较出名的包括 j*this，B*hare 等。不过很悲伤的是，这些公司的产品，无一例外的具有一个特点：奇丑无比。丑就算了，还不允许别人修改其设计，结果就是，再好的 UI 设计也毁在这些插件手里了。\n还好我发现了一款简单高效的社交分享组件，只看一眼便可以确认这就是我要寻找的那个它。直接上预览，你看完一定会喜欢上：\n简介 # share.js 是一款简单高效的社交分享组件，直接引入使用即可，无须依赖其他库。它有以下这些特点：\n一个标签完成初始化 自定义启用/禁用分享站点 更美观的 UI 体验 基于标签data属性轻松实现分享数据的自定义 支持分别对不同站点设置分享内容 同页面个分享组件 支持npm安装 引入 share.js # 由于我的博客使用的是 hugo，而且使用的主题是 Jimmy Song 的 beautifulhugo，官方文档提供的安装方式不适用，需要稍作改动。\n如果你使用的是其他主题，安装方式类似，你可以自己研究一下。\n导入静态资源 # 首先克隆 share.js 的代码仓库：\n$ git clone https://github.com/overtrue/share.js 然后分别将 css、js 和 fonts 拷贝到 beautiful 主题中的相应目录下：\n# \u0026lt;hugo_home\u0026gt; 表示 hugo 的根目录 $ cp share.js/css/share.min.css \u0026lt;hugo_home\u0026gt;/themes/beautifulhugo/static/css/ $ cp share.js/js/social-share.min.js \u0026lt;hugo_home\u0026gt;/themes/beautifulhugo/static/js/ $ cp -r share.js/fonts/* \u0026lt;hugo_home\u0026gt;/themes/beautifulhugo/static/fonts/ 默认的 css 样式图标太小，我稍微调整了一下，将图标放大一点，修改后的 css 内容如下：\n$ cat \u0026lt;hugo_home\u0026gt;/themes/beautifulhugo/static/css/share.min.css @font-face{font-family:\u0026#34;socialshare\u0026#34;;src:url(\u0026#34;../fonts/iconfont.eot\u0026#34;);src:url(\u0026#34;../fonts/iconfont.eot?#iefix\u0026#34;) format(\u0026#34;embedded-opentype\u0026#34;),url(\u0026#34;../fonts/iconfont.woff\u0026#34;) format(\u0026#34;woff\u0026#34;),url(\u0026#34;../fonts/iconfont.ttf\u0026#34;) format(\u0026#34;truetype\u0026#34;),url(\u0026#34;../fonts/iconfont.svg#iconfont\u0026#34;) format(\u0026#34;svg\u0026#34;)} .social-share{font-family:\u0026#34;socialshare\u0026#34; !important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-webkit-text-stroke-width:0.2px;-moz-osx-font-smoothing:grayscale} .social-share *{font-family:\u0026#34;socialshare\u0026#34; !important} .social-share .icon-tencent:before{content:\u0026#34;\\f07a\u0026#34;} .social-share .icon-qq:before{content:\u0026#34;\\f11a\u0026#34;} .social-share .icon-weibo:before{content:\u0026#34;\\f12a\u0026#34;} .social-share .icon-wechat:before{content:\u0026#34;\\f09a\u0026#34;} .social-share .icon-douban:before{content:\u0026#34;\\f10a\u0026#34;} .social-share .icon-heart:before{content:\u0026#34;\\f20a\u0026#34;} .social-share .icon-like:before{content:\u0026#34;\\f00a\u0026#34;} .social-share .icon-qzone:before{content:\u0026#34;\\f08a\u0026#34;} .social-share .icon-linkedin:before{content:\u0026#34;\\f01a\u0026#34;} .social-share .icon-diandian:before{content:\u0026#34;\\f05a\u0026#34;} .social-share .icon-facebook:before{content:\u0026#34;\\f03a\u0026#34;} .social-share .icon-google:before{content:\u0026#34;\\f04a\u0026#34;} .social-share .icon-twitter:before{content:\u0026#34;\\f06a\u0026#34;} .social-share a{position:relative;text-decoration:none;margin:4px;display:inline-block;outline:none} .social-share .social-share-icon{position:relative;display:inline-block;width:42px;height:42px;font-size:25px;border-radius:50%;line-height:37px;border:2px solid #666;color:#666;text-align:center;vertical-align:middle;transition:background 0.6s ease-out 0s} .social-share .social-share-icon:hover{background:#666;color:#fff} .social-share .icon-weibo{color:#ff763b;border-color:#ff763b} .social-share .icon-weibo:hover{background:#ff763b} .social-share .icon-tencent{color:#56b6e7;border-color:#56b6e7} .social-share .icon-tencent:hover{background:#56b6e7} .social-share .icon-qq{color:#56b6e7;border-color:#56b6e7} .social-share .icon-qq:hover{background:#56b6e7} .social-share .icon-qzone{color:#FDBE3D;border-color:#FDBE3D} .social-share .icon-qzone:hover{background:#FDBE3D} .social-share .icon-douban{color:#33b045;border-color:#33b045} .social-share .icon-douban:hover{background:#33b045} .social-share .icon-linkedin{color:#0077B5;border-color:#0077B5} .social-share .icon-linkedin:hover{background:#0077B5} .social-share .icon-facebook{color:#44619D;border-color:#44619D} .social-share .icon-facebook:hover{background:#44619D} .social-share .icon-google{color:#db4437;border-color:#db4437} .social-share .icon-google:hover{background:#db4437} .social-share .icon-twitter{color:#55acee;border-color:#55acee} .social-share .icon-twitter:hover{background:#55acee} .social-share .icon-diandian{color:#307DCA;border-color:#307DCA} .social-share .icon-diandian:hover{background:#307DCA} .social-share .icon-wechat{position:relative;color:#7bc549;border-color:#7bc549} .social-share .icon-wechat:hover{background:#7bc549} .social-share .icon-wechat .wechat-qrcode{display:none;border:1px solid #eee;position:absolute;z-index:9;top:-205px;left:-84px;width:200px;height:192px;color:#666;font-size:12px;text-align:center;background-color:#fff;box-shadow:0 2px 10px #aaa;transition:all 200ms;-webkit-tansition:all 350ms;-moz-transition:all 350ms} .social-share .icon-wechat .wechat-qrcode.bottom{top:40px;left:-84px} .social-share .icon-wechat .wechat-qrcode.bottom:after{display:none} .social-share .icon-wechat .wechat-qrcode h4{font-weight:normal;height:26px;line-height:26px;font-size:12px;background-color:#f3f3f3;margin:0;padding:0;color:#777} .social-share .icon-wechat .wechat-qrcode .qrcode{width:105px;margin:10px auto} .social-share .icon-wechat .wechat-qrcode .qrcode table{margin:0 !important} .social-share .icon-wechat .wechat-qrcode .help p{font-weight:normal;line-height:16px;padding:0;margin:0} .social-share .icon-wechat .wechat-qrcode:after{content:\u0026#39;\u0026#39;;position:absolute;left:50%;margin-left:-6px;bottom:-13px;width:0;height:0;border-width:8px 6px 6px 6px;border-style:solid;border-color:#fff transparent transparent transparent} .social-share .icon-wechat:hover .wechat-qrcode{display:block} 主要修改了这一段：\n.social-share .social-share-icon{position:relative;display:inline-block;width:42px;height:42px;font-size:25px;border-radius:50%;line-height:37px;border:2px solid #666;color:#666;text-align:center;vertical-align:middle;transition:background 0.6s ease-out 0s} 将分享插件嵌入到网页中 # 为了将分享插件嵌入到每篇文章的网页中，我们需要修改一些模板。首先需要引入 css 样式，通过修改文件 \u0026lt;hugo_home\u0026gt;/themes/beautifulhugo/layouts/partials/head.html，在其中引入 share.min.css。\n... \u0026lt;!-- bootcss cdn 国外访问太慢 --\u0026gt; \u0026lt;!-- \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.bootcss.com/KaTeX/0.7.1/katex.min.css\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\u0026#34; /\u0026gt; --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ \u0026#34;css/main.css\u0026#34; | absURL }}\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ \u0026#34;css/share.min.css\u0026#34; | absURL }}\u0026#34; /\u0026gt; ... 然后在 \u0026lt;hugo_home\u0026gt;/themes/beautifulhugo/layouts/partials/目录下创建一个 html。\n$ cat \u0026lt;hugo_home\u0026gt;/themes/beautifulhugo/layouts/partials/share.html \u0026lt;div class=\u0026#34;social-share\u0026#34; data-initialized=\u0026#34;true\u0026#34; data-wechat-qrcode-title=\u0026#34;不扫别后悔\u0026#34;\u0026gt; \u0026lt;center\u0026gt; \u0026lt;font style=\u0026#34;font-size:18px;color:darkcyan;\u0026#34;\u0026gt;分享到：\u0026lt;/font\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;social-share-icon icon-weibo\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;social-share-icon icon-wechat\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;social-share-icon icon-twitter\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;social-share-icon icon-linkedin\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;social-share-icon icon-facebook\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;social-share-icon icon-qq\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;social-share-icon icon-qzone\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/center\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;!-- css \u0026amp; js --\u0026gt; \u0026lt;script src=\u0026#34;https://hugo-picture.oss-cn-beijing.aliyuncs.com/social-share.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 修改模板 \u0026lt;hugo_home\u0026gt;/themes/beautifulhugo/layouts/_default/single.html，加载 share.html。\n\u0026lt;div class=\u0026#34;container\u0026#34; role=\u0026#34;main\u0026#34; itemscope itemtype=\u0026#34;http://schema.org/Article\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\u0026#34;\u0026gt; \u0026lt;!-- post metadata--\u0026gt; {{ if isset .Params \u0026#34;postmeta\u0026#34; }} {{ else }} {{ partial \u0026#34;postmeta.html\u0026#34; . }} {{ end }} \u0026lt;article role=\u0026#34;main\u0026#34; class=\u0026#34;blog-post\u0026#34; itemprop=\u0026#34;articleBody\u0026#34; id=\u0026#34;content\u0026#34;\u0026gt; ... {{ .Content }} {{ partial \u0026#34;share.html\u0026#34; }} \u0026lt;/article\u0026gt; ... 如果你想让某些页面不开启分享插件，可以通过参数 (.Params.noshare) 来控制是否加载分享插件。\n\u0026lt;div class=\u0026#34;container\u0026#34; role=\u0026#34;main\u0026#34; itemscope itemtype=\u0026#34;http://schema.org/Article\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\u0026#34;\u0026gt; \u0026lt;!-- post metadata--\u0026gt; {{ if isset .Params \u0026#34;postmeta\u0026#34; }} {{ else }} {{ partial \u0026#34;postmeta.html\u0026#34; . }} {{ end }} \u0026lt;article role=\u0026#34;main\u0026#34; class=\u0026#34;blog-post\u0026#34; itemprop=\u0026#34;articleBody\u0026#34; id=\u0026#34;content\u0026#34;\u0026gt; ... {{ .Content }} {{ if not (.Params.noshare) }} {{ partial \u0026#34;share.html\u0026#34; }} {{ end }} \u0026lt;/article\u0026gt; ... 这样我们就可以在页面中通过 noshare 参数来控制了。如下是不想加载分享插件的文章的 meta 信息参数：\n--- title: xxxxxx date: xxxxxx ... noshare: true --- 更多 # 关于分享插件的更多自定义配置请参考代码仓库的 README。\n","date":"2018年1111月7日","externalUrl":null,"permalink":"/posts/hugo-social-share-plugin/","section":"Posts","summary":"","title":"Hugo 集成社交分享插件","type":"posts"},{"content":" 原文链接：Kubernetes DNS setting in your Pod DNS 是 Kubernetes 的核心功能之一，Kubernetes 通过 kube-dns 或 CoreDNS 作为集群的必备扩展来提供命名服务，通过 DNS 扩展，每一个 Service 都会产生一个独一无二的 FQDN（Fully Qualified Domain Name）名称。\n在大多数使用场景下，我们并不会太关心 DNS 插件的内部运作细节，直接使用 Kubernetes 预设的 DNS 配置和策略就可以满足需求。然而随着使用场景越来越复杂，譬如跟 NFV（Network Function Virtualization）相关的场景，我们的应用（Pod）可能就会需要更加个性化的 DNS 配置。\n接下来使用下面这张架构图来说明可能的使用场景：\n为什么需要自定义 DNS # 一般的使用场景下，我们的 Kubernetes 集群的使用方式就像图中**紫色/粉红色（Pod3）**区域一样，所有的 Pod 如果有任何要存取 DNS 的需求，都会透过集群内的的 k8s DNS 来处理对应的请求与回复。\n然而在 NFV 的使用场景下，网络变成一个很重要的区域，整体的性能都取决于该应用的设计与集群的网络架构设计。这部分应用通常都会追求高输出或是低延迟，为了得到更好的性能，需要避免这些流量跟其他无关的流量使用相同的网络线路进行传输。\n在这种情况下，通常就会把整个集群的网络设计成两种架构，分别是 Control Network 和 Data Network 这两个不同用途的网络架构。在 Kubernetes 中，Control Network 就类似于图中的 Cluster Network，负责整个集群之间的沟通。图中**绿色/橘色（Pod1，Pod2）**这两个区域就是所谓的 Data Network，其网卡本身也被独立出来，不会与本来的 Kubernetes 集群发生冲突，它们之间的流量通过独立的网络进行传输。\n存在于独立出来的网络架构中的这些特殊的 Pod 基本上没法跟 Kubernetes 集群内的 DNS 互连，而且这些应用还有可能在外部有自己的 DNS Server，所以在这种场景下，我们希望这些应用（Pod1/Pod2）能够使用自定义的 DNS Server。\n如何自定义 DNS # 为了让用户更容易控制 Pod 中的 DNS 设置，Kubernetes v1.9 引入了一项新的 Alpha 特性（在 v1.10 中处于 Beta 阶段）。该特性在 v1.10 中被默认启用，在 v1.9 中如果想要启用此功能，集群管理员需要在 apiserver 和 kubelet 上启用 CustomPodDNS 特性，例如：“--feature-gates=CustomPodDNS=true,...”。启用了该特性之后，用户可以将 Pod 的 dnsPolicy 字段设置为 \u0026quot;None\u0026quot;，并且可以在 Pod.Spec 中添加新的字段 dnsConfig。\n其中 dnsConfig 用来自定义 DNS 参数，而 dnsPolicy 用来给 Pod 选取预设的 DNS。接下来就看看可以通过哪些手段自定义 DNS。\ndnsConfig # dnsConfig 可以让操作者延伸到 Pod 内部关于 DNS 的配置，这边需要特别注意的是，我使用的字眼是 延伸 而不是 配置，这是因为通过下一节的 dnsPolicy，每个 Pod 都会有一组预设的 DNS 配置。通过 dnsConfig 我们可以继续往上叠加相关的 DNS 参数到 Pod 之中。\n目前总共支持三个参数，分别是：\nnameservers searches options 这三个参数对应的就是大家熟悉的 /etc/resolv.conf 里面的三个参数，这里就不针对 DNS 进行详细解释了，不熟悉的朋友可以自行去 Google 学一下这些参数的意思。\n在 Kubernetes 里面，这三个参数都包含在 dnsConfig 配置项中，而 dnsConfig 包含在 PodSpec 配置项中，因为 Pod 内所有的容器都共享相同的 Network Namespace，所以网络方面的配置都会共享。\n这边提供一个简单的 yaml 示例：\napiVersion: v1 kind: Pod metadata: name: ubuntu-setting namespace: default spec: containers: - image: hwchiu/netutils command: - sleep - \u0026#34;360000\u0026#34; imagePullPolicy: IfNotPresent name: ubuntu restartPolicy: Always dnsConfig: nameservers: - 1.2.3.4 searches: - ns1.svc.cluster.local - my.dns.search.suffix options: - name: ndots value: \u0026#34;2\u0026#34; - name: edns0 通过上述 yaml 创建 Pod 之后，通过下面的命令可以观察到容器中 DNS 配置文件中会出现额外的配置。\n$ kubectl exec ubuntu-setting cat /etc/resolv.conf nameserver 10.254.0.2 nameserver 1.2.3.4 search default.svc.cluster.local svc.cluster.local cluster.local ns1.svc.cluster.local my.dns.search.suffix options ndots:2 edns0 可以看到 nameserver 多了一个 1.2.3.4，而 search 则多了 ns1.svc.cluster.local my.dns.search.suffix 这两个自定义的值，最后 options 则增加了我们示例中指定的 ndots:2 edns0。\ndnsConfig 非常简单直观，如果你需要自定义 DNS 参数，就可以通过这个字段来指定。\ndnsPolicy # 前面提过，dnsConfig 提供的是延伸 Pod 内预设的 DNS 配置，而 dnsPolicy 就是决定 Pod 内预设的 DNS 配置有哪些。\n目前总共有四个类型可以选择：\nNone Default ClusterFirst ClusterFirstHostNet 接下来针对这四个类型分别介绍。\nNone\nNone 表示会清除 Pod 预设的 DNS 配置，当 dnsPolicy 设置成这个值之后，Kubernetes 不会为 Pod 预先载入任何自身逻辑判断得到的 DNS 配置。因此若要将 dnsPolicy 的值设为 None，为了避免 Pod 里面没有配置任何 DNS，最好再添加 dnsConfig 来描述自定义的 DNS 参数。\n使用下面的示例来进行测试：\napiVersion: v1 kind: Pod metadata: name: ubuntu-none namespace: default spec: containers: - image: hwchiu/netutils command: - sleep - \u0026#34;360000\u0026#34; imagePullPolicy: IfNotPresent name: ubuntu restartPolicy: Always dnsPolicy: None dnsConfig: nameservers: - 1.2.3.4 searches: - ns1.svc.cluster.local - my.dns.search.suffix options: - name: ndots value: \u0026#34;2\u0026#34; - name: edns0 通过上述 yaml 创建 Pod 之后，通过下面的命令可以观察容器中的 DNS 配置文件，可以观察到跟之前的 dnsConfig 的结果有一点差异，这里只有我们在 yaml 里配置的那些参数，而没有加入集群预设的 DNS 配置。\n$ kubectl exec ubuntu-none cat /etc/resolv.conf nameserver 1.2.3.4 search ns1.svc.cluster.local my.dns.search.suffix options ndots:2 edns0 Default\nDefault 表示 Pod 里面的 DNS 配置继承了宿主机上的 DNS 配置。简单来说，就是该 Pod 的 DNS 配置会跟宿主机完全一致。\n使用下面的示例来进行测试：\napiVersion: v1 kind: Pod metadata: name: ubuntu-default namespace: default spec: containers: - image: hwchiu/netutils command: - sleep - \u0026#34;360000\u0026#34; imagePullPolicy: IfNotPresent name: ubuntu restartPolicy: Always dnsPolicy: Default 首先，我们先观察 Node 上面的 DNS 配置：\n$ cat /etc/resolv.conf # Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8) # DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN nameserver 10.0.2.3 可以观察到，Node 上面的 DNS 配置得很简单，只有单纯的 10.0.2.3。 接下来我们观察该 Pod 内的 DNS 配置：\n$ kubectl exec ubuntu-default cat /etc/resolv.conf nameserver 10.0.2.3 可以看到这两个的 DNS 配置完全一致，该 Pod 内的 DNS 配置已经直接继承 Node 上面的配置了。\nClusterFirst\n相对于上述的 Default，ClusterFirst 是完全相反的操作，它会预先把 kube-dns（或 CoreDNS）的信息当作预设参数写入到该 Pod 内的 DNS 配置。\nClusterFirst 是预设的行为，若没有在 Pod 內特別描述 PodPolicy, 则会将 dnsPolicy 预设为 ClusterFirst。 使用下面的示例来进行测试：\napiVersion: v1 kind: Pod metadata: name: ubuntu-clusterfirst namespace: default spec: containers: - image: hwchiu/netutils command: - sleep - \u0026#34;360000\u0026#34; imagePullPolicy: IfNotPresent name: ubuntu restartPolicy: Always dnsPolicy: ClusterFirst 通过上述 yaml 创建 Pod 之后，通过下面的命令观察容器中的 DNS 配置文件：\n$ kubectl exec ubuntu-clusterfirst cat /etc/resolv.conf nameserver 10.254.0.2 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5 可以看到这里使用的是 k8s DNS 的设置。\n此外，ClusterFirst 还有一个冲突，如果你的 Pod 设置了 HostNetwork=true，则 ClusterFirst 就会被强制转换成 Default。\nHostNetwork\n使用下面的示例来进行测试：\napiVersion: v1 kind: Pod metadata: name: ubuntu-hostnetwork-policy-default namespace: default spec: containers: - image: hwchiu/netutils command: - sleep - \u0026#34;360000\u0026#34; imagePullPolicy: IfNotPresent name: ubuntu hostNetwork: true restartPolicy: Always dnsPolicy: ClusterFirst 通过上述 yaml 创建 Pod 之后，通过下面的命令观察容器中的 DNS 配置文件：\n$ kubectl exec ubuntu-hostnetwork-policy-default cat /etc/resolv.conf nameserver 10.0.2.3 可以观察到，Pod 里面的 DNS 配置直接继承了宿主机上的 DNS 配置。\n这边稍微来解释一下这个设计上的原理以及流程：\n因为设置了 HostNetwork=true, 会让该 Pod 与该节点共用相同的网路空间(网卡/路由等功能)。 预设的 k8s DNS 是使用 ClusterIP 的 kubernetes serivce. 这种情况下，只有属于 Cluster 內的 Pod 可以获取该 ClusterIP。 所以设置了 HostNetwork=true 的 Pod 就没有办法获取该 ClusterIP。 于是预设就会将对应的 DNS 配置改回 Default 的形式，从节点继承其 DNS 配置信息。 这种情况下，就会有人想要问，如果我刻意想要这样设置不行吗？\n原先的设计中，是没有办法刻意处理的，原因是当 Pod yaml 配置文件被发送出去后，在发现没有设定 dnsPolicy 的情况下，会自动帮你把该 dnsPolicy 补上 ClusterFirst 的数值。\n然后最后面的程序处理逻辑中，其实并没有办法分別下列两种情况：\nHostNetwork：我希望走 Host DNS HostNetwork \u0026amp; dnsPolicy=ClusterFirst：我希望走 ClusterIP DNS 上述两种情况对于后端的程序来看都长得一样，完全没有办法分辨，我们可以直接从 Kubernetes 源码 来阅读一下其运作流程：\nfunc getPodDNSType(pod *v1.Pod) (podDNSType, error) { dnsPolicy := pod.Spec.DNSPolicy switch dnsPolicy { case v1.DNSNone: if utilfeature.DefaultFeatureGate.Enabled(features.CustomPodDNS) { return podDNSNone, nil } // This should not happen as kube-apiserver should have rejected // setting dnsPolicy to DNSNone when feature gate is disabled. return podDNSCluster, fmt.Errorf(fmt.Sprintf(\u0026#34;invalid DNSPolicy=%v: custom pod DNS is disabled\u0026#34;, dnsPolicy)) case v1.DNSClusterFirstWithHostNet: return podDNSCluster, nil case v1.DNSClusterFirst: if !kubecontainer.IsHostNetworkPod(pod) { return podDNSCluster, nil } // Fallback to DNSDefault for pod on hostnetowrk. fallthrough case v1.DNSDefault: return podDNSHost, nil } // This should not happen as kube-apiserver should have rejected // invalid dnsPolicy. return podDNSCluster, fmt.Errorf(fmt.Sprintf(\u0026#34;invalid DNSPolicy=%v\u0026#34;, dnsPolicy)) } 这边可以看到一旦是 DNSClusterFirst 的情况下，若设置了 HostNetwork, 最后就会直节回传 podDNSHost 节点的 DNS 设定回去。\n为了解决上述的问题，所以引进了一个新的类型 ClusterFirstHostNet。\nClusterFirstWithHostNet\nClusterFirstWithHostNet 用途非常简单，我希望满足使用 HostNetwork 同时使用 k8s DNS 作为我 Pod 预设 DNS 的配置。\n根据上面的源码也可以观察到：\ncase v1.DNSClusterFirstWithHostNet: return podDNSCluster, nil 只要将 dnsPolicy 设置为 ClusterFirstWithHostNet, 就会一律返回 k8s DNS 的 clusterIP 这种形式。\n使用下面的示例来进行测试：\napiVersion: v1 kind: Pod metadata: name: ubuntu-hostnetwork-policy namespace: default spec: containers: - image: hwchiu/netutils command: - sleep - \u0026#34;360000\u0026#34; imagePullPolicy: IfNotPresent name: ubuntu hostNetwork: true restartPolicy: Always dnsPolicy: ClusterFirstWithHostNet 通过上述 yaml 创建 Pod 之后，通过下面的命令观察该 Pod 的状态：\n$ kubectl exec ubuntu-hostnetwork-policy cat /etc/resolv.conf nameserver 10.254.0.2 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5 可以发现这时候的 DNS 就会配置成 k8s DNS 的 ClusterIP 了。\n扫一扫关注微信公众号 ","date":"2018年88月27日","externalUrl":null,"permalink":"/posts/kubernetes-dns/","section":"Posts","summary":"","title":"Kubernetes DNS 高阶指南","type":"posts"},{"content":" 性能分析｜分享一款Linux下的性能监控分析工具 atops - 安装部署篇 # atop 是 Linux 下的一款系统资源与进程监控工具。它能够记录全部进程的活动，并将采集到的指标数据写入文件存档分析，包括常见的磁盘、内存、CPU、网络、进程运行情况等。如果是在容器环境中，还能记录容器 ID 等，帮助你快速知道进程所属容器。\n软件安装 # 软件的安装相当简单，安装失败时可以自行解决。\nsudo yum install atop 如需监测网络使用率，可以安装网络监控模块 netatop。 # sudo yum install kernel-devel-$(uname -r) sudo yum install elfutils-libelf-devel atop atop 服务配置及启动 监控周期及日志保留时间配置 编辑 atop 配置文件，修改监控周期和日志保留时间。\nvim /etc/sysconfig/atop 修改配置如下：\nLOGOPTS=\u0026#34;\u0026#34; LOGINTERVAL=30 # 监控周期，建议将默认的监控周期 600s 修改为 30s。 LOGGENERATIONS=7 # 日志保留时间，建议将默认的日志保留时间 28 天修改为 7 天。 LOGPATH=/var/log/atop 启动服务\nsystemctl restart atop systemctl enable atop 使用 ansible 安装部署 atop 在 roles/atop/files 目录下准备以下文件：\natop 配置文件 # atop-2.7.1-1.el7.x86_64.rpm # rpm 安装包 atop.service # 服务启动文件 atop.service 文件内容：\n[Unit] Description=Atop advanced performance monitor Documentation=man:atop(1) [Service] Type=simple Environment=\u0026#34;LOGOPTS=\u0026#34; Environment=\u0026#34;LOGINTERVAL=600\u0026#34; Environment=\u0026#34;LOGGENERATIONS=28\u0026#34; Environment=\u0026#34;LOGPATH=/var/log/atop\u0026#34; EnvironmentFile=/etc/sysconfig/atop ExecStartPre=/bin/sh -c \u0026#39;test -n \u0026#34;$LOGINTERVAL\u0026#34; -a \u0026#34;$LOGINTERVAL\u0026#34; -eq \u0026#34;$LOGINTERVAL\u0026#34;\u0026#39; ExecStartPre=/bin/sh -c \u0026#39;test -n \u0026#34;$LOGGENERATIONS\u0026#34; -a \u0026#34;$LOGGENERATIONS\u0026#34; -eq \u0026#34;$LOGGENERATIONS\u0026#34;\u0026#39; ExecStart=/bin/sh -c \u0026#39;exec /usr/bin/atop ${LOGOPTS} -w \u0026#34;${LOGPATH}/atop_$(date +%%Y%%m%%d)\u0026#34; ${LOGINTERVAL}\u0026#39; ExecStartPost=/usr/bin/find \u0026#34;${LOGPATH}\u0026#34; -name \u0026#34;atop_*\u0026#34; -mtime +${LOGGENERATIONS} -exec rm -v {} \\; KillSignal=SIGUSR2 Restart=always RestartSec=5s [Install] WantedBy=multi-user.target roles/atop/tasks/main.yml 文件内容：\n- name: create workdir /app/software/atop file: path: /app/software/atop state: directory - name: copy atop.rpm to remote hosts copy: src: files/atop-2.7.1-1.el7.x86_64.rpm dest: /usr/local/src/ - name: install atop.rpm shell: yum -y localinstall /usr/local/src/atop-2.7.1-1.el7.x86_64.rpm --disablerepo=\u0026#39;*\u0026#39; - name: copy config file atop to /etc/sysconfig/atop copy: src: files/atop dest: /etc/sysconfig/atop force: yes backup: yes tags: atop_config - name: copy atop.service atop to /usr/lib/systemd/system/atop.service copy: src: files/atop.service dest: /usr/lib/systemd/system/atop.service force: yes backup: no tags: atop_config - name: Daemon Reload for atop service systemd: daemon_reload: yes tags: atop_config - name: Enable atop.service systemd: name: \u0026#34;{{ item }}\u0026#34; state: restarted enabled: yes with_items: - atop tags: atop_config - name: Enable atop-rotate.service cron: name=\u0026#34;Atop Service Rotate\u0026#34; hour=\u0026#34;0\u0026#34; minute=\u0026#34;0\u0026#34; job=\u0026#34;/usr/bin/systemctl try-restart atop.service\u0026#34; tags: atop_config install-atop-playbooks.yml 文件内容：\nhosts: \u0026#34;{{ ansible_play_hosts_all }}\u0026#34; gather_facts: no roles: - atop 使用 Ansible 安装部署 提前将需要安装部署的主机写入 ansible 的 hosts 文件。\n运行以下命令执行安装部署：\nansible-playbook install-atop-playbooks.yml 注意：此部分假设你已经具备 Ansible 的使用基础。如果有任何问题，请随时联系我。\n","externalUrl":null,"permalink":"/posts/atop_usage/atop%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","section":"Posts","summary":"","title":"","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/tags/matrix/","section":"标签","summary":"","title":"矩阵","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/vector/","section":"标签","summary":"","title":"向量","type":"tags"},{"content":"嗨，大家好！我是 Kubehan，一名怀揣着炽热技术梦想、正在北京奋力打拼的运维工程师，也是个不折不扣的云原生技术 “狂热粉”😃。 踏上北漂之路，这座充满机遇与挑战的城市，赋予了我源源不断的动力去深耕技术领域。专注于云原生技术研究、开源思想传播。你可以通过微信与我联系,也可以通过关注微信公众号“云原生知识栈”获取更多资讯。\n添加我的微信 云原生 关注微信公众号 AI Laf 云开发 Serverless ","externalUrl":null,"permalink":"/%E5%85%B3%E4%BA%8E%E6%88%91/","section":"云原生知识栈","summary":"","title":"云原生知识栈","type":"page"}]